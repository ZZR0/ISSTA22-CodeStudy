{"code": "int function ( ) { _total = extractList ( ) . size ( ) ; return _total ; }", "nl": "actually walks the bag to make sure the count is correct and resets the running total concode_field_sep Object _current concode_elem_sep int _total concode_elem_sep DefaultMapBag _parent concode_elem_sep Map _map concode_elem_sep int _mods concode_elem_sep Iterator _support concode_field_sep boolean add concode_elem_sep boolean add concode_elem_sep Object next concode_elem_sep boolean containsAll concode_elem_sep boolean containsAll concode_elem_sep void clear concode_elem_sep boolean isEmpty concode_elem_sep boolean hasNext concode_elem_sep void remove concode_elem_sep boolean remove concode_elem_sep boolean remove concode_elem_sep Map getMap concode_elem_sep int modCount concode_elem_sep boolean contains concode_elem_sep Iterator iterator concode_elem_sep boolean removeAll concode_elem_sep int size concode_elem_sep boolean addAll concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep Object[] toArray concode_elem_sep Object[] toArray concode_elem_sep Set uniqueSet concode_elem_sep void setMap concode_elem_sep String toString concode_elem_sep int getCount concode_elem_sep List extractList concode_elem_sep boolean retainAll concode_elem_sep boolean retainAll"}
{"code": "void function ( boolean arg0 ) { fStatementsRecovery = arg0 ; }", "nl": "controls whether the compiler should perform statements recovery . to be effective , this method must be called before any of #getroot , #getastrewrite , #getimportremover . this method has no effect if the target object has been created with #compilationunitrewrite icompilationunit , compilationunit . defaults to true do perform statements recovery . concode_field_sep ImportRewrite fImportRewrite concode_elem_sep ImportRemover fImportRemover concode_elem_sep WorkingCopyOwner fOwner concode_elem_sep ASTRewrite fRewrite concode_elem_sep boolean fStatementsRecovery concode_elem_sep List<TextEditGroup> fTextEditGroups concode_elem_sep ICompilationUnit fCu concode_elem_sep IDocument fRememberContent concode_elem_sep CompilationUnit fRoot concode_elem_sep boolean fResolveBindings concode_elem_sep boolean fBindingsRecovery concode_field_sep void clearASTRewrite concode_elem_sep ASTRewrite getASTRewrite concode_elem_sep void rememberContent concode_elem_sep AST getAST concode_elem_sep void setBindingRecovery concode_elem_sep ImportRemover getImportRemover concode_elem_sep CompilationUnitChange createChange concode_elem_sep org.eclipse.jdt.internal.corext.refactoring.changes.CompilationUnitChange createChange concode_elem_sep CompilationUnitChange createChange concode_elem_sep CompilationUnitChange createChange concode_elem_sep void clearASTAndImportRewrites concode_elem_sep CompilationUnitChange attachChange concode_elem_sep CategorizedTextEditGroup createCategorizedGroupDescription concode_elem_sep TextEditGroup createGroupDescription concode_elem_sep void setResolveBindings concode_elem_sep ImportRewrite getImportRewrite concode_elem_sep ICompilationUnit getCu concode_elem_sep void clearImportRewrites concode_elem_sep void clearGroupDescriptionEdits concode_elem_sep CompilationUnit getRoot concode_elem_sep boolean isEmptyEdit"}
{"code": "boolean function ( ) { return false ; }", "nl": "override and return true for database updates that produce changed class metadata concode_field_sep String _db4oVersion concode_elem_sep byte _db4oHeaderVersion concode_field_sep String fileName concode_elem_sep String fileName concode_elem_sep String getTempPath concode_elem_sep void runDefrag concode_elem_sep void checkDatabaseFile concode_elem_sep void update concode_elem_sep int db4oMajorVersion concode_elem_sep void checkUpdatedDatabaseFile concode_elem_sep void investigateFileHeaderVersion concode_elem_sep boolean isApplicableForDb4oVersion concode_elem_sep void withDatabase concode_elem_sep void deconfigure concode_elem_sep void setUp concode_elem_sep String fileNamePrefix concode_elem_sep void assertObjectDeletion concode_elem_sep void assertObjectsAreReadable concode_elem_sep String databasePath concode_elem_sep void configureForStore concode_elem_sep void test concode_elem_sep void test concode_elem_sep void deconfigureForStore concode_elem_sep void configure concode_elem_sep void store concode_elem_sep void deconfigureForTest concode_elem_sep void tearDown concode_elem_sep void configureForTest concode_elem_sep void storeObject concode_elem_sep void createDatabase concode_elem_sep void createDatabase concode_elem_sep void assertObjectsAreUpdated concode_elem_sep void updateDatabaseFile concode_elem_sep String oldVersionFileName concode_elem_sep void createDatabaseFor concode_elem_sep byte db4oHeaderVersion concode_elem_sep int db4oMinorVersion concode_elem_sep String[] versionNames concode_elem_sep void runDeletionTests"}
{"code": "String function ( String arg0 ) { return ZKUtil . joinZNode ( getIdentitiesZNode ( ) , arg0 ) ; }", "nl": "get identity znode . concode_field_sep String ENCRYPTION_KEY_NO_ZNODE_NAME concode_elem_sep String KEY_VERSION_ZNODE_NAME concode_elem_sep String PRINCIPAL_NAME_ZNODE_NAME concode_elem_sep String baseZNode concode_elem_sep String CREATED_TIME_ZNODE_NAME concode_elem_sep String KDC_FLAGS_ZNODE_NAME concode_elem_sep String DISABLED_ZNODE_NAME concode_elem_sep String KEYS_ZNODE_NAME concode_elem_sep String IDENTITIES_ZNODE_NAME concode_elem_sep String KEY_ZNODE_NAME concode_elem_sep String EXPIRE_TIME_ZNODE_NAME concode_elem_sep String KEY_TYPE_ZNODE_NAME concode_elem_sep String LOCKED_ZNODE_NAME concode_field_sep String getEncryptionKeyTypeZNode concode_elem_sep String getBaseZNode concode_elem_sep String getDisabledZNode concode_elem_sep String getKeyTypeZNode concode_elem_sep String getEncryptionKeyNoZNode concode_elem_sep String getEncryptionKeyZNode concode_elem_sep String getLockedZNode concode_elem_sep String getCreatedTimeZNode concode_elem_sep String getExpireTimeZNode concode_elem_sep String getKeyVersionZNode concode_elem_sep String getKeysZNode concode_elem_sep String getIdentitiesZNode concode_elem_sep List<String> getIdentityNames concode_elem_sep String getPrincipalNameZnode concode_elem_sep String getKdcFlagsZNode"}
{"code": "int function ( GenVector < C > arg0 ) { if ( ! modul . equals ( arg0 . modul ) ) { return - 1 ; } List < C > loc0 = arg0 . val ; int loc1 = 0 ; for ( C loc2 : val ) { int loc3 = loc2 . compareTo ( loc0 . get ( loc1 ++ ) ) ; if ( loc3 != 0 ) { return loc3 ; } } return 0 ; }", "nl": "compareto , lexicogaphical comparison . concode_field_sep List<C> val concode_elem_sep Logger logger concode_elem_sep GenVectorModul<C> modul concode_field_sep int signum concode_elem_sep GenVector<C> leftLinearCombination concode_elem_sep GenVector<C> rightScalarProduct concode_elem_sep GenVector<C> subtract concode_elem_sep GenVector<C> scalarMultiply concode_elem_sep GenVector<C> sum concode_elem_sep GenVector<C> linearCombination concode_elem_sep GenVector<C> linearCombination concode_elem_sep GenVector<C> linearCombination concode_elem_sep GenVector<C> leftScalarMultiply concode_elem_sep C scalarProduct concode_elem_sep GenVector<C> scalarProduct concode_elem_sep GenVector<C> abs concode_elem_sep int hashCode concode_elem_sep GenVector<C> negate concode_elem_sep boolean equals concode_elem_sep GenVector<C> clone concode_elem_sep boolean isZERO concode_elem_sep String toString"}
{"code": "void function ( int arg0 , int arg1 ) { fTagPosition = new Region ( arg0 , arg1 ) ; }", "nl": "sets the tag position if one is associated with the nls element . concode_field_sep Region fTagPosition concode_elem_sep String TAG_POSTFIX concode_elem_sep AccessorClassReference fAccessorClassReference concode_elem_sep boolean fIsEclipseNLS concode_elem_sep int TAG_PREFIX_LENGTH concode_elem_sep String TAG_PREFIX concode_elem_sep int fIndex concode_elem_sep int TAG_POSTFIX_LENGTH concode_elem_sep String fValue concode_elem_sep Region fPosition concode_field_sep String getValue concode_elem_sep Region getPosition concode_elem_sep boolean isEclipseNLS concode_elem_sep boolean hasTag concode_elem_sep void setAccessorClassReference concode_elem_sep AccessorClassReference getAccessorClassReference concode_elem_sep void setValue concode_elem_sep String createTagText concode_elem_sep String getTagText concode_elem_sep String toString concode_elem_sep Region getTagPosition"}
{"code": "double function ( UnivariateRealFunction arg0 , double arg1 , double arg2 ) { setup ( arg0 ) ; return factory . newDefaultSolver ( arg0 ) . solve ( arg1 , arg2 ) ; }", "nl": "convenience method to find a zero of a univariate real function . a default solver is used . concode_field_sep UnivariateRealSolverFactory factory concode_field_sep double[] bracket concode_elem_sep double[] bracket concode_elem_sep double midpoint concode_elem_sep void setup"}
{"code": "boolean function ( ) { return Platform . isWindows ( ) || Platform . isOSX ( ) || Platform . JAVA_VERSION < Platform . JAVA_1_3 ; }", "nl": "do we get multiple clicks even when the individual clicks are on different frames ? concode_field_sep boolean gotBug1Event concode_elem_sep java.util.ArrayList bugList concode_field_sep boolean fileDialogRequiresDismiss concode_elem_sep boolean hasHierarchyEventGenerationBug concode_elem_sep boolean hasKeyStrokeGenerationBug concode_elem_sep String[] bugCheck concode_elem_sep boolean hasRobotMotionBug concode_elem_sep boolean reportsIncorrectLockingKeyState concode_elem_sep boolean fileDialogMisreportsBounds concode_elem_sep boolean needsRobotVerification concode_elem_sep boolean hasMenuDisableBug concode_elem_sep boolean hasInputMethodInsteadOfKeyTyped concode_elem_sep boolean hasMissingWindowMouseMotion concode_elem_sep boolean hasEscapeGenerationBug concode_elem_sep boolean showAWTPopupMenuBlocks concode_elem_sep boolean hasChoiceLockupBug concode_elem_sep boolean hasRobotButtonsSwapped concode_elem_sep boolean hasKeyInputDelay concode_elem_sep boolean hasFrameDeiconifyBug concode_elem_sep boolean dragDropRequiresNativeEvents concode_elem_sep boolean hasTextComponentSelectionDelay concode_elem_sep boolean fileDialogRequiresVisibleFrame"}
{"code": "Integer function ( ) { return null == intervalQualifier ? null : intervalQualifier . getFractionalSecondPrecisionPreservingDefault ( ) ; }", "nl": "gets the fractional second precision of the type qualifier of the interval data type descriptor of this field iff interval type . gets the interval type descriptor 's fractional second precision iff interval type . concode_field_sep SqlIntervalQualifier intervalQualifier concode_elem_sep Integer precision concode_elem_sep Boolean isNullable concode_elem_sep String name concode_elem_sep Integer scale concode_elem_sep List<String> workspaceSchemaPath concode_elem_sep List<FieldType> fields concode_elem_sep SqlTypeName type concode_elem_sep String sql concode_field_sep String getName concode_elem_sep String getName concode_elem_sep boolean isDynamic concode_elem_sep List<String> getWorkspaceSchemaPath concode_elem_sep SqlIntervalQualifier getIntervalQualifier concode_elem_sep boolean hasStar concode_elem_sep TimeUnit getEndUnit concode_elem_sep RelDataType getRowType concode_elem_sep Integer getPrecision concode_elem_sep void setSql concode_elem_sep String getSql concode_elem_sep TimeUnit getStartUnit concode_elem_sep List<FieldType> getFields concode_elem_sep Integer getScale concode_elem_sep SqlTypeName getType concode_elem_sep Boolean getIsNullable"}
{"code": "byte [ ] function ( Drawable arg0 ) { return bitmapToByte ( drawableToBitmap ( arg0 ) ) ; }", "nl": "convert drawable to byte array concode_field_sep PlaceHolder placeHolder concode_field_sep Drawable bitmapToDrawable concode_elem_sep void closeInputStream concode_elem_sep Bitmap drawableToBitmap concode_elem_sep Bitmap byteToBitmap concode_elem_sep Bitmap getBitmapFromUrl concode_elem_sep Bitmap getBitmapFromUrl concode_elem_sep Bitmap scaleImage concode_elem_sep byte[] bitmapToByte concode_elem_sep Bitmap scaleImageTo concode_elem_sep Drawable byteToDrawable concode_elem_sep Drawable getDrawableFromUrl concode_elem_sep Drawable getDrawableFromUrl concode_elem_sep InputStream getInputStreamFromUrl concode_elem_sep InputStream getInputStreamFromUrl"}
{"code": "void function ( ) { migrationDone = false ; }", "nl": "resets migration flag . should only be used in tests . concode_field_sep String APP_PREFS_NAME concode_elem_sep String PROFILE_PREFS_NAME_PREFIX concode_elem_sep String[] PROFILE_MIGRATIONS_0_TO_1 concode_elem_sep EnumSet<Flags> disableMigrations concode_elem_sep boolean migrationDone concode_elem_sep int PREFS_VERSION concode_elem_sep String LOGTAG concode_elem_sep String PREFS_VERSION_KEY concode_field_sep int getVersion concode_elem_sep void migrateIfNecessary concode_elem_sep SharedPreferences forApp concode_elem_sep SharedPreferences forApp concode_elem_sep Editor migrateFromPreferenceManager concode_elem_sep void performMigration concode_elem_sep SharedPreferences forProfile concode_elem_sep SharedPreferences forProfile concode_elem_sep SharedPreferences forProfileName concode_elem_sep SharedPreferences forProfileName concode_elem_sep void putEntry"}
{"code": "void function ( ) { }", "nl": "comment f1z concode_field_sep int I1z concode_elem_sep int I2z concode_elem_sep int I1 concode_elem_sep int I3 concode_elem_sep int I2 concode_elem_sep int I4 concode_field_sep void fz concode_elem_sep void f concode_elem_sep void f11 concode_elem_sep void f1 concode_elem_sep void f2"}
{"code": "Dialog function ( RefactoringStatus arg0 , Shell arg1 , String arg2 , boolean arg3 ) { return new RefactoringStatusDialog ( arg0 , arg1 , arg2 , arg3 ) ; }", "nl": "creates a dialog to present a refactoringstatus to the user . thefollowing values are returned from the dialogs open method : org.eclipse.jface.dialogs.idialogconstants #ok_id idialogconstants #ok_id : if the user has pressed the continue button . org.eclipse.jface.dialogs.idialogconstants #cancel_id idialogconstants #cancel_id : if the user has pressed the cancel button . org.eclipse.jface.dialogs.idialogconstants #back_id idialogconstants #back_id : if the user has pressed the back button . concode_field_sep PlaceHolder placeHolder concode_field_sep Dialog createRefactoringWizardDialog concode_elem_sep Composite createRefactoringHistoryControl concode_elem_sep Composite createSortableRefactoringHistoryControl concode_elem_sep PerformChangeOperation createUIAwareChangeOperation concode_elem_sep Dialog createLightWeightStatusDialog"}
{"code": "BaseColor function ( ) { return strokeColor ; }", "nl": "gets the current stroke color concode_field_sep boolean knockout concode_elem_sep LineDashPattern lineDashPattern concode_elem_sep BaseColor fillColor concode_elem_sep float wordSpacing concode_elem_sep float leading concode_elem_sep BaseColor strokeColor concode_elem_sep int lineJoinStyle concode_elem_sep float miterLimit concode_elem_sep int lineCapStyle concode_elem_sep float lineWidth concode_elem_sep int renderMode concode_elem_sep PdfName colorSpaceFill concode_elem_sep PdfName colorSpaceStroke concode_elem_sep float fontSize concode_elem_sep float rise concode_elem_sep Matrix ctm concode_elem_sep float horizontalScaling concode_elem_sep float characterSpacing concode_elem_sep CMapAwareDocumentFont font concode_field_sep float getFontSize concode_elem_sep int getRenderMode concode_elem_sep void setLineDashPattern concode_elem_sep int getLineJoinStyle concode_elem_sep PdfName getColorSpaceStroke concode_elem_sep float getCharacterSpacing concode_elem_sep void setLineWidth concode_elem_sep Matrix getCtm concode_elem_sep void setLineCapStyle concode_elem_sep PdfName getColorSpaceFill concode_elem_sep float getMiterLimit concode_elem_sep float getLineWidth concode_elem_sep float getWordSpacing concode_elem_sep boolean isKnockout concode_elem_sep BaseColor getFillColor concode_elem_sep CMapAwareDocumentFont getFont concode_elem_sep void setMiterLimit concode_elem_sep float getRise concode_elem_sep int getLineCapStyle concode_elem_sep float getLeading concode_elem_sep LineDashPattern getLineDashPattern concode_elem_sep float getHorizontalScaling concode_elem_sep void setLineJoinStyle"}
{"code": "void function ( ) { SecurityConfiguration . getApplicationPolicy ( \"srini_string\" ) ; }", "nl": "test method for org.jboss.security.config.securityconfiguration #getapplicationpolicy java.lang.string . concode_field_sep PlaceHolder placeHolder concode_field_sep void testGetCipherAlgorithm concode_elem_sep void testSetIterationCount concode_elem_sep void testGetKeyStoreURL concode_elem_sep void testGetSalt concode_elem_sep void testGetTrustStoreType concode_elem_sep void testGetKeyStoreType concode_elem_sep void testSetTrustStoreURL concode_elem_sep void testSetKeyStoreURL concode_elem_sep void testSetSalt concode_elem_sep void testLoadPassword concode_elem_sep void testSetCipherSpec concode_elem_sep void testGetExternalPasswordCacheInstance concode_elem_sep void testSetKeyStoreType concode_elem_sep void testIsDeepCopySubjectMode concode_elem_sep void testGetKeyStorePass concode_elem_sep WebArchive deployment concode_elem_sep void testSetTrustStorePass concode_elem_sep void testGetTrustStorePass concode_elem_sep void testSetCipherAlgorithm concode_elem_sep void testSetTrustStoreType concode_elem_sep void testGetTrustStoreURL concode_elem_sep void testSetDeepCopySubjectMode concode_elem_sep void testGetCipherSpec concode_elem_sep void testAddApplicationPolicy concode_elem_sep void testSetKeyStorePass concode_elem_sep void testRemoveApplicationPolicy concode_elem_sep void testSetCipherKey concode_elem_sep void testGetIterationCount concode_elem_sep void testGetCipherKey"}
{"code": "Transformer [ ] function ( Transformer [ ] arg0 ) { if ( arg0 == null ) { return null ; } return ( Transformer [ ] ) arg0 . clone ( ) ; }", "nl": "copy method concode_field_sep PlaceHolder placeHolder concode_field_sep void validateMin2 concode_elem_sep void validate concode_elem_sep Predicate[] validate concode_elem_sep void validate concode_elem_sep void validate"}
{"code": "int function ( ) { return this . getMarcador ( ) ; }", "nl": "abre el libro y retorna el marcador con la pagina actual concode_field_sep String dimensiones concode_elem_sep int numeroPaginas concode_elem_sep String titulo concode_elem_sep String colorPortada concode_elem_sep String autor concode_elem_sep int marcador concode_field_sep void setColorPortada concode_elem_sep void setDimensiones concode_elem_sep String getColorPortada concode_elem_sep String getAutor concode_elem_sep void setTitulo concode_elem_sep int cerrar concode_elem_sep String getTitulo concode_elem_sep void setNumeroPaginas concode_elem_sep int getNumeroPaginas concode_elem_sep int leer concode_elem_sep String getDimensiones concode_elem_sep void setMarcador concode_elem_sep int escribir concode_elem_sep void setAutor concode_elem_sep Libro clone concode_elem_sep String toString concode_elem_sep int getMarcador"}
{"code": "IJavaElement function ( JavaEditor arg0 , boolean arg1 ) { ITypeRoot loc0 = getInput ( arg0 , arg1 ) ; if ( loc0 != null ) return getElementAtOffset ( loc0 , ( ITextSelection ) arg0 . getSelectionProvider ( ) . getSelection ( ) ) ; return null ; }", "nl": "returns the element surrounding the selection of the given editor . concode_field_sep IJavaElement[] EMPTY_RESULT concode_field_sep IJavaElement selectJavaElement concode_elem_sep IJavaElement[] codeResolve concode_elem_sep IJavaElement[] codeResolve concode_elem_sep IJavaElement[] codeResolve concode_elem_sep IJavaElement[] performForkedCodeResolve concode_elem_sep boolean canOperateOn concode_elem_sep IStructuredSelection getStructuredSelection concode_elem_sep IClassFile getInputAsClassFile concode_elem_sep IJavaElement[] codeResolveForked concode_elem_sep ITypeRoot getInput concode_elem_sep ITypeRoot getInput concode_elem_sep IType getTypeAtOffset concode_elem_sep IJavaElement[] codeResolveOrInputForked concode_elem_sep ICompilationUnit getInputAsCompilationUnit concode_elem_sep IJavaElement[] getElements concode_elem_sep IJavaElement resolveEnclosingElement concode_elem_sep IJavaElement resolveEnclosingElement"}
{"code": "LoadPlan function ( LoadPlanBuildingAssociationVisitationStrategy arg0 , EntityPersister arg1 ) { MetamodelGraphWalker . visitEntity ( arg0 , arg1 ) ; return arg0 . buildLoadPlan ( ) ; }", "nl": "coordinates building a loadplan that defines just a single root entity return may have fetches . typically this includes building load plans for entity loading or cascade loading . concode_field_sep PlaceHolder placeHolder concode_field_sep LoadPlan buildRootCollectionLoadPlan"}
{"code": "HG function ( HG arg0 ) { MathVector loc0 = new MathVector ( ) ; loc0 . subtraction ( pos , arg0 . pos0 ) ; double loc1 = loc0 . dotProduct ( ) + ( EPS * EPS ) ; double loc2 = Math . sqrt ( loc1 ) ; double loc3 = mass / loc2 ; arg0 . phi0 -= loc3 ; double loc4 = loc3 / loc1 ; loc0 . multScalar ( loc4 ) ; arg0 . acc0 . addition ( loc0 ) ; return arg0 ; }", "nl": "compute a single body-body or body-cell interaction concode_field_sep MathVector acc0 concode_elem_sep MathVector pos concode_elem_sep double mass concode_elem_sep int IMAX concode_elem_sep MathVector pos0 concode_elem_sep double phi0 concode_elem_sep double EPS concode_elem_sep Body pskip concode_field_sep Node loadTree concode_elem_sep int oldSubindex concode_elem_sep String toString concode_elem_sep double hackcofm concode_elem_sep HG walkSubTree"}
{"code": "void function ( String arg0 ) { this . catalogName = arg0 ; }", "nl": "set the name of the catalog to be searched , ornull to search the default catalog . concode_field_sep String name concode_elem_sep String catalogName concode_elem_sep boolean optional concode_elem_sep String nameKey concode_field_sep void setName concode_elem_sep String getNameKey concode_elem_sep String getName concode_elem_sep void setNameKey concode_elem_sep String getCatalogName concode_elem_sep boolean postprocess concode_elem_sep Command getCommand concode_elem_sep boolean isOptional concode_elem_sep boolean execute concode_elem_sep void setOptional"}
{"code": "ColumnValues < T > function ( int arg0 ) { return new ColumnValues < T > ( columns [ arg0 ] ) ; }", "nl": "return an iterator over values in a column . concode_field_sep ColumnFileMetaData metaData concode_elem_sep Map<String,ColumnDescriptor> columnsByName concode_elem_sep Input file concode_elem_sep ColumnDescriptor[] columns concode_elem_sep long rowCount concode_elem_sep int columnCount concode_field_sep ColumnMetaData[] getColumnMetaData concode_elem_sep ColumnMetaData getColumnMetaData concode_elem_sep ColumnMetaData getColumnMetaData concode_elem_sep long getRowCount concode_elem_sep List<ColumnMetaData> getRoots concode_elem_sep void readColumnMetaData concode_elem_sep void readColumnStarts concode_elem_sep ColumnDescriptor<T> getColumn concode_elem_sep long getColumnCount concode_elem_sep ColumnFileMetaData getMetaData concode_elem_sep void readHeader concode_elem_sep void readMagic concode_elem_sep void close"}
{"code": "void function ( State arg0 ) { setSyncResultSoftError ( ) ; latch . offer ( Result . Error ) ; }", "nl": "when the login machine terminates , we might not be in the married state , and therefore we ca n't sync . this method messages as much to the user . to avoid stopping us syncing altogether , we set a soft error rather than a hard error . in future , we would like to set a hard error if we are in , for example , the separated state , and then have some user initiated activity mark the android account as ready to sync again . this is tricky , though , so we play it safe for now . concode_field_sep BlockingQueue<Result> latch concode_elem_sep SyncResult syncResult concode_field_sep void setSyncResultSuccess concode_elem_sep void postponeSync concode_elem_sep void setSyncResultSoftError concode_elem_sep void handleError concode_elem_sep void handleSuccess concode_elem_sep void rejectSync concode_elem_sep void setSyncResultHardError"}
{"code": "IMember function ( IMember arg0 ) { final LinkedList < IMember > loc0 = new LinkedList < > ( ) ; addElements ( arg0 , loc0 ) ; final IMember [ ] loc1 = convertElements ( loc0 . toArray ( new IMember [ 0 ] ) ) ; return loc1 [ loc1 . length - 1 ] ; }", "nl": "converts the handle . handle need not exist , but must be a source reference . concode_field_sep IType fOldType concode_elem_sep IType fNewType concode_elem_sep Map<IJavaElement,String> fRefactoredSimilarElements concode_field_sep IMember resolveTypeInMember concode_elem_sep String resolveTypeName concode_elem_sep IMember[] convertElements concode_elem_sep void addElements concode_elem_sep String[] resolveParameterTypes concode_elem_sep String resolveElementName concode_elem_sep String replaceAll"}
{"code": "Rational function ( int arg0 ) { VideoTrack loc0 = tracks . get ( arg0 ) ; return new Rational ( loc0 . count , 30 ) ; }", "nl": "returns the sampleduration of the track in seconds . concode_field_sep Buffer outputBuffer concode_elem_sep Codec codec concode_elem_sep Buffer inputBuffer concode_elem_sep ArrayList<VideoTrack> tracks concode_elem_sep String nameFormat concode_elem_sep Format videoFormat concode_elem_sep int count concode_elem_sep int width concode_elem_sep Format fileFormat concode_elem_sep File dir concode_elem_sep int height concode_field_sep boolean isVFRSupported concode_elem_sep Format getFileFormat concode_elem_sep boolean isEmpty concode_elem_sep void writeSamples concode_elem_sep int getTrackCount concode_elem_sep int addTrack concode_elem_sep int addVideoTrack concode_elem_sep void writeSample concode_elem_sep boolean isDataLimitReached concode_elem_sep Format getFormat concode_elem_sep void createCodec concode_elem_sep void write concode_elem_sep void write concode_elem_sep void close"}
{"code": "void function ( ) { int loc0 = rand . nextInt ( size ) ; int loc1 = rand . nextInt ( size ) ; log . debug ( \"srini_string\" + Simulator . getCurrentTime ( ) + \"srini_string\" + loc0 + \"srini_string\" + loc1 ) ; keyPopularity . add ( loc1 , keyPopularity . remove ( loc0 ) ) ; getKeyForLookup ( ) ; }", "nl": "does a popularity reorder on this document set . concode_field_sep boolean configured concode_elem_sep Distribution reorderIntvlDist concode_elem_sep boolean useRanks concode_elem_sep double zipfExp concode_elem_sep long meanReorderIntvl concode_elem_sep RandomGenerator rand concode_elem_sep String name concode_elem_sep ZipfDistribution dist concode_elem_sep int startRank concode_elem_sep Logger log concode_elem_sep List<Integer> keyPopularity concode_elem_sep int size concode_field_sep void setName concode_elem_sep String getName concode_elem_sep int getKeyForPublish concode_elem_sep void checkConfigure concode_elem_sep void setMeanReorderIntvl concode_elem_sep void setZipfExp concode_elem_sep void configure concode_elem_sep int getSize concode_elem_sep boolean containsResourcesOf concode_elem_sep void setSize concode_elem_sep Distribution getReorderDistribution concode_elem_sep int getKeyForLookup concode_elem_sep void setBeginRank"}
{"code": "List function ( ) { return list ; }", "nl": "gets the child scripts that make up this block . this list is live so that it can be modified if requried concode_field_sep List list concode_field_sep void addScript concode_elem_sep Script compile concode_elem_sep void trimWhitespace concode_elem_sep String toString concode_elem_sep void run concode_elem_sep void removeScript"}
{"code": "boolean function ( @ NotNull ResourceEntity arg0 , @ NotNull ReleaseEntity arg1 ) { return arg0 . equals ( getResourceEntityForRelease ( arg0 . getResourceGroup ( ) , arg1 ) ) ; }", "nl": "analyzes if the given resource is the best matching for the given release . returns true if so , false otherwise . concode_field_sep ResourceReleaseComparator resourceReleaseComparator concode_field_sep List<ResourceEntity> getAllFutureReleases concode_elem_sep int compare concode_elem_sep boolean isBestMatchingPastReleaseTime concode_elem_sep Set<ResourceEntity> getResourceEntitiesByRelease concode_elem_sep Boolean isBestMatchingFutureReleaseTime concode_elem_sep Set<ConsumedResourceRelationEntity> getConsumedMasterRelationsForRelease concode_elem_sep Set<ProvidedResourceRelationEntity> getProvidedMasterRelationsForRelease concode_elem_sep Set<ResourceEntity> getConsumedRelatedResourcesByResourceType concode_elem_sep Set<ProvidedResourceRelationEntity> getProvidedSlaveRelationsForRelease concode_elem_sep ReleaseEntity findMostRelevantRelease concode_elem_sep ResourceEntity getResourceEntityForRelease concode_elem_sep ResourceEntity getResourceEntityForRelease concode_elem_sep ResourceEntity findMostRelevantResource"}
{"code": "URI function ( ) { return uri ; }", "nl": "get the docker rest uri . concode_field_sep String address concode_elem_sep int port concode_elem_sep String host concode_elem_sep String DEFAULT_HOST concode_elem_sep String DEFAULT_UNIX_ENDPOINT concode_elem_sep int DEFAULT_PORT concode_elem_sep URI uri concode_elem_sep String dockerCertPath concode_field_sep int defaultPort concode_elem_sep DockerHost fromEnv concode_elem_sep String address concode_elem_sep int port concode_elem_sep String host concode_elem_sep DockerHost from concode_elem_sep String toString concode_elem_sep String dockerCertPath"}
{"code": "Getcontentlanguage function ( ) { return getcontentlanguage ; }", "nl": "gets the value of the getcontentlanguage property . concode_field_sep Owner owner concode_elem_sep PrincipalURL principalURL concode_elem_sep Creationdate creationdate concode_elem_sep Getlastmodified getlastmodified concode_elem_sep Getcontentlanguage getcontentlanguage concode_elem_sep Getetag getetag concode_elem_sep Getcontentlength getcontentlength concode_elem_sep SupportedReportSet supportedReportSet concode_elem_sep Acl acl concode_elem_sep PrincipalCollectionSet principalCollectionSet concode_elem_sep Resourcetype resourcetype concode_elem_sep List<Element> any concode_elem_sep QuotaUsedBytes quotaUsedBytes concode_elem_sep Lockdiscovery lockdiscovery concode_elem_sep QuotaAvailableBytes quotaAvailableBytes concode_elem_sep Getcontenttype getcontenttype concode_elem_sep Displayname displayname concode_elem_sep Supportedlock supportedlock concode_elem_sep Group group concode_field_sep PrincipalCollectionSet getPrincipalCollectionSet concode_elem_sep Creationdate getCreationdate concode_elem_sep void setCreationdate concode_elem_sep void setQuotaAvailableBytes concode_elem_sep Getcontentlength getGetcontentlength concode_elem_sep Displayname getDisplayname concode_elem_sep void setGetcontenttype concode_elem_sep void setAcl concode_elem_sep Owner getOwner concode_elem_sep Getlastmodified getGetlastmodified concode_elem_sep Supportedlock getSupportedlock concode_elem_sep void setLockdiscovery concode_elem_sep void setOwner concode_elem_sep SupportedReportSet getSupportedReportSet concode_elem_sep void setSupportedReportSet concode_elem_sep void setSupportedlock concode_elem_sep void setPrincipalCollectionSet concode_elem_sep QuotaUsedBytes getQuotaUsedBytes concode_elem_sep Acl getAcl concode_elem_sep void setQuotaUsedBytes concode_elem_sep void setPrincipalURL concode_elem_sep PrincipalURL getPrincipalURL concode_elem_sep void setGetetag concode_elem_sep Resourcetype getResourcetype concode_elem_sep void setResourcetype concode_elem_sep Getetag getGetetag concode_elem_sep void setGroup concode_elem_sep Getcontenttype getGetcontenttype concode_elem_sep Group getGroup concode_elem_sep void setGetcontentlanguage concode_elem_sep Lockdiscovery getLockdiscovery concode_elem_sep void setGetlastmodified concode_elem_sep QuotaAvailableBytes getQuotaAvailableBytes concode_elem_sep void setDisplayname concode_elem_sep void setGetcontentlength concode_elem_sep List<Element> getAny"}
{"code": "boolean function ( ) { return coalescing ; }", "nl": "indicates whether or not the factory is configured to produce parsers which converts cdata nodes to text nodes and appends it to the adjacent if any text node . concode_field_sep boolean validating concode_elem_sep boolean namespaceAware concode_elem_sep boolean whitespace concode_elem_sep boolean expandEntityRef concode_elem_sep boolean coalescing concode_elem_sep boolean ignoreComments concode_field_sep void setCoalescing concode_elem_sep boolean isIgnoringElementContentWhitespace concode_elem_sep void setIgnoringElementContentWhitespace concode_elem_sep boolean isNamespaceAware concode_elem_sep void setNamespaceAware concode_elem_sep DocumentBuilderFactory newInstance concode_elem_sep boolean isValidating concode_elem_sep void setAttribute concode_elem_sep Object getAttribute concode_elem_sep boolean isExpandEntityReferences concode_elem_sep DocumentBuilder newDocumentBuilder concode_elem_sep void setValidating concode_elem_sep void setIgnoringComments concode_elem_sep void setExpandEntityReferences concode_elem_sep boolean isIgnoringComments"}
{"code": "int function ( ) { return this . leased ; }", "nl": "gets the number of persistent connections tracked by the connection manager currently being used to execute requests . the total number of connections in the pool is equal to available plus leased . concode_field_sep int leased concode_elem_sep int max concode_elem_sep int pending concode_elem_sep int available concode_field_sep int getMax concode_elem_sep String toString concode_elem_sep int getPending concode_elem_sep int getAvailable"}
{"code": "void function ( Object arg0 , Throwable arg1 ) { if ( is12 ) { getLogger ( ) . log ( FQCN , ( Priority ) Level . ERROR , arg0 , arg1 ) ; } else { getLogger ( ) . log ( FQCN , Level . ERROR , arg0 , arg1 ) ; } }", "nl": "log an error to the log4j logger with error priority . concode_field_sep String name concode_elem_sep boolean is12 concode_elem_sep Logger logger concode_elem_sep String FQCN concode_field_sep void warn concode_elem_sep void warn concode_elem_sep void trace concode_elem_sep void trace concode_elem_sep void debug concode_elem_sep void debug concode_elem_sep boolean isInfoEnabled concode_elem_sep boolean isErrorEnabled concode_elem_sep Logger getLogger concode_elem_sep boolean isTraceEnabled concode_elem_sep boolean isWarnEnabled concode_elem_sep boolean isDebugEnabled concode_elem_sep boolean isFatalEnabled concode_elem_sep void fatal concode_elem_sep void fatal concode_elem_sep void info concode_elem_sep void info"}
{"code": "Element function ( Node arg0 , String arg1 ) { NodeList loc0 = arg0 . getChildNodes ( ) ; for ( int loc1 = 0 ; loc1 < loc0 . getLength ( ) ; loc1 ++ ) { Node loc2 = loc0 . item ( loc1 ) ; if ( loc2 . getNodeType ( ) == Node . ELEMENT_NODE && arg1 . equals ( loc2 . getNodeName ( ) ) ) return ( Element ) loc2 ; } return null ; }", "nl": "returns the first child element of a node that matches the given tag name . concode_field_sep PlaceHolder placeHolder concode_field_sep List<Element> getAllChildElemsMatching"}
{"code": "String function ( ) { return fcLink ; }", "nl": "gets the value of the fclink property . concode_field_sep String fcLink concode_elem_sep String localPortID concode_elem_sep String displayName concode_elem_sep String fcKey concode_elem_sep ProvidedPortID id concode_elem_sep List<PropertyDeclaration> properties concode_elem_sep String resourceType concode_field_sep String getFcKey concode_elem_sep String getDisplayName concode_elem_sep List<PropertyDeclaration> getProperties concode_elem_sep void setFcKey concode_elem_sep String getResourceType concode_elem_sep void setFcLink concode_elem_sep String getLocalPortID concode_elem_sep void setResourceType concode_elem_sep void setId concode_elem_sep ProvidedPortID getId concode_elem_sep void setLocalPortID concode_elem_sep void setDisplayName"}
{"code": "boolean function ( ) { return ( type == DICTIONARY ) ; }", "nl": "checks if this pdfobject is of the type pdfdictionary . concode_field_sep int INDIRECT concode_elem_sep int STRING concode_elem_sep int DICTIONARY concode_elem_sep int NULL concode_elem_sep int NUMBER concode_elem_sep int type concode_elem_sep int NAME concode_elem_sep String NOTHING concode_elem_sep int BOOLEAN concode_elem_sep int ARRAY concode_elem_sep byte[] bytes concode_elem_sep String TEXT_UNICODE concode_elem_sep String TEXT_PDFDOCENCODING concode_elem_sep PRIndirectReference indRef concode_elem_sep int STREAM concode_field_sep void toPdf concode_elem_sep void setContent concode_elem_sep void setIndRef concode_elem_sep int length concode_elem_sep boolean isStream concode_elem_sep PRIndirectReference getIndRef concode_elem_sep int type concode_elem_sep byte[] getBytes concode_elem_sep boolean isBoolean concode_elem_sep boolean isName concode_elem_sep boolean isNumber concode_elem_sep boolean isNull concode_elem_sep boolean isString concode_elem_sep String toString concode_elem_sep boolean canBeInObjStm concode_elem_sep boolean isArray concode_elem_sep boolean isIndirect"}
{"code": "void function ( int arg0 ) { this . n = arg0 ; }", "nl": "set removed pair number . concode_field_sep boolean useCriterion4 concode_elem_sep ColorPolynomial<C> pi concode_elem_sep int i concode_elem_sep ColorPolynomial<C> pj concode_elem_sep int j concode_elem_sep boolean useCriterion3 concode_elem_sep int n concode_elem_sep boolean toZero concode_field_sep int getPairNumber concode_elem_sep int hashCode concode_elem_sep void setUseCriterion3 concode_elem_sep boolean equals concode_elem_sep boolean getUseCriterion3 concode_elem_sep void setZero concode_elem_sep boolean isZero concode_elem_sep void setUseCriterion4 concode_elem_sep String toString concode_elem_sep int compareTo concode_elem_sep boolean getUseCriterion4"}
{"code": "List < GenSolvablePolynomial < C >> function ( int arg0 , List < GenSolvablePolynomial < C >> arg1 ) { return sbb . twosidedGB ( arg0 , arg1 ) ; }", "nl": "twosided groebner base using pairlist class . concode_field_sep SolvableGroebnerBase<C> sbb concode_elem_sep boolean debug concode_elem_sep Logger logger concode_field_sep List<GenSolvablePolynomial<C>> leftGB concode_elem_sep ModuleList<C> leftGB concode_elem_sep boolean isTwosidedGB concode_elem_sep boolean isTwosidedGB concode_elem_sep List<GenSolvablePolynomial<C>> rightGB concode_elem_sep ModuleList<C> rightGB concode_elem_sep boolean isLeftGB concode_elem_sep boolean isLeftGB concode_elem_sep boolean isRightGB concode_elem_sep boolean isRightGB"}
{"code": "void function ( boolean arg0 ) { fResolveBindings = arg0 ; }", "nl": "controls whether the compiler should provide binding information for the ast nodes it creates . to be effective , this method must be called before any of #getroot , #getastrewrite , #getimportremover . this method has no effect if the target object has been created with #compilationunitrewrite icompilationunit , compilationunit . defaults to true do resolve bindings . concode_field_sep ImportRewrite fImportRewrite concode_elem_sep ImportRemover fImportRemover concode_elem_sep WorkingCopyOwner fOwner concode_elem_sep ASTRewrite fRewrite concode_elem_sep boolean fStatementsRecovery concode_elem_sep List<TextEditGroup> fTextEditGroups concode_elem_sep ICompilationUnit fCu concode_elem_sep IDocument fRememberContent concode_elem_sep CompilationUnit fRoot concode_elem_sep boolean fResolveBindings concode_elem_sep boolean fBindingsRecovery concode_field_sep void clearASTRewrite concode_elem_sep ASTRewrite getASTRewrite concode_elem_sep void rememberContent concode_elem_sep AST getAST concode_elem_sep void setBindingRecovery concode_elem_sep void setStatementsRecovery concode_elem_sep ImportRemover getImportRemover concode_elem_sep CompilationUnitChange createChange concode_elem_sep org.eclipse.jdt.internal.corext.refactoring.changes.CompilationUnitChange createChange concode_elem_sep CompilationUnitChange createChange concode_elem_sep CompilationUnitChange createChange concode_elem_sep void clearASTAndImportRewrites concode_elem_sep CompilationUnitChange attachChange concode_elem_sep CategorizedTextEditGroup createCategorizedGroupDescription concode_elem_sep TextEditGroup createGroupDescription concode_elem_sep ImportRewrite getImportRewrite concode_elem_sep ICompilationUnit getCu concode_elem_sep void clearImportRewrites concode_elem_sep void clearGroupDescriptionEdits concode_elem_sep CompilationUnit getRoot concode_elem_sep boolean isEmptyEdit"}
{"code": "void function ( int arg0 ) { int [ ] loc0 = extractKeys ( arg0 ) ; for ( int loc1 = loc0 . length - 1 ; loc1 >= 0 ; -- loc1 ) doKeyUp ( loc0 [ loc1 ] ) ; }", "nl": "dispatch a keyup event . concode_field_sep Point pointT concode_elem_sep abbot.swt.Robot _robot concode_field_sep void robotKeyClick concode_elem_sep void doKeyDown concode_elem_sep void doKeyUp concode_elem_sep void mouseMove concode_elem_sep void mouseMove concode_elem_sep void mouseDown concode_elem_sep abbot.swt.Robot getAbbotRobot concode_elem_sep void mouseDoubleClick concode_elem_sep void pause concode_elem_sep boolean needsShift concode_elem_sep int[] extractKeys concode_elem_sep void mouseUp concode_elem_sep void keyClick concode_elem_sep void keyClick concode_elem_sep void keyDown concode_elem_sep void keyDown concode_elem_sep Event createClickEvent concode_elem_sep void enterText"}
{"code": "Local < C > function ( ) { return new Local < C > ( ring , num . abs ( ) , den , true ) ; }", "nl": "local absolute value . concode_field_sep Logger logger concode_elem_sep LocalRing<C> ring concode_elem_sep boolean debug concode_elem_sep C num concode_elem_sep int isunit concode_elem_sep C den concode_field_sep int signum concode_elem_sep boolean isONE concode_elem_sep Local<C> inverse concode_elem_sep boolean isUnit concode_elem_sep Local<C> subtract concode_elem_sep Local<C> gcd concode_elem_sep Local<C> sum concode_elem_sep int compareTo concode_elem_sep Local<C>[] egcd concode_elem_sep int hashCode concode_elem_sep Local<C> negate concode_elem_sep boolean equals concode_elem_sep Local<C> clone concode_elem_sep boolean isZERO concode_elem_sep String toString concode_elem_sep Local<C> divide concode_elem_sep Local<C> multiply concode_elem_sep Local<C> remainder"}
{"code": "boolean function ( Object arg0 , Object arg1 ) { return arg0 == arg1 || ( arg0 == null ? arg1 == null : arg0 . equals ( arg1 ) ) ; }", "nl": "compare two object concode_field_sep PlaceHolder placeHolder concode_field_sep String nullStrToEmpty concode_elem_sep Long[] transformLongArray concode_elem_sep long[] transformLongArray concode_elem_sep int compare concode_elem_sep Integer[] transformIntArray concode_elem_sep int[] transformIntArray"}
{"code": "void function ( ) { Arrays . fill ( probes , false ) ; }", "nl": "sets all probes to false . concode_field_sep String name concode_elem_sep boolean[] probes concode_elem_sep long id concode_field_sep String getName concode_elem_sep void merge concode_elem_sep void merge concode_elem_sep boolean[] getProbes concode_elem_sep long getId concode_elem_sep String toString concode_elem_sep void assertCompatibility"}
{"code": "ProvidedPortID function ( ) { return new ProvidedPortID ( ) ; }", "nl": "create an instance of providedportid concode_field_sep QName _PropertyDeclaration_QNAME concode_elem_sep QName _ProvidedPort_QNAME concode_elem_sep QName _ApplicationPayload_QNAME concode_elem_sep QName _Application_QNAME concode_elem_sep QName _ApplicationID_QNAME concode_elem_sep QName _ApplicationReleaseBinding_QNAME concode_elem_sep QName _ConsumedPort_QNAME concode_elem_sep QName _ProvidedPortID_QNAME concode_field_sep ConsumedPort createConsumedPort concode_elem_sep JAXBElement<ConsumedPort> createConsumedPort concode_elem_sep ApplicationPayload createApplicationPayload concode_elem_sep JAXBElement<ApplicationPayload> createApplicationPayload concode_elem_sep ApplicationReleaseBinding createApplicationReleaseBinding concode_elem_sep JAXBElement<ApplicationReleaseBinding> createApplicationReleaseBinding concode_elem_sep Application createApplication concode_elem_sep JAXBElement<Application> createApplication concode_elem_sep PropertyDeclaration createPropertyDeclaration concode_elem_sep JAXBElement<PropertyDeclaration> createPropertyDeclaration concode_elem_sep ApplicationID createApplicationID concode_elem_sep JAXBElement<ApplicationID> createApplicationID concode_elem_sep ProvidedPort createProvidedPort concode_elem_sep JAXBElement<ProvidedPort> createProvidedPort"}
{"code": "void function ( final ISourceFileLocator arg0 ) { delegates . add ( arg0 ) ; }", "nl": "adds the given locator . locators are queried in the sequence they have been added . concode_field_sep int tabWidth concode_elem_sep List<ISourceFileLocator> delegates concode_field_sep int getTabWidth concode_elem_sep Reader getSourceFile"}
{"code": "UnivPowerSeries < C > function ( java . math . BigInteger arg0 ) { return ONE . multiply ( coFac . fromInteger ( arg0 ) ) ; }", "nl": "get a constant univpowerseries from a java.math.biginteger . concode_field_sep UnivPowerSeries<C> ZERO concode_elem_sep String DEFAULT_NAME concode_elem_sep int truncate concode_elem_sep String var concode_elem_sep int DEFAULT_TRUNCATE concode_elem_sep UnivPowerSeries<C> ONE concode_elem_sep RingFactory<C> coFac concode_elem_sep Random random concode_field_sep UnivPowerSeries<C> getTAN concode_elem_sep boolean isField concode_elem_sep boolean isCommutative concode_elem_sep UnivPowerSeries<C> getSIN concode_elem_sep UnivPowerSeries<C> parse concode_elem_sep UnivPowerSeries<C> parse concode_elem_sep UnivPowerSeries<C> fromPolynomial concode_elem_sep java.math.BigInteger characteristic concode_elem_sep UnivPowerSeries<C> getEXP concode_elem_sep UnivPowerSeries<C> random concode_elem_sep UnivPowerSeries<C> random concode_elem_sep UnivPowerSeries<C> random concode_elem_sep UnivPowerSeries<C> random concode_elem_sep UnivPowerSeries<C> random concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep UnivPowerSeries<C> getONE concode_elem_sep UnivPowerSeries<C> getZERO concode_elem_sep UnivPowerSeries<C> getCOS concode_elem_sep String toString concode_elem_sep boolean isAssociative concode_elem_sep UnivPowerSeries<C> copy concode_elem_sep UnivPowerSeries<C> fixPoint"}
{"code": "void function ( final Shell arg0 ) { Robot . syncExec ( arg0 . getDisplay ( ) , null , new Runnable ( ) { public void run ( ) { arg0 . forceActive ( ) ; arg0 . setFocus ( ) ; } } ) ; Robot . waitForIdle ( arg0 . getDisplay ( ) ) ; }", "nl": "brings the passed shell to the top of the drawing order so that it receives keyboard focus . concode_field_sep String copyright concode_field_sep IWorkbenchWindow getWorkbenchWindow concode_elem_sep void bringWorkbenchToFront concode_elem_sep IWorkbench getWorkbench"}
{"code": "Limit function ( ) { final Limit loc0 = new Limit ( ) ; this . limits . add ( loc0 ) ; return loc0 ; }", "nl": "creates and adds a new limit . concode_field_sep WildcardMatcher excludesMatcher concode_elem_sep String excludes concode_elem_sep String includes concode_elem_sep WildcardMatcher includesMatcher concode_elem_sep List<Limit> limits concode_elem_sep ElementType element concode_field_sep List<Limit> getLimits concode_elem_sep ElementType getElement concode_elem_sep void setExcludes concode_elem_sep void setLimits concode_elem_sep String getIncludes concode_elem_sep String getExcludes concode_elem_sep void setElement concode_elem_sep boolean matches concode_elem_sep void setIncludes"}
{"code": "void function ( ) { pos ++ ; }", "nl": "skips the next char . concode_field_sep String str concode_elem_sep int pos concode_field_sep char ch concode_elem_sep char ch concode_elem_sep int pos concode_elem_sep int length concode_elem_sep boolean hasNext concode_elem_sep XMPDateTime parse concode_elem_sep XMPDateTime parse concode_elem_sep String render concode_elem_sep int gatherInt"}
{"code": "void function ( String [ ] arg0 ) { JAXBContext loc0 = JAXBContext . newInstance ( Session . class ) ; writeSession ( readSession ( new File ( \"srini_string\" ) , loc0 ) , new File ( \"srini_string\" ) , loc0 ) ; }", "nl": "main method execution steps : 1 . configure jaxb for the classes in the com.cooksys.serialization.assignment.model package 2 . read a session object from the / input/memphis / directory using the methods defined above 3 . write the session object to the / output/session.xml file . jaxb annotations and configuration : you will have to add jaxb annotations to the classes in the com.cooksys.serialization.assignment.model package check the xml files in the / input / directory to determine how to configure the contact jaxb annotations the session object should marshal to look like the following : ... ... ... ... concode_field_sep PlaceHolder placeHolder concode_field_sep Instructor readInstructor concode_elem_sep void writeSession concode_elem_sep Session readSession concode_elem_sep Student readStudent concode_elem_sep List<Student> readStudents"}
{"code": "String function ( ) { return name ; }", "nl": "the `` friendly '' name for this machine concode_field_sep Map<String,JsonBall> metadata concode_elem_sep Date created concode_elem_sep Type type concode_elem_sep Set<String> ips concode_elem_sep ImmutableSet.Builder<String> ips concode_elem_sep ImmutableMap.Builder<String,JsonBall> metadata concode_elem_sep String name concode_elem_sep String id concode_elem_sep State state concode_elem_sep Function<JsonBall,String> unquoteString concode_elem_sep String dataset concode_elem_sep int memorySizeMb concode_elem_sep Date updated concode_elem_sep int diskSizeGb concode_field_sep Builder toBuilder concode_elem_sep Builder metadata concode_elem_sep String getId concode_elem_sep int compareTo concode_elem_sep Builder type concode_elem_sep Date getUpdated concode_elem_sep Map<String,String> getMetadataAsJsonLiterals concode_elem_sep int hashCode concode_elem_sep Builder builder concode_elem_sep Builder id concode_elem_sep Builder state concode_elem_sep String value concode_elem_sep String value concode_elem_sep Builder memorySizeMb concode_elem_sep Type fromValue concode_elem_sep State fromValue concode_elem_sep Map<String,String> getMetadata concode_elem_sep String apply concode_elem_sep Builder created concode_elem_sep int getDiskSizeGb concode_elem_sep String getDatasetURN concode_elem_sep Date getCreated concode_elem_sep Builder addMetadata concode_elem_sep Builder ips concode_elem_sep Builder addIp concode_elem_sep int getMemorySizeMb concode_elem_sep State getState concode_elem_sep Builder fromMachine concode_elem_sep Machine build concode_elem_sep Type getType concode_elem_sep boolean equals concode_elem_sep Builder name concode_elem_sep String toString concode_elem_sep String toString concode_elem_sep String toString concode_elem_sep Builder dataset concode_elem_sep Builder updated concode_elem_sep Set<String> getIps concode_elem_sep Builder diskSizeGb"}
{"code": "void function ( boolean arg0 ) { this . useCriterion4 = arg0 ; }", "nl": "set usecriterion4 . concode_field_sep boolean useCriterion4 concode_elem_sep ColorPolynomial<C> pi concode_elem_sep int i concode_elem_sep ColorPolynomial<C> pj concode_elem_sep int j concode_elem_sep boolean useCriterion3 concode_elem_sep int n concode_elem_sep boolean toZero concode_field_sep int getPairNumber concode_elem_sep int hashCode concode_elem_sep void setUseCriterion3 concode_elem_sep boolean equals concode_elem_sep boolean getUseCriterion3 concode_elem_sep void setZero concode_elem_sep boolean isZero concode_elem_sep String toString concode_elem_sep int compareTo concode_elem_sep void pairNumber concode_elem_sep boolean getUseCriterion4"}
{"code": "Vector < FieldDoc > function ( ClassDoc arg0 , String arg1 ) { Vector < FieldDoc > loc0 = new Vector < FieldDoc > ( ) ; for ( FieldDoc loc1 : arg0 . fields ( ) ) { if ( loc1 . name ( ) . startsWith ( arg1 ) ) loc0 . add ( loc1 ) ; } return ( loc0 ) ; }", "nl": "look for fields in the specified class that begin with the specified prefix . concode_field_sep String lineSep concode_elem_sep RootDoc root concode_elem_sep Map<ClassDoc,Set<ClassDoc>> cmap concode_elem_sep boolean dump_class_tree concode_field_sep void gather_derived_classes concode_elem_sep void process_class_sorted_texinfo concode_elem_sep void process concode_elem_sep int find_enabled concode_elem_sep boolean start concode_elem_sep int optionLength concode_elem_sep void process_class_tree_txt"}
{"code": "Property function ( ) { return property ; }", "nl": "the violated property . concode_field_sep String xmlname concode_elem_sep Time onExit concode_elem_sep HashMap<Integer,Violation> violationsMap concode_elem_sep Time onEntry concode_elem_sep Property property concode_elem_sep String name concode_elem_sep long serialVersionUID concode_elem_sep Time time concode_field_sep Object readResolve concode_elem_sep Object readResolve concode_elem_sep Violation[] findViolations concode_elem_sep String toStringWithMethod concode_elem_sep String xmlString concode_elem_sep String xmlString concode_elem_sep Violation[] viosWithConfGEQ concode_elem_sep Violation[] withKind concode_elem_sep int hashCode concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep boolean equals concode_elem_sep Violation get concode_elem_sep Violation get concode_elem_sep Violation get concode_elem_sep String toNiceString concode_elem_sep String toNiceString concode_elem_sep String toString concode_elem_sep String toString concode_elem_sep Time time concode_elem_sep Violation[] viosWithConfLT concode_elem_sep Violation[] withTime"}
{"code": "void function ( KademliaOverlayKey arg0 , OperationCallback < DHTObject > arg1 ) { KademliaOperation < DHTObject > loc0 = myNode . getOperationFactory ( ) . getDataLookupOperation ( arg0 , arg1 ) ; loc0 . scheduleImmediately ( ) ; }", "nl": "does a single lookup . added by leo nobach concode_field_sep Node<T> myNode concode_elem_sep PeerStatus peerStatus concode_elem_sep Logger log concode_elem_sep ComponentsConfig config concode_elem_sep boolean lookupEnabled concode_field_sep void enablePeriodicLookup concode_elem_sep void connectivityChanged concode_elem_sep void beginPeriodicLookups concode_elem_sep void doConnect concode_elem_sep void routingTableBuilt concode_elem_sep void doDisconnect concode_elem_sep PeerStatus getPeerStatus concode_elem_sep double getSimSec"}
{"code": "void function ( NetMessage arg0 , NetID arg1 ) { addReceivedMsg ( arg0 ) ; receivedMsg ++ ; }", "nl": "collects all received messages concode_field_sep long receivedBytes concode_elem_sep int sentMsg concode_elem_sep int receivedMsg concode_elem_sep StatisticGenerationEvent event concode_elem_sep long sentBytes concode_elem_sep Logger log concode_field_sep double[] getSentBytes concode_elem_sep void addReceivedMsg concode_elem_sep void stop concode_elem_sep double[] getSentMsg concode_elem_sep double[] getReceivedMsg concode_elem_sep void start concode_elem_sep void netMsgSend concode_elem_sep void netMsgDrop concode_elem_sep double[] getReceivedBytes concode_elem_sep void addSentMsg"}
{"code": "void function ( Throwable arg0 ) { if ( Platform . isRunning ( ) ) Logger . log ( arg0 ) ; else { if ( sendToConsole ) arg0 . printStackTrace ( ) ; } }", "nl": "log the specified exception . concode_field_sep boolean sendToConsole concode_field_sep placeholderType placeHolder"}
{"code": "Item [ ] function ( ) { synchronized ( items ) { Item loc0 [ ] = new Item [ this . items . size ( ) ] ; return ( ( Item [ ] ) this . items . toArray ( loc0 ) ) ; } }", "nl": "return the items for this channel . concode_field_sep String managingEditor concode_elem_sep String title concode_elem_sep String language concode_elem_sep String link concode_elem_sep ArrayList skipDays concode_elem_sep TextInput textInput concode_elem_sep String rating concode_elem_sep String pubDate concode_elem_sep String description concode_elem_sep String lastBuildDate concode_elem_sep String webMaster concode_elem_sep String copyright concode_elem_sep ArrayList skipHours concode_elem_sep ArrayList items concode_elem_sep Image image concode_elem_sep String docs concode_elem_sep double version concode_field_sep void addSkipDay concode_elem_sep void removeItem concode_elem_sep void setCopyright concode_elem_sep String getWebMaster concode_elem_sep void setDescription concode_elem_sep String getDescription concode_elem_sep void addSkipHour concode_elem_sep String getDocs concode_elem_sep void addItem concode_elem_sep Item[] getItems concode_elem_sep String getTitle concode_elem_sep String[] getSkipHours concode_elem_sep String[] findSkipHours concode_elem_sep String[] findSkipDays concode_elem_sep void render concode_elem_sep void render concode_elem_sep void render concode_elem_sep void render concode_elem_sep void render concode_elem_sep void render concode_elem_sep String[] getSkipDays concode_elem_sep void setManagingEditor concode_elem_sep double getVersion concode_elem_sep String getLanguage concode_elem_sep String getCopyright concode_elem_sep void setVersion concode_elem_sep String getPubDate concode_elem_sep void setWebMaster concode_elem_sep void setTitle concode_elem_sep void setTextInput concode_elem_sep void setPubDate concode_elem_sep void setLink concode_elem_sep String getLink concode_elem_sep String getLastBuildDate concode_elem_sep void setDocs concode_elem_sep void removeSkipHour concode_elem_sep void removeSkipDay concode_elem_sep TextInput getTextInput concode_elem_sep Image getImage concode_elem_sep void setLastBuildDate concode_elem_sep void setRating concode_elem_sep String getManagingEditor concode_elem_sep void setImage concode_elem_sep void setLanguage concode_elem_sep String getRating"}
{"code": "String function ( ) { return name ; }", "nl": "getter for property ` name ' . concode_field_sep CoreMessageLogger LOG concode_elem_sep boolean containsJoinFetchedCollection concode_elem_sep Fetch bagJoinFetch concode_elem_sep String name concode_elem_sep boolean containsJoinFetchedBag concode_elem_sep Map<String,Fetch> fetches concode_field_sep Map<String,Fetch> getFetches concode_elem_sep boolean isContainsJoinFetchedBag concode_elem_sep void addFetch concode_elem_sep void addFetch concode_elem_sep void addFetch concode_elem_sep Fetch getFetchByRole concode_elem_sep boolean isContainsJoinFetchedCollection"}
{"code": "StackKeeper function ( ) { try { return this . queue . removeFirst ( ) ; } catch ( NoSuchElementException loc0 ) { throw new NoStackException ( ) ; } }", "nl": "retrieves and removes the top of the stack . concode_field_sep Charset charset concode_elem_sep TagProcessorFactory tagFactory concode_elem_sep Map<String,Object> memory concode_elem_sep List<Element> ctn concode_elem_sep LinkProvider linkprovider concode_elem_sep boolean autoBookmark concode_elem_sep boolean acceptUnknown concode_elem_sep List<String> roottags concode_elem_sep String BOOKMARK_TREE concode_elem_sep String LAST_MARGIN_BOTTOM concode_elem_sep Rectangle pageSize concode_elem_sep String resourcesRootPath concode_elem_sep LinkedList<StackKeeper> queue concode_elem_sep CssAppliers cssAppliers concode_elem_sep ImageProvider imageProvider concode_field_sep ImageProvider getImageProvider concode_elem_sep HtmlPipelineContext setTagFactory concode_elem_sep HtmlPipelineContext setAcceptUnknown concode_elem_sep boolean acceptUnknown concode_elem_sep LinkProvider getLinkProvider concode_elem_sep String getResourcesRootPath concode_elem_sep CssAppliers getCssAppliers concode_elem_sep HtmlPipelineContext charSet concode_elem_sep Charset charSet concode_elem_sep void setLastMarginBottom concode_elem_sep HtmlPipelineContext setImageProvider concode_elem_sep boolean isEmpty concode_elem_sep void setResourcesRootPath concode_elem_sep HtmlPipelineContext setCssApplier concode_elem_sep Map<String,Object> getMemory concode_elem_sep StackKeeper peek concode_elem_sep boolean autoBookmark concode_elem_sep HtmlPipelineContext autoBookmark concode_elem_sep HtmlPipelineContext setLinkProvider concode_elem_sep Float getLastMarginBottom concode_elem_sep Rectangle getPageSize concode_elem_sep List<Element> currentContent concode_elem_sep TagProcessor resolveProcessor concode_elem_sep HtmlPipelineContext clone concode_elem_sep List<String> getRootTags concode_elem_sep void setCssAppliers concode_elem_sep HtmlPipelineContext setRootTags concode_elem_sep void addFirst concode_elem_sep HtmlPipelineContext setPageSize"}
{"code": "GenVector < C > function ( ) { return ZERO ; }", "nl": "getzero . concode_field_sep GenVector<C> ZERO concode_elem_sep Logger logger concode_elem_sep RingFactory<C> coFac concode_elem_sep float density concode_elem_sep int cols concode_elem_sep List<GenVector<C>> BASIS concode_elem_sep Random random concode_elem_sep float DEFAULT_DENSITY concode_field_sep GenVector<C> random concode_elem_sep GenVector<C> random concode_elem_sep GenVector<C> random concode_elem_sep GenVector<C> random concode_elem_sep GenVector<C> fromList concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep GenVector<C> fromInteger concode_elem_sep GenVector<C> fromInteger concode_elem_sep String toString concode_elem_sep GenVector<C> copy concode_elem_sep GenVector<C> parse concode_elem_sep GenVector<C> parse"}
{"code": "void function ( int arg0 ) { this . level = arg0 ; }", "nl": "set level of section . concode_field_sep List<Section> subsections concode_elem_sep Section parent concode_elem_sep List<Sentence> headerContent concode_elem_sep int level concode_elem_sep List<ListBlock> lists concode_elem_sep List<Paragraph> paragraphs concode_field_sep void appendListElement concode_elem_sep ListBlock getListBlock concode_elem_sep int getNumberOfLists concode_elem_sep int getHeaderContentsListSize concode_elem_sep Paragraph getParagraph concode_elem_sep void appendSubSection concode_elem_sep Sentence getHeaderContent concode_elem_sep int getNumberOfSubsections concode_elem_sep Section getParentSection concode_elem_sep int getLevel concode_elem_sep List<Paragraph> getParagraphs concode_elem_sep int getNumberOfParagraphs concode_elem_sep List<ListBlock> getListBlocks concode_elem_sep void setParentSection concode_elem_sep List<Sentence> getHeaderContents concode_elem_sep Section getSubSection concode_elem_sep void appendListBlock concode_elem_sep Sentence getJoinedHeaderContents concode_elem_sep void appendParagraph"}
{"code": "void function ( RPCContext arg0 ) { }", "nl": "this method is invoked at the server before the response is executed , but before the response has been formulated concode_field_sep PlaceHolder placeHolder concode_field_sep void clientStartConnect concode_elem_sep void clientFinishConnect concode_elem_sep void clientSendRequest concode_elem_sep void serverReceiveRequest concode_elem_sep void serverConnecting concode_elem_sep void clientReceiveResponse"}
{"code": "void function ( String arg0 , Object arg1 ) { mParameters . put ( arg0 , arg1 ) ; }", "nl": "adds a parameter to the request ; if the parameter is a file , the file is uploaded , otherwise the string value of the parameter is passed in the request concode_field_sep Map<String,Object> mParameters concode_elem_sep String boundary concode_elem_sep OutputStream mOutput concode_elem_sep URLConnection mConnection concode_elem_sep Map<String,String> mCookies concode_elem_sep Random random concode_field_sep void boundary concode_elem_sep void writeName concode_elem_sep void setParameters concode_elem_sep void newline concode_elem_sep void writeParameter concode_elem_sep void writeParameter concode_elem_sep void writeParameter concode_elem_sep HttpURLConnection post concode_elem_sep String randomString concode_elem_sep void postCookies concode_elem_sep void writeln concode_elem_sep void pipe concode_elem_sep void write concode_elem_sep void write"}
{"code": "Set < String > function ( InputSource arg0 ) { XmlNamespaceFinder loc0 = createNamespaceFinder ( ) ; Set < String > loc1 = loc0 . parseContents ( arg0 ) ; if ( factory == null ) { factory = loc0 . getFactory ( ) ; } return loc1 ; }", "nl": "returns the namespace uris found in the given xml file concode_field_sep SAXParserFactory factory concode_field_sep void setFactory concode_elem_sep XmlNamespaceFinder createNamespaceFinder concode_elem_sep SAXParserFactory getFactory"}
{"code": "void function ( List < Integer > arg0 ) { takeLock . lock ( ) ; try { taskIdsQueue . add ( arg0 ) ; notEmpty . signal ( ) ; } finally { takeLock . unlock ( ) ; } }", "nl": "put list of task id to its queue concode_field_sep ReentrantLock takeLock concode_elem_sep LinkedList<List<Integer>> taskIdsQueue concode_elem_sep Condition notEmpty concode_elem_sep LinkedBlockingQueue<BoltMsg> boltMsgQueue concode_field_sep void putBoltMsg concode_elem_sep Object poll"}
{"code": "void function ( boolean arg0 ) { debug = arg0 ; }", "nl": "enable or disable debug mode by default , debug mode is enabled for development builds and disabled for exported apks - see buildconfig.debug concode_field_sep int LOG_GENERAL concode_elem_sep OnLogListener logListener concode_elem_sep int LOG_COMMAND concode_elem_sep int LOG_NONE concode_elem_sep int LOG_ALL concode_elem_sep int logTypes concode_elem_sep int LOG_OUTPUT concode_elem_sep boolean sanityChecks concode_elem_sep boolean debug concode_elem_sep String TAG concode_field_sep void setOnLogListener concode_elem_sep boolean getSanityChecksEnabled concode_elem_sep OnLogListener getOnLogListener concode_elem_sep void log concode_elem_sep void logCommon concode_elem_sep void onLog concode_elem_sep void setSanityChecksEnabled concode_elem_sep boolean getLogTypeEnabledEffective concode_elem_sep boolean getDebug concode_elem_sep void logCommand concode_elem_sep boolean getLogTypeEnabled concode_elem_sep void logOutput concode_elem_sep void setLogTypeEnabled concode_elem_sep boolean getSanityChecksEnabledEffective concode_elem_sep boolean onMainThread"}
{"code": "String function ( IPath arg0 , boolean arg1 ) { String loc0 ; if ( arg1 ) { loc0 = arg0 . toOSString ( ) ; } else { loc0 = arg0 . makeRelative ( ) . toString ( ) ; } return Strings . markLTR ( loc0 ) ; }", "nl": "returns the label of a path . concode_field_sep String CODE_DELIMITERS concode_elem_sep String FILE_PATTERN_DELIMITERS concode_elem_sep String URL_DELIMITERS concode_field_sep String getJavaCodeString concode_elem_sep String getWorkingSetLabel concode_elem_sep String getURLPart concode_elem_sep String getJavaElementName concode_elem_sep String getFilePattern concode_elem_sep String getResourceName concode_elem_sep String getResourceName concode_elem_sep String getVersionName concode_elem_sep String getFileName"}
{"code": "ConditionMonitor function ( ) { return INSTANCE ; }", "nl": "answer the condition monitor concode_field_sep ConditionMonitor INSTANCE concode_field_sep void add concode_elem_sep void add concode_elem_sep void removeAll concode_elem_sep int process concode_elem_sep com.windowtester.runtime.condition.ICondition[] getConditions concode_elem_sep void removeHandler"}
{"code": "long function ( ) { return this . ours ; }", "nl": "gets the value of ours concode_field_sep long theirs concode_elem_sep long ours concode_elem_sep String description concode_elem_sep int iterations concode_field_sep int getIterations concode_elem_sep void setIterations concode_elem_sep void setOurs concode_elem_sep long getOurAvg concode_elem_sep String toString concode_elem_sep void setDescription concode_elem_sep void setTheirs concode_elem_sep long getTheirs concode_elem_sep String getDescription concode_elem_sep long getTheirAvg"}
{"code": "java . math . BigInteger function ( ) { return coFac . characteristic ( ) ; }", "nl": "characteristic of this ring . concode_field_sep int blocksize concode_elem_sep GenMatrix<C> ZERO concode_elem_sep int DEFAULT_BSIZE concode_elem_sep GenMatrix<C> ONE concode_elem_sep Logger logger concode_elem_sep RingFactory<C> coFac concode_elem_sep float density concode_elem_sep int rows concode_elem_sep int cols concode_elem_sep Random random concode_elem_sep float DEFAULT_DENSITY concode_field_sep GenMatrix<C> randomUpper concode_elem_sep GenMatrix<C> randomUpper concode_elem_sep GenMatrix<C> randomLower concode_elem_sep GenMatrix<C> randomLower concode_elem_sep GenMatrixRing<C> product concode_elem_sep GenMatrix<C> fromList concode_elem_sep boolean isField concode_elem_sep boolean isCommutative concode_elem_sep GenMatrix<C> parse concode_elem_sep GenMatrix<C> parse concode_elem_sep GenMatrix<C> random concode_elem_sep GenMatrix<C> random concode_elem_sep GenMatrix<C> random concode_elem_sep GenMatrix<C> random concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep GenMatrix<C> getONE concode_elem_sep GenMatrix<C> getZERO concode_elem_sep GenMatrix<C> fromInteger concode_elem_sep GenMatrix<C> fromInteger concode_elem_sep String toString concode_elem_sep boolean isAssociative concode_elem_sep GenMatrixRing<C> transpose concode_elem_sep GenMatrix<C> copy"}
{"code": "void function ( @ ArquillianResource URL arg0 ) { final String loc0 = \"srini_string\" + arg0 . getHost ( ) + \"srini_string\" + arg0 . getPort ( ) + \"srini_string\" + JarClass . class . getName ( ) ; final String loc1 = HttpRequest . get ( loc0 , 2 , TimeUnit . SECONDS ) ; Assert . assertEquals ( Servlet . SUCCESS , loc1 ) ; }", "nl": "tests that a class available in a jar , which is added as a class-path manifest attribute of a . rar is available for access from within a class in a . war deployment , belonging to the same . ear top level deployment . this tests section 8.3 of java ee6 spec concode_field_sep PlaceHolder placeHolder concode_field_sep Archive<?> createDeployment"}
{"code": "int function ( String arg0 ) { File loc0 = new File ( arg0 ) ; if ( ! loc0 . exists ( ) || ! loc0 . isDirectory ( ) ) return 0 ; File loc1 [ ] = loc0 . listFiles ( ) ; if ( loc1 == null ) return 0 ; int loc2 = 0 ; for ( int loc3 = 0 ; loc3 < loc1 . length ; ++ loc3 ) { loc2 += insertFile ( loc1 [ loc3 ] ) ; } return loc2 ; }", "nl": "inserts all the fonts recognized by itext in the directory into the map . the encoding will be basefont.cp1252 but can be changed later . concode_field_sep HashMap<String,String> aliases concode_elem_sep String fontName concode_elem_sep byte pfb[] concode_elem_sep HashMap<String,BaseFontParameters> mapper concode_elem_sep boolean cached concode_elem_sep byte ttfAfm[] concode_elem_sep String encoding concode_elem_sep boolean embedded concode_field_sep void putName concode_elem_sep HashMap<String,String> getAliases concode_elem_sep BaseFont awtToPdf concode_elem_sep void putAlias concode_elem_sep Font pdfToAwt concode_elem_sep int insertFile concode_elem_sep HashMap<String,BaseFontParameters> getMapper concode_elem_sep BaseFontParameters getBaseFontParameters concode_elem_sep void insertNames"}
{"code": "void function ( String arg0 , Object arg1 ) { if ( Tracer . isDebugging ( ) ) printLog ( sysOut , arg0 , arg1 ) ; IStatus loc0 = createLogStatus ( arg0 , arg1 , \"srini_string\" ) ; try { log . log ( loc0 ) ; } catch ( Throwable loc1 ) { } }", "nl": "log the specified message and object concode_field_sep ILog sysOutLog concode_elem_sep PrintWriter sysOut concode_elem_sep ILog log concode_elem_sep String PRODUCT_ID concode_field_sep void setLog concode_elem_sep void printLogObject concode_elem_sep void removeLogListener concode_elem_sep void logNoHeader concode_elem_sep void logStackTrace concode_elem_sep void printLogStatus concode_elem_sep IStatus createLogStatus concode_elem_sep void printLogMessage concode_elem_sep void printLog concode_elem_sep void close concode_elem_sep void addLogListener concode_elem_sep org.osgi.framework.Bundle getBundle"}
{"code": "void function ( BigInteger arg0 ) { this . nresults = arg0 ; }", "nl": "sets the value of the nresults property . concode_field_sep BigInteger nresults concode_field_sep BigInteger getNresults"}
{"code": "void function ( String arg0 ) { String loc0 = getUsage ( ) ; if ( arg0 != null ) { MessageFormat loc1 = new MessageFormat ( Strings . get ( \"srini_string\" ) ) ; loc0 = loc1 . format ( new Object [ ] { loc0 , arg0 } ) ; } setScriptError ( new InvalidScriptException ( loc0 ) ) ; }", "nl": "store an invalid script exception describing the proper script usage . this should be used by derived classes whenever parsing indicates invalid input . concode_field_sep String description concode_elem_sep Resolver resolver concode_elem_sep String copyright concode_elem_sep Throwable invalidScriptError concode_elem_sep WidgetTester tester concode_field_sep String toXMLString concode_elem_sep String getXMLTag concode_elem_sep Widget resolve concode_elem_sep Element addAttributes concode_elem_sep void run concode_elem_sep Element toXML concode_elem_sep void setDescription concode_elem_sep String simpleClassName concode_elem_sep String getDescription concode_elem_sep String getDefaultDescription concode_elem_sep void runStep concode_elem_sep WidgetTester resolveTester concode_elem_sep void setScriptError concode_elem_sep HashMap createAttributeMap concode_elem_sep HashMap getAttributes concode_elem_sep void writeObject concode_elem_sep Element addContent concode_elem_sep void parseStepAttributes concode_elem_sep String getUsage concode_elem_sep void readObject concode_elem_sep String toEditableString concode_elem_sep Step createStep concode_elem_sep Step createStep concode_elem_sep Class resolveClass concode_elem_sep WidgetFinder getFinder concode_elem_sep Resolver getResolver"}
{"code": "boolean function ( ) { return ui . findAll ( locator ) . length == 1 ; }", "nl": "test whether the widget in question is showing . concode_field_sep IUIContext ui concode_elem_sep IWidgetLocator locator concode_field_sep placeholderType placeHolder"}
{"code": "VectorXZ function ( double arg0 ) { return new VectorXZ ( sin ( arg0 ) , cos ( arg0 ) ) ; }", "nl": "returns a unit vector based on an angular direction . for example , angle 0 creates vector 0,1 , angle pi/2 creates vector 1,0 . concode_field_sep VectorXZ NULL_VECTOR concode_elem_sep VectorXZ Z_UNIT concode_elem_sep double x concode_elem_sep VectorXZ X_UNIT concode_elem_sep double z concode_field_sep VectorXZ add concode_elem_sep Function<VectorXZ,VectorXYZ> xyzFunction concode_elem_sep double angleTo concode_elem_sep VectorXZ mult concode_elem_sep List<VectorXYZ> listXYZ concode_elem_sep double lengthSquared concode_elem_sep double distance concode_elem_sep VectorXZ invert concode_elem_sep VectorXZ subtract concode_elem_sep double dot concode_elem_sep double length concode_elem_sep double distanceTo concode_elem_sep double angleBetween concode_elem_sep double distanceSquared concode_elem_sep double getX concode_elem_sep double getY concode_elem_sep double getZ concode_elem_sep int hashCode concode_elem_sep VectorXZ normalize concode_elem_sep boolean equals concode_elem_sep VectorXYZ xyz concode_elem_sep double angle concode_elem_sep String toString concode_elem_sep VectorXZ rightNormal"}
{"code": "int function ( ImageInputStream arg0 ) { int loc0 = arg0 . readUnsignedShort ( ) ; return ( ( loc0 & 0xf800 ) << 8 ) | ( ( loc0 & 0x3800 ) << 5 ) | ( ( loc0 & 0x07e0 ) << 5 ) | ( ( loc0 & 0x0060 ) << 3 ) | ( ( loc0 & 0x001f ) << 3 ) | ( ( loc0 & 0x0007 ) ) ; }", "nl": "reads 16-bit rgb and converts it to 24-bit rgb . endian is defined by input stream . concode_field_sep byte[] byteBuf concode_field_sep void writeInt24LE concode_elem_sep void readRGBs555to24 concode_elem_sep void readInts24LE concode_elem_sep void writeInts24LE concode_elem_sep void readRGBs565to24 concode_elem_sep void writeInts24 concode_elem_sep int readInt24LE concode_elem_sep int readRGB555to24 concode_elem_sep void readRGBs555to24LE concode_elem_sep int readRGB555to24LE concode_elem_sep void writeInt24"}
{"code": "void function ( Object arg0 ) { for ( int loc0 = 0 ; loc0 < iPredicates . length ; loc0 ++ ) { if ( iPredicates [ loc0 ] . evaluate ( arg0 ) == true ) { iClosures [ loc0 ] . execute ( arg0 ) ; return ; } } iDefault . execute ( arg0 ) ; }", "nl": "executes the closure whose matching predicate returns true concode_field_sep Closure[] iClosures concode_elem_sep Predicate[] iPredicates concode_elem_sep long serialVersionUID concode_elem_sep Closure iDefault concode_field_sep Closure getDefaultClosure concode_elem_sep Closure[] getClosures concode_elem_sep Closure getInstance concode_elem_sep Closure getInstance concode_elem_sep Predicate[] getPredicates"}
{"code": "boolean function ( ArrayList < Byte > arg0 ) { try { FileInputStream loc0 = new FileInputStream ( inputFile ) ; byte [ ] loc1 = new byte [ 1 ] ; while ( loc0 . read ( loc1 ) != - 1 ) { arg0 . add ( new Byte ( loc1 [ 0 ] ) ) ; } loc0 . close ( ) ; return true ; } catch ( Exception loc3 ) { loc3 . printStackTrace ( ) ; } return false ; }", "nl": "read the random bytes from an input file and store them into an arraylist . concode_field_sep File inputFile concode_elem_sep ArrayList<Byte> bytes concode_elem_sep File outputImage concode_field_sep BufferedImage getGrayscale concode_elem_sep boolean create"}
{"code": "UnivariateRealFunction function ( ) { return polynomialSplineDerivative ( ) ; }", "nl": "returns the derivative of the polynomial spline function as a univariaterealfunction concode_field_sep int n concode_elem_sep long serialVersionUID concode_elem_sep PolynomialFunction polynomials[] concode_elem_sep double knots[] concode_field_sep double[] getKnots concode_elem_sep boolean isStrictlyIncreasing concode_elem_sep PolynomialSplineFunction polynomialSplineDerivative concode_elem_sep int getN concode_elem_sep PolynomialFunction[] getPolynomials concode_elem_sep double value"}
{"code": "void function ( Object arg0 ) { throw new FunctorException ( \"srini_string\" ) ; }", "nl": "always throw an exception . concode_field_sep Closure INSTANCE concode_elem_sep long serialVersionUID concode_field_sep Closure getInstance"}
{"code": "int function ( ) { return type ; }", "nl": "get the type of the rightermost child atom . most atoms have no child atoms , so the `` left type '' and the `` right type '' are the same : the atom 's type . this also is the default implementation . but some atoms are composed of child atoms put one after another in a horizontal row . these atoms must override this method . concode_field_sep int type concode_elem_sep int type_limits concode_elem_sep int alignment concode_field_sep int getLeftType concode_elem_sep Box createBox concode_elem_sep Atom clone"}
{"code": "double function ( ) { return mu ; }", "nl": "getter for property mu . concode_field_sep int DIGEST_MODE concode_elem_sep BufferedReader filePointer concode_elem_sep int CONSTANT_MODE concode_elem_sep int mode concode_elem_sep double mu concode_elem_sep EmpiricalDistribution empiricalDistribution concode_elem_sep URL valuesFileURL concode_elem_sep double sigma concode_elem_sep RandomDataImpl randomData concode_elem_sep int REPLAY_MODE concode_elem_sep int EXPONENTIAL_MODE concode_elem_sep int GAUSSIAN_MODE concode_elem_sep int UNIFORM_MODE concode_field_sep EmpiricalDistribution getEmpiricalDistribution concode_elem_sep double getNextUniform concode_elem_sep void closeReplayFile concode_elem_sep void setMode concode_elem_sep double getNext concode_elem_sep void fill concode_elem_sep double[] fill concode_elem_sep double getSigma concode_elem_sep void computeDistribution concode_elem_sep void computeDistribution concode_elem_sep void setMu concode_elem_sep void setValuesFileURL concode_elem_sep void setValuesFileURL concode_elem_sep double getNextReplay concode_elem_sep URL getValuesFileURL concode_elem_sep void setSigma concode_elem_sep void resetReplayFile concode_elem_sep double getNextGaussian concode_elem_sep int getMode concode_elem_sep double getNextDigest concode_elem_sep double getNextExponential"}
{"code": "DoubleListIterator function ( ListIterator arg0 ) { return null == arg0 ? null : new ListIteratorDoubleListIterator ( arg0 ) ; }", "nl": "create an doublelistiterator doublelistiterator wrappingthe specified listiterator listiterator . when the given iterator is null , returns null . concode_field_sep ListIterator _iterator concode_field_sep double next concode_elem_sep void add concode_elem_sep void set concode_elem_sep double previous concode_elem_sep boolean hasPrevious concode_elem_sep boolean hasNext concode_elem_sep int nextIndex concode_elem_sep int previousIndex concode_elem_sep void remove"}
{"code": "void function ( Set < String > arg0 ) { countryLookup . keySet ( ) . retainAll ( arg0 ) ; }", "nl": "remove all countries that are not defined in the set concode_field_sep HashMap<String,String[]> countryLookup concode_elem_sep ArrayList<String> pingErCountry concode_elem_sep ArrayList<String> pingErRegion concode_elem_sep long serialVersionUID concode_elem_sep Logger log concode_elem_sep HashMap<String,String> pingErCountryRegions concode_elem_sep String pingErCountryRegionFilename concode_field_sep void importPingErCountryRegionFile concode_elem_sep String getGeoIpCountryName concode_elem_sep String getPingErCountryName concode_elem_sep boolean containsPingErCountryOrRegion concode_elem_sep ArrayList<String> getPingErRegions concode_elem_sep void addCountryFromGeoIP concode_elem_sep String getPingErCountryRegionFilename concode_elem_sep Element exportToXML concode_elem_sep void assignCountryCodeToPingErData concode_elem_sep Set<String> getCountryCodes concode_elem_sep String getPingErRegionName concode_elem_sep ArrayList<String> getPingErCountrys concode_elem_sep void importFromXML concode_elem_sep void importFromXML"}
{"code": "Parser function ( Class arg0 , Parser arg1 ) { Parser loc0 = ( Parser ) parsers . get ( arg0 ) ; parsers . put ( arg0 , arg1 ) ; return loc0 ; }", "nl": "set the parser for a given class . returns the old one , if any . concode_field_sep String copyright concode_elem_sep HashMap parsers concode_field_sep Object[] eval concode_elem_sep Object eval concode_elem_sep Parser getParser concode_elem_sep String replace concode_elem_sep String[] parseArgumentList concode_elem_sep String unescapeBrackets concode_elem_sep Parser findParser concode_elem_sep String substitute concode_elem_sep boolean isExtension"}
{"code": "List < T > function ( Collection < T > arg0 ) { return Collections . unmodifiableList ( new ArrayList < T > ( arg0 ) ) ; }", "nl": "return a unmodifiable list that has all elements of the given collection . concode_field_sep PlaceHolder placeHolder concode_field_sep T getNthIteratedElement concode_elem_sep T getNthIteratedElement concode_elem_sep boolean containsIdentical concode_elem_sep List<String> prefix concode_elem_sep T removeMatching concode_elem_sep String toStringInLines concode_elem_sep List<String> toStringLines concode_elem_sep SortedSet<Integer> findAll concode_elem_sep String toStringInSortedLines concode_elem_sep List<List<T>> chunkUp concode_elem_sep boolean areDisjoint concode_elem_sep Set<T> intersection concode_elem_sep Set<T> xor concode_elem_sep String join concode_elem_sep List<T> map concode_elem_sep Set<T> getAll concode_elem_sep boolean containsEquivalent concode_elem_sep Set<T> diff concode_elem_sep Map<Integer,Set<Object[]>> createPerArityGroups concode_elem_sep Set<T> union concode_elem_sep List<T> concat concode_elem_sep List<String> sort concode_elem_sep List<T> concatAll concode_elem_sep boolean allInstancesOf concode_elem_sep List<T> unique concode_elem_sep List<List<T>> allCombinations concode_elem_sep T[] addToArray"}
{"code": "int function ( ) { int loc0 = startupOptions . getIntegerOption ( KdcServerOption . KDC_TCP_PORT ) ; if ( loc0 < 1 ) { loc0 = kdcConfig . getKdcTcpPort ( ) ; } if ( loc0 < 1 ) { loc0 = getKdcPort ( ) ; } return loc0 ; }", "nl": "get kdc tcp port concode_field_sep KdcConfig kdcConfig concode_elem_sep BackendConfig backendConfig concode_elem_sep KOptions startupOptions concode_field_sep int getKdcPort concode_elem_sep String getKdcRealm concode_elem_sep int checkGetKdcTcpPort concode_elem_sep int getKdcUdpPort concode_elem_sep int checkGetKdcUdpPort concode_elem_sep boolean allowTcp concode_elem_sep boolean allowUdp concode_elem_sep KdcConfig getKdcConfig concode_elem_sep String getKdcHost concode_elem_sep BackendConfig getBackendConfig"}
{"code": "Map function ( ) { loadMaps ( ) ; return characterMap ; }", "nl": "load a map for the current locale to translate a character into a corresponding virtual keycode-based keystroke . concode_field_sep KeyStrokeMapProvider generator concode_elem_sep Map chars concode_elem_sep boolean loaded concode_elem_sep Map characterMap concode_elem_sep Map keyStrokeMap concode_elem_sep Map keycodes concode_field_sep Map generateKeyStrokeMappings concode_elem_sep void loadMaps concode_elem_sep Map getKeyStrokeMap concode_elem_sep Map getCharacterMap concode_elem_sep InputStream findMap concode_elem_sep void main concode_elem_sep KeyStroke getKeyStroke concode_elem_sep String[] getMapNames concode_elem_sep String[] getMapDescriptions concode_elem_sep String getOSType concode_elem_sep char getChar concode_elem_sep String getFilename concode_elem_sep Map generateCharacterMappings concode_elem_sep KeyStrokeMapProvider getGenerator concode_elem_sep Map loadKeyStrokeMap concode_elem_sep String[] getMapStrings"}
{"code": "String function ( String arg0 ) { char [ ] loc0 = arg0 . toCharArray ( ) ; for ( int loc1 = 0 ; loc1 < loc0 . length ; loc1 ++ ) { char loc2 = loc0 [ loc1 ] ; if ( ! Character . isJavaIdentifierPart ( loc2 ) ) { loc0 [ loc1 ] = '_' ; } } return new String ( loc0 ) ; }", "nl": "cleans str by replacing all characters that are not valid java indentifier parts with '' _ '' . concode_field_sep int dkconfig_compile_timeout concode_elem_sep Logger debug concode_elem_sep FileCompiler fileCompiler concode_elem_sep boolean dkconfig_delete_splitters_on_exit concode_elem_sep String tempdir concode_elem_sep int guid concode_elem_sep String dkconfig_compiler concode_field_sep boolean matchPptRegex concode_elem_sep void compileFiles concode_elem_sep SpinfoFileParser parse_spinfofile concode_elem_sep void loadSplitters concode_elem_sep String createTempDir concode_elem_sep void load_splitters concode_elem_sep boolean matchPpt concode_elem_sep String getFileName concode_elem_sep String getTempDir concode_elem_sep void printAll concode_elem_sep void debugPrintln"}
{"code": "int function ( ModInteger arg0 ) { java . math . BigInteger loc0 = arg0 . val ; if ( ring != arg0 . ring ) { loc0 = loc0 . mod ( ring . modul ) ; } return val . compareTo ( loc0 ) ; }", "nl": "modinteger comparison . concode_field_sep java.math.BigInteger val concode_elem_sep ModIntegerRing ring concode_field_sep ModInteger MIREM concode_elem_sep java.math.BigInteger getSymmetricVal concode_elem_sep int MISIGN concode_elem_sep ModInteger gcd concode_elem_sep ModInteger sum concode_elem_sep ModInteger MINEG concode_elem_sep ModInteger MISUM concode_elem_sep int hashCode concode_elem_sep ModInteger MIDIF concode_elem_sep ModInteger divide concode_elem_sep ModInteger multiply concode_elem_sep int signum concode_elem_sep boolean isONE concode_elem_sep ModInteger inverse concode_elem_sep int MICOMP concode_elem_sep java.math.BigInteger getVal concode_elem_sep boolean isUnit concode_elem_sep ModInteger subtract concode_elem_sep ModInteger MIABS concode_elem_sep ModInteger MIINV concode_elem_sep ModInteger[] egcd concode_elem_sep java.math.BigInteger getModul concode_elem_sep ModInteger abs concode_elem_sep ModInteger MIQ concode_elem_sep ModInteger negate concode_elem_sep boolean equals concode_elem_sep ModInteger clone concode_elem_sep boolean isZERO concode_elem_sep String toString concode_elem_sep ModInteger MIPROD concode_elem_sep ModInteger remainder"}
{"code": "CashAccount16 function ( String arg0 ) { CashAccount16 loc0 = new CashAccount16 ( ) ; AccountIdentification4Choice loc1 = new AccountIdentification4Choice ( ) ; loc1 . setIBAN ( arg0 ) ; loc0 . setId ( loc1 ) ; return loc0 ; }", "nl": "unambiguous identification of a account concode_field_sep Pattern bicRegex concode_field_sep PartyIdentification32 createParty concode_elem_sep RemittanceInformation5 createRmtInf_struct concode_elem_sep XMLGregorianCalendar createXMLGregorianCalendarDate concode_elem_sep RemittanceInformation5 createRmtInf concode_elem_sep BranchAndFinancialInstitutionIdentification4 createFinInstnId concode_elem_sep XMLGregorianCalendar createXMLGregorianCalendar concode_elem_sep AmountType3Choice createAmount"}
{"code": "Unmarshaller function ( ) { try { return JAXB_CONTEXT . createUnmarshaller ( ) ; } catch ( JAXBException loc0 ) { throw new RuntimeException ( loc0 . getMessage ( ) , loc0 ) ; } }", "nl": "creates an unmarshaller from the sardineutil #jaxb_context . note : the unmarshaller is not thread safe , so it must be created for every request . concode_field_sep JAXBContext JAXB_CONTEXT concode_elem_sep String CUSTOM_NAMESPACE_URI concode_elem_sep String DEFAULT_NAMESPACE_URI concode_elem_sep String DEFAULT_NAMESPACE_PREFIX concode_elem_sep List<ThreadLocal<SimpleDateFormat>> DATETIME_FORMATS concode_elem_sep String CUSTOM_NAMESPACE_PREFIX concode_elem_sep String[] SUPPORTED_DATE_FORMATS concode_elem_sep DocumentBuilderFactory factory concode_field_sep Marshaller createMarshaller concode_elem_sep Date parseDate concode_elem_sep T unmarshal concode_elem_sep Map<QName,String> toQName concode_elem_sep List<QName> toQName concode_elem_sep QName toQName concode_elem_sep QName createQNameWithCustomNamespace concode_elem_sep String toXml concode_elem_sep Element createElement concode_elem_sep Element createElement concode_elem_sep Document createDocument concode_elem_sep QName createQNameWithDefaultNamespace"}
{"code": "byte [ ] function ( byte [ ] arg0 ) { byte loc0 [ ] = new byte [ arg0 . length ] ; int loc1 = 0 ; for ( int loc2 = 0 ; loc2 < arg0 . length ; loc2 ++ ) { if ( isValidBase64Byte ( arg0 [ loc2 ] ) ) { loc0 [ loc1 ++ ] = arg0 [ loc2 ] ; } } byte loc3 [ ] = new byte [ loc1 ] ; System . arraycopy ( loc0 , 0 , loc3 , 0 , loc1 ) ; return loc3 ; }", "nl": "discards any characters outside of the base64 alphabet see page 25 of rfc 2045 `` any characters outside of the base64 alphabet are to be ignored in base64 encoded data . '' concode_field_sep byte[] decodingTable concode_elem_sep byte[] encodingTable concode_field_sep void encode concode_elem_sep byte[] encode concode_elem_sep int computeEncodedSize concode_elem_sep byte[] decode concode_elem_sep byte[] decode concode_elem_sep String decode concode_elem_sep String decode concode_elem_sep boolean isValidBase64Byte concode_elem_sep String discardNonBase64Chars"}
{"code": "String function ( String arg0 , int arg1 ) { return getComposedMessage ( arg0 , String . valueOf ( arg1 ) , null , null , null ) ; }", "nl": "get a message with one parameter as an primitive int . the parameter will replace the string '' 1 '' found in the message . concode_field_sep String BASE_PATH concode_elem_sep HashMap<String,String> currentLanguage concode_elem_sep HashMap<String,String> defaultLanguage concode_field_sep HashMap<String,String> getLanguageMessages concode_elem_sep String getMessage concode_elem_sep String getMessage concode_elem_sep void setMessages concode_elem_sep HashMap<String,String> readLanguageStream concode_elem_sep HashMap<String,String> readLanguageStream concode_elem_sep boolean setLanguage"}
{"code": "void function ( PropertyChangeListener arg0 ) { if ( arg0 == null ) { throw new IllegalArgumentException ( ) ; } pcsDelegate . addPropertyChangeListener ( arg0 ) ; }", "nl": "attach a non-null propertychangelistener to this object . concode_field_sep IPropertyDescriptor[] EMPTY_ARRAY concode_elem_sep PropertyChangeSupport pcsDelegate concode_elem_sep long serialVersionUID concode_field_sep void firePropertyChange concode_elem_sep Object getPropertyValue concode_elem_sep void setPropertyValue concode_elem_sep Object getEditableValue concode_elem_sep IPropertyDescriptor[] getPropertyDescriptors concode_elem_sep void resetPropertyValue concode_elem_sep boolean isPropertySet concode_elem_sep void removePropertyChangeListener concode_elem_sep void readObject"}
{"code": "Object function ( ) { if ( _constructor == null ) { return null ; } return _constructor . newInstance ( _args ) ; }", "nl": "creates a new instance . concode_field_sep ReflectConstructor _constructor concode_elem_sep Object[] _args concode_elem_sep ReflectConstructorSpec UNSPECIFIED_CONSTRUCTOR concode_elem_sep TernaryBool _canBeInstantiated concode_elem_sep ReflectConstructorSpec INVALID_CONSTRUCTOR concode_field_sep TernaryBool canBeInstantiated"}
{"code": "byte [ ] function ( int arg0 ) { byte [ ] loc0 = new byte [ 2 ] ; loc0 [ 0 ] = ( byte ) ( arg0 >> 8 ) ; loc0 [ 1 ] = ( byte ) ( ( arg0 << 8 ) >> 8 ) ; return loc0 ; }", "nl": "interpret a short as its binary form concode_field_sep PlaceHolder placeHolder concode_field_sep long asLong concode_elem_sep int toInt concode_elem_sep String toBinaryString concode_elem_sep String toBinaryString concode_elem_sep String toBinaryString concode_elem_sep byte[] fromInt concode_elem_sep byte[] fromLong"}
{"code": "String function ( Node arg0 ) { StringBuffer loc0 = new StringBuffer ( ) ; serializeUtil ( arg0 , loc0 ) ; return loc0 . toString ( ) ; }", "nl": "serialize tree using preorder dfs concode_field_sep int index concode_field_sep Node deserializeUtil concode_elem_sep String serializeLevelOrder concode_elem_sep void serializeUtil concode_elem_sep void main concode_elem_sep Node deserializeLevelOrder concode_elem_sep Node deserialize"}
{"code": "void function ( final String arg0 , final String arg1 ) { fileCopyIfExist ( arg0 , arg1 , false ) ; }", "nl": "copy a file if the source exist . concode_field_sep int BUFSIZE concode_elem_sep Logger LOG concode_elem_sep ThreadLocal cwd_ concode_field_sep void mkLink concode_elem_sep void mkLink concode_elem_sep void fileCopy concode_elem_sep void warn concode_elem_sep String calcRelativeLink concode_elem_sep void debug concode_elem_sep String getArtifact concode_elem_sep String run concode_elem_sep void setCwd concode_elem_sep String mavenCopy concode_elem_sep void error concode_elem_sep void info"}
{"code": "void function ( ) { assertTrue ( \"srini_string\" + \"srini_string\" , readFirstLineOfFile ( INCORRECT_ROLE_AND_STOP_SERVER ) . contains ( DESTROY_METHOD_NOT_PASS ) ) ; }", "nl": "check whether servlet which uses runas with different role than in needed for secured ejb invocation can not correctly invoked that ejb method in httpservlet.destroy method during stopping server . concode_field_sep String DEPLOYMENT concode_elem_sep String incorrectRoleResult concode_elem_sep File CORRECT_ROLE_AND_UNDEPLOY concode_elem_sep String correctRoleResult concode_elem_sep File WORK_DIR concode_elem_sep ManagementClient managementClient concode_elem_sep Deployer deployer concode_elem_sep File INCORRECT_ROLE_AND_STOP_SERVER concode_elem_sep File INCORRECT_ROLE_AND_UNDEPLOY concode_elem_sep File CORRECT_ROLE_AND_STOP_SERVER concode_field_sep void checkDoGetMethodWithCorrectRole concode_elem_sep void runDestroyMethodInUndeploying concode_elem_sep void checkDoGetMethodWithIncorrectRole concode_elem_sep void checkDestroyInUndeployingMethodWithIncorrectRole concode_elem_sep String readFirstLineOfFile concode_elem_sep void checkDestroyMethodInStopServerWithCorrectRole concode_elem_sep void checkInitMethodWithIncorrectRole concode_elem_sep void checkInitMethodWithCorrectRole concode_elem_sep void checkDestroyInUndeployingMethodWithCorrectRole concode_elem_sep void runServletWithCorrectRole concode_elem_sep void finish concode_elem_sep void initialize concode_elem_sep void runServletWithIncorrectRole concode_elem_sep void runDestroyMethodInStopServer concode_elem_sep WebArchive deployment"}
{"code": "HttpRoute function ( ) { return ! this . connected ? null : new HttpRoute ( this . targetHost , this . localAddress , this . proxyChain , this . secure , this . tunnelled , this . layered ) ; }", "nl": "obtains the tracked route . if a route has been tracked , it is #isconnected connected . if not connected , nothing has been tracked so far . concode_field_sep boolean connected concode_elem_sep HttpHost targetHost concode_elem_sep TunnelType tunnelled concode_elem_sep InetAddress localAddress concode_elem_sep HttpHost[] proxyChain concode_elem_sep boolean secure concode_elem_sep LayerType layered concode_field_sep void connectProxy concode_elem_sep HttpHost getProxyHost concode_elem_sep boolean isConnected concode_elem_sep TunnelType getTunnelType concode_elem_sep boolean isSecure concode_elem_sep LayerType getLayerType concode_elem_sep InetAddress getLocalAddress concode_elem_sep void tunnelTarget concode_elem_sep void layerProtocol concode_elem_sep HttpHost getTargetHost concode_elem_sep void connectTarget concode_elem_sep boolean isTunnelled concode_elem_sep int hashCode concode_elem_sep int getHopCount concode_elem_sep boolean isLayered concode_elem_sep boolean equals concode_elem_sep Object clone concode_elem_sep void reset concode_elem_sep String toString concode_elem_sep void tunnelProxy concode_elem_sep HttpHost getHopTarget"}
{"code": "Throwable function ( ) { return null ; }", "nl": "returns always null . concode_field_sep IStatus OK_STATUS concode_elem_sep String fStatusMessage concode_elem_sep int fSeverity concode_field_sep boolean isWarning concode_elem_sep int getSeverity concode_elem_sep String getMessage concode_elem_sep boolean isMultiStatus concode_elem_sep boolean matches concode_elem_sep IStatus[] getChildren concode_elem_sep boolean isError concode_elem_sep void setError concode_elem_sep boolean isOK concode_elem_sep String getPlugin concode_elem_sep void setOK concode_elem_sep String toString concode_elem_sep void setInfo concode_elem_sep boolean isInfo concode_elem_sep int getCode concode_elem_sep void setWarning"}
{"code": "DateTimeFieldType function ( int arg0 ) { return getField ( arg0 , getChronology ( ) ) . getType ( ) ; }", "nl": "gets the field type at the specifed index . concode_field_sep PlaceHolder placeHolder concode_field_sep int[] getValues concode_elem_sep boolean isEqual concode_elem_sep DateTimeField getField concode_elem_sep DateTimeField getField concode_elem_sep int indexOfSupported concode_elem_sep int indexOfSupported concode_elem_sep boolean isSupported concode_elem_sep int compareTo concode_elem_sep boolean isBefore concode_elem_sep DateTimeField[] getFields concode_elem_sep int hashCode concode_elem_sep int get concode_elem_sep boolean equals concode_elem_sep String toString concode_elem_sep int indexOf concode_elem_sep int indexOf concode_elem_sep boolean isAfter concode_elem_sep DateTime toDateTime concode_elem_sep DateTimeFieldType[] getFieldTypes"}
{"code": "boolean function ( ) { return Platform . isOSX ( ) && Platform . JAVA_VERSION >= Platform . JAVA_1_4 && Platform . JAVA_VERSION <= 0x1425 ; }", "nl": "returns whether windows send mouse motion events to awt listeners . concode_field_sep boolean gotBug1Event concode_elem_sep java.util.ArrayList bugList concode_field_sep boolean fileDialogRequiresDismiss concode_elem_sep boolean hasHierarchyEventGenerationBug concode_elem_sep boolean hasKeyStrokeGenerationBug concode_elem_sep String[] bugCheck concode_elem_sep boolean hasRobotMotionBug concode_elem_sep boolean reportsIncorrectLockingKeyState concode_elem_sep boolean fileDialogMisreportsBounds concode_elem_sep boolean needsRobotVerification concode_elem_sep boolean hasMenuDisableBug concode_elem_sep boolean hasInputMethodInsteadOfKeyTyped concode_elem_sep boolean hasEscapeGenerationBug concode_elem_sep boolean showAWTPopupMenuBlocks concode_elem_sep boolean hasChoiceLockupBug concode_elem_sep boolean hasRobotButtonsSwapped concode_elem_sep boolean hasKeyInputDelay concode_elem_sep boolean hasFrameDeiconifyBug concode_elem_sep boolean dragDropRequiresNativeEvents concode_elem_sep boolean hasTextComponentSelectionDelay concode_elem_sep boolean hasMultiClickFrameBug concode_elem_sep boolean fileDialogRequiresVisibleFrame"}
{"code": "int function ( Date arg0 ) { int loc0 ; int loc1 = Math . abs ( arg0 . beginOfTime ( ) - this . beginOfTime ( ) ) ; if ( this . isBefore ( arg0 ) ) { loc0 = - 1 ; } else if ( this . isAfter ( arg0 ) ) { loc0 = 1 ; } else { loc0 = 0 ; } return loc0 * loc1 ; }", "nl": "determines the difference in days between d and this date . for example , if this date is 12/15/1997 and d is 12/14/1997 , the difference is 1 . if this date occurs before d , the result is negative . concode_field_sep int month concode_elem_sep int year concode_elem_sep int day concode_field_sep int daysInMonth concode_elem_sep int beginOfTime concode_elem_sep int dayInYear concode_elem_sep boolean isLeapYear concode_elem_sep boolean isValidDate concode_elem_sep String toString concode_elem_sep void main concode_elem_sep int daysInYear concode_elem_sep boolean isAfter concode_elem_sep boolean isBefore"}
{"code": "void function ( final int arg0 ) { final Integer loc0 = new Integer ( arg0 ) ; final Integer loc1 = ( Integer ) this . morphicity . get ( loc0 ) ; if ( loc1 == null ) { this . morphicity . put ( loc0 , new Integer ( 1 ) ) ; } else { this . morphicity . put ( loc0 , new Integer ( loc1 . intValue ( ) + 1 ) ) ; } }", "nl": "maintains a count of the number of methods call sites resolve to . may give an idea as to how `` dynamic '' a program is . concode_field_sep String configName concode_elem_sep int nLiveMethods concode_elem_sep Map morphicity concode_elem_sep int nNoPreexist concode_elem_sep int nLiveClasses concode_elem_sep int nInlined concode_field_sep void noteNoPreexist concode_elem_sep void printSummary concode_elem_sep void noteInlined concode_elem_sep void setConfigName concode_elem_sep void noteLiveMethods concode_elem_sep void noteLiveClasses"}
{"code": "void function ( double arg0 , double arg1 ) { if ( arg0 >= arg1 ) { throw new IllegalArgumentException ( \"srini_string\" + arg0 + \"srini_string\" + arg1 + \"srini_string\" ) ; } }", "nl": "verifies that the endpoints specify an interval , throws illegalargumentexception if not concode_field_sep double functionValueAccuracy concode_elem_sep boolean resultComputed concode_elem_sep double defaultFunctionValueAccuracy concode_elem_sep UnivariateRealFunction f concode_elem_sep double relativeAccuracy concode_elem_sep double absoluteAccuracy concode_elem_sep double result concode_elem_sep int iterationCount concode_elem_sep int defaultMaximalIterationCount concode_elem_sep int maximalIterationCount concode_elem_sep double defaultAbsoluteAccuracy concode_elem_sep double defaultRelativeAccuracy concode_elem_sep long serialVersionUID concode_field_sep double getFunctionValueAccuracy concode_elem_sep void setAbsoluteAccuracy concode_elem_sep void verifySequence concode_elem_sep boolean isSequence concode_elem_sep void setResult concode_elem_sep void setRelativeAccuracy concode_elem_sep void resetFunctionValueAccuracy concode_elem_sep int getMaximalIterationCount concode_elem_sep void resetRelativeAccuracy concode_elem_sep double getAbsoluteAccuracy concode_elem_sep int getIterationCount concode_elem_sep void resetAbsoluteAccuracy concode_elem_sep double getResult concode_elem_sep void setMaximalIterationCount concode_elem_sep void resetMaximalIterationCount concode_elem_sep boolean isBracketing concode_elem_sep void clearResult concode_elem_sep void verifyBracketing concode_elem_sep double getRelativeAccuracy concode_elem_sep void setFunctionValueAccuracy"}
{"code": "void function ( final Socket arg0 ) { Args . notNull ( arg0 , \"srini_string\" ) ; this . socket = arg0 ; this . open = true ; this . inbuffer . bind ( null ) ; this . outbuffer . bind ( null ) ; }", "nl": "binds this connection to the given socket . this socket will be used by the connection to send and receive data . after this method 's execution the connection status will be reported as open and the #isopen will return true . concode_field_sep SessionInputBufferImpl inbuffer concode_elem_sep HttpConnectionMetricsImpl connMetrics concode_elem_sep ContentLengthStrategy outgoingContentStrategy concode_elem_sep SessionOutputBufferImpl outbuffer concode_elem_sep Socket socket concode_elem_sep ContentLengthStrategy incomingContentStrategy concode_elem_sep boolean open concode_field_sep void setSocketTimeout concode_elem_sep int getLocalPort concode_elem_sep HttpConnectionMetrics getMetrics concode_elem_sep OutputStream createOutputStream concode_elem_sep int getRemotePort concode_elem_sep InetAddress getLocalAddress concode_elem_sep void ensureOpen concode_elem_sep boolean awaitInput concode_elem_sep void close concode_elem_sep void incrementResponseCount concode_elem_sep void doFlush concode_elem_sep OutputStream prepareOutput concode_elem_sep void incrementRequestCount concode_elem_sep HttpEntity prepareInput concode_elem_sep InetAddress getRemoteAddress concode_elem_sep int fillInputBuffer concode_elem_sep InputStream getSocketInputStream concode_elem_sep int getSocketTimeout concode_elem_sep InputStream createInputStream concode_elem_sep boolean isOpen concode_elem_sep Socket getSocket concode_elem_sep OutputStream getSocketOutputStream concode_elem_sep SessionInputBuffer getSessionInputBuffer concode_elem_sep String toString concode_elem_sep boolean isStale concode_elem_sep SessionOutputBuffer getSessionOutputBuffer concode_elem_sep void shutdown"}
{"code": "Message function ( ByteBuffer arg0 , ByteBuffer arg1 ) { Message loc0 = new Message ( arg0 ) ; loc0 . type = MessageType . Handshake ; loc0 . data . put ( \"srini_string\" , arg1 ) ; return loc0 ; }", "nl": "constructor for handshake message concode_field_sep ByteBuffer peerId concode_elem_sep HashMap<String,Object> data concode_elem_sep MessageType type concode_elem_sep ByteBuffer msg concode_field_sep Message Bitfield concode_elem_sep int getBegin concode_elem_sep int getIndex concode_elem_sep MessageType getType concode_elem_sep ByteBuffer getPeerId concode_elem_sep Message Request concode_elem_sep int getLength concode_elem_sep int compareTo concode_elem_sep ByteBuffer getBytes concode_elem_sep BitSet getBitfield"}
{"code": "void function ( String arg0 ) { myTopType = arg0 ; }", "nl": "sets the type of message that is intended to be transmitted over the connection that this collection is associated with . concode_field_sep Map<String,MessageType> myMsgTypeByMd5Sum concode_elem_sep Map<String,Map<String,MessageType>> myMsgTypesByPackage concode_elem_sep String myTopType concode_elem_sep Logger myLogger concode_elem_sep Splitter MSG_SPLITTER concode_elem_sep Map<String,MessageType> myMsgTypesByName concode_field_sep MessageType getMessageType concode_elem_sep MessageType getMessageType concode_elem_sep MessageType getMessageType concode_elem_sep List<String> parseMessageList concode_elem_sep void parseMessages"}
{"code": "Items function ( ) { return items ; }", "nl": "gets the value of the items property . concode_field_sep USAddress billTo concode_elem_sep String comment concode_elem_sep Items items concode_elem_sep XMLGregorianCalendar orderDate concode_elem_sep USAddress shipTo concode_field_sep USAddress getShipTo concode_elem_sep USAddress getBillTo concode_elem_sep void setBillTo concode_elem_sep void setItems concode_elem_sep void setOrderDate concode_elem_sep void setComment concode_elem_sep XMLGregorianCalendar getOrderDate concode_elem_sep String getComment concode_elem_sep void setShipTo"}
{"code": "ConsumedPort function ( ) { return new ConsumedPort ( ) ; }", "nl": "create an instance of consumedport concode_field_sep QName _PropertyDeclaration_QNAME concode_elem_sep QName _ProvidedPort_QNAME concode_elem_sep QName _ApplicationPayload_QNAME concode_elem_sep QName _Application_QNAME concode_elem_sep QName _ApplicationID_QNAME concode_elem_sep QName _ApplicationReleaseBinding_QNAME concode_elem_sep QName _ConsumedPort_QNAME concode_elem_sep QName _ProvidedPortID_QNAME concode_field_sep ApplicationPayload createApplicationPayload concode_elem_sep JAXBElement<ApplicationPayload> createApplicationPayload concode_elem_sep ProvidedPortID createProvidedPortID concode_elem_sep JAXBElement<ProvidedPortID> createProvidedPortID concode_elem_sep ApplicationReleaseBinding createApplicationReleaseBinding concode_elem_sep JAXBElement<ApplicationReleaseBinding> createApplicationReleaseBinding concode_elem_sep Application createApplication concode_elem_sep JAXBElement<Application> createApplication concode_elem_sep PropertyDeclaration createPropertyDeclaration concode_elem_sep JAXBElement<PropertyDeclaration> createPropertyDeclaration concode_elem_sep ApplicationID createApplicationID concode_elem_sep JAXBElement<ApplicationID> createApplicationID concode_elem_sep ProvidedPort createProvidedPort concode_elem_sep JAXBElement<ProvidedPort> createProvidedPort"}
{"code": "float function ( ) { return textRectangle . x + textRectangle . width ; }", "nl": "getter for the right margin . concode_field_sep Rectangle2D.Float textRectangle concode_field_sep void renderImage concode_elem_sep float getHeight concode_elem_sep float getLlx concode_elem_sep float getLly concode_elem_sep float getWidth concode_elem_sep void beginTextBlock concode_elem_sep void endTextBlock concode_elem_sep float getUry concode_elem_sep void renderText"}
{"code": "void function ( boolean arg0 ) { this . onlineCheckingAllowed = arg0 ; }", "nl": "decide whether or not online checking is allowed . concode_field_sep CertificateVerifier verifier concode_elem_sep boolean onlineCheckingAllowed concode_field_sep List<VerificationOK> verify"}
{"code": "PMML function ( InputStream arg0 ) { Objects . requireNonNull ( arg0 ) ; return IOUtil . unmarshal ( arg0 ) ; }", "nl": "creates a new pmml object representing the pmml model defined in the inputstream specified as argument concode_field_sep ModelOutputs outFields concode_elem_sep String blobKey concode_elem_sep File model concode_elem_sep Map<String,Object> config concode_elem_sep ModelOutputs modelOutputs concode_field_sep ModelRunner newModelRunner concode_elem_sep ModelRunner newModelRunner concode_elem_sep InputStream getPmmlModelBlob concode_elem_sep InputStream getPmmlModelBlob concode_elem_sep Evaluator newEvaluator concode_elem_sep Evaluator newEvaluator concode_elem_sep Evaluator newEvaluator concode_elem_sep Evaluator newEvaluator concode_elem_sep Evaluator newEvaluator"}
{"code": "void function ( int arg0 ) { if ( arg0 >= 0 ) { balance = balance + arg0 ; } else { System . out . println ( \"srini_string\" + arg0 ) ; } }", "nl": "deposit deposits `` amt '' dollars into this account . concode_field_sep int number concode_elem_sep int balance concode_elem_sep String name concode_field_sep int getNumber concode_elem_sep int getKey concode_elem_sep int getBalance concode_elem_sep boolean lessThan concode_elem_sep String toString concode_elem_sep String getOwner concode_elem_sep void withdraw"}
{"code": "KrbClient function ( File arg0 ) { KrbClient loc0 ; if ( arg0 != null ) { loc0 = new KrbClient ( arg0 ) ; } else { loc0 = new KrbClient ( ) ; } loc0 . init ( ) ; return loc0 ; }", "nl": "init the client . concode_field_sep String USAGE concode_field_sep String getPassword concode_elem_sep void requestTicket concode_elem_sep KOptions convertOptions concode_elem_sep void main concode_elem_sep void printUsage"}
{"code": "String function ( ) { StringBuilder loc0 = new StringBuilder ( ) ; loc0 . append ( getMethodName ( ) ) ; loc0 . append ( MNEMONIC_DELIMITER ) ; loc0 . append ( isConstructor ( ) ) ; loc0 . append ( MNEMONIC_DELIMITER ) ; loc0 . append ( getMethodSignature ( ) ) ; return loc0 . toString ( ) ; }", "nl": "returns the string representation of this mnemonic . information from the mnemonic string may be retrieved using methodmnemonic #methodmnemonic string , and subsequently the imethod may be retrieved with methodmnemonic #findmethod itype concode_field_sep String fMethodSignature concode_elem_sep IMethod fMethod concode_elem_sep char MNEMONIC_DELIMITER concode_elem_sep String fMethodName concode_elem_sep int LENGTH concode_elem_sep boolean fIsConstructor concode_field_sep String getMethodSignature concode_elem_sep String getMethodName concode_elem_sep IMethod findMethod concode_elem_sep int hashCode concode_elem_sep boolean isConstructor concode_elem_sep boolean equals concode_elem_sep boolean exists concode_elem_sep String getStableSignature concode_elem_sep IMethod getMethod"}
{"code": "int function ( BigInteger arg0 , BigInteger arg1 ) { if ( arg0 == null ) return - arg1 . signum ( ) ; return arg0 . compareTo ( arg1 ) ; }", "nl": "integer comparison . concode_field_sep java.math.BigInteger val concode_elem_sep BigInteger ONE concode_elem_sep BigInteger ZERO concode_elem_sep Random random concode_field_sep BigInteger IRAND concode_elem_sep boolean isField concode_elem_sep boolean isCommutative concode_elem_sep BigInteger gcd concode_elem_sep BigInteger IPROD concode_elem_sep BigInteger sum concode_elem_sep int compareTo concode_elem_sep BigInteger IABS concode_elem_sep java.math.BigInteger characteristic concode_elem_sep BigInteger random concode_elem_sep BigInteger random concode_elem_sep int hashCode concode_elem_sep BigInteger IDIF concode_elem_sep BigInteger divide concode_elem_sep BigInteger copy concode_elem_sep BigInteger multiply concode_elem_sep BigInteger IGCD concode_elem_sep int signum concode_elem_sep BigInteger ISUM concode_elem_sep boolean isONE concode_elem_sep BigInteger inverse concode_elem_sep java.math.BigInteger getVal concode_elem_sep BigInteger INEG concode_elem_sep BigInteger valueOf concode_elem_sep BigInteger valueOf concode_elem_sep boolean isUnit concode_elem_sep BigInteger subtract concode_elem_sep BigInteger IQ concode_elem_sep BigInteger[] IQR concode_elem_sep BigInteger parse concode_elem_sep BigInteger parse concode_elem_sep BigInteger[] egcd concode_elem_sep int ISIGN concode_elem_sep BigInteger abs concode_elem_sep BigInteger IREM concode_elem_sep BigInteger[] divideAndRemainder concode_elem_sep BigInteger negate concode_elem_sep boolean equals concode_elem_sep BigInteger clone concode_elem_sep BigInteger getONE concode_elem_sep BigInteger getZERO concode_elem_sep BigInteger fromInteger concode_elem_sep BigInteger fromInteger concode_elem_sep boolean isZERO concode_elem_sep boolean isAssociative concode_elem_sep String toString concode_elem_sep BigInteger remainder"}
{"code": "int function ( ) { return val . size ( ) ; }", "nl": "size of current list . concode_field_sep List<java.math.BigInteger> val concode_elem_sep java.math.BigInteger last concode_field_sep void addMedium concode_elem_sep java.math.BigInteger getLongPrime concode_elem_sep Iterator<java.math.BigInteger> iterator concode_elem_sep java.math.BigInteger get concode_elem_sep void addLarge concode_elem_sep String toString concode_elem_sep void addSmall concode_elem_sep boolean checkPrimes"}
{"code": "Quotient < C > function ( int arg0 , Random arg1 ) { C loc0 = ring . random ( arg0 , arg1 ) ; C loc1 = ring . random ( arg0 , arg1 ) ; while ( loc1 . isZERO ( ) ) { loc1 = ring . random ( arg0 , arg1 ) ; } return new Quotient < C > ( this , loc0 , loc1 , false ) ; }", "nl": "quotient random . concode_field_sep RingFactory<C> ring concode_elem_sep boolean debug concode_elem_sep Logger logger concode_field_sep int hashCode concode_elem_sep boolean isField concode_elem_sep boolean equals concode_elem_sep Quotient<C> getONE concode_elem_sep boolean isCommutative concode_elem_sep Quotient<C> getZERO concode_elem_sep Quotient<C> fromInteger concode_elem_sep Quotient<C> fromInteger concode_elem_sep boolean isAssociative concode_elem_sep String toString concode_elem_sep Quotient<C> parse concode_elem_sep Quotient<C> parse concode_elem_sep Quotient<C> copy concode_elem_sep java.math.BigInteger characteristic"}
{"code": "String function ( SQLException arg0 ) { String loc0 = arg0 . getSQLState ( ) ; SQLException loc1 = arg0 . getNextException ( ) ; while ( loc0 == null && loc1 != null ) { loc0 = loc1 . getSQLState ( ) ; loc1 = loc1 . getNextException ( ) ; } return loc0 ; }", "nl": "for the given sqlexception , locates the x/open-compliant sqlstate . concode_field_sep PlaceHolder placeHolder concode_field_sep int extractErrorCode concode_elem_sep String extractSqlStateClassCode concode_elem_sep String determineSqlStateClassCode"}
{"code": "void function ( CSIColor arg0 ) { borderColor = arg0 ; }", "nl": "allows for the setting of the border 's color independently of the content 's color . concode_field_sep boolean border concode_elem_sep Position position concode_elem_sep ConsoleSystemInterface si concode_elem_sep int width concode_elem_sep String spaces concode_elem_sep Position inPosition concode_elem_sep int inHeight concode_elem_sep CSIColor foreColor concode_elem_sep int height concode_elem_sep CSIColor borderColor concode_elem_sep int inWidth concode_field_sep void drawBorder concode_elem_sep void clearBox concode_elem_sep void recalcInnerBounds concode_elem_sep int getForeColor concode_elem_sep int getWidth concode_elem_sep void draw concode_elem_sep void setWidth concode_elem_sep void setHeight concode_elem_sep void setBounds concode_elem_sep void setPosition concode_elem_sep void setForeColor concode_elem_sep void setForeColor concode_elem_sep int getHeight concode_elem_sep void setBorder concode_elem_sep boolean hasBorder"}
{"code": "SpringConfig function ( double arg0 , double arg1 ) { return new SpringConfig ( OrigamiValueConverter . tensionFromOrigamiValue ( arg0 ) , OrigamiValueConverter . frictionFromOrigamiValue ( arg1 ) ) ; }", "nl": "a helper to make creating a springconfig easier with values mapping to the origami values . concode_field_sep double tension concode_elem_sep double friction concode_elem_sep SpringConfig defaultConfig concode_field_sep placeholderType placeHolder"}
{"code": "void function ( int arg0 ) { stok . quoteChar ( arg0 ) ; }", "nl": "specifies that matching pairs of this character delimit string constants . concode_field_sep Reader reader concode_elem_sep Error err concode_elem_sep StreamTokenizer stok concode_field_sep void set_error_handler concode_elem_sep boolean isQString concode_elem_sep void need concode_elem_sep String nextToken concode_elem_sep int ttype concode_elem_sep void tok_error concode_elem_sep void commentChar concode_elem_sep boolean isWord concode_elem_sep String token"}
{"code": "void function ( final Reader arg0 ) { parseWithReader ( arg0 ) ; }", "nl": "parse an reader concode_field_sep String text concode_elem_sep Charset charset concode_elem_sep StateController controller concode_elem_sep XMLParserMemory memory concode_elem_sep List<XMLParserListener> listeners concode_elem_sep TagState tagState concode_elem_sep ParserMonitor monitor concode_elem_sep State state concode_field_sep XMLParserMemory memory concode_elem_sep void startElement concode_elem_sep InputStreamReader detectEncoding concode_elem_sep char currentLastChar concode_elem_sep XMLParser removeListener concode_elem_sep Charset getCharset concode_elem_sep TagState currentTagState concode_elem_sep void currentTagState concode_elem_sep String current concode_elem_sep void endElement concode_elem_sep void flush concode_elem_sep void parseWithReader concode_elem_sep void unknownData concode_elem_sep String currentTag concode_elem_sep void setMonitor concode_elem_sep String bufferToString concode_elem_sep void setState concode_elem_sep void comment concode_elem_sep StateController selectState concode_elem_sep void text concode_elem_sep XMLParser append concode_elem_sep XMLParser append concode_elem_sep XMLParser append concode_elem_sep void callText concode_elem_sep XMLParser addListener concode_elem_sep int bufferSize"}
{"code": "int function ( ) { return ( int ) Math . round ( x - xGrow ) ; }", "nl": "gets the leftmost x-position of the bounding box . concode_field_sep JLabel label concode_elem_sep double xGrow concode_elem_sep double yGrow concode_elem_sep double x concode_elem_sep double y concode_elem_sep Color color concode_field_sep int getHeight concode_elem_sep int getY concode_elem_sep void grow concode_elem_sep void setColor concode_elem_sep String toString concode_elem_sep int getWidth concode_elem_sep void draw concode_elem_sep void translate concode_elem_sep void paintShape"}
{"code": "ColumnMetaData [ ] function ( ) { return columns . toArray ( new ColumnMetaData [ columns . size ( ) ] ) ; }", "nl": "return columns for the schema . concode_field_sep Schema schema concode_elem_sep Map<Schema,Schema> seen concode_elem_sep List<ColumnMetaData> columns concode_elem_sep List<Integer> arrayWidths concode_field_sep String p concode_elem_sep String p concode_elem_sep ColumnMetaData addColumn concode_elem_sep ValueType simpleValueType concode_elem_sep boolean isSimple concode_elem_sep void columnize concode_elem_sep int[] getArrayWidths concode_elem_sep void addArrayColumn"}
{"code": "State function ( ) { return state ; }", "nl": "the current state of this machine concode_field_sep Map<String,JsonBall> metadata concode_elem_sep Date created concode_elem_sep Type type concode_elem_sep Set<String> ips concode_elem_sep ImmutableSet.Builder<String> ips concode_elem_sep ImmutableMap.Builder<String,JsonBall> metadata concode_elem_sep String name concode_elem_sep String id concode_elem_sep State state concode_elem_sep Function<JsonBall,String> unquoteString concode_elem_sep String dataset concode_elem_sep int memorySizeMb concode_elem_sep Date updated concode_elem_sep int diskSizeGb concode_field_sep Builder toBuilder concode_elem_sep Builder metadata concode_elem_sep String getName concode_elem_sep String getId concode_elem_sep int compareTo concode_elem_sep Builder type concode_elem_sep Date getUpdated concode_elem_sep Map<String,String> getMetadataAsJsonLiterals concode_elem_sep int hashCode concode_elem_sep Builder builder concode_elem_sep Builder id concode_elem_sep Builder state concode_elem_sep String value concode_elem_sep String value concode_elem_sep Builder memorySizeMb concode_elem_sep Type fromValue concode_elem_sep State fromValue concode_elem_sep Map<String,String> getMetadata concode_elem_sep String apply concode_elem_sep Builder created concode_elem_sep int getDiskSizeGb concode_elem_sep String getDatasetURN concode_elem_sep Date getCreated concode_elem_sep Builder addMetadata concode_elem_sep Builder ips concode_elem_sep Builder addIp concode_elem_sep int getMemorySizeMb concode_elem_sep Builder fromMachine concode_elem_sep Machine build concode_elem_sep Type getType concode_elem_sep boolean equals concode_elem_sep Builder name concode_elem_sep String toString concode_elem_sep String toString concode_elem_sep String toString concode_elem_sep Builder dataset concode_elem_sep Builder updated concode_elem_sep Set<String> getIps concode_elem_sep Builder diskSizeGb"}
{"code": "long function ( ) { return cacheHitCount ; }", "nl": "the amount of hits for this query concode_field_sep long executionMaxTime concode_elem_sep String[] ITEM_DESCRIPTIONS concode_elem_sep long cacheHitCount concode_elem_sep String query concode_elem_sep String TABULAR_TYPE_NAME concode_elem_sep long cachePutCount concode_elem_sep CompositeType COMPOSITE_TYPE concode_elem_sep long cacheMissCount concode_elem_sep String[] INDEX_NAMES concode_elem_sep long executionAvgTime concode_elem_sep long executionMinTime concode_elem_sep String COMPOSITE_TYPE_NAME concode_elem_sep OpenType[] ITEM_TYPES concode_elem_sep long executionCount concode_elem_sep String[] ITEM_NAMES concode_elem_sep String COMPOSITE_TYPE_DESCRIPTION concode_elem_sep long executionRowCount concode_elem_sep TabularType TABULAR_TYPE concode_elem_sep String TABULAR_TYPE_DESCRIPTION concode_field_sep void add concode_elem_sep long getCachePutCount concode_elem_sep TabularData newTabularDataInstance concode_elem_sep long getExecutionCount concode_elem_sep long getExecutionAvgTime concode_elem_sep long getCacheMissCount concode_elem_sep long getExecutionRowCount concode_elem_sep long getExecutionMinTime concode_elem_sep QueryStats[] fromTabularData concode_elem_sep String toString concode_elem_sep CompositeData toCompositeData concode_elem_sep String getQuery concode_elem_sep long getExecutionMaxTime"}
{"code": "void function ( ) { X509Certificate [ ] loc0 = CertificateChainFactory . getClientChain ( ) ; validateChain ( loc0 ) ; }", "nl": "tests construction of the client chain . the created certificates can be displayed with a command like : openssl pkcs12 - nodes - info - in / tmp/test . p12 > / tmp/test . cert & & openssl x509 - noout - text - in / tmp/test . cert concode_field_sep PlaceHolder placeHolder concode_field_sep void validateChain concode_elem_sep void testKdcChain concode_elem_sep void setUp"}
{"code": "Map < String , String > function ( String arg0 , boolean arg1 ) { return parseKeyAndValueToMap ( arg0 , DEFAULT_KEY_AND_VALUE_SEPARATOR , DEFAULT_KEY_AND_VALUE_PAIR_SEPARATOR , arg1 ) ; }", "nl": "parse key-value pairs to map , ignore empty key concode_field_sep String DEFAULT_KEY_AND_VALUE_PAIR_SEPARATOR concode_elem_sep String DEFAULT_KEY_AND_VALUE_SEPARATOR concode_field_sep K getKeyByValue concode_elem_sep boolean putMapNotNullKeyAndValue concode_elem_sep String toJson concode_elem_sep boolean putMapNotEmptyKeyAndValue concode_elem_sep boolean putMapNotEmptyKeyAndValue concode_elem_sep boolean putMapNotNullKey concode_elem_sep boolean isEmpty concode_elem_sep boolean putMapNotEmptyKey"}
{"code": "void function ( ) { if ( out != null ) { out . print ( ' ' ) ; } }", "nl": "appends a column separator to the output file . concode_field_sep Logger log concode_elem_sep String description concode_elem_sep int clusterIDLength concode_elem_sep String style concode_elem_sep boolean started concode_elem_sep String fileDescr concode_elem_sep String seed concode_elem_sep int BUFFER_CAPACITY concode_elem_sep String filePrefix concode_elem_sep String fileSuffix concode_elem_sep PrintWriter out concode_field_sep void appendClusterID concode_elem_sep void setOutputFilePrefix concode_elem_sep void stopped concode_elem_sep void start concode_elem_sep void appendNewLine concode_elem_sep void started concode_elem_sep void setDescription concode_elem_sep boolean isStarted concode_elem_sep void setOutputFileSuffix concode_elem_sep void setOutputFile concode_elem_sep void setOutputFileDescr concode_elem_sep void stop concode_elem_sep void appendToFile concode_elem_sep void appendToFile concode_elem_sep void appendToFile concode_elem_sep void appendToFile concode_elem_sep void appendToFile concode_elem_sep void setStyle concode_elem_sep void setSeed concode_elem_sep String getFileName"}
{"code": "void function ( final LabelProviderChangedEvent arg0 ) { for ( final ILabelProviderListener loc0 : fListeners ) { SafeRunner . run ( new SafeRunnable ( ) { @ Override public void run ( ) { loc0 . labelProviderChanged ( arg0 ) ; } } ) ; } }", "nl": "fires a label provider changed event to all registered listeners only listeners registered at the time this method is called are notified . concode_field_sep ArrayList<ILabelDecorator> fLabelDecorators concode_elem_sep JavaElementImageProvider fImageLabelProvider concode_elem_sep ListenerList<ILabelProviderListener> fListeners concode_elem_sep StorageLabelProvider fStorageLabelProvider concode_elem_sep int fImageFlags concode_elem_sep long fTextFlags concode_field_sep ILabelDecorator[] getDecorators concode_elem_sep StyledString getStyledText concode_elem_sep void addLabelDecorator concode_elem_sep String getText concode_elem_sep String decorateText concode_elem_sep void removeListener concode_elem_sep void setImageFlags concode_elem_sep Color getForeground concode_elem_sep Image decorateImage concode_elem_sep long getTextFlags concode_elem_sep long evaluateTextFlags concode_elem_sep void dispose concode_elem_sep void setTextFlags concode_elem_sep Image getImage concode_elem_sep boolean isLabelProperty concode_elem_sep Color getBackground concode_elem_sep int evaluateImageFlags concode_elem_sep int getImageFlags concode_elem_sep void addListener"}
{"code": "XMLParser function ( ) { return setState ( this . specialChar ) ; }", "nl": "set parser state to specialcharstate . concode_field_sep State closeStarComment concode_elem_sep State selfClosing concode_elem_sep State tagAttributes concode_elem_sep State unquoted concode_elem_sep State unknown concode_elem_sep State inTag concode_elem_sep State cdata concode_elem_sep State previousState concode_elem_sep State doctype concode_elem_sep State tagEncountered concode_elem_sep State singleQuoted concode_elem_sep XMLParser parser concode_elem_sep State xml concode_elem_sep State specialChar concode_elem_sep State doubleQuoted concode_elem_sep State closingTag concode_elem_sep State comment concode_elem_sep State attrValue concode_elem_sep State starComment concode_elem_sep State currentState concode_elem_sep State closeComment concode_elem_sep State processingInstruction concode_field_sep XMLParser closeStarComment concode_elem_sep XMLParser selfClosing concode_elem_sep XMLParser tagAttributes concode_elem_sep XMLParser unquotedAttr concode_elem_sep XMLParser attributeValue concode_elem_sep XMLParser doubleQuotedAttr concode_elem_sep XMLParser singleQuotedAttr concode_elem_sep XMLParser previousState concode_elem_sep XMLParser unknown concode_elem_sep XMLParser inTag concode_elem_sep XMLParser cdata concode_elem_sep XMLParser doctype concode_elem_sep XMLParser tagEncountered concode_elem_sep XMLParser setState concode_elem_sep XMLParser closingTag concode_elem_sep XMLParser comment concode_elem_sep XMLParser starComment concode_elem_sep XMLParser processingInstructions concode_elem_sep XMLParser closeComment"}
{"code": "Expr function ( ) { final Expr loc0 = ( Expr ) stack . remove ( stack . size ( ) - 1 ) ; final Type loc1 = loc0 . loc1 ( ) ; if ( loc1 . isWide ( ) ) { throw new IllegalArgumentException ( \"srini_string\" + \"srini_string\" ) ; } height -- ; return loc0 ; }", "nl": "pops a non-wide expression off the stack . concode_field_sep ArrayList stack concode_elem_sep int height concode_field_sep Expr pop concode_elem_sep void set concode_elem_sep int size concode_elem_sep Expr[] pop2 concode_elem_sep Expr get concode_elem_sep boolean isEmpty concode_elem_sep void replace concode_elem_sep String toString concode_elem_sep void push concode_elem_sep Expr peek concode_elem_sep Expr peek concode_elem_sep int height"}
{"code": "void function ( ITestIdentifier arg0 ) { if ( arg0 == null ) endTestCase ( ) ; else { logTestStart ( arg0 ) ; setRunningTest ( arg0 ) ; } }", "nl": "notify the testmonitor that a new test is starting . passing null signals that a test has ended or that none is running . concode_field_sep ITestIdentifier _runningTest concode_elem_sep TestMonitor _monitor concode_field_sep void endTestCase concode_elem_sep String getCurrentTestCaseID concode_elem_sep ITestIdentifier getRunningTest concode_elem_sep void logTestStart concode_elem_sep String getId concode_elem_sep void beginTestCase concode_elem_sep TestMonitor getInstance concode_elem_sep NoRunningTestId noTest concode_elem_sep void setRunningTest concode_elem_sep boolean isTestRunning"}
{"code": "InputStream function ( InputStream arg0 , long arg1 , int arg2 ) { return new BinaryStreamImpl ( extractBytes ( arg0 , arg1 , arg2 ) ) ; }", "nl": "extract a portion of the bytes from the given stream. , wrapping them in a new stream . concode_field_sep int BUFFER_SIZE concode_elem_sep CoreMessageLogger LOG concode_field_sep int getSuggestedBufferSize concode_elem_sep long determineLengthForBufferSizing concode_elem_sep boolean isNClob concode_elem_sep byte[] extractBytes concode_elem_sep byte[] extractBytes concode_elem_sep String extractString concode_elem_sep String extractString concode_elem_sep String extractString concode_elem_sep String extractString"}
{"code": "Pipeline < ? > function ( final WorkerContext arg0 , final Tag arg1 , final String arg2 , final ProcessObject arg3 ) { return getNext ( ) ; }", "nl": "just calls getnext.override this to get notified on encountered content . concode_field_sep Pipeline<?> next concode_field_sep Pipeline<?> init concode_elem_sep String getContextKey concode_elem_sep void setNext concode_elem_sep Pipeline<?> getNext concode_elem_sep T getLocalContext concode_elem_sep Pipeline<?> close concode_elem_sep Pipeline<?> open"}
{"code": "ColorPolynomial < C > function ( GenPolynomial < C > arg0 , ExpVector arg1 ) { GenPolynomial < GenPolynomial < C >> loc0 , loc1 , loc2 ; loc0 = green ; loc1 = red ; loc2 = white ; if ( green . getMap ( ) . keySet ( ) . contains ( arg1 ) ) { loc0 = green . sum ( arg0 , arg1 ) ; } else if ( red . getMap ( ) . keySet ( ) . contains ( arg1 ) ) { loc1 = red . sum ( arg0 , arg1 ) ; } else { loc2 = white . sum ( arg0 , arg1 ) ; } return new ColorPolynomial < C > ( loc0 , loc1 , loc2 ) ; }", "nl": "colorpolynomial summation . concode_field_sep GenPolynomial<GenPolynomial<C>> red concode_elem_sep GenPolynomial<GenPolynomial<C>> green concode_elem_sep GenPolynomial<GenPolynomial<C>> white concode_field_sep List<GenPolynomial<C>> getRedCoefficients concode_elem_sep boolean isONE concode_elem_sep ExpVector leadingExpVector concode_elem_sep Map.Entry<ExpVector,GenPolynomial<C>> leadingMonomial concode_elem_sep boolean checkInvariant concode_elem_sep ColorPolynomial<C> subtract concode_elem_sep ColorPolynomial<C> subtract concode_elem_sep int length concode_elem_sep boolean isDetermined concode_elem_sep GenPolynomial<GenPolynomial<C>> getPolynomial concode_elem_sep ColorPolynomial<C> abs concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep boolean isZERO concode_elem_sep List<GenPolynomial<C>> getGreenCoefficients concode_elem_sep String toString concode_elem_sep ColorPolynomial<C> divide concode_elem_sep GenPolynomial<GenPolynomial<C>> getEssentialPolynomial concode_elem_sep ColorPolynomial<C> multiply concode_elem_sep ColorPolynomial<C> multiply"}
{"code": "void function ( ) { rehash ( PrimeFinder . nextPrime ( ( int ) Math . ceil ( size ( ) / _loadFactor ) + 1 ) ) ; computeMaxSize ( capacity ( ) ) ; if ( _autoCompactionFactor != 0 ) { computeNextAutoCompactionAmount ( size ( ) ) ; } }", "nl": "compresses the hashtable to the minimum prime size as defined by primefinder that will hold all of the elements currently in the table . if you have done a lot of remove operations and plan to do a lot of queries or insertions or iteration , it is a good idea to invoke this method . doing so will accomplish two things : you 'll free memory allocated to the table but no longer needed because of the remove s. you 'll get better query/insert/iterator performance because there wo n't be any removed slots to skip over when probing for indices in the table . concode_field_sep int _size concode_elem_sep int _free concode_elem_sep float _loadFactor concode_elem_sep long serialVersionUID concode_elem_sep int _maxSize concode_elem_sep boolean _autoCompactTemporaryDisable concode_elem_sep float _autoCompactionFactor concode_elem_sep int _autoCompactRemovesRemaining concode_elem_sep float DEFAULT_LOAD_FACTOR concode_elem_sep int DEFAULT_INITIAL_CAPACITY concode_field_sep void setAutoCompactionFactor concode_elem_sep void writeExternal concode_elem_sep void trimToSize concode_elem_sep boolean isEmpty concode_elem_sep void clear concode_elem_sep void rehash concode_elem_sep float getAutoCompactionFactor concode_elem_sep void reenableAutoCompaction concode_elem_sep int capacity concode_elem_sep int size concode_elem_sep void tempDisableAutoCompaction concode_elem_sep void postInsertHook concode_elem_sep void computeMaxSize concode_elem_sep Object clone concode_elem_sep void readExternal concode_elem_sep void removeAt concode_elem_sep int setUp concode_elem_sep void computeNextAutoCompactionAmount concode_elem_sep void ensureCapacity concode_elem_sep int calculateGrownCapacity"}
{"code": "void function ( String arg0 ) { clear ( ) ; TableItem loc0 = fFailureTableDisplay . newTableItem ( ) ; loc0 . setText ( arg0 ) ; }", "nl": "shows other information than a stack trace . concode_field_sep Clipboard fClipboard concode_elem_sep Table fTable concode_elem_sep IPropertyChangeListener fFontPropertyChangeListener concode_elem_sep FailureTableDisplay fFailureTableDisplay concode_elem_sep String FAILURE_FONT concode_elem_sep ShowStackTraceInConsoleViewAction fShowTraceInConsoleAction concode_elem_sep TestElement fFailure concode_elem_sep CompareResultsAction fCompareAction concode_elem_sep TestRunnerViewPart fTestRunner concode_elem_sep String fInputTrace concode_elem_sep int MAX_LABEL_LENGTH concode_elem_sep String FRAME_PREFIX concode_field_sep String getSelectedText concode_elem_sep FailureTableDisplay getFailureTableDisplay concode_elem_sep Action createOpenEditorAction concode_elem_sep void clear concode_elem_sep void refresh concode_elem_sep String[] getFilterPatterns concode_elem_sep void updateEnablement concode_elem_sep void updateTable concode_elem_sep Composite getComposite concode_elem_sep void showFailure concode_elem_sep void initMenu concode_elem_sep TestElement getFailedTest concode_elem_sep Shell getShell concode_elem_sep void propertyChange concode_elem_sep String getTrace concode_elem_sep void dispose concode_elem_sep void menuAboutToShow"}
{"code": "List < Integer > function ( String arg0 ) { List < Integer > loc0 = new ArrayList < Integer > ( ) ; try { Scanner loc1 = new Scanner ( new File ( arg0 ) ) ; while ( loc1 . hasNextInt ( ) ) { loc0 . add ( loc1 . nextInt ( ) ) ; } } catch ( Exception loc1 ) { feedback += \"srini_string\" ; } return loc0 ; }", "nl": "read a correct answer from a file . concode_field_sep String feedback concode_elem_sep int correct concode_elem_sep int TESTS concode_field_sep String printOutput concode_elem_sep void runSpecialTest concode_elem_sep String appendFeedback concode_elem_sep void main concode_elem_sep void run concode_elem_sep String printList concode_elem_sep void judge concode_elem_sep void runTest"}
{"code": "void function ( double arg0 ) { assert ( currentWindowStart >= 0 ) ; slideWindowTo ( arg0 ) ; blockedTimeInWindow = arg0 - currentMarker ; currentMarker = arg0 ; eventDepth -- ; warmDownTimer . schedule ( TICK_TIME ) ; }", "nl": "called when an event is done busying up the ui thread . concode_field_sep int eventDepth concode_elem_sep GraphModel graphModel concode_elem_sep Timer warmDownTimer concode_elem_sep int TICK_TIME concode_elem_sep double blockedTimeInWindow concode_elem_sep double[] weights concode_elem_sep double WINDOW_SLIDE_INCREMENT concode_elem_sep double weightedUtilizationPercent concode_elem_sep double WINDOW_WIDTH concode_elem_sep double maxUtilization concode_elem_sep double[] windowHistory concode_elem_sep double currentWindowStart concode_elem_sep double currentMarker concode_elem_sep double scaledWeightedUtilization concode_field_sep void updateWeightedUtilization concode_elem_sep double calculateCurrentUtilization concode_elem_sep double getThreadUtilization concode_elem_sep void enterBlocking concode_elem_sep void slideWindowTo concode_elem_sep void run concode_elem_sep double dotProduct"}
{"code": "int function ( Boolean arg0 , Boolean arg1 ) { boolean loc0 = arg0 . booleanValue ( ) ; boolean loc1 = arg1 . booleanValue ( ) ; return ( loc0 ^ loc1 ) ? ( ( loc0 ^ trueFirst ) ? 1 : - 1 ) : 0 ; }", "nl": "compares two non-null boolean objects according to the value of #sortstruefirst . concode_field_sep BooleanComparator TRUE_FIRST concode_elem_sep long serialVersionUID concode_elem_sep BooleanComparator FALSE_FIRST concode_elem_sep boolean trueFirst concode_field_sep BooleanComparator getTrueFirstComparator concode_elem_sep BooleanComparator getBooleanComparator concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep boolean sortsTrueFirst concode_elem_sep BooleanComparator getFalseFirstComparator"}
{"code": "String function ( IResource arg0 ) { return markLTR ( arg0 . getName ( ) , \"srini_string\" ) ; }", "nl": "returns a label for a resource name . concode_field_sep PlaceHolder placeHolder concode_field_sep String getURLPart concode_elem_sep String getFilePattern concode_elem_sep String markLTR concode_elem_sep String getVersionName concode_elem_sep String getPathLabel"}
{"code": "List < String > function ( ) { if ( tags == null ) { tags = new ArrayList < String > ( ) ; } return this . tags ; }", "nl": "gets the value of the tags property . this accessor method returns a reference to the live list , not a snapshot . therefore any modification you make to the returned list will be present inside the jaxb object . this is why there is not a set method for the tags property . for example , to add a new item , do as follows : gettags . add newitem ; objects of the following type s are allowed in the list string concode_field_sep String validationPattern concode_elem_sep boolean isValueOptional concode_elem_sep boolean encrypted concode_elem_sep String machineInterpretationKey concode_elem_sep String displayName concode_elem_sep String defaultValue concode_elem_sep String technicalKey concode_elem_sep boolean isKeyOptional concode_elem_sep List<String> tags concode_elem_sep String exampleValue concode_field_sep void setDefaultValue concode_elem_sep String getExampleValue concode_elem_sep String getValidationPattern concode_elem_sep boolean isIsKeyOptional concode_elem_sep void setIsKeyOptional concode_elem_sep void setDisplayName concode_elem_sep void setMachineInterpretationKey concode_elem_sep void setExampleValue concode_elem_sep String getDefaultValue concode_elem_sep String getTechnicalKey concode_elem_sep void setEncrypted concode_elem_sep void setTechnicalKey concode_elem_sep String getDisplayName concode_elem_sep boolean isEncrypted concode_elem_sep String getMachineInterpretationKey concode_elem_sep void setValidationPattern concode_elem_sep boolean isIsValueOptional concode_elem_sep void setIsValueOptional"}
{"code": "E function ( int arg0 ) { final E loc0 = executables . remove ( arg0 ) ; if ( loc0 . getPropertySpaces ( ) != null && loc0 . getPropertySpaces ( ) . length > 0 ) { querySpaces = null ; } return loc0 ; }", "nl": "removes the entry at position index in the list . concode_field_sep Set<Serializable> querySpaces concode_elem_sep boolean sorted concode_elem_sep Sorter<E> sorter concode_elem_sep ArrayList<E> executables concode_elem_sep int INIT_QUEUE_LIST_SIZE concode_field_sep boolean add concode_elem_sep void writeExternal concode_elem_sep Iterator<E> iterator concode_elem_sep Set<Serializable> getQuerySpaces concode_elem_sep int size concode_elem_sep E get concode_elem_sep boolean isEmpty concode_elem_sep void clear concode_elem_sep void removeLastN concode_elem_sep void readExternal concode_elem_sep void sort concode_elem_sep void sort concode_elem_sep void afterDeserialize"}
{"code": "int function ( ) { return val . hashCode ( ) ; }", "nl": "hash code for this biginteger . concode_field_sep java.math.BigInteger val concode_elem_sep BigInteger ONE concode_elem_sep BigInteger ZERO concode_elem_sep Random random concode_field_sep BigInteger IRAND concode_elem_sep boolean isField concode_elem_sep boolean isCommutative concode_elem_sep BigInteger gcd concode_elem_sep BigInteger IPROD concode_elem_sep BigInteger sum concode_elem_sep int compareTo concode_elem_sep BigInteger IABS concode_elem_sep java.math.BigInteger characteristic concode_elem_sep BigInteger random concode_elem_sep BigInteger random concode_elem_sep BigInteger IDIF concode_elem_sep BigInteger divide concode_elem_sep BigInteger copy concode_elem_sep BigInteger multiply concode_elem_sep BigInteger IGCD concode_elem_sep int signum concode_elem_sep BigInteger ISUM concode_elem_sep boolean isONE concode_elem_sep BigInteger inverse concode_elem_sep java.math.BigInteger getVal concode_elem_sep BigInteger INEG concode_elem_sep BigInteger valueOf concode_elem_sep BigInteger valueOf concode_elem_sep boolean isUnit concode_elem_sep BigInteger subtract concode_elem_sep BigInteger IQ concode_elem_sep BigInteger[] IQR concode_elem_sep BigInteger parse concode_elem_sep BigInteger parse concode_elem_sep BigInteger[] egcd concode_elem_sep int ISIGN concode_elem_sep BigInteger abs concode_elem_sep BigInteger IREM concode_elem_sep BigInteger[] divideAndRemainder concode_elem_sep BigInteger negate concode_elem_sep boolean equals concode_elem_sep BigInteger clone concode_elem_sep BigInteger getONE concode_elem_sep BigInteger getZERO concode_elem_sep BigInteger fromInteger concode_elem_sep BigInteger fromInteger concode_elem_sep boolean isZERO concode_elem_sep boolean isAssociative concode_elem_sep String toString concode_elem_sep int ICOMP concode_elem_sep BigInteger remainder"}
{"code": "void function ( Object arg0 ) { if ( is12 ) { getLogger ( ) . log ( FQCN , ( Priority ) Level . DEBUG , arg0 , null ) ; } else { getLogger ( ) . log ( FQCN , Level . DEBUG , arg0 , null ) ; } }", "nl": "log a message to the log4j logger with trace priority . currently logs to debug level in log4j . concode_field_sep String name concode_elem_sep boolean is12 concode_elem_sep Logger logger concode_elem_sep String FQCN concode_field_sep void warn concode_elem_sep void warn concode_elem_sep void debug concode_elem_sep void debug concode_elem_sep boolean isInfoEnabled concode_elem_sep boolean isErrorEnabled concode_elem_sep Logger getLogger concode_elem_sep boolean isTraceEnabled concode_elem_sep boolean isWarnEnabled concode_elem_sep boolean isDebugEnabled concode_elem_sep void error concode_elem_sep void error concode_elem_sep boolean isFatalEnabled concode_elem_sep void fatal concode_elem_sep void fatal concode_elem_sep void info concode_elem_sep void info"}
{"code": "Complex function ( Complex arg0 , Complex [ ] arg1 ) { Complex loc0 = new Complex ( arg1 [ arg1 . length - 1 ] ) ; double loc1 ; int loc2 = arg1 . length - 1 ; while ( loc2 -- > 0 ) { Complex loc3 = arg1 [ loc2 ] ; loc0 . r = loc3 . r + arg0 . r * ( loc1 = loc0 . r ) - arg0 . i * loc0 . i ; loc0 . i = loc3 . i + arg0 . r * loc0 . i + arg0 . i * loc1 ; } loc0 . r = arg0 . r * ( loc1 = loc0 . r ) - arg0 . i * loc0 . i ; loc0 . i = arg0 . r * loc0 . i + arg0 . i * loc1 ; return loc0 ; }", "nl": "evaluate complex polynomial . note coefficients are always c 1 to c n , c 0 is always 0,0 . concode_field_sep double DTR concode_elem_sep double P10 concode_elem_sep int N_ITER concode_elem_sep double C22 concode_elem_sep double C48 concode_elem_sep double TWOPI concode_elem_sep double P02 concode_elem_sep double FORTPI concode_elem_sep double MILLION concode_elem_sep double RTD concode_elem_sep double C88 concode_elem_sep double C04 concode_elem_sep double C66 concode_elem_sep double C02 concode_elem_sep double P01 concode_elem_sep double QUARTERPI concode_elem_sep double PI concode_elem_sep double EPS10 concode_elem_sep double C06 concode_elem_sep double C68 concode_elem_sep double P00 concode_elem_sep double C44 concode_elem_sep double C46 concode_elem_sep double C00 concode_elem_sep double SECONDS_TO_RAD concode_elem_sep double HALFPI concode_elem_sep double C08 concode_elem_sep double P11 concode_elem_sep int MAX_ITER concode_elem_sep double P20 concode_field_sep double authlat concode_elem_sep double niceNumber concode_elem_sep double atan2d concode_elem_sep double distance concode_elem_sep double greatCircleDistance concode_elem_sep double atand concode_elem_sep double radToDeg concode_elem_sep double[] authset concode_elem_sep double normalizeLatitude concode_elem_sep double cosd concode_elem_sep double mlfn concode_elem_sep double tand concode_elem_sep double sqrt concode_elem_sep double degToRad concode_elem_sep double phi2 concode_elem_sep double hypot concode_elem_sep double acosd concode_elem_sep double msfn concode_elem_sep double frac concode_elem_sep double[] enfn concode_elem_sep double atan2 concode_elem_sep double normalizeLongitude concode_elem_sep double qsfn concode_elem_sep double asind concode_elem_sep double sphericalAzimuth concode_elem_sep boolean sameSigns concode_elem_sep boolean sameSigns concode_elem_sep double geographicLatitude concode_elem_sep double inv_mlfn concode_elem_sep double cross concode_elem_sep boolean isIdentity concode_elem_sep double acos concode_elem_sep double dmsToDeg concode_elem_sep double longitudeDistance concode_elem_sep double geocentricLatitude concode_elem_sep double tsfn concode_elem_sep double trunc concode_elem_sep double takeSign concode_elem_sep int takeSign concode_elem_sep double sind concode_elem_sep double normalizeAngle concode_elem_sep double asin concode_elem_sep double dmsToRad concode_elem_sep Complex zpoly1d"}
{"code": "Collection function ( ) { return succs ; }", "nl": "returns the successor or children nodes of this graphnode . concode_field_sep int preIndex concode_elem_sep int postIndex concode_elem_sep HashSet succs concode_elem_sep HashSet preds concode_field_sep int preOrderIndex concode_elem_sep int postOrderIndex concode_elem_sep void setPostOrderIndex concode_elem_sep void setPreOrderIndex concode_elem_sep Collection preds"}
{"code": "void function ( ) { Assert . assertEquals ( PageSize . A4 , ctx . getPageSize ( ) ) ; }", "nl": "verifies the default page size a4 . concode_field_sep HtmlPipelineContext ctx concode_field_sep void verifydefaultAcceptUnknown concode_elem_sep void verifydefaultRoottags concode_elem_sep void setup concode_elem_sep void verifydefaultBookmarksEnabled concode_elem_sep void verifyMemory"}
{"code": "boolean function ( int arg0 ) { return ( arg0 == QuadTreeNode . SOUTH || arg0 == QuadTreeNode . WEST ) ; }", "nl": "return true iff this quadrant is adjacent to the boundary of an image in the given direction . concode_field_sep PlaceHolder placeHolder concode_field_sep Quadrant reflect concode_elem_sep QuadTreeNode child"}
{"code": "void function ( ) { }", "nl": "the measurement has been started . concode_field_sep Logger log concode_elem_sep String description concode_elem_sep int clusterIDLength concode_elem_sep String style concode_elem_sep boolean started concode_elem_sep String fileDescr concode_elem_sep String seed concode_elem_sep int BUFFER_CAPACITY concode_elem_sep String filePrefix concode_elem_sep String fileSuffix concode_elem_sep PrintWriter out concode_field_sep void appendClusterID concode_elem_sep void setOutputFilePrefix concode_elem_sep void stopped concode_elem_sep void start concode_elem_sep void appendNewLine concode_elem_sep void setDescription concode_elem_sep boolean isStarted concode_elem_sep void setOutputFileSuffix concode_elem_sep void setOutputFile concode_elem_sep void appendSeparator concode_elem_sep void setOutputFileDescr concode_elem_sep void stop concode_elem_sep void appendToFile concode_elem_sep void appendToFile concode_elem_sep void appendToFile concode_elem_sep void appendToFile concode_elem_sep void appendToFile concode_elem_sep void setStyle concode_elem_sep void setSeed concode_elem_sep String getFileName"}
{"code": "long [ ] function ( ) { return _list . toNativeArray ( ) ; }", "nl": "copies the contents of the stack into a native array . note that this will not pop them out of the stack . concode_field_sep TLongArrayList _list concode_elem_sep int DEFAULT_CAPACITY concode_field_sep long pop concode_elem_sep int size concode_elem_sep void clear concode_elem_sep void reset concode_elem_sep void push concode_elem_sep long peek"}
{"code": "CSSResolver function ( final boolean arg0 ) { CSSResolver loc0 = new StyleAttrCSSResolver ( ) ; if ( arg0 ) { loc0 . addCss ( getDefaultCSS ( ) ) ; } return loc0 ; }", "nl": "get a cssresolver implementation . concode_field_sep XMLWorkerHelper myself concode_elem_sep TagProcessorFactory tpf concode_elem_sep CssFile defaultCssFile concode_field_sep ElementList parseToElementList concode_elem_sep TagProcessorFactory getDefaultTagProcessorFactory concode_elem_sep CssFile getCSS concode_elem_sep void parseXHtml concode_elem_sep void parseXHtml concode_elem_sep void parseXHtml concode_elem_sep void parseXHtml concode_elem_sep void parseXHtml concode_elem_sep void parseXHtml concode_elem_sep void parseXHtml concode_elem_sep void parseXHtml concode_elem_sep void parseXHtml concode_elem_sep void parseXHtml concode_elem_sep void parseXHtml concode_elem_sep XMLWorkerHelper getInstance concode_elem_sep CssFile getDefaultCSS"}
{"code": "long function ( ) { return timestamp ; }", "nl": "returns the time of the message , when it was sent , received or dropped . concode_field_sep long size concode_elem_sep Class msgClass concode_elem_sep long timestamp concode_field_sep Class getMsgClass concode_elem_sep long getSize"}
{"code": "Object function ( ) { if ( ! isValidNode ( ) ) { throw new InvalidNodeException ( ) ; } return item ; }", "nl": "item returns this node 's item . if this node is invalid , throws an exception . concode_field_sep Object item concode_elem_sep List myList concode_field_sep ListNode next concode_elem_sep ListNode prev concode_elem_sep boolean isValidNode concode_elem_sep void setItem concode_elem_sep void insertAfter concode_elem_sep void remove concode_elem_sep void insertBefore"}
{"code": "boolean function ( int arg0 ) { final Notification loc0 = mNotifications . get ( arg0 ) ; return isOngoing ( loc0 ) ; }", "nl": "determines whether a notification should hold a foreground service to keep gecko alive concode_field_sep Notification mForegroundNotification concode_elem_sep ConcurrentHashMap<Integer,Notification> mNotifications concode_elem_sep NotificationManagerCompat mNotificationManager concode_elem_sep Context mContext concode_elem_sep int mForegroundNotificationId concode_field_sep void add concode_elem_sep void add concode_elem_sep void updateForegroundNotification concode_elem_sep void setForegroundNotification concode_elem_sep void update concode_elem_sep boolean isDone concode_elem_sep void remove"}
{"code": "boolean function ( IWidgetIdentifier arg0 ) { return _register . containsValue ( arg0 ) ; }", "nl": "returns true if this registry maps one or more keys to the specified value . concode_field_sep Map _values concode_elem_sep Map _register concode_field_sep WidgetLocator add concode_elem_sep String getKey concode_elem_sep Set getEntries concode_elem_sep boolean containsKey concode_elem_sep IWidgetIdentifier get concode_elem_sep IWidgetIdentifier remove"}
{"code": "void function ( ) { annotations . process ( null , null , null ) ; }", "nl": "process : null arguemnts concode_field_sep Annotations annotations concode_field_sep void testProcessConnectionDefinition concode_elem_sep void testProcessActivation concode_elem_sep void testProcessConnectorFail concode_elem_sep void tearDown concode_elem_sep void testProcessConfigProperty concode_elem_sep void testProcessNullAnnotationRepository concode_elem_sep void beforeClass concode_elem_sep void setup concode_elem_sep void testProcessConnector concode_elem_sep void afterClass concode_elem_sep void testProcessAuthenticationMechanism concode_elem_sep void testProcessAdministeredObject concode_elem_sep void testProcessConnectionDefinitions concode_elem_sep URI getURI"}
{"code": "Residue < C > function ( ) { return new Residue < C > ( ring , val . negate ( ) ) ; }", "nl": "residue negate . concode_field_sep C val concode_elem_sep ResidueRing<C> ring concode_elem_sep boolean debug concode_elem_sep int isunit concode_elem_sep Logger logger concode_field_sep int signum concode_elem_sep boolean isONE concode_elem_sep Residue<C> inverse concode_elem_sep boolean isUnit concode_elem_sep Residue<C> subtract concode_elem_sep Residue<C> gcd concode_elem_sep Residue<C> sum concode_elem_sep int compareTo concode_elem_sep Residue<C>[] egcd concode_elem_sep Residue<C> abs concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep Residue<C> clone concode_elem_sep boolean isZERO concode_elem_sep String toString concode_elem_sep Residue<C> divide concode_elem_sep Residue<C> multiply concode_elem_sep Residue<C> remainder"}
{"code": "ExtendedGB < C > function ( int arg0 , List < GenPolynomial < C >> arg1 ) { throw new RuntimeException ( \"srini_string\" + this . getClass ( ) . getSimpleName ( ) ) ; }", "nl": "extended groebner base using critical pair class . concode_field_sep Reduction<C> red concode_elem_sep boolean debug concode_elem_sep Logger logger concode_field_sep boolean isGB concode_elem_sep boolean isGB concode_elem_sep List<GenPolynomial<C>> minimalGB concode_elem_sep List<GenPolynomial<C>> GB concode_elem_sep boolean isReductionMatrix concode_elem_sep boolean isReductionMatrix"}
{"code": "void function ( ) { ConnectionFactory loc0 = ( ConnectionFactory ) initialContext . lookup ( \"srini_string\" ) ; String loc1 = HelloBean . sendMessage ( loc0 ) ; Assert . assertEquals ( String . format ( \"srini_string\" , HowdyBean . SAYING , PRINCIPAL , HolaBean . SAYING , PRINCIPAL , GoodByeBean . SAYING ) , loc1 ) ; }", "nl": "the setup of testcase is : send message + - > ejb3 mdb @runas - > ejb3 slsb - > ejb2 slsb & & ejb2 slsb concode_field_sep InitialContext initialContext concode_elem_sep String PRINCIPAL concode_field_sep Archive<?> runAsEJB2 concode_elem_sep Archive<?> runAsEJB3 concode_elem_sep void clientCall concode_elem_sep void setup concode_elem_sep void tearDown"}
{"code": "void function ( String arg0 ) { synchronized ( skipHours ) { skipHours . add ( arg0 ) ; } }", "nl": "add an additional skip hour name . concode_field_sep String managingEditor concode_elem_sep String title concode_elem_sep String language concode_elem_sep String link concode_elem_sep ArrayList skipDays concode_elem_sep TextInput textInput concode_elem_sep String rating concode_elem_sep String pubDate concode_elem_sep String description concode_elem_sep String lastBuildDate concode_elem_sep String webMaster concode_elem_sep String copyright concode_elem_sep ArrayList skipHours concode_elem_sep ArrayList items concode_elem_sep Image image concode_elem_sep String docs concode_elem_sep double version concode_field_sep void addSkipDay concode_elem_sep void removeItem concode_elem_sep void setCopyright concode_elem_sep String getWebMaster concode_elem_sep void setDescription concode_elem_sep String getDescription concode_elem_sep String getDocs concode_elem_sep void addItem concode_elem_sep Item[] getItems concode_elem_sep String getTitle concode_elem_sep String[] getSkipHours concode_elem_sep String[] findSkipHours concode_elem_sep String[] findSkipDays concode_elem_sep void render concode_elem_sep void render concode_elem_sep void render concode_elem_sep void render concode_elem_sep void render concode_elem_sep void render concode_elem_sep String[] getSkipDays concode_elem_sep void setManagingEditor concode_elem_sep double getVersion concode_elem_sep String getLanguage concode_elem_sep String getCopyright concode_elem_sep void setVersion concode_elem_sep String getPubDate concode_elem_sep void setWebMaster concode_elem_sep void setTitle concode_elem_sep void setTextInput concode_elem_sep Item[] findItems concode_elem_sep void setPubDate concode_elem_sep void setLink concode_elem_sep String getLink concode_elem_sep String getLastBuildDate concode_elem_sep void setDocs concode_elem_sep void removeSkipHour concode_elem_sep void removeSkipDay concode_elem_sep TextInput getTextInput concode_elem_sep Image getImage concode_elem_sep void setLastBuildDate concode_elem_sep void setRating concode_elem_sep String getManagingEditor concode_elem_sep void setImage concode_elem_sep void setLanguage concode_elem_sep String getRating"}
{"code": "boolean function ( ) { return pdfxConformance == PdfWriter . PDFX32002 ; }", "nl": "checks if the pdf has to be in conformance with pdf/x -3:2002 concode_field_sep PdfWriter writer concode_elem_sep int pdfxConformance concode_field_sep boolean isPdfIso concode_elem_sep void checkPdfIsoConformance concode_elem_sep int getPDFXConformance concode_elem_sep boolean isPdfX1A2001 concode_elem_sep boolean isPdfX concode_elem_sep void setPDFXConformance"}
{"code": "void function ( WidgetLocator arg0 ) { _parentInfo = arg0 ; }", "nl": "set the parent widgetlocator . concode_field_sep long serialVersionUID concode_elem_sep HashMap _map concode_elem_sep int UNASSIGNED concode_elem_sep int _index concode_elem_sep WidgetLocator _parentInfo concode_elem_sep Class _cls concode_elem_sep String _nameOrLabel concode_elem_sep IWidgetMatcher _matcher concode_field_sep int getIndex concode_elem_sep void setData concode_elem_sep WidgetLocator getParentInfo concode_elem_sep String getNameOrLabel concode_elem_sep IWidgetLocator[] findAll concode_elem_sep boolean matches concode_elem_sep Map getDataMap concode_elem_sep Class getTargetClass concode_elem_sep void setIndex concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep String toString concode_elem_sep String getTargetClassName concode_elem_sep String getData"}
{"code": "double [ ] function ( UnivariateRealFunction arg0 , double arg1 , double arg2 , double arg3 ) { return bracket ( arg0 , arg1 , arg2 , arg3 , Integer . MAX_VALUE ) ; }", "nl": "this method attempts to find two values a and b satisfying lowerbound f a f b if f is continuous on a , b , this means that a and b bracket a root of f . the algorithm starts by setting a : = initial -1 ; b : = initial +1 , examines the value of the function at a and b and keeps moving the endpoints out by one unit each time through a loop that terminates when one of the following happens : f a f b -- success ! a = lower and b = upper -- convergenceexception integer.max _ value iterations elapse -- convergenceexception note : this method can take integer.max _ value iterations to throw a convergenceexception . unless you are confident that there is a root between lowerbound and upperbound near initial , it is better to use #bracket univariaterealfunction , double , double , double , int , explicitly specifying the maximum number of iterations . concode_field_sep UnivariateRealSolverFactory factory concode_field_sep double solve concode_elem_sep double solve concode_elem_sep double midpoint concode_elem_sep void setup"}
{"code": "boolean function ( Object arg0 ) { if ( arg0 instanceof RoutingTableEntry ) { return this . contact . getOverlayID ( ) . equals ( ( ( RoutingTableEntry < ? > ) arg0 ) . getContact ( ) . getOverlayID ( ) ) ; } return false ; }", "nl": "returns true if o is a routingtableentry and has the same kademliaoverlaycontact as this . specifics of this routing table entry such as stale counter are ignored . concode_field_sep long lastSeen concode_elem_sep int staleCounter concode_elem_sep KademliaOverlayContact<T> contact concode_field_sep int getStaleCounter concode_elem_sep int hashCode concode_elem_sep int increaseStaleCounter concode_elem_sep String toString concode_elem_sep long getLastSeen concode_elem_sep KademliaOverlayContact<T> getContact concode_elem_sep void seen"}
{"code": "K function ( final Predicate < V > arg0 ) { for ( final Map . Entry < K , V > loc0 : kSmallest . entrySet ( ) ) { if ( arg0 . isTrue ( loc0 . getValue ( ) ) ) { return loc0 . getKey ( ) ; } } return null ; }", "nl": "get the minimal key from this map with respect to the preset comparator for which valuepredicate holds for its associated value . concode_field_sep SortedMap<K,V> kSmallest concode_elem_sep int k concode_field_sep boolean containsKey concode_elem_sep Collection<V> values concode_elem_sep void clear concode_elem_sep boolean isInRange concode_elem_sep boolean put concode_elem_sep boolean put concode_elem_sep boolean put concode_elem_sep V remove concode_elem_sep boolean containsValue concode_elem_sep K getMaxKey concode_elem_sep int size concode_elem_sep K firstKey concode_elem_sep void putAll concode_elem_sep void putAll concode_elem_sep void putAll concode_elem_sep void putAll concode_elem_sep void putAll concode_elem_sep V get concode_elem_sep void setAllValues concode_elem_sep K lastKey concode_elem_sep String toString concode_elem_sep Set<K> keySet"}
{"code": "void function ( ) { try ( Connection loc0 = DriverManager . getConnection ( DB_URL ) ; Statement loc1 = loc0 . createStatement ( ) ) { loc1 . execute ( CustomerSchemaSql . DELETE_SCHEMA_SQL ) ; } }", "nl": "delete customer schema for fresh setup per test . concode_field_sep String DB_URL concode_elem_sep DbCustomerDao dao concode_elem_sep Customer existingCustomer concode_elem_sep String EXCEPTION_CAUSE concode_elem_sep ExpectedException exception concode_field_sep void addingShouldResultInSuccess concode_elem_sep void deletionShouldBeFailureAndNotAffectExistingCustomers concode_elem_sep void retrievingAllCustomersFailsWithExceptionAsFeedbackToClient concode_elem_sep void updatingACustomerFailsWithFeedbackToTheClient concode_elem_sep void retrieveShouldReturnNoCustomer concode_elem_sep void createSchema concode_elem_sep void updationShouldBeFailureAndNotAffectExistingCustomers concode_elem_sep void deletionShouldBeSuccessAndCustomerShouldBeNonAccessible concode_elem_sep void addingShouldResultInFailureAndNotAffectExistingCustomers concode_elem_sep void assertCustomerCountIs concode_elem_sep void addingACustomerFailsWithExceptionAsFeedbackToClient concode_elem_sep DataSource mockedDatasource concode_elem_sep void setUp concode_elem_sep void setUp concode_elem_sep void updationShouldBeSuccessAndAccessingTheSameCustomerShouldReturnUpdatedInformation concode_elem_sep void retrievingACustomerByIdFailsWithExceptionAsFeedbackToClient concode_elem_sep int getNonExistingCustomerId concode_elem_sep void deletingACustomerFailsWithExceptionAsFeedbackToTheClient"}
{"code": "boolean function ( ) { return isOffline || Simulator . getCurrentTime ( ) > ttl + lastAction ; }", "nl": "is this contact offline ? concode_field_sep boolean isOffline concode_elem_sep long lastAction concode_elem_sep TransInfo transInfo concode_elem_sep long ttl concode_field_sep void updateLastAction concode_elem_sep void markAsOffline concode_elem_sep boolean equals concode_elem_sep ReplicationDHTContact clone concode_elem_sep long getLastAction concode_elem_sep TransInfo getTransInfo"}
{"code": "double function ( ListNode arg0 ) { if ( arg0 == null ) { return 0.0 ; } return ( ( Double ) arg0 . item ) . doubleValue ( ) + listSum ( arg0 . next ) ; }", "nl": "listsum computes the sum of terms in a list . concode_field_sep PlaceHolder placeHolder concode_field_sep ListNode createGeomSeries concode_elem_sep void main"}
{"code": "void function ( Throwable arg0 ) { log ( \"srini_string\" , arg0 ) ; }", "nl": "log the specified exception . concode_field_sep ILog sysOutLog concode_elem_sep PrintWriter sysOut concode_elem_sep ILog log concode_elem_sep String PRODUCT_ID concode_field_sep void setLog concode_elem_sep void printLogObject concode_elem_sep void removeLogListener concode_elem_sep void logNoHeader concode_elem_sep void logStackTrace concode_elem_sep void printLogStatus concode_elem_sep IStatus createLogStatus concode_elem_sep void printLogMessage concode_elem_sep void printLog concode_elem_sep void close concode_elem_sep void addLogListener concode_elem_sep org.osgi.framework.Bundle getBundle"}
{"code": "void function ( Object arg0 , Throwable arg1 ) { log ( Level . FINEST , String . valueOf ( arg0 ) , arg1 ) ; }", "nl": "log a message and exception with trace log level . concode_field_sep String name concode_elem_sep boolean classAndMethodFound concode_elem_sep Logger logger concode_elem_sep String sourceMethodName concode_elem_sep String sourceClassName concode_field_sep void debug concode_elem_sep void debug concode_elem_sep void log concode_elem_sep Logger getLogger concode_elem_sep boolean isWarnEnabled concode_elem_sep void error concode_elem_sep void error concode_elem_sep boolean isFatalEnabled concode_elem_sep void fatal concode_elem_sep void fatal concode_elem_sep void warn concode_elem_sep void warn concode_elem_sep boolean isInfoEnabled concode_elem_sep boolean isErrorEnabled concode_elem_sep boolean isTraceEnabled concode_elem_sep boolean isDebugEnabled concode_elem_sep void getClassAndMethod concode_elem_sep void info concode_elem_sep void info"}
{"code": "void function ( int arg0 ) { this . productID = arg0 ; }", "nl": "sets the new productid . concode_field_sep long signature1 concode_elem_sep int productID concode_elem_sep String manufacturer concode_elem_sep int vendorID concode_elem_sep long version concode_elem_sep long signature2 concode_elem_sep String productDescription concode_elem_sep String serialNumber concode_elem_sep int MAX_HEADER_LENGTH concode_elem_sep String manufacturerID concode_elem_sep boolean remoteWakeupCapable concode_elem_sep boolean pnpEnabled concode_elem_sep int maxPower concode_elem_sep boolean selfPowered concode_field_sep boolean isPnpEnabled concode_elem_sep long getSignature2 concode_elem_sep void setPnpEnabled concode_elem_sep void setManufacturer concode_elem_sep void setMaxPower concode_elem_sep void setProductDescription concode_elem_sep String getManufacturer concode_elem_sep void setSelfPowered concode_elem_sep long getSignature1 concode_elem_sep void setManufacturerID concode_elem_sep boolean isRemoteWakeupCapable concode_elem_sep String getManufacturerID concode_elem_sep void validate concode_elem_sep int getMaxPower concode_elem_sep long getVersion concode_elem_sep void setSignature1 concode_elem_sep String getSerialNumber concode_elem_sep void setSerialNumber concode_elem_sep void setVersion concode_elem_sep void setSignature2 concode_elem_sep String getProductDescription concode_elem_sep int getProductID concode_elem_sep boolean isSelfPowered concode_elem_sep void setRemoteWakeupCapable concode_elem_sep void setVendorID concode_elem_sep int getVendorID"}
{"code": "void function ( String arg0 ) { files . add ( arg0 ) ; }", "nl": "add a file to the collection . concode_field_sep ArrayList<String> files concode_elem_sep MusicPlayer player concode_field_sep void listAllFilles concode_elem_sep void listFile concode_elem_sep void removeFile concode_elem_sep int getNumberOfFiles concode_elem_sep void listMatching concode_elem_sep int findFirst concode_elem_sep void stopPlaying concode_elem_sep void startPlaying concode_elem_sep void playSampleOf"}
{"code": "long function ( DisplayPortMetrics arg0 ) { int loc0 = mTail ; int loc1 = ( mHead + 1 ) % BUFFER_SIZE ; while ( loc1 != loc0 ) { if ( mMetrics [ loc1 ] . fuzzyEquals ( arg0 ) ) { long loc2 = mTimestamps [ loc1 ] ; mHead = loc1 ; return loc2 ; } loc1 = ( loc1 + 1 ) % BUFFER_SIZE ; } return - 1 ; }", "nl": "find the timestamp associated with the given metrics , and remove all metrics objects from the start of the queue up to and including the one provided . note that because of draw coalescing , the metrics object passed in here may not be the one at the head of the queue , and so we must iterate our way through the list to find it . this must only be called from the compositor thread . concode_field_sep DisplayPortMetrics[] mMetrics concode_elem_sep long[] mTimestamps concode_elem_sep String LOGTAG concode_elem_sep int mTail concode_elem_sep int BUFFER_SIZE concode_elem_sep int mHead concode_field_sep boolean add concode_elem_sep void reset"}
{"code": "PdfImageObject function ( ) { prepareImageObject ( ) ; return imageObject ; }", "nl": "gets an object containing the image dictionary and bytes . concode_field_sep PdfIndirectReference ref concode_elem_sep InlineImageInfo inlineImageInfo concode_elem_sep PdfImageObject imageObject concode_elem_sep PdfDictionary colorSpaceDictionary concode_elem_sep GraphicsState gs concode_field_sep Vector getStartPoint concode_elem_sep ImageRenderInfo createForXObject concode_elem_sep PdfIndirectReference getRef concode_elem_sep ImageRenderInfo createForEmbeddedImage concode_elem_sep BaseColor getCurrentFillColor concode_elem_sep void prepareImageObject concode_elem_sep Matrix getImageCTM concode_elem_sep float getArea"}
{"code": "boolean function ( ) { return valid ; }", "nl": "isvalidnode returns true if this node is valid ; false otherwise . concode_field_sep boolean valid concode_elem_sep Object item concode_field_sep TreeNode parent concode_elem_sep Object item concode_elem_sep int children concode_elem_sep void removeLeaf concode_elem_sep void insertChild concode_elem_sep TreeNode nextSibling concode_elem_sep void setItem concode_elem_sep TreeNode child"}
{"code": "int function ( final ProtocolVersion arg0 ) { Args . notNull ( arg0 , \"srini_string\" ) ; Args . check ( this . protocol . equals ( arg0 . protocol ) , \"srini_string\" , this , arg0 ) ; int loc0 = getMajor ( ) - arg0 . getMajor ( ) ; if ( loc0 == 0 ) { loc0 = getMinor ( ) - arg0 . getMinor ( ) ; } return loc0 ; }", "nl": "compares this protocol version with another one . only protocol versions with the same protocol name can be compared . this method does not define a total ordering , as it would be required for java.lang.comparable . concode_field_sep String protocol concode_elem_sep int major concode_elem_sep int minor concode_elem_sep long serialVersionUID concode_field_sep int getMinor concode_elem_sep boolean lessEquals concode_elem_sep int hashCode concode_elem_sep boolean isComparable concode_elem_sep boolean equals concode_elem_sep boolean greaterEquals concode_elem_sep int getMajor concode_elem_sep Object clone concode_elem_sep String getProtocol concode_elem_sep String toString concode_elem_sep ProtocolVersion forVersion"}
{"code": "void function ( final OutputStream arg0 ) { final ExecutionDataWriter loc0 = new ExecutionDataWriter ( arg0 ) ; sessionInfos . accept ( loc0 ) ; executionData . accept ( loc0 ) ; }", "nl": "saves the current content into the given output stream . concode_field_sep SessionInfoStore sessionInfos concode_elem_sep ExecutionDataStore executionData concode_field_sep void load concode_elem_sep void load concode_elem_sep SessionInfoStore getSessionInfoStore concode_elem_sep ExecutionDataStore getExecutionDataStore"}
{"code": "boolean function ( String arg0 ) { final String loc0 = arg0 . toLowerCase ( Locale . ROOT ) ; return userFunctions . containsKey ( loc0 ) || dialect . getFunctions ( ) . containsKey ( loc0 ) ; }", "nl": "does this registry contain the named function concode_field_sep Dialect dialect concode_elem_sep Map<String,SQLFunction> userFunctions concode_field_sep SQLFunction findSQLFunction"}
{"code": "UnivPowerSeries < C > function ( int arg0 , Random arg1 ) { return random ( arg0 , 0.7f , arg1 ) ; }", "nl": "generate a random power series with d = 0.7 . concode_field_sep UnivPowerSeries<C> ZERO concode_elem_sep String DEFAULT_NAME concode_elem_sep int truncate concode_elem_sep String var concode_elem_sep int DEFAULT_TRUNCATE concode_elem_sep UnivPowerSeries<C> ONE concode_elem_sep RingFactory<C> coFac concode_elem_sep Random random concode_field_sep UnivPowerSeries<C> getTAN concode_elem_sep boolean isField concode_elem_sep boolean isCommutative concode_elem_sep UnivPowerSeries<C> getSIN concode_elem_sep UnivPowerSeries<C> parse concode_elem_sep UnivPowerSeries<C> parse concode_elem_sep UnivPowerSeries<C> fromPolynomial concode_elem_sep java.math.BigInteger characteristic concode_elem_sep UnivPowerSeries<C> getEXP concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep UnivPowerSeries<C> getONE concode_elem_sep UnivPowerSeries<C> getZERO concode_elem_sep UnivPowerSeries<C> getCOS concode_elem_sep UnivPowerSeries<C> fromInteger concode_elem_sep UnivPowerSeries<C> fromInteger concode_elem_sep String toString concode_elem_sep boolean isAssociative concode_elem_sep UnivPowerSeries<C> copy concode_elem_sep UnivPowerSeries<C> fixPoint"}
{"code": "String function ( int arg0 ) { return doSendApiRequest ( \"srini_string\" , \"srini_string\" + arg0 ) ; }", "nl": "function to get object data by its id concode_field_sep String m_Url concode_elem_sep String m_Key concode_elem_sep String m_Packing concode_elem_sep String m_Language concode_elem_sep String m_Format concode_field_sep String getPacking concode_elem_sep String getLanguage concode_elem_sep void setPacking concode_elem_sep String getObjectsInBoxByBBox concode_elem_sep String getObjectInBox concode_elem_sep String getObjectsInBoxByLatLon concode_elem_sep String doSendApiRequest concode_elem_sep void setFormat concode_elem_sep String getObjectsInPoint concode_elem_sep String getObjectsInBoxByTile concode_elem_sep String getObjectsInBoxByTile concode_elem_sep String getObjectsBySearchQuery concode_elem_sep String getObjectsBySearchQuery concode_elem_sep String getFormat concode_elem_sep void setLanguage"}
{"code": "String function ( Bundle arg0 ) { Validate . notNull ( arg0 , \"srini_string\" ) ; return arg0 . getString ( TOKEN_KEY ) ; }", "nl": "gets the cached token value from a bundle . concode_field_sep String TOKEN_SOURCE_KEY concode_elem_sep long INVALID_BUNDLE_MILLISECONDS concode_elem_sep String TOKEN_KEY concode_elem_sep String PERMISSIONS_KEY concode_elem_sep String EXPIRATION_DATE_KEY concode_elem_sep String DECLINED_PERMISSIONS_KEY concode_elem_sep String LAST_REFRESH_DATE_KEY concode_elem_sep String IS_SSO_KEY concode_elem_sep String USER_FBID_KEY concode_field_sep void putDeclinedPermissions concode_elem_sep long getExpirationMilliseconds concode_elem_sep void putLastRefreshDate concode_elem_sep List<String> getPermissions concode_elem_sep void save concode_elem_sep void clear concode_elem_sep void putToken concode_elem_sep void putSource concode_elem_sep Date getExpirationDate concode_elem_sep boolean hasTokenInformation concode_elem_sep void putPermissions concode_elem_sep void putExpirationMilliseconds concode_elem_sep Bundle load concode_elem_sep long getLastRefreshMilliseconds concode_elem_sep Date getLastRefreshDate concode_elem_sep AccessTokenSource getSource concode_elem_sep void putLastRefreshMilliseconds concode_elem_sep Date getDate concode_elem_sep void putExpirationDate concode_elem_sep void putDate"}
{"code": "String function ( ) { return reason ; }", "nl": "get a description of the reason this os delegate is invalid . concode_field_sep String reason concode_field_sep IWindowService getWindowService concode_elem_sep INativeConditionFactory getConditionFactory concode_elem_sep void invalid concode_elem_sep InvalidOSDelegate forReason concode_elem_sep String toString"}
{"code": "void function ( OverlayContact arg0 , Object arg1 , int arg2 ) { ev . lookupSucceeded ( arg0 , arg1 , arg2 ) ; }", "nl": "called when a lookup previously started succeeded . concode_field_sep FilesharingApplication app concode_elem_sep FSEvents ev concode_field_sep void setFSApplication concode_elem_sep void lookupStarted concode_elem_sep void publishStarted concode_elem_sep void lookupMadeHop concode_elem_sep void publishSucceeded concode_elem_sep FilesharingApplication getFSApplication"}
{"code": "String function ( double arg0 , int arg1 ) { return formatToFixedDecimalPoint ( arg0 , arg1 ) + UNIT_MILLISECONDS ; }", "nl": "formats time as milliseconds with units . concode_field_sep String UNIT_MILLISECONDS concode_elem_sep String UNIT_SECONDS concode_field_sep String format concode_elem_sep String format concode_elem_sep String format concode_elem_sep String formatToFixedDecimalPoint concode_elem_sep String formatSeconds concode_elem_sep String formatSeconds"}
{"code": "int function ( ) { return coveredBranches ; }", "nl": "returns the number of covered branches starting from this instruction . concode_field_sep int coveredBranches concode_elem_sep int line concode_elem_sep Instruction predecessor concode_elem_sep int branches concode_field_sep int getBranches concode_elem_sep void addBranch concode_elem_sep int getLine concode_elem_sep void setPredecessor concode_elem_sep void setCovered"}
{"code": "boolean function ( String arg0 ) { return _binsByUri . containsKey ( arg0 ) ; }", "nl": "returns true if a memorybin with the given uri name already exists in this storage . concode_field_sep int _pageSize concode_elem_sep int DEFAULT_PAGESIZE concode_elem_sep Map<String,Bin> _binsByUri concode_field_sep Bin produceBin concode_elem_sep void rename concode_elem_sep Bin bin concode_elem_sep void bin concode_elem_sep void delete concode_elem_sep Bin open"}
{"code": "boolean function ( ) { while ( tokeniser . nextToken ( ) ) { if ( tokeniser . getTokenType ( ) == TokenType . COMMENT ) continue ; return true ; } return false ; }", "nl": "reads the next token skipping over the comments . concode_field_sep int COMMAND_TYPE concode_elem_sep PRTokeniser tokeniser concode_field_sep PdfObject readPRObject concode_elem_sep void setTokeniser concode_elem_sep PdfArray readArray concode_elem_sep ArrayList<PdfObject> parse concode_elem_sep PdfDictionary readDictionary concode_elem_sep PRTokeniser getTokeniser"}
{"code": "boolean function ( long arg0 ) { final AllocationOutcome loc0 = allocate ( arg0 , true , true ) ; return loc0 . isOk ( ) ; }", "nl": "increase the accounting . returns whether the allocation fit within limits . concode_field_sep Accountant parent concode_elem_sep AtomicLong allocationLimit concode_elem_sep AtomicLong peakAllocation concode_elem_sep long reservation concode_elem_sep boolean ok concode_elem_sep AtomicLong locallyHeldMemory concode_field_sep void releaseBytes concode_elem_sep void updatePeak concode_elem_sep AllocationOutcome allocateBytes concode_elem_sep AllocationOutcome allocate concode_elem_sep long getLimit concode_elem_sep void setLimit concode_elem_sep long getPeakMemoryAllocation concode_elem_sep boolean isOk concode_elem_sep long getAllocatedMemory concode_elem_sep void close concode_elem_sep boolean isOverLimit"}
{"code": "boolean function ( T arg0 ) { int loc0 = _top . get ( ) ; for ( int loc1 = loc0 - 1 ; loc1 >= 0 ; loc1 -- ) { if ( _freeStack . get ( loc1 ) == arg0 ) { return true ; } } return false ; }", "nl": "debugging to see if the object has already been freed . concode_field_sep AtomicReferenceArray<T> _freeStack concode_elem_sep AtomicInteger _top concode_field_sep boolean allowFree concode_elem_sep T allocate concode_elem_sep void freeCareful concode_elem_sep boolean free"}
{"code": "FileLoggerModule function ( ) { LOGGER . debug ( \"srini_string\" ) ; this . output = new PrintStream ( new FileOutputStream ( OUTPUT_FILE ) ) ; this . error = new PrintStream ( new FileOutputStream ( ERROR_FILE ) ) ; return this ; }", "nl": "following method performs the initialization concode_field_sep String OUTPUT_FILE concode_elem_sep PrintStream error concode_elem_sep PrintStream output concode_elem_sep FileLoggerModule singleton concode_elem_sep String ERROR_FILE concode_elem_sep Logger LOGGER concode_field_sep void unprepare concode_elem_sep void printErrorString concode_elem_sep void printString concode_elem_sep FileLoggerModule getSingleton"}
{"code": "String function ( int arg0 ) { if ( arg0 < 0 ) { return variable ( - arg0 ) ; } if ( arg0 > N ) { return \"srini_string\" ; } return var + arg0 ; }", "nl": "generate variable string . concode_field_sep String var concode_elem_sep int N concode_elem_sep String order concode_field_sep String sum1 concode_elem_sep String varList concode_elem_sep String varList concode_elem_sep String polyList concode_elem_sep String sumUm concode_elem_sep void main concode_elem_sep String toString"}
{"code": "boolean function ( ) { return operations . isCommandAvailable ( ) ; }", "nl": "this method is optional . it allows automatic command hiding in situations when the command should not be visible . for example the ` entity ' command will not be made available before the user has defined his persistence settings in the roo shell or directly in the project . you can define multiple methods annotated with cliavailabilityindicator if your commands have differingvisibility requirements . concode_field_sep TypicalsecurityOperations operations concode_field_sep String setup"}
{"code": "String function ( ) { if ( this . port != - 1 ) { final StringBuilder loc0 = new StringBuilder ( this . hostname . length ( ) + 6 ) ; loc0 . append ( this . hostname ) ; loc0 . append ( \"srini_string\" ) ; loc0 . append ( Integer . toString ( this . port ) ) ; return loc0 . toString ( ) ; } else { return this . hostname ; } }", "nl": "obtains the host string , without scheme prefix . concode_field_sep String hostname concode_elem_sep InetAddress address concode_elem_sep String lcHostname concode_elem_sep int port concode_elem_sep long serialVersionUID concode_elem_sep String schemeName concode_elem_sep String DEFAULT_SCHEME_NAME concode_field_sep int getPort concode_elem_sep String getHostName concode_elem_sep int hashCode concode_elem_sep String toURI concode_elem_sep boolean equals concode_elem_sep Object clone concode_elem_sep InetAddress getAddress concode_elem_sep String toString concode_elem_sep String getSchemeName"}
{"code": "void function ( boolean arg0 , boolean arg1 ) { perform ( arg0 , false , arg1 ) ; }", "nl": "must be called in the ui thread . concode_field_sep Change fChange concode_elem_sep int fSaveMode concode_elem_sep IRunnableContext fExecContext concode_elem_sep boolean fForked concode_elem_sep boolean fForkChangeExecution concode_elem_sep Shell fParent concode_elem_sep int fStopSeverity concode_elem_sep PerformChangeOperation fPerformChangeOperation concode_elem_sep Refactoring fRefactoring concode_field_sep boolean showStatusDialog concode_elem_sep void run"}
{"code": "void function ( ) { Assert . assertTrue ( new Tag ( \"srini_string\" ) . compareTag ( new Tag ( \"srini_string\" ) ) ) ; }", "nl": "compare equal tag names . concode_field_sep PlaceHolder placeHolder concode_field_sep void validateChildrenNotNull concode_elem_sep void compareFalse concode_elem_sep void validateParentSetOnAdd concode_elem_sep void compareFalseTagAndNS concode_elem_sep void validateAttributesNotNull concode_elem_sep void validateCssNotNull concode_elem_sep void compareTrueNS concode_elem_sep void validateChildNotSetOnSetParent concode_elem_sep void compareFalseNS"}
{"code": "List < Tt > function ( List < Ts > arg0 , Transformer < Ts , Tt > arg1 ) { List < Tt > loc0 = new ArrayList < Tt > ( arg0 . size ( ) ) ; for ( Ts loc1 : arg0 ) loc0 . add ( arg1 . transform ( loc1 ) ) ; return loc0 ; }", "nl": "transforms a list into another one , element by element , given a transformer . concode_field_sep PlaceHolder placeHolder concode_field_sep void filter concode_elem_sep void copyNSortedAndFiltered concode_elem_sep void filterMap concode_elem_sep void copyNSorted concode_elem_sep double getQuantile concode_elem_sep void splitMap concode_elem_sep List<T> getRandomPartFrom concode_elem_sep E getRandomEntry concode_elem_sep E getRandomEntry concode_elem_sep void copyUntilFull"}
{"code": "void function ( final ExecutionData arg0 ) { final Long loc0 = Long . valueOf ( arg0 . getId ( ) ) ; final ExecutionData loc1 = entries . get ( loc0 ) ; if ( loc1 == null ) { entries . put ( loc0 , arg0 ) ; names . add ( arg0 . getName ( ) ) ; } else { loc1 . merge ( arg0 ) ; } }", "nl": "adds the given executiondata object into the store . if there isalready execution data with this same class id , this structure is merged with the given one . concode_field_sep Map<Long,ExecutionData> entries concode_elem_sep Set<String> names concode_field_sep boolean contains concode_elem_sep void subtract concode_elem_sep void subtract concode_elem_sep ExecutionData get concode_elem_sep ExecutionData get concode_elem_sep void reset concode_elem_sep Collection<ExecutionData> getContents concode_elem_sep void visitClassExecution concode_elem_sep void accept"}
{"code": "Message function ( ) { Message loc1 = null ; try { loc1 = blkQueue . poll ( ) ; } catch ( Exception loc0 ) { LOGGER . error ( loc0 . getMessage ( ) ) ; } return loc1 ; }", "nl": "all the messages will be retrieved by the serviceexecutor by calling this method and process them . retrieves and removes the head of this queue , or returns null if this queue is empty . concode_field_sep BlockingQueue<Message> blkQueue concode_elem_sep Logger LOGGER concode_field_sep void submitMsg"}
{"code": "void function ( ) { for ( int loc0 = 0 ; loc0 < larnacaAirportNumberOfRunways ; loc0 ++ ) if ( Scenario . getRunwaysArray ( ) [ loc0 ] . isRunwayOccupied ( ) ) { Scenario . getRunwaysArray ( ) [ loc0 ] . setRunwayOccupied ( false ) ; break ; } }", "nl": "free up runway concode_field_sep int larnacaAirportNumberOfRunways concode_elem_sep Passenger[] passengersArray concode_elem_sep Airport larnacaAirport concode_elem_sep Plane[] planesArray concode_elem_sep Flight[] flightsArray concode_elem_sep int numberOfPassengers concode_elem_sep int numberOfFlightAttributes concode_elem_sep Runway[] runwaysArray concode_elem_sep int numberOfFlights concode_field_sep void setLarnacaAirport concode_elem_sep void setPassengersArray concode_elem_sep void initializeLarnacaAirport concode_elem_sep void setFlightsArray concode_elem_sep Passenger[] getPassengersArray concode_elem_sep Object[][] getArrivalsOrDeparturesList concode_elem_sep void loadFromFile concode_elem_sep void initializeRunwaysArray concode_elem_sep Plane[] getPlanesArray concode_elem_sep void setRunwaysArray concode_elem_sep Object[][] getFlightData concode_elem_sep void initializePlanesArray concode_elem_sep void setPlanesArray concode_elem_sep void saveToFile concode_elem_sep void initializeFlightsArray concode_elem_sep boolean checkForFreeRunways concode_elem_sep void initializePassengersArray concode_elem_sep Airport getLarnacaAirport concode_elem_sep Object[] getArrivalsOrDeparturesRecord concode_elem_sep String[] getListOfAllFlightCodes concode_elem_sep Runway[] getRunwaysArray concode_elem_sep Flight[] getFlightsArray concode_elem_sep Object[] getFlightsRow"}
{"code": "Landmark function ( ) { String [ ] loc0 = packedString . split ( SEP_CHARACTER ) ; id = Integer . parseInt ( loc0 [ 0 ] ) ; name = loc0 [ 1 ] ; return this ; }", "nl": "unpack string sent from server into id and landmarkname used for search and displaying landmarks in listview concode_field_sep String sec_id concode_elem_sep double latitude concode_elem_sep String name concode_elem_sep int cat_id concode_elem_sep String packedString concode_elem_sep String description concode_elem_sep String SEP_CHARACTER concode_elem_sep int id concode_elem_sep double longitude concode_field_sep void setName concode_elem_sep void setLatitude concode_elem_sep String getName concode_elem_sep double getLongitude concode_elem_sep double getLatitude concode_elem_sep void setId concode_elem_sep Landmark fullUnpack concode_elem_sep int getId concode_elem_sep String toString concode_elem_sep void setDescription concode_elem_sep void setLongitude concode_elem_sep String getDescription"}
{"code": "void function ( StringBuilder arg0 , int arg1 , int arg2 ) { char loc0 = arg0 . charAt ( arg1 ) ; arg0 . setCharAt ( arg1 , arg0 . charAt ( arg2 ) ) ; arg0 . setCharAt ( arg2 , loc0 ) ; }", "nl": "swaps two characters in a stringbuilder object concode_field_sep int MATRA_E concode_elem_sep int LETTER_HA concode_elem_sep int HALANTA concode_elem_sep int MATRA_AI concode_elem_sep int MATRA_HLR concode_elem_sep int MATRA_I concode_elem_sep int LETTER_A concode_elem_sep int LETTER_KA concode_elem_sep int LETTER_AU concode_elem_sep int MATRA_AA concode_elem_sep char[] langTable concode_elem_sep int MATRA_HLRR concode_field_sep boolean IsSwaraMatra concode_elem_sep String process concode_elem_sep boolean IsSwaraLetter concode_elem_sep boolean IsVyanjana concode_elem_sep boolean isRTL"}
{"code": "void function ( ) { getListIterator ( ) . remove ( ) ; }", "nl": "invokes the underlying listiterator #remove method . concode_field_sep ListIterator iterator concode_field_sep void add concode_elem_sep Object next concode_elem_sep void set concode_elem_sep Object previous concode_elem_sep boolean hasPrevious concode_elem_sep boolean hasNext concode_elem_sep ListIterator getListIterator concode_elem_sep int nextIndex concode_elem_sep int previousIndex concode_elem_sep void setListIterator"}
{"code": "int function ( int arg0 ) { return ( ( 600 * arg0 + 99 ) % 2147483647 ) % ( hashArray . length ) ; }", "nl": "converts a hash code in the range integer.min _ value ... integer.max _ value to a value in the range 0 ... size of hash table - 1 . this function should have package protection so we can test it , and should be used by insert , find , and remove . concode_field_sep int entryNum concode_elem_sep List[] hashArray concode_field_sep int numCollisions concode_elem_sep int findBuckets concode_elem_sep int size concode_elem_sep Entry find concode_elem_sep void makeEmpty concode_elem_sep boolean isEmpty concode_elem_sep Entry insert concode_elem_sep void main concode_elem_sep int findPrimes concode_elem_sep Entry remove"}
{"code": "void function ( byte arg0 ) { ensureCapacity ( length + 1 ) ; buffer [ length ++ ] = arg0 ; }", "nl": "appends a byte to the buffer . concode_field_sep String encoding concode_elem_sep int length concode_elem_sep byte[] buffer concode_field_sep InputStream getByteStream concode_elem_sep String getEncoding concode_elem_sep byte byteAt concode_elem_sep int length concode_elem_sep void ensureCapacity concode_elem_sep int charAt"}
{"code": "long function ( int arg0 ) { if ( list . isEmpty ( ) ) { throw new EmptyStackException ( ) ; } return list . get ( list . size ( ) - arg0 - 1 ) ; }", "nl": "return the n'th long down the stack , where 0 is the top element and size -1 is the bottom element . concode_field_sep ArrayLongList list concode_field_sep long pop concode_elem_sep int search concode_elem_sep int size concode_elem_sep long get concode_elem_sep void clear concode_elem_sep long push concode_elem_sep boolean empty"}
{"code": "void function ( StyleListener arg0 ) { listeners . remove ( arg0 ) ; }", "nl": "removes the first occurrence of the given listener . concode_field_sep Object STATE_EDITABLE concode_elem_sep StyleProvider provider concode_elem_sep List listeners concode_elem_sep Object UNDEFINED concode_elem_sep Object STATE_READ_ONLY concode_elem_sep StyleListener providerListener concode_field_sep Object getStyle concode_elem_sep void setStyleProvider concode_elem_sep void addStyleListener concode_elem_sep Object getStyleState concode_elem_sep void setStyle concode_elem_sep void styleChanged concode_elem_sep void propogateChange"}
{"code": "Criteria function ( boolean arg0 ) { this . criteriaType = RelationalOperator . EXISTS ; this . right = ValueNode . toValueNode ( arg0 ) ; this . left = left . asPathNode ( ) . asExistsCheck ( arg0 ) ; return this ; }", "nl": "check for existence or lack thereof of a field . concode_field_sep List<Criteria> criteriaChain concode_elem_sep ValueNode left concode_elem_sep ValueNode right concode_elem_sep RelationalOperator criteriaType concode_field_sep Criteria lt concode_elem_sep Criteria type concode_elem_sep String prefixPath concode_elem_sep Criteria empty concode_elem_sep void checkComplete concode_elem_sep Criteria nin concode_elem_sep Criteria nin concode_elem_sep Criteria and concode_elem_sep Criteria gte concode_elem_sep Criteria create concode_elem_sep Criteria where concode_elem_sep Criteria where concode_elem_sep Criteria lte concode_elem_sep Criteria all concode_elem_sep Criteria all concode_elem_sep boolean apply concode_elem_sep Criteria in concode_elem_sep Criteria in concode_elem_sep Criteria is concode_elem_sep Criteria parse concode_elem_sep Criteria eq concode_elem_sep Criteria gt concode_elem_sep Criteria matches concode_elem_sep Criteria regex concode_elem_sep Criteria contains concode_elem_sep Criteria size concode_elem_sep Criteria ne concode_elem_sep String toString concode_elem_sep Collection<RelationalExpressionNode> toRelationalExpressionNodes concode_elem_sep Criteria notEmpty"}
{"code": "String [ ] function ( String arg0 , String arg1 ) { return getCollectionPropertyMapping ( arg0 ) . toColumns ( arg1 , CollectionPropertyNames . COLLECTION_ELEMENTS ) ; }", "nl": "retrieves the column names corresponding to the collection elements for the given collection role . concode_field_sep SessionFactoryImplementor sfi concode_elem_sep Map<String,PropertyMapping> collectionPropertyMappingByRole concode_field_sep QueryableCollection getCollectionPersister concode_elem_sep Type getElementType concode_elem_sep JoinSequence createJoinSequence concode_elem_sep JoinSequence createJoinSequence concode_elem_sep Type findFunctionReturnType concode_elem_sep Type findFunctionReturnType concode_elem_sep PropertyMapping getCollectionPropertyMapping concode_elem_sep AssociationType getElementAssociationType concode_elem_sep String getImportedClassName concode_elem_sep SQLFunction requireSQLFunction concode_elem_sep SessionFactoryImplementor getFactory concode_elem_sep boolean hasPhysicalDiscriminatorColumn concode_elem_sep EntityPersister requireClassPersister concode_elem_sep QueryableCollection requireQueryableCollection concode_elem_sep String[][] generateColumnNames concode_elem_sep String getIdentifierOrUniqueKeyPropertyName concode_elem_sep int getColumnSpan concode_elem_sep String getAssociatedEntityName concode_elem_sep JoinSequence createCollectionJoinSequence concode_elem_sep Queryable findQueryableUsingImports concode_elem_sep Queryable findQueryableUsingImports concode_elem_sep boolean isStrictJPAQLComplianceEnabled concode_elem_sep EntityPersister findEntityPersisterByName concode_elem_sep SQLFunction findSQLFunction"}
{"code": "void function ( int arg0 ) { grid = new int [ arg0 ] [ arg0 ] ; }", "nl": "reset grid . concode_field_sep boolean[][] newCell concode_elem_sep int[][] grid concode_elem_sep boolean[][] hasCombined concode_field_sep boolean canMoveLeft concode_elem_sep int getCell concode_elem_sep boolean canMoveDown concode_elem_sep void generateNextCell concode_elem_sep void moveDown concode_elem_sep void resetMoved concode_elem_sep int getSize concode_elem_sep boolean canMoveUp concode_elem_sep boolean canMoveRight concode_elem_sep void moveRight concode_elem_sep boolean isGridFull concode_elem_sep void moveLeft concode_elem_sep boolean IsCellNew concode_elem_sep void initializeGame concode_elem_sep void moveUp"}
{"code": "void function ( AnimatedNode arg0 ) { }", "nl": "subclasses may want to override this method in order to store a reference to the parent of a given node that can then be used to calculate current node 's value in #update . in that case it is important to also override #ondetachedfromnode to clear thatreference once current node gets detached . concode_field_sep int mTag concode_elem_sep int DEFAULT_ANIMATED_NODE_CHILD_COUNT concode_elem_sep int INITIAL_BFS_COLOR concode_elem_sep List<AnimatedNode> mChildren concode_elem_sep int mActiveIncomingNodes concode_elem_sep int mBFSColor concode_field_sep void onDetachedFromNode concode_elem_sep void removeChild concode_elem_sep void update concode_elem_sep void addChild"}
{"code": "JdrReport function ( CLI arg0 , String arg1 , String arg2 , int arg3 ) { return new JdrRunner ( arg0 , arg1 , arg2 , arg3 , null , null ) . collect ( ) ; }", "nl": "collect a jdr report when run outside the application server . concode_field_sep InjectedValue<ServerEnvironment> serverEnvironmentValue concode_elem_sep ServerEnvironment serverEnvironment concode_elem_sep ExecutorService executorService concode_elem_sep ServiceName SERVICE_NAME concode_elem_sep ModelControllerClient controllerClient concode_elem_sep InjectedValue<ModelController> modelControllerValue concode_field_sep JdrReportService getValue concode_elem_sep void stop concode_elem_sep ServiceController<JdrReportCollector> addService concode_elem_sep void start concode_elem_sep JdrReport collect"}
{"code": "void function ( ) { TopLevelBean loc0 = lookup ( \"srini_string\" , TopLevelBean . class ) ; loc0 . induceCreationViaJNDILookup ( ) ; }", "nl": "with both deep and shallow extended persistence context inheritance , a bean creating another local bean via jndi lookup will also use the extended persistence context inheritance rules . this tests that two levels of jndi lookup does use the same xpc . see http://java.net/projects/jpa-spec/lists/jsr338-experts/archive/2012-06/message/28 for more details than the jpa 2.0 specification includes . concode_field_sep String ARCHIVE_NAME concode_elem_sep InitialContext iniCtx concode_field_sep T lookup concode_elem_sep void testShouldGetEjbExceptionBecauseEPCIsAddedToTxAfterPc concode_elem_sep void testChildInheritanceFromParentExtendedPersistenceContextViaBusinessMethodUsingJndiLookup concode_elem_sep Archive<?> deploy"}
{"code": "String [ ] function ( QueryCondition [ ] arg0 ) { String [ ] loc0 = new String [ arg0 . length ] ; for ( int loc1 = 0 ; loc1 < loc0 . length ; loc1 ++ ) loc0 [ loc1 ] = arg0 [ loc1 ] . getColumnName ( ) + \"srini_string\" + arg0 [ loc1 ] . getOperator ( ) . toString ( ) + \"srini_string\" ; return loc0 ; }", "nl": "construye la clausula where de un statement a partir de las condiciones especificadas . concode_field_sep DataSource ds concode_field_sep Object[] serializeObjectForIncremental concode_elem_sep String[] getColumnNames concode_elem_sep String getIncrementalColumnName concode_elem_sep String getTableName concode_elem_sep void update concode_elem_sep void insert concode_elem_sep Object[] serializeKey concode_elem_sep QueryCondition[] getConditionsFromKey concode_elem_sep String[] getKeyColumnNames concode_elem_sep List<T> findAll concode_elem_sep void delete concode_elem_sep T buildObject concode_elem_sep T findById concode_elem_sep Object[] serializeObject concode_elem_sep boolean truncateTable concode_elem_sep List<T> findByConditions concode_elem_sep K getKeyFromObject"}
{"code": "void function ( String arg0 ) { this . city = arg0 ; }", "nl": "this method sets the value of the database column sys_ip_area . city concode_field_sep String areaCode concode_elem_sep String IPCODE_UNKNOWN concode_elem_sep String city concode_elem_sep String province concode_elem_sep String edu concode_elem_sep String district concode_elem_sep String company concode_elem_sep Date createTime concode_elem_sep Long endIp concode_elem_sep String owner concode_elem_sep Long startIp concode_elem_sep String country concode_field_sep boolean isIp concode_elem_sep void setCountry concode_elem_sep Date getCreateTime concode_elem_sep String getCountry concode_elem_sep void setProvince concode_elem_sep long valueOfIpv4 concode_elem_sep String getEdu concode_elem_sep Long getStartIp concode_elem_sep Long getEndIp concode_elem_sep String getOwner concode_elem_sep void setStartIp concode_elem_sep void setEndIp concode_elem_sep void setOwner concode_elem_sep String getStartIpv4 concode_elem_sep String getEndIpv4 concode_elem_sep String getAreaCode concode_elem_sep String ipv4 concode_elem_sep String getDistrict concode_elem_sep String getProvince concode_elem_sep void setDistrict concode_elem_sep void setCompany concode_elem_sep String getCity concode_elem_sep void setAreaCode concode_elem_sep void setCreateTime concode_elem_sep String getCompany concode_elem_sep void setEdu concode_elem_sep String toString"}
{"code": "void function ( String arg0 ) { this . fileName = arg0 ; }", "nl": "sets the path of the file to be loaded , to the given value . concode_field_sep boolean loaded concode_elem_sep String fileName concode_field_sep String loadData concode_elem_sep boolean fileExists concode_elem_sep String getFileName concode_elem_sep boolean isLoaded"}
{"code": "void function ( String arg0 ) { ExtendedJSONObject loc0 = getObsoleteIds ( ) ; loc0 . put ( arg0 , HealthReportConstants . DELETION_ATTEMPTS_PER_KNOWN_TO_BE_ON_SERVER_DOCUMENT_ID ) ; setObsoleteIds ( loc0 ) ; }", "nl": "track the given document id for eventual obsolescence and deletion , and give it priority since we know this id has made it to the server , and we definitely do n't want to orphan it . concode_field_sep SharedPreferences sharedPrefs concode_elem_sep String LOG_TAG concode_field_sep ExtendedJSONObject getObsoleteIds concode_elem_sep int compare concode_elem_sep int numberOfObsoleteIds concode_elem_sep boolean hasObsoleteIds concode_elem_sep void removeObsoleteId concode_elem_sep void setObsoleteIds concode_elem_sep void purgeObsoleteIds concode_elem_sep void limitObsoleteIds concode_elem_sep void decrementObsoleteId concode_elem_sep Collection<String> getBatchOfObsoleteIds concode_elem_sep String getNextObsoleteId concode_elem_sep void addObsoleteId concode_elem_sep void decrementObsoleteIdAttempts concode_elem_sep void decrementObsoleteIdAttempts"}
{"code": "int function ( boolean arg0 ) { for ( int loc0 = list . size ( ) - 1 ; loc0 >= 0 ; loc0 -- ) { if ( list . get ( loc0 ) == arg0 ) { return list . size ( ) - loc0 ; } } return - 1 ; }", "nl": "returns the 1-based position where a value is on this stack . if the value occurs as an item in this stack , this method returns the distance from the top of the stack of the occurrence nearest the top of the stack ; the topmost item on the stack is considered to be at distance 1 . concode_field_sep ArrayBooleanList list concode_field_sep boolean pop concode_elem_sep int size concode_elem_sep boolean get concode_elem_sep void clear concode_elem_sep boolean push concode_elem_sep boolean empty concode_elem_sep boolean peek concode_elem_sep boolean peek"}
{"code": "Local < C > function ( String arg0 ) { GenPolynomial < C > loc0 = ring . parse ( arg0 ) ; return new Local < C > ( this , loc0 ) ; }", "nl": "parse local from string . concode_field_sep Logger logger concode_elem_sep Ideal<C> ideal concode_elem_sep GenPolynomialRing<C> ring concode_elem_sep int isField concode_field_sep Local<C> random concode_elem_sep Local<C> random concode_elem_sep Local<C> random concode_elem_sep int hashCode concode_elem_sep boolean isField concode_elem_sep boolean equals concode_elem_sep Local<C> getONE concode_elem_sep boolean isCommutative concode_elem_sep Local<C> getZERO concode_elem_sep Local<C> fromInteger concode_elem_sep Local<C> fromInteger concode_elem_sep boolean isAssociative concode_elem_sep String toString concode_elem_sep Local<C> copy concode_elem_sep java.math.BigInteger characteristic"}
{"code": "String function ( Branch arg0 , DataFlowInput arg1 ) { return ( arg0 . getClassName ( ) + \"srini_string\" + arg0 . getMethodName ( ) + \"srini_string\" + arg0 . getLineNumber ( ) ) ; }", "nl": "returns the df -- branch information in the form class : method : line-number concode_field_sep boolean overwrite concode_elem_sep boolean debug_df concode_elem_sep String outputfile concode_elem_sep String scratchdir concode_field_sep Sequence getSingletonElt concode_elem_sep Variable find_value_by_name concode_elem_sep void main concode_elem_sep void run_cmd concode_elem_sep String getDriverCode"}
{"code": "void function ( ImagePanel arg0 ) { arg0 . removeMouseMotionListener ( colorDialog ) ; }", "nl": "unregister an image panel concode_field_sep ColorExplorerDialog colorDialog concode_elem_sep Stevironment instance concode_elem_sep ColorExplorerMenuItem colorExplorerMenuItem concode_field_sep void registerImagePanel concode_elem_sep ColorExplorerMenuItem getColorExplorerMenuItem concode_elem_sep Stevironment getInstance"}
{"code": "AlgebraicNumber < C > function ( Reader arg0 ) { throw new RuntimeException ( \"srini_string\" ) ; }", "nl": "parse algebraicnumber from reader . concode_field_sep GenPolynomialRing<C> ring concode_elem_sep int isField concode_elem_sep GenPolynomial<C> modul concode_field_sep boolean isField concode_elem_sep boolean isCommutative concode_elem_sep AlgebraicNumber<C> interpolate concode_elem_sep java.math.BigInteger characteristic concode_elem_sep AlgebraicNumber<C> random concode_elem_sep AlgebraicNumber<C> random concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep AlgebraicNumber<C> getONE concode_elem_sep AlgebraicNumber<C> getZERO concode_elem_sep AlgebraicNumber<C> fromInteger concode_elem_sep AlgebraicNumber<C> fromInteger concode_elem_sep boolean isAssociative concode_elem_sep String toString concode_elem_sep AlgebraicNumber<C> copy concode_elem_sep AlgebraicNumber<C> chineseRemainder"}
{"code": "Integer function ( T arg0 ) { Integer loc0 = nodePosition . get ( arg0 ) ; if ( loc0 == null ) { return null ; } else { return allNodes . get ( loc0 ) . weight ; } }", "nl": "get the weight of given key concode_field_sep Map<T,Integer> nodePosition concode_elem_sep List<Node> allNodes concode_elem_sep int weight concode_elem_sep T key concode_field_sep void add concode_elem_sep T min concode_elem_sep void printPositionMap concode_elem_sep void swap concode_elem_sep void updatePositionMap concode_elem_sep Node extractMinNode concode_elem_sep void printHeap concode_elem_sep void main concode_elem_sep T extractMin concode_elem_sep void decrease concode_elem_sep boolean containsData concode_elem_sep boolean empty"}
{"code": "Comparator function ( boolean arg0 ) { return BooleanComparator . getBooleanComparator ( arg0 ) ; }", "nl": "gets a comparator that can sort boolean objects . the parameter specifies whether true or false is sorted first . the comparator throws nullpointerexception if a null value is compared . concode_field_sep Comparator NATURAL_COMPARATOR concode_field_sep Comparator transformedComparator concode_elem_sep Object min concode_elem_sep Comparator reversedComparator concode_elem_sep Object max concode_elem_sep Comparator naturalComparator concode_elem_sep Comparator chainedComparator concode_elem_sep Comparator chainedComparator concode_elem_sep Comparator chainedComparator concode_elem_sep Comparator nullHighComparator concode_elem_sep Comparator nullLowComparator"}
{"code": "Map < String , ByteBuffer > function ( ) { if ( requestCallMeta == null ) { requestCallMeta = new HashMap < String , ByteBuffer > ( ) ; } return requestCallMeta ; }", "nl": "this is an access method for the per-call state provided by the client to the server . concode_field_sep Map<String,ByteBuffer> requestCallMeta concode_elem_sep Map<String,ByteBuffer> responseCallMeta concode_elem_sep Object response concode_elem_sep List<ByteBuffer> requestPayload concode_elem_sep List<ByteBuffer> responsePayload concode_elem_sep HandshakeRequest handshakeRequest concode_elem_sep HandshakeResponse handshakeResponse concode_elem_sep Exception error concode_elem_sep Message message concode_field_sep void setResponseCallMeta concode_elem_sep List<ByteBuffer> getRequestPayload concode_elem_sep void setRequestHandshakeMeta concode_elem_sep Map<String,ByteBuffer> requestHandshakeMeta concode_elem_sep void setRequestPayload concode_elem_sep void setResponsePayload concode_elem_sep Message getMessage concode_elem_sep void setResponse concode_elem_sep void setResponseHandshakeMeta concode_elem_sep void setRequestCallMeta concode_elem_sep Exception error concode_elem_sep void setMessage concode_elem_sep void setHandshakeRequest concode_elem_sep Map<String,ByteBuffer> responseHandshakeMeta concode_elem_sep boolean isError concode_elem_sep Map<String,ByteBuffer> responseCallMeta concode_elem_sep HandshakeRequest getHandshakeRequest concode_elem_sep Object response concode_elem_sep void setError concode_elem_sep void setHandshakeResponse concode_elem_sep HandshakeResponse getHandshakeResponse concode_elem_sep List<ByteBuffer> getResponsePayload"}
{"code": "Getcontenttype function ( ) { return getcontenttype ; }", "nl": "gets the value of the getcontenttype property . concode_field_sep Owner owner concode_elem_sep PrincipalURL principalURL concode_elem_sep Creationdate creationdate concode_elem_sep Getlastmodified getlastmodified concode_elem_sep Getcontentlanguage getcontentlanguage concode_elem_sep Getetag getetag concode_elem_sep Getcontentlength getcontentlength concode_elem_sep SupportedReportSet supportedReportSet concode_elem_sep Acl acl concode_elem_sep PrincipalCollectionSet principalCollectionSet concode_elem_sep Resourcetype resourcetype concode_elem_sep List<Element> any concode_elem_sep QuotaUsedBytes quotaUsedBytes concode_elem_sep Lockdiscovery lockdiscovery concode_elem_sep QuotaAvailableBytes quotaAvailableBytes concode_elem_sep Getcontenttype getcontenttype concode_elem_sep Displayname displayname concode_elem_sep Supportedlock supportedlock concode_elem_sep Group group concode_field_sep PrincipalCollectionSet getPrincipalCollectionSet concode_elem_sep Creationdate getCreationdate concode_elem_sep void setCreationdate concode_elem_sep void setQuotaAvailableBytes concode_elem_sep Getcontentlength getGetcontentlength concode_elem_sep Displayname getDisplayname concode_elem_sep void setGetcontenttype concode_elem_sep void setAcl concode_elem_sep Owner getOwner concode_elem_sep Getlastmodified getGetlastmodified concode_elem_sep Supportedlock getSupportedlock concode_elem_sep void setLockdiscovery concode_elem_sep void setOwner concode_elem_sep SupportedReportSet getSupportedReportSet concode_elem_sep void setSupportedReportSet concode_elem_sep void setSupportedlock concode_elem_sep void setPrincipalCollectionSet concode_elem_sep QuotaUsedBytes getQuotaUsedBytes concode_elem_sep Acl getAcl concode_elem_sep void setQuotaUsedBytes concode_elem_sep void setPrincipalURL concode_elem_sep PrincipalURL getPrincipalURL concode_elem_sep void setGetetag concode_elem_sep Resourcetype getResourcetype concode_elem_sep Getcontentlanguage getGetcontentlanguage concode_elem_sep void setResourcetype concode_elem_sep Getetag getGetetag concode_elem_sep void setGroup concode_elem_sep Group getGroup concode_elem_sep void setGetcontentlanguage concode_elem_sep Lockdiscovery getLockdiscovery concode_elem_sep void setGetlastmodified concode_elem_sep QuotaAvailableBytes getQuotaAvailableBytes concode_elem_sep void setDisplayname concode_elem_sep void setGetcontentlength concode_elem_sep List<Element> getAny"}
{"code": "Location function ( Element arg0 ) { int loc0 = Integer . parseInt ( arg0 . getAttribute ( \"srini_string\" ) ) ; char loc1 = arg0 . getAttribute ( \"srini_string\" ) . charAt ( 0 ) ; return new Location ( loc0 , loc1 ) ; }", "nl": "converts an element representing a location into a location object . concode_field_sep InputStreamGetter input concode_elem_sep boolean isValid concode_elem_sep Difficulty puzzleDifficulty concode_elem_sep int puzzleSize concode_field_sep boolean matchesSchema concode_elem_sep KenKenPuzzle buildPuzzle concode_elem_sep int getPuzzleSize concode_elem_sep boolean isValid concode_elem_sep Schema compileSchema concode_elem_sep KenKenPuzzle getKenKenPuzzle concode_elem_sep Grid parseGrid concode_elem_sep Difficulty getPuzzleDifficulty concode_elem_sep int getSize concode_elem_sep void setLoaderInfo concode_elem_sep Element getSolutionBoardElement concode_elem_sep Cage parseCage concode_elem_sep int getDifficulty"}
{"code": "void function ( String arg0 ) { this . localeKey = arg0 ; }", "nl": "set the context attribute key under which we will store the request locale . concode_field_sep String localeKey concode_field_sep String getLocaleKey concode_elem_sep boolean execute concode_elem_sep Locale getLocale"}
{"code": "boolean function ( ) { return true ; }", "nl": "query if this ring is a field . concode_field_sep RingFactory<C> ring concode_elem_sep boolean debug concode_elem_sep Logger logger concode_field_sep Quotient<C> random concode_elem_sep Quotient<C> random concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep Quotient<C> getONE concode_elem_sep boolean isCommutative concode_elem_sep Quotient<C> getZERO concode_elem_sep Quotient<C> fromInteger concode_elem_sep Quotient<C> fromInteger concode_elem_sep boolean isAssociative concode_elem_sep String toString concode_elem_sep Quotient<C> parse concode_elem_sep Quotient<C> parse concode_elem_sep Quotient<C> copy concode_elem_sep java.math.BigInteger characteristic"}
{"code": "SequenceCommandLabelProvider function ( ) { return new SequenceCommandLabelProvider ( ) ; }", "nl": "override to inject . concode_field_sep ISemanticEvent[] _selection concode_elem_sep IEventSequenceCommandFactory _commandFactory concode_elem_sep ISemanticEvent[] EMPTY_SELECTION concode_elem_sep List _listeners concode_elem_sep IEventSequence _sequence concode_elem_sep ActionProvider _actionProvider concode_field_sep List getListeners concode_elem_sep void select concode_elem_sep void sessionStarted concode_elem_sep IAction[] getActions concode_elem_sep void clickDelete concode_elem_sep IEventSequence remove concode_elem_sep ICommandStack getCommandStack concode_elem_sep ISemanticEvent[] getEvents concode_elem_sep boolean canUndo concode_elem_sep IEventSequence removeAll concode_elem_sep IEventSequence removeAll concode_elem_sep void undo concode_elem_sep void addListener concode_elem_sep IEventGroup group concode_elem_sep IEventSequence add concode_elem_sep IEventSequence add concode_elem_sep void sessionEnded concode_elem_sep EventSequenceCommandFactory createCommandFactory concode_elem_sep boolean isEmpty concode_elem_sep boolean hasSelection concode_elem_sep ActionProvider getActionProvider concode_elem_sep void removeListener concode_elem_sep IEventSequenceCommandFactory getCommandFactory concode_elem_sep ActionProvider createActionProvider concode_elem_sep ISemanticEvent[] getSelection concode_elem_sep void setSelection concode_elem_sep IEventSequence addAll concode_elem_sep IEventSequence getSequence concode_elem_sep void exec concode_elem_sep void changed"}
{"code": "void function ( Iterator arg0 ) { this . iterator = arg0 ; }", "nl": "sets the iterator for this iterator to use . if iteration has started , this effectively resets the iterator . concode_field_sep Predicate predicate concode_elem_sep Object nextObject concode_elem_sep Iterator iterator concode_elem_sep boolean nextObjectSet concode_field_sep Object next concode_elem_sep Iterator getIterator concode_elem_sep void setPredicate concode_elem_sep Predicate getPredicate concode_elem_sep boolean hasNext concode_elem_sep boolean setNextObject concode_elem_sep void remove"}
{"code": "InputStream function ( ) { return stream ; }", "nl": "returns entity content as a inputstream if set using #setstream java.io.inputstream method . concode_field_sep File file concode_elem_sep boolean gzipCompress concode_elem_sep InputStream stream concode_elem_sep byte[] binary concode_elem_sep String contentEncoding concode_elem_sep boolean chunked concode_elem_sep String text concode_elem_sep List<NameValuePair> parameters concode_elem_sep Serializable serializable concode_elem_sep ContentType contentType concode_field_sep EntityBuilder setBinary concode_elem_sep String getContentEncoding concode_elem_sep boolean isGzipCompress concode_elem_sep EntityBuilder setStream concode_elem_sep String getText concode_elem_sep void clearContent concode_elem_sep EntityBuilder setContentEncoding concode_elem_sep EntityBuilder chunked concode_elem_sep EntityBuilder setSerializable concode_elem_sep File getFile concode_elem_sep EntityBuilder setParameters concode_elem_sep EntityBuilder setParameters concode_elem_sep Serializable getSerializable concode_elem_sep EntityBuilder setFile concode_elem_sep boolean isChunked concode_elem_sep EntityBuilder gzipCompress concode_elem_sep HttpEntity build concode_elem_sep List<NameValuePair> getParameters concode_elem_sep EntityBuilder create concode_elem_sep ContentType getContentType concode_elem_sep ContentType getContentOrDefault concode_elem_sep byte[] getBinary concode_elem_sep EntityBuilder setContentType concode_elem_sep EntityBuilder setText"}
{"code": "void function ( Boolean arg0 ) { this . isTest = arg0 ; }", "nl": "sets the checks if is test . concode_field_sep String errorMessage concode_elem_sep String numberChosen concode_elem_sep String buyerName concode_elem_sep Boolean isTest concode_field_sep String getNumberChosen concode_elem_sep String getBuyerName concode_elem_sep void execute concode_elem_sep String getErrorMessage"}
{"code": "DocumentWrapper function ( DocumentWrapper arg0 ) { return DocumentWrapper . newBuilder ( ) . setDocumentMetadata ( arg0 . getDocumentMetadata ( ) ) . setRowId ( arg0 . getRowId ( ) ) . build ( ) ; }", "nl": "returns the clone of the passed documentwrapper with filled documentwrapper #getdocumentmetadata and documentwrapper #getrowid only concode_field_sep Logger log concode_field_sep List<DocumentWrapper> extractDocumentWrappers concode_elem_sep String getPublicationYear concode_elem_sep Author getAuthor concode_elem_sep List<Author> getAuthors concode_elem_sep List<DocumentProtos.DocumentMetadata> extractDocumentMetadata concode_elem_sep String getMainTitle"}
{"code": "Item function ( ) { Item loc0 = first . item ; first = first . next ; size -- ; if ( isEmpty ( ) ) { last = null ; } return loc0 ; }", "nl": "removing an item . similar to stack . concode_field_sep Node next concode_elem_sep Item item concode_elem_sep Node last concode_elem_sep int size concode_elem_sep Node first concode_field_sep void enqueue concode_elem_sep int size concode_elem_sep boolean isEmpty concode_elem_sep void main"}
{"code": "void function ( Set < IResource > arg0 ) { this . resources = arg0 ; }", "nl": "sets the replicated resources of the neighbor to the given set one-hop replication concode_field_sep TokenBucket queryTokens concode_elem_sep Set<IResource> resources concode_elem_sep ISchedQueue<EnqueuedQuery> relayQueue concode_elem_sep int lastDegreeObserved concode_elem_sep TimeoutSet<Integer> queryUIDsRelayed concode_field_sep ISchedQueue<EnqueuedQuery> getRelayQueue concode_elem_sep TokenBucket getQueryTokenBucket concode_elem_sep void markQueryAsRelayed concode_elem_sep Set<IResource> getResources concode_elem_sep void setLastDegreeObserved concode_elem_sep boolean removeQueryFromCache concode_elem_sep void setRelayQueue concode_elem_sep String toString concode_elem_sep boolean hasRelayedQuery concode_elem_sep int getLastDegreeObserved"}
{"code": "void function ( ) { MyListener . setInvocationCount ( 0 ) ; SLSBCMT loc0 = lookup ( \"srini_string\" , SLSBCMT . class ) ; this . doCMTTest ( loc0 , 3 ) ; }", "nl": "tests that the entity listeners are correctly invoked and have access to the java : comp/ejbcontext when an entity is persisted via a stateless cmt bean concode_field_sep InitialContext iniCtx concode_elem_sep String ARCHIVE_NAME concode_field_sep void testCDICallbackInvoked concode_elem_sep T lookup concode_elem_sep T rawLookup concode_elem_sep void doBMTTest concode_elem_sep void testSLSBBMT concode_elem_sep void doCMTTest concode_elem_sep void testSFSBBMT concode_elem_sep void testSingletonBMT concode_elem_sep void testSingletonCMT concode_elem_sep Archive<?> deploy concode_elem_sep void testSFSBCMT"}
{"code": "void function ( final String arg0 , final String arg1 ) { if ( ! authzEnabled ) { return ; } HivePrivilegeObject loc0 = new HivePrivilegeObject ( HivePrivilegeObjectType . TABLE_OR_VIEW , arg0 , arg1 ) ; authorize ( HiveOperationType . QUERY , ImmutableList . of ( loc0 ) , Collections . < HivePrivilegeObject > emptyList ( ) , \"srini_string\" ) ; }", "nl": "check authorization for `` read table '' for given db.table . a hiveaccesscontrolexception is thrownfor illegal access . concode_field_sep HiveAuthorizer authorizerV2 concode_elem_sep org.slf4j.Logger logger concode_elem_sep boolean authzEnabled concode_field_sep void authorizeShowTables concode_elem_sep void authorizeShowDatabases concode_elem_sep void authorize"}
{"code": "Allprop function ( ) { return allprop ; }", "nl": "gets the value of the allprop property . concode_field_sep Prop prop concode_elem_sep Allprop allprop concode_elem_sep Propname propname concode_field_sep void setPropname concode_elem_sep void setProp concode_elem_sep Prop getProp concode_elem_sep void setAllprop concode_elem_sep Propname getPropname"}
{"code": "boolean function ( Obstacles arg0 ) { if ( x == arg0 . x + 150 ) { return true ; } return false ; }", "nl": "checking if the value of x is equal to the sum of obstacle value x and obstacle width . concode_field_sep int HEIGHT concode_elem_sep int JUMP concode_elem_sep int x concode_elem_sep int y concode_elem_sep int ground concode_elem_sep int WIDTH concode_elem_sep int moveY concode_elem_sep int DOWN concode_field_sep void draw concode_elem_sep boolean crashOnGround concode_elem_sep void down concode_elem_sep void jump"}
{"code": "int function ( ) { return tagNo ; }", "nl": "get the tag number . concode_field_sep boolean isImplicit concode_elem_sep int tagNo concode_elem_sep boolean isAppSpecific concode_field_sep TaggingOption newExplicitAppSpecific concode_elem_sep boolean isImplicit concode_elem_sep TaggingOption newImplicitAppSpecific concode_elem_sep TaggingOption newImplicitContextSpecific concode_elem_sep Tag getTag concode_elem_sep TaggingOption newExplicitContextSpecific concode_elem_sep boolean isAppSpecific"}
{"code": "Timestamp function ( Timestamp arg0 , Duration arg1 ) { return Timestamps . subtract ( arg0 , arg1 ) ; }", "nl": "subtract a duration from a timestamp . concode_field_sep BigInteger NANOS_PER_SECOND_BIG_INTEGER concode_elem_sep long DURATION_SECONDS_MAX concode_elem_sep long DURATION_SECONDS_MIN concode_elem_sep long TIMESTAMP_SECONDS_MAX concode_elem_sep long NANOS_PER_SECOND concode_elem_sep long TIMESTAMP_SECONDS_MIN concode_field_sep Timestamp add concode_elem_sep Duration add concode_elem_sep Duration distance concode_elem_sep Duration createDurationFromMicros concode_elem_sep Timestamp createTimestampFromMillis concode_elem_sep BigInteger toBigInteger concode_elem_sep BigInteger toBigInteger concode_elem_sep Duration createDurationFromNanos concode_elem_sep Timestamp createTimestampFromMicros concode_elem_sep Duration createDurationFromMillis concode_elem_sep Duration createDurationFromBigInteger concode_elem_sep Duration parseDuration concode_elem_sep long toNanos concode_elem_sep long toNanos concode_elem_sep Timestamp getEpoch concode_elem_sep Timestamp parseTimestamp concode_elem_sep String toString concode_elem_sep String toString concode_elem_sep long toMillis concode_elem_sep long toMillis concode_elem_sep Duration divide concode_elem_sep Duration divide concode_elem_sep long divide concode_elem_sep Timestamp createTimestampFromNanos concode_elem_sep Timestamp getCurrentTime concode_elem_sep Duration multiply concode_elem_sep Duration multiply concode_elem_sep long toMicros concode_elem_sep long toMicros concode_elem_sep Duration remainder concode_elem_sep Duration normalizedDuration"}
{"code": "Property < T , V > function ( Class < T > arg0 , Class < V > arg1 , String arg2 ) { return new ReflectiveProperty < T , V > ( arg0 , arg1 , arg2 ) ; }", "nl": "this factory method creates and returns a property given the class and name parameters , where the `` name '' parameter represents either : a public getname method on the class which takes no arguments , plus an optional public setname method which takes a value of the same type returned by getname a public isname method on the class which takes no arguments , plus an optional public setname method which takes a value of the same type returned by isname a public name field on the class if either of the get/is method alternatives is found on the class , but an appropriate setname method is not found , the property will be #isreadonly readonly . calling the #set object , object method on sucha property is allowed , but will have no effect . if neither the methods nor the field are found on the class a nosuchpropertyexception exception will be thrown . concode_field_sep String mName concode_elem_sep Class<V> mType concode_field_sep boolean isReadOnly concode_elem_sep void set concode_elem_sep String getName concode_elem_sep Class<V> getType concode_elem_sep V get"}
{"code": "void function ( Object arg0 , String arg1 ) { if ( arg0 == null ) { throw new NullPointerException ( arg1 ) ; } }", "nl": "ensures that the object given as a method parameter is not null . concode_field_sep PlaceHolder placeHolder concode_field_sep void isTrue concode_elem_sep void isTrue concode_elem_sep void notEmpty"}
{"code": "void function ( Object arg0 , Throwable arg1 ) { log ( Level . WARNING , String . valueOf ( arg0 ) , arg1 ) ; }", "nl": "log a message and exception with warn log level . concode_field_sep String name concode_elem_sep boolean classAndMethodFound concode_elem_sep Logger logger concode_elem_sep String sourceMethodName concode_elem_sep String sourceClassName concode_field_sep void debug concode_elem_sep void debug concode_elem_sep void log concode_elem_sep Logger getLogger concode_elem_sep boolean isWarnEnabled concode_elem_sep void error concode_elem_sep void error concode_elem_sep boolean isFatalEnabled concode_elem_sep void fatal concode_elem_sep void fatal concode_elem_sep void trace concode_elem_sep void trace concode_elem_sep boolean isInfoEnabled concode_elem_sep boolean isErrorEnabled concode_elem_sep boolean isTraceEnabled concode_elem_sep boolean isDebugEnabled concode_elem_sep void getClassAndMethod concode_elem_sep void info concode_elem_sep void info"}
{"code": "void function ( ) { if ( fFilesSaved && ResourcesPlugin . getWorkspace ( ) . getDescription ( ) . isAutoBuilding ( ) ) { new GlobalBuildAction ( JavaPlugin . getActiveWorkbenchWindow ( ) , IncrementalProjectBuilder . INCREMENTAL_BUILD ) . run ( ) ; } }", "nl": "triggers an incremental build if this save helper did save files before . concode_field_sep boolean fFilesSaved concode_elem_sep int SAVE_ALL concode_elem_sep int SAVE_REFACTORING concode_elem_sep int fSaveMode concode_elem_sep int SAVE_NOTHING concode_elem_sep int SAVE_ALL_ALWAYS_ASK concode_field_sep boolean didSaveFiles concode_elem_sep ILabelProvider createDialogLabelProvider concode_elem_sep boolean saveEditors concode_elem_sep boolean askSaveAllDirtyEditors"}
{"code": "boolean function ( Collection < T > arg0 , Object arg1 , Hasher arg2 ) { for ( T loc0 : arg0 ) { if ( arg2 . equals ( loc0 , arg1 ) ) return true ; } return false ; }", "nl": "returns true iff the collection contains an element equivalent to the given one , as decided by the hasher . concode_field_sep PlaceHolder placeHolder concode_field_sep T getNthIteratedElement concode_elem_sep T getNthIteratedElement concode_elem_sep boolean containsIdentical concode_elem_sep List<String> prefix concode_elem_sep T removeMatching concode_elem_sep String toStringInLines concode_elem_sep List<String> toStringLines concode_elem_sep SortedSet<Integer> findAll concode_elem_sep String toStringInSortedLines concode_elem_sep List<List<T>> chunkUp concode_elem_sep boolean areDisjoint concode_elem_sep Set<T> intersection concode_elem_sep Set<T> xor concode_elem_sep String join concode_elem_sep List<T> map concode_elem_sep List<T> roCopyList concode_elem_sep Set<T> getAll concode_elem_sep Set<T> diff concode_elem_sep Map<Integer,Set<Object[]>> createPerArityGroups concode_elem_sep Set<T> union concode_elem_sep List<T> concat concode_elem_sep List<String> sort concode_elem_sep List<T> concatAll concode_elem_sep boolean allInstancesOf concode_elem_sep List<T> unique concode_elem_sep List<List<T>> allCombinations concode_elem_sep T[] addToArray"}
{"code": "void function ( String arg0 , Map arg1 ) { arg1 . put ( Environment . URL , arg1 . get ( Environment . URL ) + \"srini_string\" + arg0 ) ; }", "nl": "create additional h2 schema . concode_field_sep String VALIDATE_FAILURE_EXPECTED concode_field_sep String extractTestName concode_elem_sep T locateAnnotation concode_elem_sep List<S> collectAnnotations concode_elem_sep String extractMethodName concode_elem_sep String extractIgnoreMessage concode_elem_sep boolean isNotEmpty concode_elem_sep String extractMessage"}
{"code": "AuditCriterion function ( AuditCriterion arg0 , AuditCriterion arg1 ) { return new LogicalAuditExpression ( arg0 , arg1 , \"srini_string\" ) ; }", "nl": "return the disjuction of two criterions . concode_field_sep PlaceHolder placeHolder concode_field_sep AuditProperty<Object> revisionProperty concode_elem_sep AuditProperty<RevisionType> revisionType concode_elem_sep AuditCriterion not concode_elem_sep AuditConjunction conjunction concode_elem_sep AuditProperty<Number> revisionNumber concode_elem_sep AuditDisjunction disjunction concode_elem_sep AuditCriterion and concode_elem_sep AuditProperty<Object> property concode_elem_sep AuditId id concode_elem_sep AuditRelatedId relatedId"}
{"code": "Set function ( ) { return composites ; }", "nl": "gets the composites . concode_field_sep List components concode_elem_sep One one concode_elem_sep List manyToMany concode_elem_sep Foo foo concode_elem_sep int count concode_elem_sep Collection bag concode_elem_sep Simple simple concode_elem_sep Many many concode_elem_sep Set composites concode_elem_sep Collection lazyBag concode_elem_sep Collection cascades concode_elem_sep String name concode_elem_sep Set ternarySet concode_elem_sep Glarch glarch concode_elem_sep List oneToMany concode_elem_sep long id concode_elem_sep Map ternaryMap concode_field_sep void setName concode_elem_sep void setName concode_elem_sep void setCascades concode_elem_sep String getName concode_elem_sep String getName concode_elem_sep void setBag concode_elem_sep void setFoo concode_elem_sep Map getTernaryMap concode_elem_sep long getId concode_elem_sep Glarch getGlarch concode_elem_sep List getOneToMany concode_elem_sep void setComposites concode_elem_sep void setGlarch concode_elem_sep int hashCode concode_elem_sep Many getMany concode_elem_sep Foo getFoo concode_elem_sep List getComponents concode_elem_sep void setId concode_elem_sep Collection getBag concode_elem_sep int getCount concode_elem_sep Collection getLazyBag concode_elem_sep void setCount concode_elem_sep void setComponents concode_elem_sep void setOneToMany concode_elem_sep void setOne concode_elem_sep void setLazyBag concode_elem_sep Simple getSimple concode_elem_sep void setTernaryMap concode_elem_sep void setMany concode_elem_sep void setTernarySet concode_elem_sep void setSimple concode_elem_sep List getManyToMany concode_elem_sep boolean equals concode_elem_sep One getOne concode_elem_sep void setManyToMany concode_elem_sep String toString concode_elem_sep Collection getCascades concode_elem_sep Set getTernarySet"}
{"code": "float function ( ResultPoint arg0 , ResultPoint arg1 , ResultPoint arg2 ) { float loc0 = arg1 . x ; float loc1 = arg1 . y ; return ( ( arg2 . x - loc0 ) * ( arg0 . y - loc1 ) ) - ( ( arg2 . y - loc1 ) * ( arg0 . x - loc0 ) ) ; }", "nl": "returns the z component of the cross product between vectors bc and ba . concode_field_sep float x concode_elem_sep float y concode_field_sep float getX concode_elem_sep float getY concode_elem_sep void orderBestPatterns concode_elem_sep float distance concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep String toString"}
{"code": "ProgressRequestBody function ( RequestBody arg0 , ProgressRequestListener arg1 ) { return new ProgressRequestBody ( arg0 , arg1 ) ; }", "nl": "creates a progressrequestbody that can be used for showing uploading progress concode_field_sep String CONTENT_ENCODING_GZIP concode_field_sep RequestBody createGzip concode_elem_sep InputStream getFileInputStream concode_elem_sep boolean isGzipEncoding concode_elem_sep RequestBody create concode_elem_sep RequestBody getEmptyBody"}
{"code": "boolean function ( String arg0 , int arg1 ) { if ( arg0 . length ( ) != arg1 ) return false ; for ( char loc0 : arg0 . toCharArray ( ) ) if ( loc0 < 48 || loc0 > 57 ) return false ; return true ; }", "nl": "checks the length of a code and if a code consists of numbers only . concode_field_sep PlaceHolder placeHolder concode_field_sep boolean isLowercase concode_elem_sep boolean isValid concode_elem_sep boolean isUppercase concode_elem_sep String check"}
{"code": "void function ( ) { UIDriver . pause ( REVEAL_WAIT ) ; }", "nl": "wait for the reveal action to complete . concode_field_sep TableItemTester _tableItemTester concode_elem_sep int REVEAL_WAIT concode_elem_sep TableTester _tableTester concode_field_sep Widget reveal concode_elem_sep Widget reveal concode_elem_sep void revealColumn concode_elem_sep void showColumn"}
{"code": "void function ( Point2D arg0 ) { setStartPoint ( ( float ) arg0 . getX ( ) , ( float ) arg0 . getY ( ) ) ; }", "nl": "sets the start point of the subpath . concode_field_sep List<Shape> segments concode_elem_sep Point2D startPoint concode_elem_sep boolean closed concode_field_sep Point2D getStartPoint concode_elem_sep boolean isSinglePointOpen concode_elem_sep void addSegment concode_elem_sep boolean isDegenerate concode_elem_sep boolean isClosed concode_elem_sep boolean isEmpty concode_elem_sep boolean isSinglePointClosed concode_elem_sep List<Point2D> getPiecewiseLinearApproximation concode_elem_sep Point2D getLastPoint concode_elem_sep void setClosed concode_elem_sep List<Shape> getSegments"}
{"code": "void function ( TLinkable arg0 ) { _next = arg0 ; }", "nl": "sets the linked list node after this one . concode_field_sep TLinkable _next concode_elem_sep TLinkable _previous concode_field_sep TLinkable getPrevious concode_elem_sep TLinkable getNext concode_elem_sep void setPrevious"}
{"code": "String function ( final String arg0 ) { String loc0 = arg0 . toUpperCase ( ) ; String loc1 = MAP . get ( loc0 ) ; if ( loc1 == null ) loc1 = arg0 ; return loc1 ; }", "nl": "gets the java encoding from the iana encoding . if the encoding can not be found it returns the input . concode_field_sep Map<String,String> MAP concode_field_sep placeholderType placeHolder"}
{"code": "void function ( String arg0 ) { this . links . add ( arg0 ) ; }", "nl": "add a link to sentence concode_field_sep long serialVersionUID concode_elem_sep List<String> links concode_elem_sep List<TokenElement> tokens concode_elem_sep List<LineOffset> offsetMap concode_elem_sep int lineNumber concode_elem_sep String content concode_elem_sep int startPositionOffset concode_elem_sep boolean isFirstSentence concode_field_sep int getOffsetMapSize concode_elem_sep void setContent concode_elem_sep List<String> getLinks concode_elem_sep void setOffsetMap concode_elem_sep String getContent concode_elem_sep List<TokenElement> getTokens concode_elem_sep Optional<LineOffset> getOffset concode_elem_sep boolean isFirstSentence concode_elem_sep void setTokens concode_elem_sep int getLineNumber concode_elem_sep int getOffsetPosition concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep int getStartPositionOffset concode_elem_sep void setIsFirstSentence concode_elem_sep void setLineNumber concode_elem_sep String toString concode_elem_sep List<LineOffset> getOffsetMap"}
{"code": "IWidgetMatcher function ( ) { return _parentMatcher ; }", "nl": "get the matcher identifying the parent of the target of this match . concode_field_sep IWidgetMatcher _parentMatcher concode_elem_sep int _index concode_elem_sep int DEFAULT_INDEX concode_elem_sep IWidgetMatcher _matcher concode_field_sep IWidgetMatcher getTargetMatcher concode_elem_sep String toString concode_elem_sep boolean matches concode_elem_sep boolean matches concode_elem_sep boolean testIndex"}
{"code": "boolean function ( K1 arg0 , K2 arg1 , V arg2 ) { ensureSetExists ( arg0 , arg1 ) ; return dkMap . get ( arg0 , arg1 ) . add ( arg2 ) ; }", "nl": "returns true if the doubly-nested set did not contain v. concode_field_sep DoubleKeyMap<K1,K2,Set<V>> dkMap concode_field_sep boolean addAll concode_elem_sep Set<V> get concode_elem_sep void clear concode_elem_sep boolean containsKeys concode_elem_sep String toString concode_elem_sep Set<K2> getK2Set concode_elem_sep boolean remove concode_elem_sep Set<K1> getK1Set concode_elem_sep void ensureSetExists concode_elem_sep Set<V> getAllVs"}
{"code": "int function ( double [ ] arg0 , double [ ] arg1 ) { int loc0 = arg0 . length - arg1 . length ; outer : for ( int loc1 = 0 ; loc1 <= loc0 ; loc1 ++ ) { for ( int loc2 = 0 ; loc2 < arg1 . length ; loc2 ++ ) { if ( ne ( arg0 [ loc1 + loc2 ] , arg1 [ loc2 ] ) ) { continue outer ; } } return ( loc1 ) ; } return ( - 1 ) ; }", "nl": "searches for the first subsequence of a that matches sub elementwise . elements of sub are considered to match elements of a if they pass the #eq test . concode_field_sep double max_ratio concode_elem_sep double min_ratio concode_elem_sep boolean off concode_field_sep boolean isElemMatch concode_elem_sep int compare concode_elem_sep boolean isSubset concode_elem_sep boolean ne concode_elem_sep boolean lt concode_elem_sep boolean gte concode_elem_sep void set_rel_diff concode_elem_sep boolean eq concode_elem_sep boolean lte concode_elem_sep boolean gt"}
{"code": "BigDecimal function ( ) { return stmt . getElctrncSeqNb ( ) ; }", "nl": "sequential number of the statement , as assigned by the account servicer . the sequential number is increased incrementally for each statement sent electronically . concode_field_sep BankToCustomerStatementV02 bankToCustomerStatement concode_elem_sep Document document concode_elem_sep GroupHeader42 groupHeader concode_elem_sep AccountStatement2 stmt concode_field_sep CashAccount16 getRltdAcct concode_elem_sep List<ReportEntry2> getNtry concode_elem_sep String getAddtlStmtInf concode_elem_sep BankToCustomerStatement read concode_elem_sep PartyIdentification32 getMsgRcpt concode_elem_sep Date getToDt concode_elem_sep Date getCreDtTm concode_elem_sep Date getCreDtTm concode_elem_sep Pagination getMsgPgntn concode_elem_sep String getAddtlInf concode_elem_sep String getId concode_elem_sep Date getFrDt concode_elem_sep TotalTransactions2 getTxsSummry concode_elem_sep List<AccountInterest2> getIntrst concode_elem_sep CashAccount20 getAcct concode_elem_sep String getMsgId concode_elem_sep ReportingSource1Choice getRptgSrc concode_elem_sep List<AccountStatement> getStmt concode_elem_sep CopyDuplicate1Code getCpyDplctInd concode_elem_sep BigDecimal getLglSeqNb concode_elem_sep List<CashBalance3> getBal"}
{"code": "String function ( ) { return id ; }", "nl": "the globally unique id for this dataset concode_field_sep String urn concode_elem_sep boolean isDefault concode_elem_sep Map<String,JsonBall> requirements concode_elem_sep String os concode_elem_sep ImmutableMap.Builder<String,JsonBall> requirements concode_elem_sep Date created concode_elem_sep String name concode_elem_sep String description concode_elem_sep String id concode_elem_sep Type type concode_elem_sep Function<JsonBall,String> unquoteString concode_elem_sep String version concode_field_sep Builder toBuilder concode_elem_sep String getOs concode_elem_sep String getName concode_elem_sep Builder description concode_elem_sep Map<String,String> getRequirementsAsJsonLiterals concode_elem_sep int compareTo concode_elem_sep Builder type concode_elem_sep Builder addRequirement concode_elem_sep String getDescription concode_elem_sep int hashCode concode_elem_sep Builder builder concode_elem_sep Builder id concode_elem_sep String getVersion concode_elem_sep Builder requirements concode_elem_sep Map<String,String> getRequirements concode_elem_sep Builder os concode_elem_sep String apply concode_elem_sep Builder created concode_elem_sep Date getCreated concode_elem_sep Builder version concode_elem_sep Builder urn concode_elem_sep Builder fromDataset concode_elem_sep Builder isDefault concode_elem_sep boolean isDefault concode_elem_sep String getUrn concode_elem_sep Dataset build concode_elem_sep Type getType concode_elem_sep boolean equals concode_elem_sep Builder name concode_elem_sep String toString"}
{"code": "void function ( ) { }", "nl": "save motorbikes that we previously put a down payment on pending db changes should be flushed as per jpa 7.9.1 container responsibilities for xpc : when a business method of the stateful session bean is invoked , if the stateful session bean uses container managed transaction demarcation , and the entity manager is not already associated with the current jta transaction , the container associates the entity manager with the current jta transaction and calls entitymanager.jointransaction . concode_field_sep EntityManager entityManager concode_field_sep Motorbike downPaymentOnBikeNoTx concode_elem_sep Motorbike find concode_elem_sep void forceRollback concode_elem_sep Motorbike createMotorBike"}
{"code": "double function ( ) { return values . lastKey ( ) ; }", "nl": "returns the maximum x value in the model . concode_field_sep Entry<Double,Integer> next concode_elem_sep Integer HIGHLIGHT_CRITICAL concode_elem_sep Iterator<Entry<Double,Integer>> subMapIterator concode_elem_sep Integer HIGHLIGHT_VALIDATION concode_elem_sep Integer HIGHLIGHT_INFO concode_elem_sep Double xValue concode_elem_sep Integer HIGHLIGHT_NONE concode_elem_sep double delta concode_elem_sep Integer yValue concode_elem_sep TreeMap<Double,Integer> values concode_elem_sep Integer HIGHLIGHT_WARNING concode_field_sep HighlightEntry next concode_elem_sep Double getKey concode_elem_sep Integer getValue concode_elem_sep int severityToHighlight concode_elem_sep int size concode_elem_sep Integer setValue concode_elem_sep void clear concode_elem_sep void addData concode_elem_sep HighlightModel create concode_elem_sep boolean hasNext concode_elem_sep Iterator<HighlightEntry> getRangeValues concode_elem_sep void remove"}
{"code": "void function ( String [ ] arg0 ) { String loc0 ; TextIO . putln ( \"srini_string\" ) ; loc0 = TextIO . getln ( ) ; TextIO . putln ( ) ; TextIO . putln ( \"srini_string\" ) ; printCapitalized ( loc0 ) ; }", "nl": "sole entry point to application , as always . concode_field_sep PlaceHolder placeHolder concode_field_sep void printCapitalized"}
{"code": "LongList function ( ) { return EMPTY_LONG_LIST ; }", "nl": "returns an unmodifiable , empty longlist . concode_field_sep LongIterator EMPTY_LONG_ITERATOR concode_elem_sep LongList EMPTY_LONG_LIST concode_elem_sep LongListIterator EMPTY_LONG_LIST_ITERATOR concode_field_sep LongList singletonLongList concode_elem_sep LongListIterator unmodifiableLongListIterator concode_elem_sep LongIterator getEmptyLongIterator concode_elem_sep LongList unmodifiableLongList concode_elem_sep LongIterator singletonLongIterator concode_elem_sep LongListIterator singletonLongListIterator concode_elem_sep LongListIterator getEmptyLongListIterator concode_elem_sep LongIterator unmodifiableLongIterator"}
{"code": "List < ColumnMetaData > function ( ) { List < ColumnMetaData > loc0 = new ArrayList < ColumnMetaData > ( ) ; for ( int loc1 = 0 ; loc1 < columnCount ; loc1 ++ ) if ( columns [ loc1 ] . metaData . getParent ( ) == null ) loc0 . add ( columns [ loc1 ] . metaData ) ; return loc0 ; }", "nl": "return root columns ' metadata . roots are columns that have no parent . concode_field_sep ColumnFileMetaData metaData concode_elem_sep Map<String,ColumnDescriptor> columnsByName concode_elem_sep Input file concode_elem_sep ColumnDescriptor[] columns concode_elem_sep long rowCount concode_elem_sep int columnCount concode_field_sep ColumnMetaData[] getColumnMetaData concode_elem_sep ColumnMetaData getColumnMetaData concode_elem_sep ColumnMetaData getColumnMetaData concode_elem_sep long getRowCount concode_elem_sep void readColumnMetaData concode_elem_sep ColumnValues<T> getValues concode_elem_sep ColumnValues<T> getValues concode_elem_sep void readColumnStarts concode_elem_sep ColumnDescriptor<T> getColumn concode_elem_sep long getColumnCount concode_elem_sep ColumnFileMetaData getMetaData concode_elem_sep void readHeader concode_elem_sep void readMagic concode_elem_sep void close"}
{"code": "boolean function ( String arg0 , String arg1 , Class [ ] arg2 ) { return false ; }", "nl": "use for system classes only , since not classloader or reflector-aware concode_field_sep PlaceHolder placeHolder concode_field_sep void lockFile concode_elem_sep Object createWeakReference concode_elem_sep Reflector createReflector concode_elem_sep Class constructorClass concode_elem_sep void killYapRef concode_elem_sep boolean isConnected concode_elem_sep Thread addShutdownHook concode_elem_sep Object weakReferenceTarget concode_elem_sep Constructor serializableConstructor concode_elem_sep void forEachCollectionElement concode_elem_sep void registerCollections concode_elem_sep long nanoTime concode_elem_sep Reflector reflectorForType concode_elem_sep Object deserialize concode_elem_sep void extendConfiguration concode_elem_sep Config4Class extendConfiguration concode_elem_sep void unlockFile concode_elem_sep Object createActivateObjectReference concode_elem_sep int ver concode_elem_sep NetTypeHandler[] types concode_elem_sep void setAccessible concode_elem_sep void commonConfigurations concode_elem_sep String format concode_elem_sep boolean isEnum concode_elem_sep void throwIllegalArgumentException concode_elem_sep Object createReferenceQueue concode_elem_sep byte[] serialize concode_elem_sep void pollReferenceQueue concode_elem_sep Object getContextClassLoader concode_elem_sep Object getYapRefObject concode_elem_sep Class loadClass concode_elem_sep void removeShutdownHook concode_elem_sep boolean isCollectionTranslator concode_elem_sep boolean useNativeSerialization concode_elem_sep NetTypeHandler[] netTypes"}
{"code": "String function ( ) { return new Date ( Long . parseLong ( ts ) ) . toString ( ) + \"srini_string\" + component + \"srini_string\" + task + \"srini_string\" + messageId + \"srini_string\" + values ; }", "nl": "returns a default formatted string with fields separated by '' , '' concode_field_sep String component concode_elem_sep String task concode_elem_sep String values concode_elem_sep String messageId concode_elem_sep String ts concode_field_sep void prepare concode_elem_sep void log concode_elem_sep void close"}
{"code": "Object function ( BigInteger arg0 , StateInitializer arg1 ) { if ( _curr . containsKey ( arg0 ) ) { return _curr . get ( arg0 ) ; } else { getState ( arg0 , arg1 ) ; return null ; } }", "nl": "returns null if it was created , the value otherwise . concode_field_sep String _subdir concode_elem_sep TreeMap<BigInteger,Object> _curr concode_elem_sep TransactionalState _state concode_elem_sep boolean _strictOrder concode_field_sep Object init concode_elem_sep Object getLastState concode_elem_sep void overrideState concode_elem_sep Object getState concode_elem_sep void cleanupBefore concode_elem_sep boolean hasCache concode_elem_sep void removeState concode_elem_sep String txPath concode_elem_sep String txPath concode_elem_sep void sync"}
{"code": "void function ( String arg0 ) { this . fcKey = arg0 ; }", "nl": "sets the value of the fckey property . concode_field_sep String fcLink concode_elem_sep String localPortID concode_elem_sep String displayName concode_elem_sep String fcKey concode_elem_sep ProvidedPortID id concode_elem_sep List<PropertyDeclaration> properties concode_elem_sep String resourceType concode_field_sep String getFcLink concode_elem_sep String getFcKey concode_elem_sep String getDisplayName concode_elem_sep List<PropertyDeclaration> getProperties concode_elem_sep String getResourceType concode_elem_sep void setFcLink concode_elem_sep String getLocalPortID concode_elem_sep void setResourceType concode_elem_sep void setId concode_elem_sep ProvidedPortID getId concode_elem_sep void setLocalPortID concode_elem_sep void setDisplayName"}
{"code": "Residue < C > function ( Reader arg0 ) { throw new RuntimeException ( \"srini_string\" ) ; }", "nl": "parse residue from reader . concode_field_sep Ideal<C> ideal concode_elem_sep Logger logger concode_elem_sep GreatestCommonDivisor<C> engine concode_elem_sep GenPolynomialRing<C> ring concode_elem_sep int isField concode_field_sep Residue<C> random concode_elem_sep Residue<C> random concode_elem_sep Residue<C> random concode_elem_sep int hashCode concode_elem_sep boolean isField concode_elem_sep boolean equals concode_elem_sep Residue<C> getONE concode_elem_sep boolean isCommutative concode_elem_sep Residue<C> getZERO concode_elem_sep Residue<C> fromInteger concode_elem_sep Residue<C> fromInteger concode_elem_sep boolean isAssociative concode_elem_sep String toString concode_elem_sep Residue<C> copy concode_elem_sep java.math.BigInteger characteristic"}
{"code": "Identifier function ( String arg0 , MetadataBuildingContext arg1 ) { return arg1 . getMetadataCollector ( ) . getDatabase ( ) . getJdbcEnvironment ( ) . getIdentifierHelper ( ) . toIdentifier ( arg0 ) ; }", "nl": "easy hook to build an identifier using the keyword safe identifierhelper . concode_field_sep ImplicitNamingStrategy INSTANCE concode_field_sep String transformEntityName concode_elem_sep Identifier determineTenantIdColumnName concode_elem_sep String transformAttributePath concode_elem_sep Identifier determineMapKeyColumnName concode_elem_sep Identifier determineForeignKeyName concode_elem_sep Identifier determineJoinTableName concode_elem_sep Identifier determineIndexName concode_elem_sep Identifier determineBasicColumnName concode_elem_sep Identifier determineCollectionTableName concode_elem_sep Identifier determineJoinColumnName concode_elem_sep Identifier determinePrimaryTableName concode_elem_sep Identifier determineDiscriminatorColumnName concode_elem_sep Identifier determineAnyDiscriminatorColumnName concode_elem_sep Identifier determineUniqueKeyName concode_elem_sep Identifier determineIdentifierColumnName concode_elem_sep Identifier determinePrimaryKeyJoinColumnName concode_elem_sep Identifier determineListIndexColumnName concode_elem_sep Identifier determineAnyKeyColumnName"}
{"code": "String function ( ) { return m_Language ; }", "nl": "get output data language concode_field_sep String m_Url concode_elem_sep String m_Key concode_elem_sep String m_Packing concode_elem_sep String m_Language concode_elem_sep String m_Format concode_field_sep String getPacking concode_elem_sep void setPacking concode_elem_sep String getObjectsInBoxByBBox concode_elem_sep String getObjectById concode_elem_sep String getObjectInBox concode_elem_sep String getObjectsInBoxByLatLon concode_elem_sep String doSendApiRequest concode_elem_sep void setFormat concode_elem_sep String getObjectsInPoint concode_elem_sep String getObjectsInBoxByTile concode_elem_sep String getObjectsInBoxByTile concode_elem_sep String getObjectsBySearchQuery concode_elem_sep String getObjectsBySearchQuery concode_elem_sep String getFormat concode_elem_sep void setLanguage"}
{"code": "void function ( int arg0 ) { int loc0 = binarySearch ( arg0 ) ; if ( loc0 >= 0 && mData [ loc0 ] != DELETED ) { mData [ loc0 ] = DELETED ; mGarbage = true ; } }", "nl": "removes the data from the specified fieldnumber , if there was any . concode_field_sep boolean mGarbage concode_elem_sep FieldData[] mData concode_elem_sep int mSize concode_elem_sep FieldData DELETED concode_elem_sep int[] mFieldNumbers concode_field_sep boolean isEmpty concode_elem_sep int binarySearch concode_elem_sep FieldData dataAt concode_elem_sep void put concode_elem_sep int idealByteArraySize concode_elem_sep int size concode_elem_sep int hashCode concode_elem_sep FieldData get concode_elem_sep boolean equals concode_elem_sep FieldArray clone concode_elem_sep void gc concode_elem_sep boolean arrayEquals concode_elem_sep boolean arrayEquals concode_elem_sep int idealIntArraySize"}
{"code": "void function ( final Collection < ? extends K > arg0 ) { for ( final K loc0 : arg0 ) { put ( loc0 , null ) ; } }", "nl": "puts the given collection of keys into this map according to the contract of #put object , object . the values will be set to null . the keys are added in the order of the collection 's iterator . concode_field_sep SortedMap<K,V> kSmallest concode_elem_sep int maxSize concode_field_sep boolean containsKey concode_elem_sep Collection<V> values concode_elem_sep void clear concode_elem_sep boolean isInRange concode_elem_sep boolean put concode_elem_sep boolean put concode_elem_sep boolean put concode_elem_sep V remove concode_elem_sep boolean containsValue concode_elem_sep K getMinKey concode_elem_sep K getMaxKey concode_elem_sep int size concode_elem_sep K firstKey concode_elem_sep V get concode_elem_sep void setAllValues concode_elem_sep K lastKey concode_elem_sep String toString concode_elem_sep Set<K> keySet"}
{"code": "void function ( Script arg0 ) { list . remove ( arg0 ) ; }", "nl": "removes a script from this block concode_field_sep List list concode_field_sep List getScriptList concode_elem_sep void addScript concode_elem_sep Script compile concode_elem_sep void trimWhitespace concode_elem_sep String toString concode_elem_sep void run"}
{"code": "void function ( final int arg0 ) { if ( constantValue != null ) { constantValue . setConstantValueIndex ( arg0 ) ; } }", "nl": "set the index into the constant pool of the field 's constant value . concode_field_sep ClassInfo classInfo concode_elem_sep int name concode_elem_sep int modifiers concode_elem_sep int type concode_elem_sep Attribute[] attrs concode_elem_sep ConstantValue constantValue concode_field_sep int typeIndex concode_elem_sep int nameIndex concode_elem_sep void setNameIndex concode_elem_sep String toString concode_elem_sep void setTypeIndex concode_elem_sep void setModifiers concode_elem_sep int modifiers concode_elem_sep void write concode_elem_sep ClassInfo declaringClass concode_elem_sep int constantValue"}
{"code": "void function ( ) { for ( PptTopLevel loc0 : nameToPpt . values ( ) ) { loc0 . trimToSize ( ) ; } }", "nl": "iterate over the ppttoplevels and trim them . concode_field_sep long serialVersionUID concode_elem_sep Map<String,PptTopLevel> nameToPpt concode_field_sep void add concode_elem_sep Iterator<PptTopLevel> ppt_all_iterator concode_elem_sep Collection<PptTopLevel> asCollection concode_elem_sep Iterator<PptTopLevel> pptIterator concode_elem_sep Collection<PptTopLevel> all_ppts concode_elem_sep void repCheck concode_elem_sep int size concode_elem_sep void addAll concode_elem_sep boolean containsName concode_elem_sep void removeUnsampled concode_elem_sep PptTopLevel get concode_elem_sep PptTopLevel get concode_elem_sep Collection<String> nameStringSet concode_elem_sep int countSlices concode_elem_sep String toString"}
{"code": "void function ( String arg0 ) { this . caller = arg0 ; }", "nl": "sets the value of the caller property . concode_field_sep String caller concode_elem_sep String user concode_elem_sep String uuid concode_field_sep String getCaller concode_elem_sep String getUser concode_elem_sep String getUuid concode_elem_sep void setUser concode_elem_sep void setUuid"}
{"code": "boolean function ( RatTermVec arg0 ) { if ( arg0 . size ( ) != this . size ( ) ) { return false ; } for ( int loc0 = 0 ; loc0 < this . size ( ) ; loc0 ++ ) { if ( ! this . get ( loc0 ) . equals ( arg0 . get ( loc0 ) ) ) { return false ; } } return true ; }", "nl": "equal iff both have the same number of ratterms and those ratterms are pairwise equal . concode_field_sep Vector underlying_terms concode_elem_sep RatTerm[] terms concode_field_sep void set concode_elem_sep int size concode_elem_sep String printDebug concode_elem_sep RatTerm get concode_elem_sep void insert concode_elem_sep String toString concode_elem_sep void addElement concode_elem_sep RatTermVec copy concode_elem_sep void remove"}
{"code": "int function ( ) { return i_initialSize ; }", "nl": "returns the initial size of the memoryfile . concode_field_sep int i_incrementSizeBy concode_elem_sep int INITIAL_SIZE_AND_INC concode_elem_sep int i_initialSize concode_elem_sep byte[] i_bytes concode_field_sep void setBytes concode_elem_sep void setIncrementSizeBy concode_elem_sep int getIncrementSizeBy concode_elem_sep void setInitialSize concode_elem_sep byte[] getBytes"}
{"code": "void function ( ) { if ( isLocked ( ) ) { throw new UnsupportedOperationException ( \"srini_string\" ) ; } }", "nl": "checks to see whether the comparator is now locked against further changes . concode_field_sep int UNKNOWN_AFTER concode_elem_sep int counter concode_elem_sep int unknownObjectBehavior concode_elem_sep boolean isLocked concode_elem_sep int UNKNOWN_BEFORE concode_elem_sep int UNKNOWN_THROW_EXCEPTION concode_elem_sep Map map concode_field_sep boolean add concode_elem_sep void setUnknownObjectBehavior concode_elem_sep int compare concode_elem_sep int getUnknownObjectBehavior concode_elem_sep boolean isLocked concode_elem_sep boolean addAsEqual"}
{"code": "void function ( Template arg0 ) { fTemplates . remove ( arg0 ) ; }", "nl": "removes a template to the set . concode_field_sep String fTemplateTag concode_elem_sep int TEMPLATE_PARSE_EXCEPTION concode_elem_sep String CONTEXT_ATTRIBUTE concode_elem_sep List<Template> fTemplates concode_elem_sep int TEMPLATE_IO_EXCEPTION concode_elem_sep ContextTypeRegistry fRegistry concode_elem_sep String DESCRIPTION_ATTRIBUTE concode_elem_sep String NAME_ATTRIBUTE concode_field_sep void add concode_elem_sep String getAttributeValue concode_elem_sep String validateTemplate concode_elem_sep void throwReadException concode_elem_sep void saveToStream concode_elem_sep void clear concode_elem_sep Template getFirstTemplate concode_elem_sep Template[] getTemplates concode_elem_sep Template[] getTemplates concode_elem_sep void addFromFile concode_elem_sep void saveToFile concode_elem_sep void addFromStream concode_elem_sep boolean exists concode_elem_sep String getTemplateTag concode_elem_sep void throwWriteException"}
{"code": "Date function ( ) { return new Date ( getMillis ( ) ) ; }", "nl": "get the date time as a java.util.date . the date object created has exactly the same millisecond instant as this object . concode_field_sep PlaceHolder placeHolder concode_field_sep MutableDateTime toMutableDateTime concode_elem_sep MutableDateTime toMutableDateTime concode_elem_sep MutableDateTime toMutableDateTime concode_elem_sep boolean isEqual concode_elem_sep boolean isEqual concode_elem_sep DateTimeZone getZone concode_elem_sep boolean isSupported concode_elem_sep int compareTo concode_elem_sep boolean isBeforeNow concode_elem_sep Instant toInstant concode_elem_sep boolean isBefore concode_elem_sep boolean isBefore concode_elem_sep boolean isEqualNow concode_elem_sep MutableDateTime toMutableDateTimeISO concode_elem_sep DateTime toDateTimeISO concode_elem_sep int hashCode concode_elem_sep int get concode_elem_sep int get concode_elem_sep boolean equals concode_elem_sep String toString concode_elem_sep String toString concode_elem_sep boolean isAfter concode_elem_sep boolean isAfter concode_elem_sep DateTime toDateTime concode_elem_sep DateTime toDateTime concode_elem_sep DateTime toDateTime concode_elem_sep boolean isAfterNow"}
{"code": "boolean function ( ) { return ring . isCommutative ( ) ; }", "nl": "query if this ring is commutative . concode_field_sep GenPolynomialRing<C> ring concode_elem_sep int isField concode_elem_sep GenPolynomial<C> modul concode_field_sep boolean isField concode_elem_sep AlgebraicNumber<C> interpolate concode_elem_sep AlgebraicNumber<C> parse concode_elem_sep AlgebraicNumber<C> parse concode_elem_sep java.math.BigInteger characteristic concode_elem_sep AlgebraicNumber<C> random concode_elem_sep AlgebraicNumber<C> random concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep AlgebraicNumber<C> getONE concode_elem_sep AlgebraicNumber<C> getZERO concode_elem_sep AlgebraicNumber<C> fromInteger concode_elem_sep AlgebraicNumber<C> fromInteger concode_elem_sep boolean isAssociative concode_elem_sep String toString concode_elem_sep AlgebraicNumber<C> copy concode_elem_sep AlgebraicNumber<C> chineseRemainder"}
{"code": "BatchCQLStatementTupleMapper function ( CQLStatementBuilder ... arg0 ) { return newBatchStatementBuilder ( BatchStatement . Type . LOGGED , arg0 ) ; }", "nl": "creates a new com.datastax.driver.core.batchstatement.type #logged batch statement for the specified cql statement builders . concode_field_sep PlaceHolder placeHolder concode_field_sep BatchCQLStatementTupleMapper unLoggedBatch concode_elem_sep CqlMapper.DefaultCqlMapper all concode_elem_sep CQLStatementTupleMapper async concode_elem_sep ContextQuery named concode_elem_sep ContextQuery namedByField concode_elem_sep BatchCQLStatementTupleMapper newBatchStatementBuilder concode_elem_sep BatchCQLStatementTupleMapper counterBatch concode_elem_sep FieldSelector field concode_elem_sep BoundCQLStatementMapperBuilder boundQuery concode_elem_sep BoundCQLStatementMapperBuilder boundQuery concode_elem_sep FieldSelector[] fields concode_elem_sep SimpleCQLStatementMapperBuilder simpleQuery concode_elem_sep SimpleCQLStatementMapperBuilder simpleQuery"}
{"code": "File function ( Context arg0 ) { return new File ( arg0 . getApplicationInfo ( ) . dataDir , \"srini_string\" ) ; }", "nl": "return the directory into which we put our self-extracted native libraries . concode_field_sep byte[] cachedBuffer concode_field_sep void reliablyCopyExecutable concode_elem_sep void deleteOrThrow concode_elem_sep FileLocker lockLibsDirectory concode_elem_sep void freeCopyBuffer concode_elem_sep File createLibsDirectory concode_elem_sep int findAbiScore concode_elem_sep void dumbDeleteRecrusive concode_elem_sep String[] getSupportedAbis concode_elem_sep String[] getSupportedAbis concode_elem_sep void fallocateIfSupported concode_elem_sep void fallocate"}
{"code": "Object function ( Object arg0 ) { List4 loc0 = find ( arg0 ) ; if ( loc0 == null ) { add ( arg0 ) ; return arg0 ; } return loc0 . _element ; }", "nl": "makes sure the passed object is in the collection . equals comparison . concode_field_sep int _size concode_elem_sep List4 _last concode_elem_sep List4 _first concode_elem_sep int _version concode_field_sep void prepend concode_elem_sep void replace concode_elem_sep boolean remove concode_elem_sep Object singleElement concode_elem_sep Iterator4 iterator concode_elem_sep void removeAll concode_elem_sep void removeAll concode_elem_sep List4 find concode_elem_sep void assertNotNull concode_elem_sep Object get concode_elem_sep Object get concode_elem_sep void replaceByIdentity concode_elem_sep Object[] toArray concode_elem_sep Object[] toArray concode_elem_sep void adjustOnRemoval concode_elem_sep int indexOf concode_elem_sep void doPrepend concode_elem_sep List4 findByIdentity concode_elem_sep boolean add concode_elem_sep void doAdd concode_elem_sep boolean containsAll concode_elem_sep void clear concode_elem_sep boolean isEmpty concode_elem_sep int version concode_elem_sep boolean contains concode_elem_sep int size concode_elem_sep void addAll concode_elem_sep void addAll concode_elem_sep void addAll concode_elem_sep Object deepClone concode_elem_sep boolean containsByIdentity concode_elem_sep String toString concode_elem_sep Iterator4 internalIterator concode_elem_sep void changed"}
{"code": "void function ( final Closeable arg0 ) { if ( arg0 != null ) { try { arg0 . close ( ) ; } catch ( final IOException loc0 ) { loc0 . printStackTrace ( ) ; } } }", "nl": "closes a given closable . concode_field_sep String filePrefix concode_field_sep File CreateTempFile concode_elem_sep String parseSubstring"}
{"code": "String function ( String arg0 , List < String > arg1 ) { while ( true ) { System . out . println ( arg0 ) ; for ( int loc0 = 0 ; loc0 < arg1 . size ( ) ; loc0 ++ ) System . out . printf ( \"srini_string\" , loc0 + 1 , arg1 . get ( loc0 ) ) ; int loc1 = in . nextInt ( ) ; if ( loc1 > 0 && loc1 <= arg1 . size ( ) ) return arg1 . get ( loc1 - 1 ) ; } }", "nl": "asks the user to select a string . concode_field_sep String priceUpdate concode_elem_sep Connection conn concode_elem_sep Scanner in concode_elem_sep ArrayList<String> publishers concode_elem_sep String allQuery concode_elem_sep String publisherQuery concode_elem_sep String authorPublisherQuery concode_elem_sep String authorQuery concode_elem_sep ArrayList<String> authors concode_field_sep Connection getConnection concode_elem_sep void main concode_elem_sep void changePrices concode_elem_sep void executeQuery"}
{"code": "boolean function ( ) { return getProxyOrNull ( ) != null ; }", "nl": "getter for property ` connectedtosession ' . concode_field_sep String sessionFactoryUuid concode_elem_sep String entityName concode_elem_sep SessionImplementor session concode_elem_sep Boolean readOnlyBeforeAttachedToSession concode_elem_sep boolean allowLoadOutsideTransaction concode_elem_sep Logger log concode_elem_sep boolean initialized concode_elem_sep boolean readOnly concode_elem_sep Serializable id concode_elem_sep Object target concode_elem_sep boolean unwrap concode_field_sep void checkTargetState concode_elem_sep void permissiveInitialization concode_elem_sep Object getImplementation concode_elem_sep Object getImplementation concode_elem_sep void setIdentifier concode_elem_sep void unsetSession concode_elem_sep void prepareForPossibleLoadingOutsideTransaction concode_elem_sep boolean isReadOnlySettingAvailable concode_elem_sep Object getTarget concode_elem_sep void setReadOnlyBeforeAttachedToSession concode_elem_sep boolean isReadOnly concode_elem_sep boolean isUnwrap concode_elem_sep boolean isUninitialized concode_elem_sep Serializable getIdentifier concode_elem_sep void setImplementation concode_elem_sep void errorIfReadOnlySettingNotAvailable concode_elem_sep EntityKey generateEntityKeyOrNull concode_elem_sep void setSession concode_elem_sep void initialize concode_elem_sep String getEntityName concode_elem_sep void setUnwrap concode_elem_sep Object getProxyOrNull concode_elem_sep Boolean isReadOnlyBeforeAttachedToSession concode_elem_sep SessionImplementor getSession concode_elem_sep void setReadOnly"}
{"code": "SourceViewer function ( ) { return fSourceViewer ; }", "nl": "returns the internal source viewer . concode_field_sep SourceViewer fSourceViewer concode_elem_sep ViewForm fForm concode_elem_sep CLabel fLabel concode_elem_sep Image fPaneImage concode_field_sep Control getControl concode_elem_sep SourceViewer createSourceViewer concode_elem_sep void updateTitle concode_elem_sep void setInput concode_elem_sep void createControl"}
{"code": "void function ( AST arg0 , AST arg1 ) { if ( arg0 . getFirstChild ( ) == null ) { arg0 . setFirstChild ( arg1 ) ; } else { AST loc0 = arg0 . getFirstChild ( ) ; arg0 . setFirstChild ( arg1 ) ; arg1 . setNextSibling ( loc0 ) ; } }", "nl": "inserts the child as the first child of the parent , all other children are shifted over to the ` right ' . concode_field_sep FilterPredicate predicate concode_elem_sep List collectedNodes concode_field_sep AST getLastSibling concode_elem_sep AST findTypeInChildren concode_elem_sep AST findPreviousSibling concode_elem_sep String getPathText concode_elem_sep void getPathText concode_elem_sep String getTokenTypeName concode_elem_sep boolean isSubtreeChild concode_elem_sep String getDebugString concode_elem_sep List getCollectedNodes concode_elem_sep Integer extractIntegerValue concode_elem_sep AST create concode_elem_sep AST createParent concode_elem_sep String getConstantName concode_elem_sep boolean exclude concode_elem_sep boolean exclude concode_elem_sep AST createBinarySubtree concode_elem_sep boolean include concode_elem_sep Map generateTokenNameCache concode_elem_sep void appendSibling concode_elem_sep ASTArray createAstArray concode_elem_sep AST createTree concode_elem_sep List collectChildren concode_elem_sep AST getLastChild concode_elem_sep void makeSiblingOfParent concode_elem_sep void visit concode_elem_sep boolean hasExactlyOneChild concode_elem_sep AST insertSibling concode_elem_sep List collect concode_elem_sep AST createSibling"}
{"code": "boolean function ( ) { return fillInAllowed ; }", "nl": "getter to find out if filling out fields is allowed after signing . concode_field_sep boolean certification concode_elem_sep boolean fillInAllowed concode_elem_sep boolean annotationsAllowed concode_elem_sep PdfName action concode_elem_sep PdfArray fields concode_elem_sep List<FieldLock> fieldLocks concode_field_sep List<FieldLock> getFieldLocks concode_elem_sep PdfArray getFields concode_elem_sep boolean isCertification concode_elem_sep PdfName getAction concode_elem_sep String toString concode_elem_sep boolean isAnnotationsAllowed"}
{"code": "List < Integer > function ( MVariable arg0 ) { List < Integer > loc0 = new ArrayList < Integer > ( ) ; for ( int loc1 = arg0 . getDeclIndex ( ) + 1 ; loc1 < size ( ) ; loc1 ++ ) { if ( statements . get ( loc1 ) . inputs . contains ( arg0 ) ) loc0 . add ( loc1 ) ; } return loc0 ; }", "nl": "returns all the indices of statements where v is an input to the statement . concode_field_sep List<MStatement> statements concode_field_sep MSequence makeCopy concode_elem_sep void findInfluencingVars concode_elem_sep Sequence toImmutableSequence concode_elem_sep int getIndex concode_elem_sep Map<MVariable,MVariable> insert concode_elem_sep String toCodeString concode_elem_sep MVariable getVariable concode_elem_sep MStatement getDeclaringStatement concode_elem_sep void checkRep concode_elem_sep int size concode_elem_sep StatementKind getStatementKind concode_elem_sep List<MVariable> getInputs concode_elem_sep String toString concode_elem_sep MStatement getStatement concode_elem_sep int numInfluencingStatements"}
{"code": "void function ( String arg0 ) { this . className = arg0 ; }", "nl": "setter method for property classname . concode_field_sep Class<?>[] parameterTypes concode_elem_sep String requestId concode_elem_sep String methodName concode_elem_sep String className concode_elem_sep Object[] parameters concode_field_sep void setParameterTypes concode_elem_sep void setParameters concode_elem_sep String getMethodName concode_elem_sep void setMethodName concode_elem_sep void setRequestId concode_elem_sep Object[] getParameters concode_elem_sep Class<?>[] getParameterTypes concode_elem_sep String toString concode_elem_sep String getClassName concode_elem_sep String getRequestId"}
{"code": "Period function ( ) { return Period . ZERO . withFields ( this ) ; }", "nl": "get this period as an immutable period object . the period will use periodtype.standard . concode_field_sep long START_1972 concode_elem_sep int iPeriod concode_elem_sep long serialVersionUID concode_field_sep DurationFieldType getFieldType concode_elem_sep DurationFieldType getFieldType concode_elem_sep boolean isSupported concode_elem_sep int compareTo concode_elem_sep int getValue concode_elem_sep int getValue concode_elem_sep int size concode_elem_sep int hashCode concode_elem_sep void setValue concode_elem_sep int get concode_elem_sep boolean equals concode_elem_sep PeriodType getPeriodType concode_elem_sep MutablePeriod toMutablePeriod concode_elem_sep int between concode_elem_sep int between concode_elem_sep int standardPeriodIn"}
{"code": "int function ( ) { return ( this . name ( ) . hashCode ( ) ) ; }", "nl": "a classeditor 's hash code is based upon the hash code of the name of the class it edits . concode_field_sep boolean dirty concode_elem_sep ClassInfo classInfo concode_elem_sep Type[] interfaces concode_elem_sep Type superclass concode_elem_sep EditorContext context concode_elem_sep ConstantPool constants concode_elem_sep Type type concode_elem_sep boolean DEBUG concode_field_sep void setInterface concode_elem_sep void setInterfaces concode_elem_sep boolean isStatic concode_elem_sep boolean isSuper concode_elem_sep MethodInfo[] methods concode_elem_sep void commit concode_elem_sep boolean isPrivate concode_elem_sep Type type concode_elem_sep int modifiers concode_elem_sep void setDirty concode_elem_sep void setFinal concode_elem_sep void setSuper concode_elem_sep boolean isDirty concode_elem_sep boolean isProtected concode_elem_sep Type superclass concode_elem_sep void setProtected concode_elem_sep EditorContext context concode_elem_sep boolean isPublic concode_elem_sep boolean isFinal concode_elem_sep ConstantPool constants concode_elem_sep boolean isInterface concode_elem_sep ClassInfo classInfo concode_elem_sep void setPublic concode_elem_sep Type[] interfaces concode_elem_sep void addInterface concode_elem_sep void addInterface concode_elem_sep void setStatic concode_elem_sep void setType concode_elem_sep void commitOnly concode_elem_sep boolean isAbstract concode_elem_sep void setSuperclass concode_elem_sep boolean equals concode_elem_sep String name concode_elem_sep void setAbstract concode_elem_sep String toString concode_elem_sep void visit concode_elem_sep FieldInfo[] fields concode_elem_sep void setPrivate"}
{"code": "ArrayList < GenPolynomial < C >> function ( ) { return P ; }", "nl": "get the list of polynomials . concode_field_sep ArrayList<GenPolynomial<C>> P concode_elem_sep ArrayList<BitSet> red concode_elem_sep boolean useCriterion4 concode_elem_sep int putCount concode_elem_sep Logger logger concode_elem_sep GenPolynomialRing<C> ring concode_elem_sep boolean oneInGB concode_elem_sep int remCount concode_elem_sep int moduleVars concode_elem_sep Reduction<C> reduction concode_elem_sep TreeMap<ExpVector,LinkedList<Pair<C>>> pairlist concode_field_sep int putOne concode_elem_sep int putCount concode_elem_sep boolean hasNext concode_elem_sep int remCount concode_elem_sep boolean criterion3 concode_elem_sep int put concode_elem_sep Pair<C> removeNext"}
{"code": "void function ( JellyContext arg0 , XMLOutput arg1 ) { for ( Iterator loc0 = list . iterator ( ) ; loc0 . hasNext ( ) ; ) { Script loc1 = ( Script ) loc0 . next ( ) ; loc1 . run ( arg0 , arg1 ) ; } }", "nl": "evaluates the body of a tag concode_field_sep List list concode_field_sep List getScriptList concode_elem_sep void addScript concode_elem_sep Script compile concode_elem_sep void trimWhitespace concode_elem_sep String toString concode_elem_sep void removeScript"}
{"code": "Criteria function ( Object arg0 ) { return is ( arg0 ) ; }", "nl": "creates a criterion using equality concode_field_sep List<Criteria> criteriaChain concode_elem_sep ValueNode left concode_elem_sep ValueNode right concode_elem_sep RelationalOperator criteriaType concode_field_sep Criteria lt concode_elem_sep Criteria type concode_elem_sep String prefixPath concode_elem_sep Criteria empty concode_elem_sep void checkComplete concode_elem_sep Criteria nin concode_elem_sep Criteria nin concode_elem_sep Criteria and concode_elem_sep Criteria gte concode_elem_sep Criteria create concode_elem_sep Criteria where concode_elem_sep Criteria where concode_elem_sep Criteria lte concode_elem_sep Criteria all concode_elem_sep Criteria all concode_elem_sep boolean apply concode_elem_sep Criteria in concode_elem_sep Criteria in concode_elem_sep Criteria is concode_elem_sep Criteria parse concode_elem_sep Criteria gt concode_elem_sep Criteria matches concode_elem_sep Criteria regex concode_elem_sep Criteria contains concode_elem_sep Criteria size concode_elem_sep Criteria ne concode_elem_sep Criteria exists concode_elem_sep String toString concode_elem_sep Collection<RelationalExpressionNode> toRelationalExpressionNodes concode_elem_sep Criteria notEmpty"}
{"code": "void function ( long arg0 ) { try { Thread . sleep ( arg0 ) ; } catch ( InterruptedException loc0 ) { loc0 . printStackTrace ( ) ; } }", "nl": "pause . concode_field_sep long syncTimeout concode_field_sep void typeKeyboardEnterkey concode_elem_sep void type concode_elem_sep void waitFor concode_elem_sep void doType concode_elem_sep void doType concode_elem_sep void typeUsingKeyPress"}
{"code": "void function ( ) { delegate . beginTextBlock ( ) ; }", "nl": "this class delegates this call concode_field_sep RenderListener delegate concode_elem_sep RenderFilter[] filters concode_field_sep void renderImage concode_elem_sep void endTextBlock concode_elem_sep void renderText"}
{"code": "ModelNode function ( PathAddress arg0 , Map < Attribute , ModelNode > arg1 ) { ModelNode loc0 = Util . createAddOperation ( arg0 ) ; for ( Map . Entry < Attribute , ModelNode > loc1 : arg1 . entrySet ( ) ) { loc0 . get ( loc1 . getKey ( ) . getName ( ) ) . set ( loc1 . getValue ( ) ) ; } return loc0 ; }", "nl": "creates an add operation using the specified address and parameters concode_field_sep String INDEX concode_elem_sep String KEY concode_field_sep String getName concode_elem_sep ModelNode getAttributeValue concode_elem_sep ModelNode createWriteAttributeOperation concode_elem_sep ModelNode createReadAttributeOperation concode_elem_sep Set<String> getAllWriteAttributeOperationNames concode_elem_sep void setPathAddress concode_elem_sep ModelNode createMapEntryOperation concode_elem_sep ModelNode createListRemoveOperation concode_elem_sep ModelNode createListRemoveOperation concode_elem_sep ModelNode createUndefineAttributeOperation concode_elem_sep String getAttributeName concode_elem_sep ModelNode createCompositeOperation concode_elem_sep ModelNode createCompositeOperation concode_elem_sep ModelNode createReadResourceOperation concode_elem_sep ModelNode createMapRemoveOperation concode_elem_sep ModelNode createMapClearOperation concode_elem_sep ModelNode createMapPutOperation concode_elem_sep ModelNode createDescribeOperation concode_elem_sep boolean isIncludeDefaults concode_elem_sep ModelNode createListElementOperation concode_elem_sep ModelNode createListElementOperation concode_elem_sep ModelNode createListAddOperation concode_elem_sep ModelNode createListGetOperation concode_elem_sep ModelNode createAttributeOperation concode_elem_sep ModelNode createMapGetOperation concode_elem_sep PathAddress getPathAddress"}
{"code": "IJavaSearchScope function ( IJavaElement arg0 ) { return RefactoringScopeFactory . create ( arg0 , true , true ) ; }", "nl": "creates a new search scope with all compilation units possibly referencing javaelement , considering the visibility of the element , references only from source concode_field_sep PlaceHolder placeHolder concode_field_sep void addRelatedReferencing concode_elem_sep IPackageFragmentRoot[] getAllScopeElements concode_elem_sep IJavaSearchScope createRelatedProjectsScope concode_elem_sep void addRelatedReferenced concode_elem_sep IJavaSearchScope createReferencedScope concode_elem_sep IJavaSearchScope createReferencedScope concode_elem_sep IClasspathEntry getReferencingClassPathEntry concode_elem_sep IJavaProject[] getRelatedProjects concode_elem_sep Collection<IJavaProject> getReferencingProjects concode_elem_sep void addReferencingProjects concode_elem_sep int getVisibility"}
{"code": "int function ( ) { return ( beforeFirst ? - 1 : 0 ) ; }", "nl": "returns the index of the element that would be returned by a subsequent call to previous . a return value of -1 indicates that the iterator is currently at the start . concode_field_sep boolean beforeFirst concode_elem_sep boolean nextCalled concode_elem_sep boolean removed concode_elem_sep Object object concode_field_sep Object next concode_elem_sep void add concode_elem_sep void set concode_elem_sep Object previous concode_elem_sep boolean hasPrevious concode_elem_sep void reset concode_elem_sep boolean hasNext concode_elem_sep int nextIndex concode_elem_sep void remove"}
{"code": "int function ( ASTNode arg0 ) { int loc0 = arg0 . getStartPosition ( ) ; int loc1 = loc0 + arg0 . getLength ( ) ; if ( loc1 <= fStart ) return BEFORE ; else if ( covers ( arg0 ) ) return SELECTED ; else if ( fExclusiveEnd <= loc0 ) return AFTER ; return INTERSECTS ; }", "nl": "returns the selection mode of the given ast node regarding this selection . possible values are intersects , before , selected , and after . concode_field_sep int fLength concode_elem_sep int fExclusiveEnd concode_elem_sep int INTERSECTS concode_elem_sep int AFTER concode_elem_sep int fStart concode_elem_sep int BEFORE concode_elem_sep int SELECTED concode_field_sep int getExclusiveEnd concode_elem_sep Selection createFromStartEnd concode_elem_sep boolean coveredBy concode_elem_sep boolean coveredBy concode_elem_sep int getOffset concode_elem_sep boolean liesOutside concode_elem_sep Selection createFromStartLength concode_elem_sep int getEndVisitSelectionMode concode_elem_sep int getLength concode_elem_sep String toString concode_elem_sep boolean endsIn concode_elem_sep int getInclusiveEnd concode_elem_sep boolean covers concode_elem_sep boolean covers"}
{"code": "String function ( ) { return getDescription ( ) ; }", "nl": "return a description of this script step . concode_field_sep String description concode_elem_sep Resolver resolver concode_elem_sep Throwable invalidScriptError concode_elem_sep long serialVersionUID concode_field_sep String toXMLString concode_elem_sep Map getAttributes concode_elem_sep String getXMLTag concode_elem_sep void writeObject concode_elem_sep void usage concode_elem_sep void usage concode_elem_sep Element addAttributes concode_elem_sep void run concode_elem_sep Element toXML concode_elem_sep void setDescription concode_elem_sep String simpleClassName concode_elem_sep Element addContent concode_elem_sep String getDescription concode_elem_sep void parseStepAttributes concode_elem_sep String getUsage concode_elem_sep void readObject concode_elem_sep String getDefaultDescription concode_elem_sep String toEditableString concode_elem_sep Step createStep concode_elem_sep Step createStep concode_elem_sep void runStep concode_elem_sep ComponentTester resolveTester concode_elem_sep Class resolveClass concode_elem_sep void setScriptError concode_elem_sep Resolver getResolver concode_elem_sep Map createAttributeMap"}
{"code": "LIST < C > function ( C arg0 , C arg1 , C arg2 , C arg3 , LIST < C > arg4 ) { LIST < C > loc0 = arg4 ; if ( arg4 == null ) { loc0 = new LIST < C > ( ) ; } loc0 . list . addFirst ( arg3 ) ; loc0 . list . addFirst ( arg2 ) ; loc0 . list . addFirst ( arg1 ) ; loc0 . list . addFirst ( arg0 ) ; return loc0 ; }", "nl": "composition 4 . a1 , a2 , a3 and a4 are objects . l is a list . m = comp a1 , comp a2 , comp a3 , comp a4 , l . concode_field_sep LIST<?> SIL concode_elem_sep Iterator<C> iter concode_elem_sep LinkedList<C> list concode_field_sep void SFIRST concode_elem_sep LIST<C> LIST1 concode_elem_sep LIST<C> RED3 concode_elem_sep LIST<C> LIST3 concode_elem_sep LIST<C> RED4 concode_elem_sep LIST<C> LIST2 concode_elem_sep C THIRD concode_elem_sep LIST<C> LIST5 concode_elem_sep int LENGTH concode_elem_sep LIST<C> RED2 concode_elem_sep LIST<C> LIST4 concode_elem_sep LIST<C> COMP concode_elem_sep LIST<C> INV concode_elem_sep int ORDER concode_elem_sep LIST<C> COMP2 concode_elem_sep int EXTENT concode_elem_sep void SRED concode_elem_sep C LELT concode_elem_sep boolean EQUAL concode_elem_sep LIST<C> LIST10 concode_elem_sep boolean isEmpty concode_elem_sep LIST<C> CCONC concode_elem_sep C FIRST concode_elem_sep LIST<C> REDUCT concode_elem_sep C FOURTH concode_elem_sep LIST<C> RED concode_elem_sep LIST<C> CINV concode_elem_sep boolean isNull concode_elem_sep String toString concode_elem_sep C SECOND concode_elem_sep long CLOCK concode_elem_sep LIST<C> CONC"}
{"code": "int function ( ) { return state ; }", "nl": "returns the current state of the renderer . concode_field_sep long MATCH_LONGEST_US concode_elem_sep int STATE_UNPREPARED concode_elem_sep long UNKNOWN_TIME_US concode_elem_sep int STATE_PREPARED concode_elem_sep int STATE_ENABLED concode_elem_sep long END_OF_TRACK_US concode_elem_sep int STATE_STARTED concode_elem_sep int state concode_elem_sep int STATE_RELEASED concode_field_sep boolean doPrepare concode_elem_sep int prepare concode_elem_sep void onReleased concode_elem_sep void release concode_elem_sep boolean isReady concode_elem_sep void handleMessage concode_elem_sep void start concode_elem_sep int getTrackCount concode_elem_sep long getDurationUs concode_elem_sep void seekTo concode_elem_sep MediaClock getMediaClock concode_elem_sep void onStarted concode_elem_sep void stop concode_elem_sep void enable concode_elem_sep void disable concode_elem_sep long getBufferedPositionUs concode_elem_sep void onEnabled concode_elem_sep void maybeThrowError concode_elem_sep MediaFormat getFormat concode_elem_sep void doSomeWork concode_elem_sep void onStopped concode_elem_sep void onDisabled concode_elem_sep boolean isEnded"}
{"code": "void function ( OpModeManager arg0 ) { BlocksOpMode . registerAll ( arg0 ) ; AnnotatedOpModeRegistrar . register ( arg0 ) ; }", "nl": "#register opmodemanager is called by the sdk game in order to registeropmode classes or instances that will participate in an ftc game . there are two mechanisms by which an opmode may be registered . 1 the preferred method is by means of class annotations in the opmode itself . see , for example the class annotations in conceptnullop . 2 the other , retired , method is to modify this #register opmodemanager method to include explicit calls to opmodemanager.register . this method of modifying this file directly is discouraged , as it makes updates to the sdk harder to integrate into your code . concode_field_sep PlaceHolder placeHolder concode_field_sep placeholderType placeHolder"}
{"code": "void function ( ) { final File loc0 = this . testFolder . newFile ( ) ; new SimpleFileWriter ( loc0 . getPath ( ) , Assert :: assertNotNull ) ; }", "nl": "verify if the given writer is not ` null ' concode_field_sep TemporaryFolder testFolder concode_field_sep void testActualWrite concode_elem_sep void testNonExistentFile concode_elem_sep void testIoException"}
{"code": "DeviceDescriptor function ( ) { checkIsOpen ( ) ; return readDeviceDescriptor ( device . getHandle ( ) ) ; }", "nl": "reads the device descriptor from the devices eeprom . concode_field_sep Device device concode_elem_sep DeviceDescriptor deviceDescriptor concode_field_sep void writeUserArea concode_elem_sep void writeUserArea concode_elem_sep void erase concode_elem_sep void erase concode_elem_sep int getUserAreaSize concode_elem_sep DeviceDescriptor getDeviceDescriptor concode_elem_sep int readUserArea concode_elem_sep int readUserArea concode_elem_sep int readUserAreaSize concode_elem_sep void checkIsOpen concode_elem_sep void writeDeviceDescriptor concode_elem_sep void writeDeviceDescriptor"}
{"code": "ISDVInfo function ( ) { return new ISDVInfo ( ) ; }", "nl": "create an instance of isdvinfo concode_field_sep QName _HistoryHeader_QNAME concode_elem_sep QName _ISDVInfo_QNAME concode_elem_sep QName _KeyValuePairList_QNAME concode_elem_sep QName _LocalizedMessage_QNAME concode_elem_sep QName _BusinessException_QNAME concode_elem_sep QName _Message_QNAME concode_elem_sep QName _CallContext_QNAME concode_elem_sep QName _ValidationException_QNAME concode_elem_sep QName _NotFoundException_QNAME concode_elem_sep QName _ValidationContext_QNAME concode_elem_sep QName _TimePeriod_QNAME concode_elem_sep QName _OpenTimePeriod_QNAME concode_elem_sep QName _LocalizedString_QNAME concode_elem_sep QName _KeyValuePair_QNAME concode_elem_sep QName _TechnicalException_QNAME concode_field_sep ValidationException createValidationException concode_elem_sep JAXBElement<ValidationException> createValidationException concode_elem_sep CallContext createCallContext concode_elem_sep JAXBElement<CallContext> createCallContext concode_elem_sep OpenTimePeriod createOpenTimePeriod concode_elem_sep JAXBElement<OpenTimePeriod> createOpenTimePeriod concode_elem_sep LocalizedMessage createLocalizedMessage concode_elem_sep JAXBElement<LocalizedMessage> createLocalizedMessage concode_elem_sep TechnicalException createTechnicalException concode_elem_sep JAXBElement<TechnicalException> createTechnicalException concode_elem_sep KeyValuePairList createKeyValuePairList concode_elem_sep JAXBElement<KeyValuePairList> createKeyValuePairList concode_elem_sep TimePeriod createTimePeriod concode_elem_sep JAXBElement<TimePeriod> createTimePeriod concode_elem_sep LocalizedString createLocalizedString concode_elem_sep JAXBElement<LocalizedString> createLocalizedString concode_elem_sep HistoryHeader createHistoryHeader concode_elem_sep JAXBElement<HistoryHeader> createHistoryHeader concode_elem_sep KeyValuePair createKeyValuePair concode_elem_sep JAXBElement<KeyValuePair> createKeyValuePair concode_elem_sep BusinessException createBusinessException concode_elem_sep JAXBElement<BusinessException> createBusinessException concode_elem_sep NotFoundException createNotFoundException concode_elem_sep JAXBElement<NotFoundException> createNotFoundException concode_elem_sep ValidationContext createValidationContext concode_elem_sep JAXBElement<ValidationContext> createValidationContext concode_elem_sep Message createMessage concode_elem_sep JAXBElement<Message> createMessage"}
{"code": "void function ( ) { Assert . assertFalse ( i . isStackOwner ( ) ) ; }", "nl": "verifies if image is a stack owner . should be false . concode_field_sep Image i concode_elem_sep Tag I concode_elem_sep WorkerContext workerContextImpl concode_field_sep void init concode_elem_sep void verifyEnd"}
{"code": "void function ( String arg0 ) { this . inputInfo = arg0 ; }", "nl": "sets the input info . concode_field_sep String inputInfo concode_elem_sep String outputMessage concode_elem_sep List<String> validatorErrorMessage concode_field_sep List<String> getValidatorErrorMessage concode_elem_sep String getInputInfo concode_elem_sep void setValidatorErrorMessage concode_elem_sep String getOutputMessage concode_elem_sep void setOutputMessage"}
{"code": "String function ( String arg0 ) { return markLTR ( arg0 , \"srini_string\" ) ; }", "nl": "returns the label for a url , uri or url part . example is ` http://www.x.xom/s.html#1 ' concode_field_sep String CONCAT_STRING concode_field_sep String getFilePattern concode_elem_sep String markLTR concode_elem_sep String getResourceName concode_elem_sep String getResourceName concode_elem_sep String getVersionName concode_elem_sep String getPathLabel"}
{"code": "boolean function ( ) { return false ; }", "nl": "trace is never enabled . concode_field_sep PlaceHolder placeHolder concode_field_sep void warn concode_elem_sep void warn concode_elem_sep void trace concode_elem_sep void trace concode_elem_sep void debug concode_elem_sep void debug concode_elem_sep boolean isInfoEnabled concode_elem_sep boolean isErrorEnabled concode_elem_sep boolean isDebugEnabled concode_elem_sep boolean isWarnEnabled concode_elem_sep void error concode_elem_sep void error concode_elem_sep boolean isFatalEnabled concode_elem_sep void info concode_elem_sep void info concode_elem_sep void fatal concode_elem_sep void fatal"}
{"code": "String function ( boolean arg0 ) { StringWriter loc0 = new StringWriter ( ) ; invokeBody ( XMLOutput . createXMLOutput ( loc0 , arg0 ) ) ; return loc0 . toString ( ) ; }", "nl": "executes the body of the tag and returns the result as a string . concode_field_sep Tag parent concode_elem_sep JellyContext context concode_elem_sep boolean hasTrimmed concode_elem_sep Script body concode_elem_sep boolean escapeText concode_elem_sep Boolean shouldTrim concode_field_sep Tag getParent concode_elem_sep boolean isTrim concode_elem_sep Script getBody concode_elem_sep void setBody concode_elem_sep void invokeBody concode_elem_sep boolean isEscapeText concode_elem_sep void setEscapeText concode_elem_sep void setTrim concode_elem_sep Tag findAncestorWithClass concode_elem_sep Tag findAncestorWithClass concode_elem_sep Tag findAncestorWithClass concode_elem_sep Tag findAncestorWithClass concode_elem_sep Tag findAncestorWithClass concode_elem_sep Tag findAncestorWithClass concode_elem_sep void setContext concode_elem_sep void setParent concode_elem_sep JellyContext getContext concode_elem_sep void trimBody"}
{"code": "EmbeddedObjectContainer function ( EmbeddedConfiguration arg0 , String arg1 ) { if ( null == arg0 ) { throw new ArgumentNullException ( ) ; } return ObjectContainerFactory . openObjectContainer ( arg0 , arg1 ) ; }", "nl": "opens an objectcontainer objectcontainer on the specified database file for local use . a database file can only be opened once , subsequent attempts to open another objectcontainer objectcontainer against the same file will result ina databasefilelockedexception databasefilelockedexception . database files can only be accessed for read/write access from one process one java vm at one time . all versions except for db4o mobile edition use an internal mechanism to lock the database file for other processes . concode_field_sep PlaceHolder placeHolder concode_field_sep EmbeddedConfiguration newConfiguration"}
{"code": "void function ( Object arg0 ) { log ( Level . SEVERE , String . valueOf ( arg0 ) , null ) ; }", "nl": "log a message with error log level . concode_field_sep String name concode_elem_sep Logger logger concode_field_sep void debug concode_elem_sep void debug concode_elem_sep void log concode_elem_sep Logger getLogger concode_elem_sep boolean isWarnEnabled concode_elem_sep boolean isFatalEnabled concode_elem_sep void fatal concode_elem_sep void fatal concode_elem_sep void warn concode_elem_sep void warn concode_elem_sep void trace concode_elem_sep void trace concode_elem_sep boolean isInfoEnabled concode_elem_sep boolean isErrorEnabled concode_elem_sep boolean isTraceEnabled concode_elem_sep boolean isDebugEnabled concode_elem_sep void info concode_elem_sep void info"}
{"code": "Set < T > function ( ) { if ( getContexts ( ) == null ) { return Collections . unmodifiableSet ( new HashSet < T > ( ) ) ; } return getContexts ( ) ; }", "nl": "replaces getcontexts call but ensures that if list not yet initialized then empty list will be returned concode_field_sep PlaceHolder placeHolder concode_field_sep Set<T> getContexts concode_elem_sep void setContexts concode_elem_sep void addToContextList concode_elem_sep List<T> getContextsByLowestContext concode_elem_sep Integer getId concode_elem_sep void addContext concode_elem_sep T getOrCreateContext concode_elem_sep T getContext concode_elem_sep T createContext"}
{"code": "VectorXZ function ( ) { return ( startNode . getPos ( ) . add ( endNode . getPos ( ) ) ) . mult ( 0.5 ) ; }", "nl": "returns the center of the line concode_field_sep VectorXZ rightNormal concode_elem_sep MapNode startNode concode_elem_sep VectorXZ direction concode_elem_sep MapNode endNode concode_field_sep MapNode getOtherNode concode_elem_sep VectorXZ getRightNormal concode_elem_sep VectorXZ getDirection concode_elem_sep LineSegmentXZ getLineSegment concode_elem_sep boolean isConnectedTo concode_elem_sep boolean isConnectedTo concode_elem_sep MapNode getEndNode concode_elem_sep List<MapNode> getStartEndNodes concode_elem_sep boolean sharesBothNodes concode_elem_sep MapNode getStartNode"}
{"code": "String function ( ) { return result . toString ( ) ; }", "nl": "returns the result so far . concode_field_sep Vector lastEnd concode_elem_sep StringBuffer result concode_elem_sep Vector lastStart concode_field_sep void renderImage concode_elem_sep void appendTextChunk concode_elem_sep void beginTextBlock concode_elem_sep void endTextBlock concode_elem_sep void renderText"}
{"code": "GenMatrix < C > function ( ) { ArrayList < ArrayList < C >> loc0 = new ArrayList < ArrayList < C >> ( ring . rows ) ; for ( ArrayList < C > loc1 : matrix ) { ArrayList < C > loc2 = new ArrayList < C > ( ring . cols ) ; for ( C loc3 : loc1 ) { C loc4 = loc3 . negate ( ) ; loc2 . add ( loc4 ) ; } loc0 . add ( loc2 ) ; } return new GenMatrix < C > ( ring , loc0 ) ; }", "nl": "negative of this matrix . concode_field_sep List<C> val concode_elem_sep Logger logger concode_elem_sep GenMatrixRing<C> ring concode_elem_sep ArrayList<ArrayList<C>> matrix concode_elem_sep int hashValue concode_field_sep GenMatrix<C> leftLinearCombination concode_elem_sep int signum concode_elem_sep boolean isONE concode_elem_sep GenMatrix<C> inverse concode_elem_sep boolean isUnit concode_elem_sep GenMatrix<C> subtract concode_elem_sep GenMatrix<C> scalarMultiply concode_elem_sep GenMatrix<C> gcd concode_elem_sep GenMatrix<C> sum concode_elem_sep GenMatrix<C> linearCombination concode_elem_sep GenMatrix<C> linearCombination concode_elem_sep GenMatrix<C> linearCombination concode_elem_sep int compareTo concode_elem_sep GenMatrix<C>[] egcd concode_elem_sep GenMatrix<C> leftScalarMultiply concode_elem_sep GenMatrix<C> abs concode_elem_sep int hashCode concode_elem_sep GenMatrix<C> multiplySimple concode_elem_sep boolean equals concode_elem_sep GenMatrix<C> clone concode_elem_sep boolean isZERO concode_elem_sep GenMatrix<C> divide concode_elem_sep String toString concode_elem_sep GenMatrix<C> transpose concode_elem_sep GenMatrix<C> multiply concode_elem_sep GenMatrix<C> remainder"}
{"code": "ResourceEditPropertyBuilder function ( String arg0 ) { this . fcExternalLink = arg0 ; return this ; }", "nl": "foreignable external link concode_field_sep boolean isTesting concode_elem_sep String typeName concode_elem_sep Clob propertyValue concode_elem_sep Clob exampleValue concode_elem_sep boolean isEncrypted concode_elem_sep String propContName concode_elem_sep Integer descriptorId concode_elem_sep String typeContName concode_elem_sep Integer typeId concode_elem_sep Clob defaultValue concode_elem_sep String resourceName concode_elem_sep String fcExternalKey concode_elem_sep String technicalKey concode_elem_sep String mik concode_elem_sep Integer propContextId concode_elem_sep String origin concode_elem_sep Integer cardinalityProperty concode_elem_sep Integer propertyValueTypeId concode_elem_sep String displayName concode_elem_sep String fcOwner concode_elem_sep Integer propertyId concode_elem_sep Integer masterTypeId concode_elem_sep boolean isNullable concode_elem_sep String fcExternalLink concode_elem_sep String validationRegex concode_elem_sep String loadedFor concode_elem_sep boolean isOptional concode_elem_sep String validationLogic concode_elem_sep String descriptorOrigin concode_elem_sep Integer typeContextId concode_elem_sep Clob propertyComment concode_field_sep ResourceEditPropertyBuilder withDisplayAndTechKeyName concode_elem_sep ResourceEditPropertyBuilder withOrigin concode_elem_sep ResourceEditPropertyBuilder withValidationRegex concode_elem_sep ResourceEditPropertyBuilder withIsEncrypted concode_elem_sep ResourceEditPropertyBuilder withDescriptorOrigin concode_elem_sep Clob convert concode_elem_sep ResourceEditPropertyBuilder withTechnicalKey concode_elem_sep ResourceEditPropertyBuilder withMasterResTypeName concode_elem_sep ResourceEditPropertyBuilder withLoadedFor concode_elem_sep ResourceEditPropertyBuilder withDisplayName concode_elem_sep ResourceEditPropertyBuilder withValue concode_elem_sep ResourceEditPropertyBuilder withDefaultValue concode_elem_sep ResourceEditPropertyBuilder withDescriptorId concode_elem_sep ResourceEditPropertyBuilder withTypeId concode_elem_sep ResourceEditPropertyBuilder withDescriptor concode_elem_sep ResourceEditPropertyBuilder withCardinality concode_elem_sep ResourceEditPropertyBuilder withPropTypeContName concode_elem_sep ResourceEditPropertyBuilder withValidationLogic concode_elem_sep ResourceEditPropertyBuilder withPropertyContextTypeId concode_elem_sep ResourceEditPropertyBuilder withPropertyId concode_elem_sep ResourceEditPropertyBuilder withPropContName concode_elem_sep ResourceEditPropertyBuilder withComment concode_elem_sep ResourceEditPropertyBuilder withFcOwner concode_elem_sep ResourceEditPropertyBuilder withMasterResTypeId concode_elem_sep ResourceEditPropertyBuilder withFcExternalKey concode_elem_sep ResourceEditProperty build concode_elem_sep ResourceEditPropertyBuilder withIsTesting concode_elem_sep ResourceEditPropertyBuilder withExampleValue concode_elem_sep ResourceEditPropertyBuilder withResourceName concode_elem_sep ResourceEditPropertyBuilder withPropContextId concode_elem_sep ResourceEditPropertyBuilder withIsNullable"}
{"code": "FieldSelector function ( final String arg0 ) { return new FieldSelector ( arg0 ) ; }", "nl": "maps a cql value to the specified field from an input tuple . concode_field_sep PlaceHolder placeHolder concode_field_sep BatchCQLStatementTupleMapper unLoggedBatch concode_elem_sep CqlMapper.DefaultCqlMapper all concode_elem_sep CQLStatementTupleMapper async concode_elem_sep ContextQuery named concode_elem_sep ContextQuery namedByField concode_elem_sep BatchCQLStatementTupleMapper newBatchStatementBuilder concode_elem_sep BatchCQLStatementTupleMapper counterBatch concode_elem_sep BatchCQLStatementTupleMapper loggedBatch concode_elem_sep BoundCQLStatementMapperBuilder boundQuery concode_elem_sep BoundCQLStatementMapperBuilder boundQuery concode_elem_sep FieldSelector[] fields concode_elem_sep SimpleCQLStatementMapperBuilder simpleQuery concode_elem_sep SimpleCQLStatementMapperBuilder simpleQuery"}
{"code": "boolean function ( final HttpCacheEntry arg0 , final Date arg1 , final float arg2 , final long arg3 ) { return ( getCurrentAgeSecs ( arg0 , arg1 ) < getHeuristicFreshnessLifetimeSecs ( arg0 , arg2 , arg3 ) ) ; }", "nl": "decides if this response is fresh enough based last-modified and date , if available . this entry is meant to be used when isresponsefresh returns false . the algorithm is as follows : if last-modified and date are defined , freshness lifetime is coefficient date-lastmodified , else freshness lifetime is defaultlifetime concode_field_sep long MAX_AGE concode_field_sep boolean isRevalidatable concode_elem_sep long getResidentTimeSecs concode_elem_sep boolean mayReturnStaleIfError concode_elem_sep boolean mayReturnStaleIfError concode_elem_sep long getHeuristicFreshnessLifetimeSecs concode_elem_sep Date getLastModifiedValue concode_elem_sep boolean proxyRevalidate concode_elem_sep Date getExpirationDate concode_elem_sep long getCorrectedInitialAgeSecs concode_elem_sep boolean isResponseFresh concode_elem_sep long getApparentAgeSecs concode_elem_sep boolean mayReturnStaleWhileRevalidating concode_elem_sep long getContentLengthValue concode_elem_sep boolean hasCacheControlDirective concode_elem_sep boolean contentLengthHeaderMatchesActualLength concode_elem_sep long getStalenessSecs concode_elem_sep boolean hasContentLengthHeader concode_elem_sep long getCorrectedReceivedAgeSecs concode_elem_sep long getFreshnessLifetimeSecs concode_elem_sep long getCurrentAgeSecs concode_elem_sep long getMaxAge concode_elem_sep long getAgeValue concode_elem_sep long getResponseDelaySecs concode_elem_sep boolean mustRevalidate concode_elem_sep Date getDateValue"}
{"code": "boolean function ( ) { return _map . isEmpty ( ) ; }", "nl": "returns true if the underlying map is empty . concode_field_sep Object _current concode_elem_sep int _total concode_elem_sep DefaultMapBag _parent concode_elem_sep Map _map concode_elem_sep int _mods concode_elem_sep Iterator _support concode_field_sep boolean add concode_elem_sep boolean add concode_elem_sep Object next concode_elem_sep boolean containsAll concode_elem_sep boolean containsAll concode_elem_sep void clear concode_elem_sep boolean hasNext concode_elem_sep void remove concode_elem_sep boolean remove concode_elem_sep boolean remove concode_elem_sep Map getMap concode_elem_sep int modCount concode_elem_sep boolean contains concode_elem_sep Iterator iterator concode_elem_sep boolean removeAll concode_elem_sep int size concode_elem_sep boolean addAll concode_elem_sep int hashCode concode_elem_sep int calcTotalSize concode_elem_sep boolean equals concode_elem_sep Object[] toArray concode_elem_sep Object[] toArray concode_elem_sep Set uniqueSet concode_elem_sep void setMap concode_elem_sep String toString concode_elem_sep int getCount concode_elem_sep List extractList concode_elem_sep boolean retainAll concode_elem_sep boolean retainAll"}
{"code": "short function ( int arg0 ) { if ( list . isEmpty ( ) ) { throw new EmptyStackException ( ) ; } return list . get ( list . size ( ) - arg0 - 1 ) ; }", "nl": "return the n'th short down the stack , where 0 is the top element and size -1 is the bottom element . concode_field_sep ArrayShortList list concode_field_sep short pop concode_elem_sep int search concode_elem_sep int size concode_elem_sep short get concode_elem_sep void clear concode_elem_sep short push concode_elem_sep boolean empty"}
{"code": "Residue < C > function ( ) { return new Residue < C > ( ring , val ) ; }", "nl": "clone this . concode_field_sep C val concode_elem_sep ResidueRing<C> ring concode_elem_sep boolean debug concode_elem_sep int isunit concode_elem_sep Logger logger concode_field_sep int signum concode_elem_sep boolean isONE concode_elem_sep Residue<C> inverse concode_elem_sep boolean isUnit concode_elem_sep Residue<C> subtract concode_elem_sep Residue<C> gcd concode_elem_sep Residue<C> sum concode_elem_sep int compareTo concode_elem_sep Residue<C>[] egcd concode_elem_sep Residue<C> abs concode_elem_sep int hashCode concode_elem_sep Residue<C> negate concode_elem_sep boolean equals concode_elem_sep boolean isZERO concode_elem_sep String toString concode_elem_sep Residue<C> divide concode_elem_sep Residue<C> multiply concode_elem_sep Residue<C> remainder"}
{"code": "PartitionOutgoingBatch function ( int arg0 ) { for ( Partitioner loc0 : partitioners ) { PartitionOutgoingBatch loc1 = loc0 . getOutgoingBatch ( arg0 ) ; if ( loc1 != null ) { return loc1 ; } } return null ; }", "nl": "helper method to get partitionoutgoingbatch based on the index since we may have more then one partitioner as number of partitioners should be very small and this method it used very rarely , so it is ok to loop in order to find right partitioner concode_field_sep RecordBatch incoming concode_elem_sep boolean isLastBatch concode_elem_sep Partitioner part concode_elem_sep org.slf4j.Logger logger concode_elem_sep String childThreadPrefix concode_elem_sep GeneralExecuteIface iface concode_elem_sep ControlsInjector injector concode_elem_sep String parentThreadName concode_elem_sep CountDownLatchInjection testCountDownLatch concode_elem_sep OperatorStats stats concode_elem_sep ExecutorService executor concode_elem_sep String tName concode_elem_sep FragmentContext context concode_elem_sep boolean schemaChanged concode_elem_sep CountDownLatch latch concode_elem_sep IOException exp concode_elem_sep List<Partitioner> partitioners concode_field_sep void partitionBatch concode_elem_sep IOException getException concode_elem_sep List<Partitioner> getPartitioners concode_elem_sep void clear concode_elem_sep void flushOutgoingBatches concode_elem_sep void executeMethodLogic concode_elem_sep void run concode_elem_sep Partitioner getPart concode_elem_sep void initialize concode_elem_sep void execute concode_elem_sep void execute concode_elem_sep void execute"}
{"code": "void function ( GUIRunner arg0 ) { this . runner = arg0 ; }", "nl": "sets the main window of the guirunner . concode_field_sep ConfigFile selectedFile concode_elem_sep LastOpened lastOpened concode_elem_sep List<IRunnerCtrlListener> listeners concode_elem_sep JButton launchButton concode_elem_sep GUIRunner runner concode_elem_sep JButton startVisBtn concode_elem_sep SeedDetermination det concode_field_sep SeedDetermination getDetermination concode_elem_sep void removeListener concode_elem_sep void invokeStartVis concode_elem_sep void runSimulator concode_elem_sep void setLastOpened concode_elem_sep void actionPerformed concode_elem_sep ConfigFile getSelectedFile concode_elem_sep void setLaunchButton concode_elem_sep void invokeRunSimulator concode_elem_sep void newFileSelected concode_elem_sep void newFileSelected concode_elem_sep void selectFile concode_elem_sep void setStartVisBtn concode_elem_sep void addListener"}
{"code": "void function ( int arg0 , int arg1 ) { if ( arg0 < 0 ) { isTimerRunning = false ; } else { isTimerRunning = true ; theTimer = new Timer ( ) ; } }", "nl": "this method creates the timer to be used , if one is desired to be used . it will also set the number of seconds for each turn . concode_field_sep Player playerTwo concode_elem_sep int gameType concode_elem_sep Facade theFacade concode_elem_sep Rules theRules concode_elem_sep Player passivePlayer concode_elem_sep boolean isTimerRunning concode_elem_sep Player activePlayer concode_elem_sep IMediator mediator concode_elem_sep Timer theTimer concode_elem_sep Player playerOne concode_field_sep void endGame concode_elem_sep void setPlayerName concode_elem_sep IMediator getMediator concode_elem_sep void selectColors concode_elem_sep void setPlayerColor concode_elem_sep int getGameMode concode_elem_sep void ReceiveMessage concode_elem_sep void endTurn concode_elem_sep void setGameMode concode_elem_sep void RecievePassivePlayer concode_elem_sep void createPlayer concode_elem_sep void RecieveActivePlayer concode_elem_sep Notifier getTimerNotifier concode_elem_sep void requestActive concode_elem_sep void setMediator concode_elem_sep void requestPlayerName concode_elem_sep Player getOppositePlayer concode_elem_sep Facade getFacade concode_elem_sep void startGame concode_elem_sep void SendMessage concode_elem_sep void requestPassive"}
{"code": "Type function ( ) { return type ; }", "nl": "whether this is a smartmachine or virtualmachine dataset concode_field_sep String urn concode_elem_sep boolean isDefault concode_elem_sep Map<String,JsonBall> requirements concode_elem_sep String os concode_elem_sep ImmutableMap.Builder<String,JsonBall> requirements concode_elem_sep Date created concode_elem_sep String name concode_elem_sep String description concode_elem_sep String id concode_elem_sep Type type concode_elem_sep Function<JsonBall,String> unquoteString concode_elem_sep String version concode_field_sep Builder toBuilder concode_elem_sep String getOs concode_elem_sep String getName concode_elem_sep Builder description concode_elem_sep String getId concode_elem_sep Map<String,String> getRequirementsAsJsonLiterals concode_elem_sep int compareTo concode_elem_sep Builder type concode_elem_sep Builder addRequirement concode_elem_sep String getDescription concode_elem_sep int hashCode concode_elem_sep Builder builder concode_elem_sep Builder id concode_elem_sep String getVersion concode_elem_sep Builder requirements concode_elem_sep Map<String,String> getRequirements concode_elem_sep Builder os concode_elem_sep String apply concode_elem_sep Builder created concode_elem_sep Date getCreated concode_elem_sep Builder version concode_elem_sep Builder urn concode_elem_sep Builder fromDataset concode_elem_sep Builder isDefault concode_elem_sep boolean isDefault concode_elem_sep String getUrn concode_elem_sep Dataset build concode_elem_sep boolean equals concode_elem_sep Builder name concode_elem_sep String toString"}
{"code": "boolean function ( String arg0 , MinorType arg1 ) { return ( arg1 == MinorType . VARCHAR || arg1 == MinorType . VARBINARY || arg1 == MinorType . VAR16CHAR ) && CAST_FUNC_REPLACEMENT_NEEDED . contains ( arg0 ) ; }", "nl": "check if a replacing cast function is available for the the original function concode_field_sep Map<String,String> CAST_FUNC_REPLACEMENT_FROM_NULLABLE_VAR16CHAR concode_elem_sep Map<String,String> CAST_FUNC_REPLACEMENT_FROM_NULLABLE_VARCHAR concode_elem_sep Set<String> CAST_FUNC_REPLACEMENT_NEEDED concode_elem_sep Map<String,String> CAST_FUNC_REPLACEMENT_FROM_NONNULLABLE_VARBINARY concode_elem_sep Map<String,String> CAST_FUNC_REPLACEMENT_FROM_NONNULLABLE_VARCHAR concode_elem_sep Map<String,String> CAST_FUNC_REPLACEMENT_FROM_NONNULLABLE_VAR16CHAR concode_elem_sep Map<String,String> CAST_FUNC_REPLACEMENT_FROM_NULLABLE_VARBINARY concode_elem_sep Map<MinorType,String> TYPE2FUNC concode_field_sep String getReplacingCastFunction concode_elem_sep String getCastFunc concode_elem_sep String getReplacingCastFunctionFromNonNullable concode_elem_sep String getReplacingCastFunctionFromNullable"}
{"code": "void function ( ) { switch ( getState ( ) ) { case CLOSED : throw new IllegalStateException ( \"srini_string\" ) ; case STARTED : throw new IllegalStateException ( \"srini_string\" ) ; } setTargetState ( PREFETCHED ) ; }", "nl": "initiates the following asynchronous state transitions : unrealized - > realizing - > realized - > prefetching - > prefetched realizing - > realized - > prefetching - > prefetched realized - > prefetching - > prefetched prefetching - > prefetched prefetched started - > throws illegalstateexception closed - > throws illegalstateexception concode_field_sep SequentialDispatcher dispatcher concode_elem_sep int state concode_elem_sep PropertyChangeSupport propertyChangeSupport concode_elem_sep EventListenerList listenerList concode_elem_sep int targetState concode_field_sep void removeStateListener concode_elem_sep void doRealized concode_elem_sep void doPrefetching concode_elem_sep void fireStateChanged concode_elem_sep void fireStateChanged concode_elem_sep int getTargetState concode_elem_sep void deallocate concode_elem_sep void start concode_elem_sep void run concode_elem_sep boolean isActive concode_elem_sep void setTargetState concode_elem_sep void removePropertyChangeListener concode_elem_sep void addChangeListener concode_elem_sep void doUnrealized concode_elem_sep void doRealizing concode_elem_sep void removeChangeListener concode_elem_sep void doClosed concode_elem_sep int getState concode_elem_sep void stop concode_elem_sep void doPrefetched concode_elem_sep void doStarted concode_elem_sep void addStateListener concode_elem_sep void addPropertyChangeListener concode_elem_sep void close concode_elem_sep void realize"}
{"code": "void function ( RandomAccessSource arg0 ) { }", "nl": "called when a given source is about to become the active source . this gives subclasses the abilty to retrieve resources , if appropriate . concode_field_sep SourceEntry[] sources concode_elem_sep long size concode_elem_sep long lastByte concode_elem_sep int index concode_elem_sep RandomAccessSource source concode_elem_sep long firstByte concode_elem_sep SourceEntry currentSourceEntry concode_field_sep int getStartingSourceIndex concode_elem_sep void sourceReleased concode_elem_sep int get concode_elem_sep int get concode_elem_sep long length concode_elem_sep SourceEntry getSourceEntryForOffset concode_elem_sep void close concode_elem_sep long offsetN"}
{"code": "void function ( final T arg0 ) { synchronized ( queuedEvents ) { queuedEvents . addLast ( arg0 ) ; if ( ! started || isProcessing ) { return ; } isProcessing = true ; } processEvents ( ) ; }", "nl": "send an event to the processor . the event will be queued to be processed after any prior events are processed , once processing actually starts . if an event 's processing causes an exception , it will be added to any previous exceptions as a suppressed exception . once all the currently queued events have been processed , a single exception will be thrown . concode_field_sep boolean started concode_elem_sep LinkedList<T> queuedEvents concode_elem_sep boolean isProcessing concode_field_sep void processEvents concode_elem_sep void start concode_elem_sep void processEvent"}
{"code": "List < UserAccount > function ( ) { List < UserAccount > loc0 = new ArrayList < > ( ) ; Node loc1 = head ; while ( loc1 != null ) { loc0 . add ( loc1 . userAccount ) ; loc1 = loc1 . next ; } return loc0 ; }", "nl": "returns cache data in list form . concode_field_sep Node next concode_elem_sep Map<String,Node> cache concode_elem_sep Node head concode_elem_sep Node previous concode_elem_sep Logger LOGGER concode_elem_sep UserAccount userAccount concode_elem_sep Node end concode_elem_sep String userId concode_elem_sep int capacity concode_field_sep boolean contains concode_elem_sep void set concode_elem_sep UserAccount getLruData concode_elem_sep UserAccount get concode_elem_sep void setHead concode_elem_sep void clear concode_elem_sep void invalidate concode_elem_sep boolean isFull concode_elem_sep void setCapacity concode_elem_sep void remove"}
{"code": "String function ( ) { return cacheName ; }", "nl": "retrieves the name of the cache concode_field_sep String PUBLISH_THREAD_NAME concode_elem_sep String cacheName concode_elem_sep int eventQueueLength concode_elem_sep ExecutorService executorService concode_elem_sep Object EVENTQUEUELOCK concode_elem_sep Queue<LoggingEvent> eventQueue concode_elem_sep ICachePublisher cachePublisher concode_elem_sep int capacity concode_field_sep ExecutorService createExecutorService concode_elem_sep void add concode_elem_sep Future<Boolean> publishCache concode_elem_sep void publish concode_elem_sep PublishContext startPublish concode_elem_sep void flushAndPublishQueue concode_elem_sep void endPublish"}
{"code": "LinearLayout function ( Context arg0 , String arg1 , View arg2 , TextView arg3 ) { LinearLayout loc0 = new LinearLayout ( arg0 ) ; loc0 . setOrientation ( LinearLayout . VERTICAL ) ; if ( arg3 == null ) arg3 = new TextView ( arg0 ) ; arg3 . setTextSize ( 10.0f ) ; arg3 . setText ( arg1 ) ; loc0 . addView ( arg3 ) ; loc0 . addView ( arg2 ) ; return loc0 ; }", "nl": "generate linearlayout with given title concode_field_sep double textScale concode_elem_sep ArrayList<MyCard> cardsInPlay concode_elem_sep String TAG concode_field_sep void addCard concode_elem_sep GridView makeGV concode_elem_sep CardView getCardView concode_elem_sep void newCardGroup concode_elem_sep void clearCards"}
{"code": "Object function ( ) { if ( collection . size ( ) == 0 ) { throw new NoSuchElementException ( \"srini_string\" ) ; } if ( iterator . hasNext ( ) == false ) { reset ( ) ; } return iterator . next ( ) ; }", "nl": "returns the next object in the collection . if at the end of the collection , return the first element . concode_field_sep Iterator iterator concode_elem_sep Collection collection concode_field_sep int size concode_elem_sep void reset concode_elem_sep boolean hasNext concode_elem_sep void remove"}
{"code": "void function ( List < OverlayAdapter > arg0 ) { this . adapters = arg0 ; }", "nl": "setzt die verwendeten overlayadapter concode_field_sep List<OverlayAdapter> adapters concode_field_sep OverlayAdapter getAdapterAt concode_elem_sep List<OverlayAdapter> getAllAdapters concode_elem_sep Coords getSchematicHostPosition"}
{"code": "Integer function ( ) { if ( upcomingReleaseId == null ) { this . upcomingReleaseId = dependencyResolverService . findMostRelevantRelease ( new TreeSet < ReleaseEntity > ( getAllReleases ( ) ) , new Date ( ) ) . getId ( ) ; } return upcomingReleaseId ; }", "nl": "makes sure that the upcomingrelease is initialized concode_field_sep long serialVersionUID concode_elem_sep LinkedHashMap<Integer,ReleaseEntity> releaseMap concode_elem_sep ReleaseMgmtService releaseService concode_elem_sep ResourceDependencyResolverService dependencyResolverService concode_elem_sep Date upcomingReleaseDate concode_elem_sep Integer upcomingReleaseId concode_field_sep List<ReleaseEntity> getAllReleases concode_elem_sep Date getUpcomingReleaseDate concode_elem_sep LinkedHashMap<Integer,ReleaseEntity> getReleaseMap concode_elem_sep void reset"}
{"code": "boolean function ( ) { return true ; }", "nl": "in ehcache we default to minimal puts since this should have minimal to no affect on unclustered users , and has great benefit for clustered users . concode_field_sep EhcacheAccessStrategyFactory accessStrategyFactory concode_elem_sep Settings settings concode_elem_sep String NET_SF_EHCACHE_CONFIGURATION_RESOURCE_NAME concode_elem_sep EhCacheMessageLogger LOG concode_elem_sep CacheManager manager concode_elem_sep ProviderMBeanRegistrationHelper mbeanRegistrationHelper concode_elem_sep ClassLoaderService classLoaderService concode_field_sep CollectionRegion buildCollectionRegion concode_elem_sep Ehcache getCache concode_elem_sep EntityRegion buildEntityRegion concode_elem_sep TimestampsRegion buildTimestampsRegion concode_elem_sep URL loadResource concode_elem_sep NaturalIdRegion buildNaturalIdRegion concode_elem_sep void setClassLoaderService concode_elem_sep QueryResultsRegion buildQueryResultsRegion concode_elem_sep long nextTimestamp concode_elem_sep AccessType getDefaultAccessType"}
{"code": "ImageIcon function ( Class arg0 , String arg1 ) { return getIcon ( getImage ( arg0 , arg1 ) ) ; }", "nl": "returns an icon stored in the file at the specified path relative to the specified class concode_field_sep HashMap m_ClassImageMap concode_field_sep void clearImages concode_elem_sep Image getImage concode_elem_sep Image getImage concode_elem_sep Image getImage concode_elem_sep Image getImage"}
{"code": "long function ( ) { return allocationLimit . get ( ) ; }", "nl": "return the current limit of this accountant . concode_field_sep Accountant parent concode_elem_sep AtomicLong allocationLimit concode_elem_sep AtomicLong peakAllocation concode_elem_sep long reservation concode_elem_sep boolean ok concode_elem_sep AtomicLong locallyHeldMemory concode_field_sep void releaseBytes concode_elem_sep void updatePeak concode_elem_sep AllocationOutcome allocateBytes concode_elem_sep boolean forceAllocate concode_elem_sep AllocationOutcome allocate concode_elem_sep void setLimit concode_elem_sep long getPeakMemoryAllocation concode_elem_sep boolean isOk concode_elem_sep long getAllocatedMemory concode_elem_sep void close concode_elem_sep boolean isOverLimit"}
{"code": "Widget function ( Widget arg0 , Matcher arg1 ) { dbComparisons = 0 ; Hierarchy loc0 = arg0 != null ? new SingleWidgetHierarchy ( arg0 ) : getHierarchy ( ) ; return find ( loc0 , arg1 ) ; }", "nl": "find a widget , using the given matcher to determine whether a given widget in the hierarchy under the given root is the desired one . concode_field_sep int dbComparisons concode_elem_sep int searchType concode_elem_sep Hierarchy hierarchy concode_elem_sep int BFS concode_elem_sep SearchScopeHelper _searchScopeHelper concode_elem_sep List _listeners concode_elem_sep ArrayList list concode_elem_sep int DFS concode_elem_sep int _attempts concode_elem_sep WidgetFinder DEFAULT concode_field_sep Widget getParent concode_elem_sep Widget getWidgetParent concode_elem_sep Collection getRoots concode_elem_sep Widget findInShellScope concode_elem_sep Collection getWidgets concode_elem_sep void findMatches concode_elem_sep WidgetFinder getDefault concode_elem_sep Widget findInShellScope0 concode_elem_sep void pause concode_elem_sep boolean contains concode_elem_sep void dbPrintWidgets concode_elem_sep void addExceptionListener concode_elem_sep void informExceptionListeners concode_elem_sep Widget find0 concode_elem_sep void printWidgets concode_elem_sep void dispose concode_elem_sep Hierarchy getHierarchy"}
{"code": "IDocument function ( ) { checkState ( ) ; return fDocument ; }", "nl": "returns the document with the buffer contents . whitespace variables are decorated with comments . concode_field_sep boolean fUseCodeFormatter concode_elem_sep String COMMENT_END concode_elem_sep List<TypedPosition> fPositions concode_elem_sep IJavaProject fProject concode_elem_sep int fInitialIndentLevel concode_elem_sep String COMMENT_START concode_elem_sep Document fDocument concode_elem_sep TemplateBuffer fBuffer concode_elem_sep String CATEGORY concode_elem_sep String fLineDelimiter concode_field_sep boolean isWhitespaceVariable concode_elem_sep void removeRangeMarkers concode_elem_sep TemplateBuffer updateBuffer concode_elem_sep boolean isReplacedAreaEmpty concode_elem_sep List<TypedPosition> createRangeMarkers concode_elem_sep void internalFormat concode_elem_sep void indent concode_elem_sep void format concode_elem_sep void format concode_elem_sep void checkState concode_elem_sep void convertLineDelimiters concode_elem_sep void installJavaStuff concode_elem_sep void trimStart"}
{"code": "FieldSelection function ( List < SchemaPath > arg0 ) { if ( containsStar ( arg0 ) ) { return ALL_VALID ; } else { FieldSelection loc0 = new FieldSelection ( ) ; for ( SchemaPath loc1 : arg0 ) { loc0 . add ( loc1 . getRootSegment ( ) ) ; } return loc0 . fixNodes ( ) ; } }", "nl": "generates a field selection based on a list of fields . assumes that a partial path a.b is equivalent to a.b. concode_field_sep FieldSelection INVALID_NODE concode_elem_sep ValidityMode mode concode_elem_sep Map<String,FieldSelection> childrenInsensitive concode_elem_sep Map<String,FieldSelection> children concode_elem_sep FieldSelection ALL_VALID concode_field_sep void add concode_elem_sep boolean isNeverValid concode_elem_sep boolean isAlwaysValid concode_elem_sep void setAlwaysValid concode_elem_sep FieldSelection fixNodes concode_elem_sep FieldSelection getChild concode_elem_sep String toString concode_elem_sep FieldSelection addChild concode_elem_sep boolean containsStar"}
{"code": "NamedParameterJdbcTemplate function ( DataSource arg0 ) { return new NamedParameterJdbcTemplate ( arg0 ) ; }", "nl": "creates the jdbc template bean that we use to invoke sql queries via jdbc . concode_field_sep String PROPERTY_NAME_DB_USER concode_elem_sep String PROPERTY_NAME_HIBERNATE_FORMAT_SQL concode_elem_sep String PROPERTY_NAME_DB_URL concode_elem_sep String PROPERTY_NAME_HIBERNATE_HBM2DDL_AUTO concode_elem_sep String PROPERTY_NAME_DB_DRIVER_CLASS concode_elem_sep String PROPERTY_NAME_DB_PASSWORD concode_elem_sep String PROPERTY_NAME_HIBERNATE_SHOW_SQL concode_elem_sep String PROPERTY_NAME_HIBERNATE_NAMING_STRATEGY concode_elem_sep String PROPERTY_NAME_HIBERNATE_DIALECT concode_elem_sep String[] ENTITY_PACKAGES concode_field_sep LocalContainerEntityManagerFactoryBean entityManagerFactory concode_elem_sep AuditorAware<String> auditorProvider concode_elem_sep DateTimeProvider dateTimeProvider concode_elem_sep JpaTransactionManager transactionManager concode_elem_sep DataSource dataSource"}
{"code": "void function ( final List < Writable > arg0 ) { queue . addAll ( arg0 ) ; }", "nl": "adds a list of writable . concode_field_sep Queue<Writable> queue concode_field_sep void add concode_elem_sep boolean containsWritable concode_elem_sep Writable poll"}
{"code": "void function ( Callback [ ] arg0 ) { for ( Callback loc0 : arg0 ) { LOG . info ( \"srini_string\" , loc0 . getClass ( ) ) ; } }", "nl": "implementation used to respond to sasl tokens from server . concode_field_sep Logger LOG concode_elem_sep Subject subject concode_elem_sep String jaas_section concode_elem_sep SaslClient saslClient concode_field_sep byte[] saslResponse concode_elem_sep boolean isComplete"}
{"code": "KerberosTime function ( ) { return KerberosTime . now ( ) ; }", "nl": "get the current time for use in a preauth response . if allow_unauth_time is true and the library has been configured to allow it , the current time will be offset using unauthenticated timestamp information received from the kdc in the preauth-required error , if one has been received . otherwise , the timestamp in a preauth-required error will only be used if it is protected by a fast channel . only set allow_unauth_time if using an unauthenticated time offset would not create a security issue . concode_field_sep Map<String,Object> credCache concode_elem_sep PrincipalName serverPrincipal concode_elem_sep boolean isRetrying concode_elem_sep Object sessionData concode_elem_sep EncryptionKey asKey concode_elem_sep List<HostAddress> hostAddresses concode_elem_sep EncryptionType chosenEncryptionType concode_elem_sep List<EncryptionType> encryptionTypes concode_elem_sep KOptions requestOptions concode_elem_sep KrbFastRequestState fastRequestState concode_elem_sep KdcReq kdcReq concode_elem_sep KdcOptions kdcOptions concode_elem_sep KdcRep kdcRep concode_elem_sep KdcReqBody reqBody concode_elem_sep byte[] outerRequestBody concode_elem_sep KrbContext context concode_elem_sep PreauthContext preauthContext concode_elem_sep int chosenNonce concode_elem_sep DhClient dhClient concode_field_sep void setKdcReq concode_elem_sep void setChosenNonce concode_elem_sep void setKdcRep concode_elem_sep KdcReqBody makeReqBody concode_elem_sep KdcOptions getKdcOptions concode_elem_sep EncryptionType getEncType concode_elem_sep void setServerPrincipal concode_elem_sep EncryptionKey getArmorKey concode_elem_sep HostAddresses getHostAddresses concode_elem_sep KerberosTime getTicketTillTime concode_elem_sep void setHostAddresses concode_elem_sep void setContext concode_elem_sep Map<String,Object> getCredCache concode_elem_sep void processResponse concode_elem_sep int getChosenNonce concode_elem_sep void processKdcOptions concode_elem_sep void setEncryptionTypes concode_elem_sep void setFastRequestState concode_elem_sep DhClient getDhClient concode_elem_sep KdcReqBody getReqBody concode_elem_sep void setKdcOptions concode_elem_sep EncryptionKey getClientKey concode_elem_sep void setAsKey concode_elem_sep void preauth concode_elem_sep void cacheValue concode_elem_sep EncryptionType getChosenEncryptionType concode_elem_sep PreauthHandler getPreauthHandler concode_elem_sep EncryptionKey getAsKey concode_elem_sep boolean isRetrying concode_elem_sep void setSessionData concode_elem_sep void setPreauthRequired concode_elem_sep KOptions getPreauthOptions concode_elem_sep void setOuterRequestBody concode_elem_sep void setAllowedPreauth concode_elem_sep KdcRep getKdcRep concode_elem_sep byte[] getOuterRequestBody concode_elem_sep void needAsKey concode_elem_sep KdcReq getKdcReq concode_elem_sep Object getSessionData concode_elem_sep void setChosenEncryptionType concode_elem_sep KrbFastRequestState getFastRequestState concode_elem_sep byte[] decryptWithClientKey concode_elem_sep void process concode_elem_sep void setRequestOptions concode_elem_sep void askQuestion concode_elem_sep PreauthContext getPreauthContext concode_elem_sep void addHost concode_elem_sep PrincipalName getClientPrincipal concode_elem_sep Object getCacheValue concode_elem_sep PrincipalName getServerPrincipal concode_elem_sep int generateNonce concode_elem_sep void setDhClient concode_elem_sep void resetPrequthContxt concode_elem_sep KrbContext getContext concode_elem_sep KOptions getRequestOptions concode_elem_sep long getTicketValidTime concode_elem_sep List<EncryptionType> getEncryptionTypes"}
{"code": "void function ( final String ... arg0 ) { fileLoggerModule . printString ( \"srini_string\" ) ; fileLoggerModule . printErrorString ( \"srini_string\" ) ; consoleLoggerModule . printString ( \"srini_string\" ) ; consoleLoggerModule . printErrorString ( \"srini_string\" ) ; }", "nl": "following method is main executor concode_field_sep FileLoggerModule fileLoggerModule concode_elem_sep ConsoleLoggerModule consoleLoggerModule concode_field_sep void unprepare concode_elem_sep void prepare concode_elem_sep void main"}
{"code": "Set < Asset > function ( Set < Asset > arg0 ) { Set < Asset > loc0 = new LinkedHashSet < Asset > ( ) ; for ( Asset loc1 : arg0 ) { if ( loc1 . isNotVendor ( ) ) { loc0 . add ( loc1 ) ; } } return loc0 ; }", "nl": "filters the given set of asset s by removing all vendor assets . concode_field_sep PlaceHolder placeHolder concode_field_sep Set<Asset> filtersByDomPosition concode_elem_sep String extractRequestKeyFromRequest concode_elem_sep String getExtension concode_elem_sep AssetLocator getAssetLocator concode_elem_sep Set<Asset> filtersByNameAndType concode_elem_sep Set<Asset> filtersByName concode_elem_sep Set<Asset> filtersByType concode_elem_sep String getAssetFinalLocation concode_elem_sep String generateStorageKey concode_elem_sep String extractCacheKeyFromRequest"}
{"code": "void function ( ) { try { tx . begin ( ) ; em . persist ( createEmployee ( \"srini_string\" , \"srini_string\" , 100 ) ) ; tx . commit ( ) ; } catch ( Exception loc0 ) { throw new Exception ( \"srini_string\" ) ; } }", "nl": "adds new employee concode_field_sep UserTransaction tx concode_elem_sep EntityManager em concode_field_sep void performFailCall concode_elem_sep String failInFirstCall concode_elem_sep Employee createEmployee concode_elem_sep int[] getEmployeeIDsNoEM concode_elem_sep String failAfterCalls concode_elem_sep String failInSecondCall"}
{"code": "byte [ ] function ( PrivateKey arg0 , X509Certificate arg1 , ReplyKeyPack arg2 ) { byte [ ] loc0 = KrbCodec . encode ( arg2 ) ; byte [ ] loc1 ; try { loc1 = PkiUtil . getSignedData ( arg0 , arg1 , loc0 , ID_PKINIT_AUTHDATA ) ; } catch ( PkiException loc2 ) { throw new KrbException ( \"srini_string\" , loc2 ) ; } return loc1 ; }", "nl": "uses a private key to sign data in a cms signeddata structure and returns the encoded cms signeddata as bytes . selected when public key encryption is used . the econtenttype field for the inner type signeddata when unencrypted is id-pkinit-rkeydata 1.3.6.1.5.2.3.3 and the econtent field contains the der encoding of the type replykeypack . concode_field_sep String ID_PKINIT_AUTHDATA concode_field_sep byte[] getSignedKdcDhKeyInfo concode_elem_sep byte[] getSignedAuthPack"}
{"code": "void function ( Map < String , Object > arg0 ) { for ( Map . Entry < String , Object > loc0 : arg0 . entrySet ( ) ) { put ( loc0 . getKey ( ) , loc0 . getValue ( ) ) ; } }", "nl": "adds key - > value pair to bson object from specified map concode_field_sep Map<String,Object> data concode_elem_sep String ID_KEY concode_elem_sep List<String> fields concode_field_sep boolean isFieldsOrderImportant concode_elem_sep boolean containsField concode_elem_sep void clear concode_elem_sep ObjectId getId concode_elem_sep Object put concode_elem_sep void remove concode_elem_sep boolean equalObjects concode_elem_sep int size concode_elem_sep Object registerField concode_elem_sep int hashCode concode_elem_sep Object get concode_elem_sep boolean equals concode_elem_sep String toString concode_elem_sep List<String> fields concode_elem_sep BSONObject append"}
{"code": "String function ( String arg0 ) { return arg0 . replaceAll ( \"srini_string\" , \"srini_string\" ) . replaceAll ( \"srini_string\" | \"srini_string\" ) ; }", "nl": "escape the user-provided extra string for the ext = '' '' header attribute . hawk escapes the header ext = '' '' attribute differently than it does the extra line in the normalized request string . see https://github.com/hueniverse/hawk/blob/871cc597973110900467bd3dfb84a3c892f678fb/lib/browser.js#l385 . concode_field_sep int HAWK_HEADER_VERSION concode_elem_sep long skewSeconds concode_elem_sep String LOG_TAG concode_elem_sep boolean includePayloadHash concode_elem_sep String id concode_elem_sep String HMAC_SHA256_ALGORITHM concode_elem_sep int NONCE_LENGTH_IN_BYTES concode_elem_sep byte[] key concode_field_sep long getTimestampSeconds concode_elem_sep String getPayloadHashString concode_elem_sep byte[] hmacSha256 concode_elem_sep long now concode_elem_sep String escapeExtraString concode_elem_sep String getBaseContentType concode_elem_sep String getSignature concode_elem_sep byte[] getPayloadHash concode_elem_sep String getRequestString concode_elem_sep Header getAuthHeader concode_elem_sep Header getAuthHeader"}
{"code": "StatementBuilder function ( ) { this . builder . append ( \"srini_string\" ) ; return this ; }", "nl": "open bracket . concode_field_sep StringBuilder builder concode_field_sep StatementBuilder appendBetweenBracket concode_elem_sep StatementBuilder closeBracket concode_elem_sep StatementBuilder appendWithSeparator concode_elem_sep StatementBuilder appendWord concode_elem_sep String toString"}
{"code": "Mixer function ( ) { if ( mixer == null ) { mixer = ( Mixer ) AudioSystem . getMixer ( AudioSystem . getMixerInfo ( ) [ 0 ] ) ; SourceDataLine [ ] loc0 = new SourceDataLine [ 16 ] ; for ( int loc1 = 0 ; loc1 < 16 ; loc1 ++ ) { loc0 [ loc1 ] = aquireLine ( ) ; } for ( int loc1 = 0 ; loc1 < 16 ; loc1 ++ ) { poolLine ( loc0 [ loc1 ] ) ; } } return mixer ; }", "nl": "lazily creates the shared mixer instance and returns it . puts 8 lines into the pool . concode_field_sep int volume concode_elem_sep Vector lines concode_elem_sep int loopCount concode_elem_sep int loopStart concode_elem_sep Thread workerThread concode_elem_sep Mixer mixer concode_elem_sep float pan concode_elem_sep int loopEnd concode_elem_sep int sampleRate concode_elem_sep byte[] samples concode_field_sep void play concode_elem_sep void setLoopPoints concode_elem_sep void stop concode_elem_sep void configureDataLine concode_elem_sep void loop concode_elem_sep void loop concode_elem_sep SourceDataLine aquireLine concode_elem_sep void poolLine concode_elem_sep void run"}
{"code": "boolean function ( Class arg0 , Class arg1 ) { assert arg1 . isInterface ( ) : \"srini_string\" ; return arg1 . isAssignableFrom ( arg0 ) ; }", "nl": "determine if the given class implements the given interface . concode_field_sep PropertyAccessor DIRECT_PROPERTY_ACCESSOR concode_elem_sep Method OBJECT_EQUALS concode_elem_sep Class[] SINGLE_OBJECT_PARAM_SIGNATURE concode_elem_sep Object[] NO_PARAMS concode_elem_sep Method OBJECT_HASHCODE concode_elem_sep Class[] NO_PARAM_SIGNATURE concode_elem_sep PropertyAccessor BASIC_PROPERTY_ACCESSOR concode_field_sep boolean overridesHashCode concode_elem_sep Getter getGetter concode_elem_sep Getter getter concode_elem_sep Object getConstantValue concode_elem_sep boolean isFinalClass concode_elem_sep boolean overridesEquals concode_elem_sep Method getMethod concode_elem_sep Class classForName concode_elem_sep Class classForName concode_elem_sep Constructor getConstructor concode_elem_sep Constructor<T> getDefaultConstructor concode_elem_sep Method extractHashCodeMethod concode_elem_sep Method extractEqualsMethod concode_elem_sep boolean isPublic concode_elem_sep boolean isPublic concode_elem_sep Class reflectedPropertyClass concode_elem_sep Class reflectedPropertyClass concode_elem_sep boolean isAbstractClass"}
{"code": "ShortListIterator function ( ShortListIterator arg0 ) { if ( null == arg0 ) { throw new NullPointerException ( ) ; } return UnmodifiableShortListIterator . wrap ( arg0 ) ; }", "nl": "returns an unmodifiable version of the given non-null shortlistiterator . concode_field_sep ShortList EMPTY_SHORT_LIST concode_elem_sep ShortListIterator EMPTY_SHORT_LIST_ITERATOR concode_elem_sep ShortIterator EMPTY_SHORT_ITERATOR concode_field_sep ShortListIterator getEmptyShortListIterator concode_elem_sep ShortIterator singletonShortIterator concode_elem_sep ShortList unmodifiableShortList concode_elem_sep ShortListIterator singletonShortListIterator concode_elem_sep ShortIterator unmodifiableShortIterator concode_elem_sep ShortList getEmptyShortList concode_elem_sep ShortList singletonShortList concode_elem_sep ShortIterator getEmptyShortIterator"}
{"code": "String function ( String arg0 , BackToXMLWritable arg1 ) { ByteArrayOutputStream loc0 = new ByteArrayOutputStream ( ) ; OutputStreamWriter loc1 = new OutputStreamWriter ( loc0 ) ; try { writeBack ( loc1 , arg0 , arg1 ) ; } catch ( IOException loc2 ) { throw new IllegalStateException ( loc2 ) ; } return loc0 . toString ( ) ; }", "nl": "returns a written-back document of object obj as a string . concode_field_sep Element curRootNode concode_field_sep void writeTime concode_elem_sep void writeBack concode_elem_sep void writeBackToXML concode_elem_sep void writeSimpleType concode_elem_sep void writeComplexType"}
{"code": "BigInteger function ( ) { return bigInt ; }", "nl": "returns the id biginteger concode_field_sep BigInteger bigInt concode_elem_sep TypesConfig config concode_field_sep KademliaOverlayKey toKey concode_elem_sep void checkBounds concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep BigInteger getUniqueValue concode_elem_sep String toBinary concode_elem_sep String toBinary concode_elem_sep String toString concode_elem_sep int compareTo concode_elem_sep byte[] getBytes"}
{"code": "long function ( int arg0 ) { return ( ( SEQFrame ) frames_ . elementAt ( arg0 ) ) . getRelTime ( ) ; }", "nl": "timing for frame relative to previous frame . concode_field_sep int xPosition concode_elem_sep int CMP_VERTICAL concode_elem_sep int yPosition concode_elem_sep boolean isPlayWrapupFrames concode_elem_sep int MODE_INDEXED_COLORS concode_elem_sep int compression_ concode_elem_sep int MSK_HAS_MASK concode_elem_sep int MSK_HAS_TRANSPARENT_COLOR concode_elem_sep int pageHeight concode_elem_sep int pageWidth concode_elem_sep long totalDuration_ concode_elem_sep Vector frames_ concode_elem_sep int transparentColor concode_elem_sep int height concode_elem_sep int nbPalettes_ concode_elem_sep int MODE_HAM8 concode_elem_sep int masking concode_elem_sep int MODE_HAM6 concode_elem_sep int MSK_NONE concode_elem_sep int MSK_LASSO concode_elem_sep int MODE_EHB concode_elem_sep boolean isSwapSpeakers concode_elem_sep PropertyChangeSupport listeners_ concode_elem_sep int nbPlanes concode_elem_sep int MODE_DIRECT_COLORS concode_elem_sep int xAspect concode_elem_sep Vector audioClips_ concode_elem_sep int screenMode concode_elem_sep int jiffies concode_elem_sep int CMP_BYTE_RUN_1 concode_elem_sep int yAspect concode_elem_sep int CMP_NONE concode_elem_sep int width concode_elem_sep ArrayList<ColorCycle> colorCycles concode_elem_sep Hashtable properties_ concode_field_sep int getNbPlanes concode_elem_sep int getCompression concode_elem_sep void setYPosition concode_elem_sep List<ColorCycle> getColorCycles concode_elem_sep int getColorCyclesCount concode_elem_sep int getFrameCount concode_elem_sep AudioClip getAudioClip concode_elem_sep void setTransparentColor concode_elem_sep int getNbPalettes concode_elem_sep int getXAspect concode_elem_sep void setPageHeight concode_elem_sep int getTransparentColor concode_elem_sep int getJiffies concode_elem_sep int getInterleave concode_elem_sep int getMasking concode_elem_sep void firePropertyChange concode_elem_sep void removePropertyChangeListener concode_elem_sep void setHeight concode_elem_sep void setXAspect concode_elem_sep void setScreenMode concode_elem_sep void setCompression concode_elem_sep void setSwapSpeakers concode_elem_sep void setProperty concode_elem_sep void addFrame concode_elem_sep int getAudioClipCount concode_elem_sep void setXPosition concode_elem_sep int getYPosition concode_elem_sep boolean isPlayWrapupFrames concode_elem_sep SEQFrame getFrame concode_elem_sep int getWidth concode_elem_sep boolean isSwapSpeakers concode_elem_sep void addColorCycle concode_elem_sep void setPageWidth concode_elem_sep int getPageHeight concode_elem_sep int getHeight concode_elem_sep void addAudioClip concode_elem_sep void removeFrame concode_elem_sep int getDeltaOperation concode_elem_sep void addPropertyChangeListener concode_elem_sep Object getProperty concode_elem_sep int getXPosition concode_elem_sep void setMasking concode_elem_sep int getPageWidth concode_elem_sep int getYAspect concode_elem_sep void setYAspect concode_elem_sep void setWidth concode_elem_sep void setNbPlanes concode_elem_sep long getTotalDuration concode_elem_sep int getScreenMode concode_elem_sep void setJiffies"}
{"code": "Integer function ( @ NonNull Cursor arg0 , int arg1 ) { if ( arg0 . isNull ( arg1 ) ) { return null ; } return arg0 . getInt ( arg1 ) ; }", "nl": "gets integer value form cursor for column index . concode_field_sep PlaceHolder placeHolder concode_field_sep Long getLong concode_elem_sep Character getChar concode_elem_sep void bind concode_elem_sep void bind concode_elem_sep void bind concode_elem_sep void bind concode_elem_sep void bind concode_elem_sep void bind concode_elem_sep void bind concode_elem_sep void bind concode_elem_sep void bind concode_elem_sep void bind concode_elem_sep void bind concode_elem_sep void bind concode_elem_sep Byte getByte concode_elem_sep Short getShort concode_elem_sep byte[] getByteArray concode_elem_sep Double getDouble concode_elem_sep Boolean getBoolean concode_elem_sep Date getDate concode_elem_sep Date getDate concode_elem_sep Float getFloat concode_elem_sep String getString"}
{"code": "StubStrategy function ( String [ ] arg0 , String [ ] arg1 , String [ ] arg2 , String arg3 , ClassLoader arg4 ) { return new StubStrategy ( arg0 , arg1 , arg2 , arg3 , arg4 ) ; }", "nl": "returns an stubstrategy for a method , given descriptions of the method parameters , exceptions , and return value . parameter and return value descriptions are `` marshaller abbreviated names '' . concode_field_sep Class<?> clz concode_elem_sep String reposId concode_elem_sep CDRStreamWriter[] paramWriters concode_elem_sep CDRStreamReader retvalReader concode_elem_sep List<Class<?>> exceptionList concode_elem_sep Class<?> retvalRemoteInterface concode_elem_sep java.lang.reflect.Method readMethod concode_elem_sep Map<String,ExceptionReader> exceptionMap concode_field_sep Exception readException concode_elem_sep Exception read concode_elem_sep boolean isDeclaredException concode_elem_sep void writeParams concode_elem_sep boolean isNonVoid concode_elem_sep Object convertLocalRetval concode_elem_sep String getReposId concode_elem_sep Object readRetval"}
{"code": "void function ( boolean arg0 ) { this . expandEntityRef = arg0 ; }", "nl": "specifies that the parser produced by this code will expand entity reference nodes . by default the value of this is set to true concode_field_sep boolean validating concode_elem_sep boolean namespaceAware concode_elem_sep boolean whitespace concode_elem_sep boolean expandEntityRef concode_elem_sep boolean coalescing concode_elem_sep boolean ignoreComments concode_field_sep void setCoalescing concode_elem_sep boolean isIgnoringElementContentWhitespace concode_elem_sep void setIgnoringElementContentWhitespace concode_elem_sep boolean isCoalescing concode_elem_sep boolean isNamespaceAware concode_elem_sep void setNamespaceAware concode_elem_sep DocumentBuilderFactory newInstance concode_elem_sep boolean isValidating concode_elem_sep void setAttribute concode_elem_sep Object getAttribute concode_elem_sep boolean isExpandEntityReferences concode_elem_sep DocumentBuilder newDocumentBuilder concode_elem_sep void setValidating concode_elem_sep void setIgnoringComments concode_elem_sep boolean isIgnoringComments"}
{"code": "Edge function ( Node arg0 , Node arg1 ) { boolean loc0 ; DummyEdgePart loc1 = new DummyEdgePart ( ) ; Edge loc2 = new Edge ( loc1 , arg0 , arg1 ) ; loc2 . weight = 2 ; edgeList . add ( loc2 ) ; arg1 = arg0 ; loc0 = true ; return loc2 ; }", "nl": "creates a new dummy edge to be used in the graph concode_field_sep List clusters concode_elem_sep List set concode_elem_sep EdgeList edgeList concode_elem_sep Cluster currentCluster concode_elem_sep List edgesAdded concode_elem_sep int INITIAL_RECURSION_DEPTH concode_elem_sep NodeList nodeList concode_elem_sep DirectedGraph graph concode_elem_sep List encountered concode_field_sep void joinClusters concode_elem_sep void coalesceRemainingClusters concode_elem_sep String toString concode_elem_sep void visit concode_elem_sep void recursivelyAddToCluster"}
{"code": "ColumnMetaData [ ] function ( ) { ColumnMetaData [ ] loc0 = new ColumnMetaData [ columnCount ] ; for ( int loc1 = 0 ; loc1 < columnCount ; loc1 ++ ) loc0 [ loc1 ] = columns [ loc1 ] . metaData ; return loc0 ; }", "nl": "return all columns ' metadata . concode_field_sep ColumnFileMetaData metaData concode_elem_sep Map<String,ColumnDescriptor> columnsByName concode_elem_sep Input file concode_elem_sep ColumnDescriptor[] columns concode_elem_sep long rowCount concode_elem_sep int columnCount concode_field_sep long getRowCount concode_elem_sep List<ColumnMetaData> getRoots concode_elem_sep void readColumnMetaData concode_elem_sep ColumnValues<T> getValues concode_elem_sep ColumnValues<T> getValues concode_elem_sep void readColumnStarts concode_elem_sep ColumnDescriptor<T> getColumn concode_elem_sep long getColumnCount concode_elem_sep ColumnFileMetaData getMetaData concode_elem_sep void readHeader concode_elem_sep void readMagic concode_elem_sep void close"}
{"code": "BigDecimal function ( Reader arg0 ) { throw new RuntimeException ( \"srini_string\" ) ; }", "nl": "bigdecimal parse from reader . concode_field_sep java.math.BigDecimal val concode_elem_sep int DEFAULT_PRECISION concode_elem_sep BigDecimal ZERO concode_elem_sep MathContext DEFAULT_CONTEXT concode_elem_sep MathContext context concode_elem_sep BigDecimal ONE concode_elem_sep Random random concode_field_sep boolean isField concode_elem_sep boolean isCommutative concode_elem_sep BigDecimal gcd concode_elem_sep BigDecimal sum concode_elem_sep int compareTo concode_elem_sep java.math.BigInteger characteristic concode_elem_sep BigDecimal random concode_elem_sep BigDecimal random concode_elem_sep BigDecimal random concode_elem_sep BigDecimal random concode_elem_sep int hashCode concode_elem_sep BigDecimal divide concode_elem_sep BigDecimal copy concode_elem_sep BigDecimal multiply concode_elem_sep int signum concode_elem_sep boolean isONE concode_elem_sep BigDecimal inverse concode_elem_sep BigDecimal valueOf concode_elem_sep BigDecimal valueOf concode_elem_sep boolean isUnit concode_elem_sep BigDecimal subtract concode_elem_sep BigDecimal[] egcd concode_elem_sep BigDecimal abs concode_elem_sep BigDecimal[] divideAndRemainder concode_elem_sep BigDecimal negate concode_elem_sep boolean equals concode_elem_sep BigDecimal clone concode_elem_sep BigDecimal getONE concode_elem_sep BigDecimal getZERO concode_elem_sep BigDecimal fromInteger concode_elem_sep BigDecimal fromInteger concode_elem_sep boolean isZERO concode_elem_sep boolean isAssociative concode_elem_sep String toString concode_elem_sep BigDecimal remainder"}
{"code": "URL function ( ) { final URL loc0 = AgentJar . class . getResource ( RESOURCE ) ; if ( loc0 == null ) { throw new AssertionError ( ERRORMSG ) ; } return loc0 ; }", "nl": "returns a url pointing to the jar file . concode_field_sep String RESOURCE concode_elem_sep String ERRORMSG concode_field_sep void extractTo concode_elem_sep InputStream getResourceAsStream concode_elem_sep File extractToTempLocation concode_elem_sep void safeClose"}
{"code": "void function ( final FlowGraph arg0 , boolean arg1 ) { if ( ! arg1 ) { DominanceFrontier . calcFrontier ( arg0 . source ( ) , arg0 , arg1 ) ; } else { DominanceFrontier . calcFrontier ( arg0 . sink ( ) , arg0 , arg1 ) ; } }", "nl": "calculates the dominance frontier for a cfg and notifies the blocks in it appropriately . concode_field_sep PlaceHolder placeHolder concode_field_sep LinkedList calcFrontier"}
{"code": "Dialog function ( Activity arg0 , String arg1 ) { return ( new AlertDialog . Builder ( arg0 ) ) . setMessage ( arg1 ) . setNeutralButton ( android . R . string . ok , null ) . create ( ) ; }", "nl": "create a simple dialog with an ` ok ' button and a message . concode_field_sep PlaceHolder placeHolder concode_field_sep boolean verifySampleSetup concode_elem_sep boolean resolveConnectionFailure concode_elem_sep void showActivityResultError concode_elem_sep void showAlert"}
{"code": "IResource [ ] function ( final IResource arg0 ) { Assert . fail ( \"srini_string\" ) ; return new IResource [ 0 ] ; }", "nl": "finds files with mixed line delimiters . concode_field_sep PlaceHolder placeHolder concode_field_sep void assertNoMixedLineDelimiters concode_elem_sep void assertNoMixedLineDelimiters"}
{"code": "boolean function ( ITypeBinding arg0 , ITypeBinding arg1 ) { TypeEnvironment loc0 = new TypeEnvironment ( false , true ) ; TType loc1 = loc0 . create ( arg1 ) ; TType loc2 = loc0 . create ( arg0 ) ; return loc2 . canAssignTo ( loc1 ) ; }", "nl": "tests if two types are assign compatible . void types are never compatible . concode_field_sep PlaceHolder placeHolder concode_field_sep boolean canCast concode_elem_sep boolean isArrayCompatible concode_elem_sep boolean isJavaLangObject"}
{"code": "int function ( ) { return \"srini_string\" . hashCode ( ) ; }", "nl": "implement a hash code for this comparator that is consistent with #equals object equals . concode_field_sep long serialVersionUID concode_elem_sep ComparableComparator instance concode_field_sep int compare concode_elem_sep boolean equals concode_elem_sep ComparableComparator getInstance"}
{"code": "void function ( String arg0 ) { if ( this . selectClause . length ( ) > 0 ) { this . selectClause . append ( \"srini_string\" ) ; this . guesstimatedBufferSize += 2 ; } this . selectClause . append ( arg0 ) ; this . guesstimatedBufferSize += arg0 . length ( ) ; }", "nl": "appends a select clause fragment concode_field_sep LockOptions lockOptions concode_elem_sep int guesstimatedBufferSize concode_elem_sep StringBuilder whereClause concode_elem_sep Dialect dialect concode_elem_sep StringBuilder selectClause concode_elem_sep String outerJoinsAfterWhere concode_elem_sep String outerJoinsAfterFrom concode_elem_sep StringBuilder fromClause concode_elem_sep String comment concode_elem_sep StringBuilder orderByClause concode_field_sep void appendFromClauseFragment concode_elem_sep void appendFromClauseFragment concode_elem_sep void setOuterJoins concode_elem_sep void setLockOptions concode_elem_sep void appendOrderByFragment concode_elem_sep void setComment concode_elem_sep String toStatementString concode_elem_sep boolean isNotEmpty concode_elem_sep boolean isNotEmpty concode_elem_sep String cleanRestrictions concode_elem_sep void setLockMode concode_elem_sep void appendRestrictions"}
{"code": "void function ( Object arg0 , Throwable arg1 ) { if ( isLevelEnabled ( MemoryLog . LOG_LEVEL_WARN ) ) { log ( MemoryLog . LOG_LEVEL_WARN , arg0 , arg1 ) ; } }", "nl": "log an error with warn log level . concode_field_sep Date date concode_elem_sep int LOG_LEVEL_DEBUG concode_elem_sep int level concode_elem_sep Throwable throwable concode_elem_sep List logEntries concode_elem_sep int LOG_LEVEL_OFF concode_elem_sep Object message concode_elem_sep int LOG_LEVEL_WARN concode_elem_sep int LOG_LEVEL_TRACE concode_elem_sep int LOG_LEVEL_ERROR concode_elem_sep int LOG_LEVEL_INFO concode_elem_sep String logName concode_elem_sep String name concode_elem_sep int LOG_LEVEL_FATAL concode_elem_sep int LOG_LEVEL_ALL concode_elem_sep int currentLogLevel concode_field_sep void debug concode_elem_sep void debug concode_elem_sep void log concode_elem_sep Object getMessage concode_elem_sep boolean isLevelEnabled concode_elem_sep boolean isWarnEnabled concode_elem_sep void error concode_elem_sep void error concode_elem_sep boolean isFatalEnabled concode_elem_sep void setLevel concode_elem_sep void fatal concode_elem_sep void fatal concode_elem_sep String getLogName concode_elem_sep int getLevel concode_elem_sep int getLevel concode_elem_sep void trace concode_elem_sep void trace concode_elem_sep boolean isInfoEnabled concode_elem_sep boolean isErrorEnabled concode_elem_sep void reset concode_elem_sep boolean isTraceEnabled concode_elem_sep Date getDate concode_elem_sep boolean isDebugEnabled concode_elem_sep Throwable getThrowable concode_elem_sep List getLogEntries concode_elem_sep void info concode_elem_sep void info"}
{"code": "Void function ( ) { server . unregisterMBean ( name ) ; return null ; }", "nl": "de-register the agent again . concode_field_sep String JMX_NAME concode_elem_sep MBeanServer server concode_elem_sep ObjectName name concode_field_sep placeholderType placeHolder"}
{"code": "JoinSequence function ( boolean arg0 ) { this . useThetaStyle = arg0 ; return this ; }", "nl": "should this joinsequence use theta-style joining both a from and where component in the rendered sql ? concode_field_sep StringBuilder conditions concode_elem_sep JoinSequence next concode_elem_sep SessionFactoryImplementor factory concode_elem_sep boolean isFromPart concode_elem_sep String[] lhsColumns concode_elem_sep String rootAlias concode_elem_sep AssociationType associationType concode_elem_sep List<Join> joins concode_elem_sep Set<String> treatAsDeclarations concode_elem_sep Joinable rootJoinable concode_elem_sep JoinType joinType concode_elem_sep String alias concode_elem_sep Selector selector concode_elem_sep Joinable joinable concode_elem_sep boolean useThetaStyle concode_field_sep void applyTreatAsDeclarations concode_elem_sep JoinFragment toJoinFragment concode_elem_sep JoinFragment toJoinFragment concode_elem_sep JoinFragment toJoinFragment concode_elem_sep Joinable getJoinable concode_elem_sep boolean isThetaStyle concode_elem_sep boolean isManyToManyRoot concode_elem_sep JoinSequence addCondition concode_elem_sep JoinSequence addCondition concode_elem_sep JoinSequence setRoot concode_elem_sep void addSubclassJoins concode_elem_sep String[] getLHSColumns concode_elem_sep JoinSequence addJoin concode_elem_sep Join getFirstJoin concode_elem_sep JoinType getJoinType concode_elem_sep JoinSequence setNext concode_elem_sep JoinSequence setSelector concode_elem_sep String toString concode_elem_sep String toString concode_elem_sep JoinSequence getFromPart concode_elem_sep JoinSequence copy concode_elem_sep AssociationType getAssociationType concode_elem_sep String getAlias concode_elem_sep boolean isIncluded concode_elem_sep boolean includeSubclasses"}
{"code": "Owner function ( ) { return owner ; }", "nl": "gets the value of the owner property . concode_field_sep Owner owner concode_elem_sep Locktype locktype concode_elem_sep Lockscope lockscope concode_field_sep Lockscope getLockscope concode_elem_sep void setLockscope concode_elem_sep void setLocktype concode_elem_sep Locktype getLocktype concode_elem_sep void setOwner"}
{"code": "IHoverInfo function ( Widget arg0 , int arg1 , int arg2 ) { return new WidgetRelativeHoverInfo ( arg0 , arg1 , arg2 ) ; }", "nl": "create a widget-relative hover info instance . concode_field_sep PlaceHolder placeHolder concode_field_sep IHoverInfo getAbsolute concode_elem_sep IHoverInfo getAbsolute concode_elem_sep IHoverInfo getRelativeToCenter"}
{"code": "Menu function ( ) { return mMenu ; }", "nl": "returns the menu that is current being shown . concode_field_sep MenuPopup mMenuPopup concode_elem_sep MenuPanel mMenuPanel concode_elem_sep OnMenuItemLongClickListener mLongClickListener concode_elem_sep GeckoMenu mMenu concode_elem_sep OnDismissListener mDismissListener concode_elem_sep View mAnchor concode_elem_sep GeckoMenuInflater mMenuInflater concode_elem_sep OnMenuItemClickListener mClickListener concode_field_sep boolean onMenuItemLongClick concode_elem_sep boolean onMenuItemLongClick concode_elem_sep void openMenu concode_elem_sep boolean onDismiss concode_elem_sep void setOnDismissListener concode_elem_sep void show concode_elem_sep void dismiss concode_elem_sep void closeMenu concode_elem_sep void setOnMenuItemLongClickListener concode_elem_sep void inflate concode_elem_sep void showMenu concode_elem_sep MenuInflater getMenuInflater concode_elem_sep void setAnchor concode_elem_sep void setOnMenuItemClickListener concode_elem_sep void initialize concode_elem_sep boolean onMenuItemClick concode_elem_sep boolean onMenuItemClick"}
{"code": "void function ( ) { }", "nl": "called when the renderer is stopped . the default implementation is a no-op . concode_field_sep long MATCH_LONGEST_US concode_elem_sep int STATE_UNPREPARED concode_elem_sep long UNKNOWN_TIME_US concode_elem_sep int STATE_PREPARED concode_elem_sep int STATE_ENABLED concode_elem_sep long END_OF_TRACK_US concode_elem_sep int STATE_STARTED concode_elem_sep int state concode_elem_sep int STATE_RELEASED concode_field_sep boolean doPrepare concode_elem_sep int prepare concode_elem_sep void onReleased concode_elem_sep void release concode_elem_sep boolean isReady concode_elem_sep void handleMessage concode_elem_sep void start concode_elem_sep int getTrackCount concode_elem_sep long getDurationUs concode_elem_sep void seekTo concode_elem_sep MediaClock getMediaClock concode_elem_sep int getState concode_elem_sep void onStarted concode_elem_sep void stop concode_elem_sep void enable concode_elem_sep void disable concode_elem_sep long getBufferedPositionUs concode_elem_sep void onEnabled concode_elem_sep void maybeThrowError concode_elem_sep MediaFormat getFormat concode_elem_sep void doSomeWork concode_elem_sep void onDisabled concode_elem_sep boolean isEnded"}
{"code": "void function ( ReadOnlyPerson arg0 ) { allPersons . remove ( arg0 ) ; }", "nl": "removes the equivalent person from the address book . concode_field_sep UniquePersonList allPersons concode_elem_sep UniqueTagList allTags concode_field_sep boolean containsPerson concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep void clear concode_elem_sep UniquePersonList getAllPersons concode_elem_sep void removeTag concode_elem_sep UniqueTagList getAllTags concode_elem_sep void syncTagsWithMasterList concode_elem_sep void addTag concode_elem_sep void addPerson concode_elem_sep boolean containsTag concode_elem_sep AddressBook empty"}
{"code": "Change function ( ) { return fUndoChange ; }", "nl": "returns the undo change of the change performed by this operation . returns null if the change has n't been performed yet or if the change does n't provide a undo . concode_field_sep Change fChange concode_elem_sep Change fUndoChange concode_elem_sep boolean fChangeExecutionFailed concode_elem_sep IUndoManager fUndoManager concode_elem_sep boolean fChangeExecuted concode_elem_sep CreateChangeOperation fCreateChangeOperation concode_elem_sep ISchedulingRule fSchedulingRule concode_elem_sep RefactoringStatus fValidationStatus concode_elem_sep String fUndoName concode_field_sep RefactoringStatus getConditionCheckingStatus concode_elem_sep boolean changeExecutionFailed concode_elem_sep boolean createChange concode_elem_sep Change getChange concode_elem_sep void setUndoManager concode_elem_sep void run concode_elem_sep void executeChange concode_elem_sep void setSchedulingRule concode_elem_sep boolean changeExecuted concode_elem_sep RefactoringStatus getValidationStatus"}
{"code": "int function ( Long arg0 ) { return context . getContentResolver ( ) . delete ( UriUtils . buildTaskWithId ( arg0 ) , null , null ) ; }", "nl": "mark a task as done for now , just delete the task . concode_field_sep SimpleDateFormat DATE_FORMAT concode_elem_sep Context context concode_elem_sep TaskService serviceInstance concode_field_sep void bulkDone concode_elem_sep long insert concode_elem_sep int update concode_elem_sep void scheduleTask concode_elem_sep void unscheduleTask concode_elem_sep TaskService getInstance concode_elem_sep int delete concode_elem_sep void scheduleTasksOnBoot concode_elem_sep PendingIntent buildPendingIntent"}
{"code": "void function ( int arg0 , int arg1 ) { columns [ arg1 ] . writeLength ( arg0 ) ; }", "nl": "expert : declare a count of items to be written to an array column or a column whose parent is an array . concode_field_sep byte[] MAGIC_1 concode_elem_sep ColumnFileMetaData metaData concode_elem_sep long size concode_elem_sep byte[] MAGIC_0 concode_elem_sep ColumnOutputBuffer[] columns concode_elem_sep long rowCount concode_elem_sep int columnCount concode_elem_sep byte[] MAGIC concode_field_sep void writeHeader concode_elem_sep void writeTo concode_elem_sep void writeTo concode_elem_sep long[] computeStarts concode_elem_sep void startRow concode_elem_sep void endRow concode_elem_sep void checkColumns concode_elem_sep int getColumnCount concode_elem_sep void writeRow concode_elem_sep void incrementSize concode_elem_sep ColumnFileMetaData getMetaData concode_elem_sep void writeValue concode_elem_sep long sizeEstimate"}
{"code": "int function ( ZooKeeper arg0 , String arg1 ) { try { Stat loc0 = arg0 . exists ( arg1 , null ) ; return loc0 != null ? loc0 . getVersion ( ) : - 1 ; } catch ( KeeperException loc0 ) { return - 1 ; } catch ( InterruptedException loc0 ) { Thread . currentThread ( ) . interrupt ( ) ; return - 1 ; } }", "nl": "check if the specified node exists . sets no watches . concode_field_sep char ZNODE_PATH_SEPARATOR concode_elem_sep Logger LOG concode_field_sep void createSetData concode_elem_sep String getParent concode_elem_sep boolean setData concode_elem_sep List<String> listChildrenNoWatch concode_elem_sep String joinZNode concode_elem_sep ArrayList<ACL> createACL concode_elem_sep void deleteNodeRecursively concode_elem_sep byte[] getData concode_elem_sep void createWithParents concode_elem_sep void createWithParents"}
{"code": "void function ( ) { waitForIdle ( Display . getDefault ( ) ) ; }", "nl": "this method does not return until the display thread is in an `` idle '' state . concode_field_sep PlaceHolder placeHolder concode_field_sep placeholderType placeHolder"}
{"code": "Properties function ( ) { Properties loc0 = new Properties ( ) ; loc0 . putAll ( GLOBAL_PROPERTIES ) ; return loc0 ; }", "nl": "return system properties , extended by any properties specified in hibernate.properties . concode_field_sep boolean ENABLE_BINARY_STREAMS concode_elem_sep CoreMessageLogger LOG concode_elem_sep Map OBSOLETE_PROPERTIES concode_elem_sep Map<Integer,String> ISOLATION_LEVELS concode_elem_sep Map RENAMED_PROPERTIES concode_elem_sep Properties GLOBAL_PROPERTIES concode_elem_sep BytecodeProvider BYTECODE_PROVIDER_INSTANCE concode_elem_sep boolean JVM_HAS_TIMESTAMP_BUG concode_elem_sep boolean ENABLE_REFLECTION_OPTIMIZER concode_field_sep void verifyProperties concode_elem_sep boolean useReflectionOptimizer concode_elem_sep BytecodeProvider getBytecodeProvider concode_elem_sep boolean jvmHasTimestampBug concode_elem_sep String isolationLevelToString concode_elem_sep BytecodeProvider buildBytecodeProvider concode_elem_sep BytecodeProvider buildBytecodeProvider concode_elem_sep boolean useStreamsForBinary"}
{"code": "void function ( final Object arg0 ) { this . endIndex = Array . getLength ( arg0 ) ; this . startIndex = 0 ; this . array = arg0 ; this . index = 0 ; }", "nl": "sets the array that the arrayiterator should iterate over . if an array has previously been set using the single-arg constructor or this method then that array is discarded in favour of this one . iteration is restarted at the start of the new array . although this can be used to reset iteration , the #reset methodis a more effective choice . concode_field_sep int index concode_elem_sep int startIndex concode_elem_sep Object array concode_elem_sep int endIndex concode_field_sep Object next concode_elem_sep void checkBound concode_elem_sep Object getArray concode_elem_sep void reset concode_elem_sep boolean hasNext concode_elem_sep void remove"}
{"code": "String [ ] function ( String arg0 ) { if ( arg0 == null ) throw new IllegalArgumentException ( \"srini_string\" ) ; return new PathTokenizer ( arg0 ) . tokenize ( ) ; }", "nl": "take a path string elements delimited by the ' \\ ' character and break it into tokens . if an element contains the delimeter , it must be escaped . for example : `` edit/find \\ \\ / replace '' tokenizes to `` edit '' , `` find/replace '' . concode_field_sep List _items concode_elem_sep char _delimeter concode_elem_sep char _escape concode_elem_sep String _pathString concode_elem_sep StringBuffer _sb concode_field_sep String[] getItems concode_elem_sep void addItem concode_elem_sep char getChar concode_elem_sep boolean inBounds concode_elem_sep boolean isEscape concode_elem_sep void addChar concode_elem_sep boolean isEscapeCase concode_elem_sep boolean isDelimeter"}
{"code": "Object function ( Class arg0 ) { return map . remove ( arg0 ) ; }", "nl": "removes a class to transformer mapping in the map . concode_field_sep NumberTransformer defaultTransformer concode_elem_sep Map map concode_elem_sep long serialVersionUID concode_field_sep boolean containsTransformer concode_elem_sep Collection transformers concode_elem_sep double transform concode_elem_sep NumberTransformer getTransformer concode_elem_sep Set classes concode_elem_sep void clear concode_elem_sep boolean containsClass concode_elem_sep Object putTransformer"}
{"code": "UnivPowerSeries < C > function ( ) { return ONE ; }", "nl": "get the one element . concode_field_sep UnivPowerSeries<C> ZERO concode_elem_sep String DEFAULT_NAME concode_elem_sep int truncate concode_elem_sep String var concode_elem_sep int DEFAULT_TRUNCATE concode_elem_sep UnivPowerSeries<C> ONE concode_elem_sep RingFactory<C> coFac concode_elem_sep Random random concode_field_sep UnivPowerSeries<C> getTAN concode_elem_sep boolean isField concode_elem_sep boolean isCommutative concode_elem_sep UnivPowerSeries<C> getSIN concode_elem_sep UnivPowerSeries<C> parse concode_elem_sep UnivPowerSeries<C> parse concode_elem_sep UnivPowerSeries<C> fromPolynomial concode_elem_sep java.math.BigInteger characteristic concode_elem_sep UnivPowerSeries<C> getEXP concode_elem_sep UnivPowerSeries<C> random concode_elem_sep UnivPowerSeries<C> random concode_elem_sep UnivPowerSeries<C> random concode_elem_sep UnivPowerSeries<C> random concode_elem_sep UnivPowerSeries<C> random concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep UnivPowerSeries<C> getZERO concode_elem_sep UnivPowerSeries<C> getCOS concode_elem_sep UnivPowerSeries<C> fromInteger concode_elem_sep UnivPowerSeries<C> fromInteger concode_elem_sep String toString concode_elem_sep boolean isAssociative concode_elem_sep UnivPowerSeries<C> copy concode_elem_sep UnivPowerSeries<C> fixPoint"}
{"code": "String function ( ) { return entityName ; }", "nl": "access to the intercepted entity name concode_field_sep boolean dirty concode_elem_sep SessionImplementor session concode_elem_sep String entityName concode_elem_sep boolean initializing concode_elem_sep Set uninitializedFields concode_field_sep void dirty concode_elem_sep boolean isInitializing concode_elem_sep boolean isDirty concode_elem_sep Set getUninitializedFields concode_elem_sep void clearDirty concode_elem_sep Object intercept concode_elem_sep boolean isInitialized concode_elem_sep boolean isInitialized concode_elem_sep void setSession concode_elem_sep SessionImplementor getSession"}
{"code": "String function ( String arg0 ) { if ( arg0 == null ) throw new IllegalArgumentException ( \"srini_string\" ) ; return getDataMap ( ) . get ( arg0 ) ; }", "nl": "returns the programmer defined property of the receiver with the specified name , or null if it has not been set . data mappings allow programmers to associate arbitrary key-value pairs with locator instances . concode_field_sep long serialVersionUID concode_elem_sep int UNASSIGNED concode_elem_sep String nameOrLabel concode_elem_sep int index concode_elem_sep WidgetLocator ancestorInfo concode_elem_sep WidgetLocator parentInfo concode_elem_sep HashMap<String,String> map concode_elem_sep ClassReference classRef concode_field_sep void setAncestorInfo concode_elem_sep Object getAdapter concode_elem_sep int getIndex concode_elem_sep void setData concode_elem_sep void copyDataTo concode_elem_sep WidgetLocator getParentInfo concode_elem_sep String getWidgetLocatorStringName concode_elem_sep String getNameOrLabel concode_elem_sep WidgetLocator getAncestorInfo concode_elem_sep com.windowtester.runtime.locator.IWidgetLocator[] findAll concode_elem_sep boolean matches concode_elem_sep Map<String,String> getDataMap concode_elem_sep void accept concode_elem_sep void setParentInfo concode_elem_sep Class<?> getTargetClass concode_elem_sep void setIndex concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep ClassReference getTargetClassRef concode_elem_sep String getTargetClassName concode_elem_sep String toString"}
{"code": "void function ( ) { }", "nl": "noop is the default behavior , which means that kafka will internally handle partition assignment . if you wish to do manual partition management , you must provide an implementation of this method that will check with kafka for any changes and call the consumerrebalancelistener from subscribe to inform the rest of the system of those changes . concode_field_sep long serialVersionUID concode_field_sep String getTopicsString concode_elem_sep void subscribe"}
{"code": "void function ( double arg0 , double arg1 ) { assert ( arg0 <= arg1 ) ; this . leftBound = arg0 ; this . rightBound = arg1 ; fireBoundsChangeEvent ( arg0 , arg1 ) ; }", "nl": "sets the bounds for this timeline . a timeline must have sensible bounds . left side must be < = right side . concode_field_sep List<TimeLineGraph> graphs concode_elem_sep boolean timerActive concode_elem_sep double rightBound concode_elem_sep boolean isDirty concode_elem_sep double leftBound concode_elem_sep double mostRecentDomainValue concode_elem_sep List<DomainObserver> domainObservers concode_elem_sep GraphCalloutModel graphCalloutModel concode_elem_sep boolean showStreaming concode_elem_sep Timer t concode_elem_sep List<WindowBoundsObserver> windowObservers concode_elem_sep boolean pinLowerBound concode_elem_sep UpdateTicker updateController concode_field_sep void addDomainObserver concode_elem_sep void onModelDataRefreshTick concode_elem_sep void fireBoundsChangeEvent concode_elem_sep double getLeftBound concode_elem_sep void restartUpdateTimer concode_elem_sep void addWindowBoundsObserver concode_elem_sep double getRightBound concode_elem_sep void refresh concode_elem_sep double getMostRecentDomainValue concode_elem_sep void addGraph concode_elem_sep void setStreaming concode_elem_sep ArrayList<TimeLineGraph> getGraphs concode_elem_sep boolean isStreaming concode_elem_sep GraphCalloutModel getGraphCalloutModel concode_elem_sep void removeWindowBoundsObserver concode_elem_sep void onWindowBoundsChange concode_elem_sep void removeDomainObserver concode_elem_sep int getGraphCount concode_elem_sep void onDomainChange concode_elem_sep void toggleFixBounds concode_elem_sep void timerDispatch"}
{"code": "IUIContext function ( Display arg0 ) { IUIContext loc0 = createContext ( IUIContext . class , arg0 ) ; return loc0 ; }", "nl": "create a new user interface context . concode_field_sep PlaceHolder placeHolder concode_field_sep placeholderType placeHolder"}
{"code": "LIST < C > function ( LIST < C > arg0 ) { if ( isNull ( arg0 ) ) { return arg0 ; } Collections . reverse ( arg0 . list ) ; return arg0 ; }", "nl": "inverse . l is a list . the inverse of l is returned . the list l is modified . concode_field_sep LIST<?> SIL concode_elem_sep Iterator<C> iter concode_elem_sep LinkedList<C> list concode_field_sep void SFIRST concode_elem_sep LIST<C> LIST1 concode_elem_sep LIST<C> RED3 concode_elem_sep LIST<C> LIST3 concode_elem_sep LIST<C> RED4 concode_elem_sep LIST<C> LIST2 concode_elem_sep C THIRD concode_elem_sep LIST<C> LIST5 concode_elem_sep int LENGTH concode_elem_sep LIST<C> RED2 concode_elem_sep LIST<C> LIST4 concode_elem_sep LIST<C> COMP concode_elem_sep LIST<C> COMP3 concode_elem_sep LIST<C> COMP3 concode_elem_sep int ORDER concode_elem_sep LIST<C> COMP2 concode_elem_sep int EXTENT concode_elem_sep void SRED concode_elem_sep C LELT concode_elem_sep boolean EQUAL concode_elem_sep LIST<C> LIST10 concode_elem_sep boolean isEmpty concode_elem_sep LIST<C> CCONC concode_elem_sep C FIRST concode_elem_sep LIST<C> REDUCT concode_elem_sep C FOURTH concode_elem_sep LIST<C> RED concode_elem_sep LIST<C> CINV concode_elem_sep boolean isNull concode_elem_sep String toString concode_elem_sep C SECOND concode_elem_sep long CLOCK concode_elem_sep LIST<C> CONC"}
{"code": "boolean function ( ) { final boolean loc0 [ ] = new boolean [ ] { false } ; Display . getDefault ( ) . syncExec ( new Runnable ( ) { public void run ( ) { loc0 [ 0 ] = anyUnsavedChanges0 ( ) ; } } ) ; return loc0 [ 0 ] ; }", "nl": "determine if any open editors are `` dirty '' . concode_field_sep PlaceHolder placeHolder concode_field_sep boolean anyUnsavedChanges0"}
{"code": "void function ( ICondition arg0 ) { throw new WaitTimedOutException ( Diagnostic . toString ( \"srini_string\" , arg0 ) ) ; }", "nl": "default implementation that simply throws a waittimedoutexception . concode_field_sep long timeout concode_elem_sep int interval concode_field_sep boolean isTrue concode_elem_sep void wait concode_elem_sep void wait concode_elem_sep boolean timedOut concode_elem_sep Timer withInterval concode_elem_sep Timer withTimeout concode_elem_sep void pause"}
{"code": "HashMap < BigDecimal , MetricsSubCoordinatorInfo > function ( ) { return listOfSubCoordinators ; }", "nl": "this method returns the list of sub-coordinators , which is maintained by metricstorage . concode_field_sep HashMap<BigDecimal,MetricsSubCoordinatorInfo> listOfSubCoordinators concode_elem_sep float exponentialSmoothing concode_elem_sep MetricsEntry ownMetrics concode_elem_sep Logger log concode_elem_sep String smoothingType concode_elem_sep SkyNetNodeInterface skynetNode concode_elem_sep LinkedList<HashMap<String,MetricsAggregate>> metricsHistory concode_elem_sep int historySize concode_field_sep void setOwnMetrics concode_elem_sep void setListOfSubCoordinators concode_elem_sep LinkedList<HashMap<String,MetricsAggregate>> getMetricsHistory concode_elem_sep MetricsAggregate mergeTwoAggregates concode_elem_sep void setMetricsHistory concode_elem_sep void reset concode_elem_sep MetricsEntry getOwnMetrics concode_elem_sep void addMetricsMapToMetricsHistory concode_elem_sep MetricsEntry aggregateMetrics"}
{"code": "IAnnotationCreator function ( ) { if ( AnnotationCreatorBubble . instance == null ) { AnnotationCreatorBubble . instance = new AnnotationCreatorBubble ( ) ; } return AnnotationCreatorBubble . instance ; }", "nl": "singleton retrieval method . concode_field_sep IAnnotationCreator instance concode_elem_sep long serialVersionUID concode_field_sep JComponent createAnnotationView"}
{"code": "int function ( ) { return accounts . length ; }", "nl": "gets the number of accounts in the bank . concode_field_sep double[] accounts concode_field_sep void transfer concode_elem_sep double getTotalBalance"}
{"code": "void function ( ) { for ( String loc0 : files ) { int loc1 = files . indexOf ( loc0 ) ; System . out . println ( ( loc1 + 1 ) + \"srini_string\" + files . get ( loc1 ) ) ; } }", "nl": "list all filles . concode_field_sep ArrayList<String> files concode_elem_sep MusicPlayer player concode_field_sep void listFile concode_elem_sep void removeFile concode_elem_sep int getNumberOfFiles concode_elem_sep void listMatching concode_elem_sep int findFirst concode_elem_sep void stopPlaying concode_elem_sep void startPlaying concode_elem_sep void addFile concode_elem_sep void playSampleOf"}
{"code": "Tag function ( ) { return this . parent ; }", "nl": "returns the parent tag for this tag . concode_field_sep Tag parent concode_elem_sep Map<String,String> css concode_elem_sep List<Tag> children concode_elem_sep String ns concode_elem_sep Map<String,String> attributes concode_elem_sep String tag concode_elem_sep Object lastMarginBottom concode_field_sep void setLastMarginBottom concode_elem_sep void setCSS concode_elem_sep Map<String,String> getAttributes concode_elem_sep String getName concode_elem_sep Map<String,String> getCSS concode_elem_sep boolean hasChildren concode_elem_sep Tag getChild concode_elem_sep Tag getChild concode_elem_sep String getNameSpace concode_elem_sep Tag recursiveGetChild concode_elem_sep String getTag concode_elem_sep List<Tag> getChildren concode_elem_sep List<Tag> getChildren concode_elem_sep boolean recursiveHasChild concode_elem_sep Object getLastMarginBottom concode_elem_sep Iterator<Tag> iterator concode_elem_sep boolean hasChild concode_elem_sep boolean hasChild concode_elem_sep String toString concode_elem_sep void setParent concode_elem_sep void addChild concode_elem_sep boolean compareTag concode_elem_sep boolean hasParent"}
{"code": "Environment function ( ProfileInformationProvider arg0 , ConfigurationProvider arg1 ) { Environment loc0 = new Environment ( ) { @ Override public int register ( ) { return 0 ; } } ; populateEnvironment ( loc0 , arg0 , arg1 ) ; return loc0 ; }", "nl": "returns an environment not linked to a storage instance , butpopulated with current field values . concode_field_sep String LOG_TAG concode_field_sep int getScreenYInMM concode_elem_sep int registerCurrentEnvironment concode_elem_sep String getDistributionString concode_elem_sep String getOSLocale concode_elem_sep void populateEnvironment concode_elem_sep ContentProviderClient getContentProviderClient concode_elem_sep UIType getUIType concode_elem_sep boolean isBlocklistEnabled concode_elem_sep boolean hasHardwareKeyboard concode_elem_sep String getAppLocale concode_elem_sep long getProfileCreationTime concode_elem_sep JSONObject getAddonsJSON concode_elem_sep int getScreenLayoutSize concode_elem_sep int getScreenXInMM concode_elem_sep HealthReportDatabaseStorage getStorage concode_elem_sep int getUIModeType concode_elem_sep boolean isAcceptLangUserSet concode_elem_sep boolean isTelemetryEnabled"}
{"code": "void function ( String arg0 , IPath arg1 ) { IIndex loc0 = getIndex ( arg1 , false ) ; if ( loc0 != null ) loc0 . remove ( arg0 ) ; }", "nl": "trigger removal of a resource to an index note : the actual operation is performed in background concode_field_sep int CANCEL_IF_NOT_READY_TO_SEARCH concode_elem_sep SearchEngine fgSearchEngine concode_elem_sep HashMap fIndexes concode_elem_sep HashMap fMap concode_elem_sep int WAIT_UNTIL_READY_TO_SEARCH concode_field_sep void add concode_elem_sep SearchEngine getSearchEngine concode_elem_sep void search concode_elem_sep boolean search concode_elem_sep IIndex getIndex concode_elem_sep void addRef concode_elem_sep IIndex[] getIndexes concode_elem_sep IFile[] getFiles concode_elem_sep boolean execute concode_elem_sep void queryPrefix"}
{"code": "void function ( final boolean arg0 ) { this . m_isMajorTick = arg0 ; }", "nl": "set this label as a major tick . concode_field_sep String m_label concode_elem_sep boolean m_isMajorTick concode_elem_sep double m_value concode_field_sep double getValue concode_elem_sep String getLabel concode_elem_sep boolean isMajorTick concode_elem_sep void setValue concode_elem_sep void setLabel concode_elem_sep String toString"}
{"code": "List < GenSolvablePolynomial < C >> function ( int arg0 , List < GenSolvablePolynomial < C >> arg1 ) { if ( arg0 == 0 ) { return sbb . rightGB ( arg0 , arg1 ) ; } throw new RuntimeException ( \"srini_string\" ) ; }", "nl": "right groebner base using pairlist class . concode_field_sep SolvableGroebnerBase<C> sbb concode_elem_sep boolean debug concode_elem_sep Logger logger concode_field_sep List<GenSolvablePolynomial<C>> leftGB concode_elem_sep ModuleList<C> leftGB concode_elem_sep boolean isTwosidedGB concode_elem_sep boolean isTwosidedGB concode_elem_sep boolean isLeftGB concode_elem_sep boolean isLeftGB concode_elem_sep boolean isRightGB concode_elem_sep boolean isRightGB concode_elem_sep List<GenSolvablePolynomial<C>> twosidedGB concode_elem_sep ModuleList<C> twosidedGB"}
{"code": "Map < Method , InterceptorFactory > function ( ) { return componentInterceptors ; }", "nl": "get the component interceptor factory map . concode_field_sep BasicComponent component concode_elem_sep Class<?> componentClass concode_elem_sep Map<Method,InterceptorFactory> componentInterceptors concode_elem_sep InterceptorFactory preDestroy concode_elem_sep String componentName concode_elem_sep ServiceName serviceName concode_elem_sep InterceptorFactory postConstruct concode_elem_sep NamespaceContextSelector namespaceContextSelector concode_elem_sep InjectedValue<DeploymentUnit> deploymentUnit concode_field_sep String getComponentName concode_elem_sep Component getValue concode_elem_sep NamespaceContextSelector getNamespaceContextSelector concode_elem_sep InterceptorFactory getPreDestroy concode_elem_sep void stop concode_elem_sep Class<?> getComponentClass concode_elem_sep boolean requiresInterceptors concode_elem_sep void start concode_elem_sep InjectedValue<DeploymentUnit> getDeploymentUnitInjector concode_elem_sep ServiceName getServiceName concode_elem_sep InterceptorFactory getPostConstruct concode_elem_sep BasicComponent createComponent"}
{"code": "int function ( ) { return ( data [ position ++ ] & 0xFF ) ; }", "nl": "reads the next byte as an unsigned value . concode_field_sep byte[] data concode_elem_sep int limit concode_elem_sep int position concode_field_sep int readUnsignedInt24 concode_elem_sep int readSynchSafeInt concode_elem_sep int readUnsignedIntToInt concode_elem_sep void setPosition concode_elem_sep int capacity concode_elem_sep void skipBytes concode_elem_sep long readUnsignedInt concode_elem_sep int getPosition concode_elem_sep long readLong concode_elem_sep short readShort concode_elem_sep void setLimit concode_elem_sep int bytesLeft concode_elem_sep int limit concode_elem_sep void reset concode_elem_sep void reset concode_elem_sep void readBytes concode_elem_sep void readBytes concode_elem_sep void readBytes concode_elem_sep int readUnsignedFixedPoint1616 concode_elem_sep int readInt concode_elem_sep long readUnsignedLongToLong concode_elem_sep int readUnsignedShort"}
{"code": "void function ( boolean arg0 ) { started_ = arg0 ; }", "nl": "set the started status . concode_field_sep boolean started_ concode_elem_sep String jndiName_ concode_elem_sep Logger LOG concode_elem_sep Element config_ concode_field_sep Element getConfiguration concode_elem_sep void stop concode_elem_sep void unbind concode_elem_sep void rebind concode_elem_sep Properties getProperties concode_elem_sep String getJNDIName concode_elem_sep boolean isStarted concode_elem_sep void setConfiguration concode_elem_sep void setJNDIName"}
{"code": "UUID function ( byte [ ] arg0 ) { ParsableByteArray loc0 = new ParsableByteArray ( arg0 ) ; if ( ! isPsshAtom ( loc0 , null ) ) { return null ; } loc0 . setPosition ( Atom . FULL_HEADER_SIZE ) ; return new UUID ( loc0 . readLong ( ) , loc0 . readLong ( ) ) ; }", "nl": "parses the uuid from a pssh atom . the uuid is only parsed if the data is a valid pssh atom . concode_field_sep PlaceHolder placeHolder concode_field_sep byte[] parseSchemeSpecificData concode_elem_sep byte[] buildPsshAtom concode_elem_sep boolean isPsshAtom"}
{"code": "void function ( final DataOutputStream arg0 ) { arg0 . writeShort ( modifiers ) ; arg0 . writeShort ( name ) ; arg0 . writeShort ( type ) ; arg0 . writeShort ( attrs . length ) ; for ( int loc0 = 0 ; loc0 < attrs . length ; loc0 ++ ) { arg0 . writeShort ( attrs [ loc0 ] . nameIndex ( ) ) ; arg0 . writeInt ( attrs [ loc0 ] . length ( ) ) ; attrs [ loc0 ] . writeData ( arg0 ) ; } }", "nl": "write the field to a class file . concode_field_sep ClassInfo classInfo concode_elem_sep int name concode_elem_sep int modifiers concode_elem_sep int type concode_elem_sep Attribute[] attrs concode_elem_sep ConstantValue constantValue concode_field_sep void setConstantValue concode_elem_sep int typeIndex concode_elem_sep int nameIndex concode_elem_sep void setNameIndex concode_elem_sep String toString concode_elem_sep void setTypeIndex concode_elem_sep void setModifiers concode_elem_sep int modifiers concode_elem_sep ClassInfo declaringClass concode_elem_sep int constantValue"}
{"code": "E function ( Collection < E > arg0 ) { if ( arg0 instanceof List ) return getRandomEntry ( ( List < E > ) arg0 ) ; if ( arg0 . size ( ) == 0 ) return null ; int loc0 = Simulator . getRandom ( ) . nextInt ( arg0 . size ( ) ) ; for ( E loc1 : arg0 ) { if ( loc0 <= 0 ) return loc1 ; loc0 -- ; } return null ; }", "nl": "returns a random entry from the given collection . uses the prng used by the simulator . returns null if the list is empty . concode_field_sep PlaceHolder placeHolder concode_field_sep void filter concode_elem_sep void copyNSortedAndFiltered concode_elem_sep void filterMap concode_elem_sep void copyNSorted concode_elem_sep double getQuantile concode_elem_sep void splitMap concode_elem_sep List<T> getRandomPartFrom concode_elem_sep void copyUntilFull concode_elem_sep List<Tt> transformList"}
{"code": "Product < C > function ( Reader arg0 ) { throw new RuntimeException ( \"srini_string\" ) ; }", "nl": "parse product from reader . syntax : p1 ... pn no commas concode_field_sep int nCopies concode_elem_sep RingFactory<C> ring concode_elem_sep List<RingFactory<C>> ringList concode_elem_sep Logger logger concode_elem_sep Random random concode_field_sep void addFactory concode_elem_sep boolean containsFactory concode_elem_sep boolean isField concode_elem_sep int length concode_elem_sep boolean isCommutative concode_elem_sep RingFactory<C> getFactory concode_elem_sep java.math.BigInteger characteristic concode_elem_sep Product<C> random concode_elem_sep Product<C> random concode_elem_sep Product<C> random concode_elem_sep Product<C> random concode_elem_sep Product<C> getAtomic concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep Product<C> getONE concode_elem_sep Product<C> getZERO concode_elem_sep Product<C> fromInteger concode_elem_sep Product<C> fromInteger concode_elem_sep boolean isAssociative concode_elem_sep String toString concode_elem_sep Product<C> copy"}
{"code": "Change function ( IJavaProject arg0 , IClasspathEntry arg1 ) { return ClasspathChange . addEntryChange ( arg0 , arg1 ) ; }", "nl": "a helper method to create a change that adds an entry to the class path . concode_field_sep PlaceHolder placeHolder concode_field_sep String getAdditionalProposalInfo concode_elem_sep ClasspathFixProposal[] getFixImportProposals concode_elem_sep Change newClasspathChange concode_elem_sep Change createChange concode_elem_sep int getRelevance concode_elem_sep String getDisplayString concode_elem_sep Image getImage concode_elem_sep ClasspathFixProposal[] getContributedFixImportProposals"}
{"code": "boolean function ( ) { return ring . isAssociative ( ) ; }", "nl": "query if this ring is associative . concode_field_sep GenPolynomialRing<C> ring concode_elem_sep int isField concode_elem_sep GenPolynomial<C> modul concode_field_sep boolean isField concode_elem_sep boolean isCommutative concode_elem_sep AlgebraicNumber<C> interpolate concode_elem_sep AlgebraicNumber<C> parse concode_elem_sep AlgebraicNumber<C> parse concode_elem_sep java.math.BigInteger characteristic concode_elem_sep AlgebraicNumber<C> random concode_elem_sep AlgebraicNumber<C> random concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep AlgebraicNumber<C> getONE concode_elem_sep AlgebraicNumber<C> getZERO concode_elem_sep AlgebraicNumber<C> fromInteger concode_elem_sep AlgebraicNumber<C> fromInteger concode_elem_sep String toString concode_elem_sep AlgebraicNumber<C> copy concode_elem_sep AlgebraicNumber<C> chineseRemainder"}
{"code": "IUICondition function ( boolean arg0 ) { return new IsEnabledCondition ( this , arg0 ) ; }", "nl": "create a condition that tests if the given widget is enabled . concode_field_sep Widget widget concode_field_sep Object getWidget concode_elem_sep IWidgetLocator[] findAll concode_elem_sep boolean matches"}
{"code": "String function ( ) { return name ; }", "nl": "get name . concode_field_sep boolean isDefault concode_elem_sep String color concode_elem_sep String name concode_elem_sep int id concode_elem_sep String url concode_field_sep void setName concode_elem_sep String getUrl concode_elem_sep boolean isDefault concode_elem_sep void setColor concode_elem_sep void setId concode_elem_sep String getColor concode_elem_sep int getId concode_elem_sep void setDefault concode_elem_sep void setUrl"}
{"code": "void function ( final File arg0 ) { outputDir = arg0 ; }", "nl": "set the directory into which commited class files should be written . concode_field_sep File outputDir concode_elem_sep LinkedList cache concode_elem_sep ClassSource _classSource concode_elem_sep String classpath concode_elem_sep Map openZipFiles concode_elem_sep boolean DEBUG concode_elem_sep boolean USE_SYSTEM_CLASSES concode_elem_sep int CACHE_LIMIT concode_elem_sep boolean verbose concode_field_sep File outputDir concode_elem_sep ClassInfo loadClassFromStream concode_elem_sep void appendClassPath concode_elem_sep ClassInfo loadClassFromFile concode_elem_sep void setVerbose concode_elem_sep ClassInfo[] loadClassesFromZipFile concode_elem_sep void done concode_elem_sep void prependClassPath concode_elem_sep OutputStream outputStreamFor concode_elem_sep OutputStream outputStreamFor concode_elem_sep void setClassPath concode_elem_sep String getClassPath concode_elem_sep void addToCache concode_elem_sep ClassInfo newClass concode_elem_sep ClassInfo loadClassFromRessource concode_elem_sep ClassInfo loadClass concode_elem_sep void writeEntry"}
{"code": "DocumentBuilder function ( int arg0 ) { ensureNotBuilt ( ) ; addSection ( arg0 , new ArrayList < > ( ) ) ; return this ; }", "nl": "add a section without header content . concode_field_sep Optional<String> fileName concode_elem_sep long serialVersionUID concode_elem_sep boolean built concode_elem_sep Set<PreprocessorRule> preprocessorRules concode_elem_sep List<Section> sections concode_elem_sep RedPenTokenizer tokenizer concode_field_sep DocumentBuilder appendSection concode_elem_sep void ensureNotBuilt concode_elem_sep DocumentBuilder setPreprocessorRules concode_elem_sep Section getLastSection concode_elem_sep Section getLastSection concode_elem_sep Set<PreprocessorRule> getPreprocessorRules concode_elem_sep DocumentBuilder setFileName concode_elem_sep Iterator<Section> iterator concode_elem_sep Section getSection concode_elem_sep Section getSection concode_elem_sep DocumentBuilder addSectionHeader concode_elem_sep int size concode_elem_sep DocumentBuilder addSentence concode_elem_sep DocumentBuilder addSentence concode_elem_sep Document build concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep DocumentBuilder builder concode_elem_sep DocumentBuilder builder concode_elem_sep String toString concode_elem_sep DocumentBuilder addParagraph concode_elem_sep DocumentBuilder addListBlock concode_elem_sep Optional<String> getFileName concode_elem_sep DocumentBuilder addListElement concode_elem_sep DocumentBuilder addListElement"}
{"code": "SortedMap [ ] function ( ) { if ( rowMap == null ) { return null ; } return ( SortedMap [ ] ) rowMap . toArray ( new SortedMap [ 0 ] ) ; }", "nl": "returns an array of sortedmap objects . the sortedmap object key is the columnname and the value is the columnvalue . sortedmap was created using the case_insensitive_order comparator so the key is the case insensitive representation of the columnname . concode_field_sep boolean isLimited concode_elem_sep String[] columnNames concode_elem_sep List rowMap concode_elem_sep List rowByIndex concode_field_sep String[] getColumnNames concode_elem_sep int getRowCount concode_elem_sep Object[][] getRowsByIndex concode_elem_sep boolean isLimitedByMaxRows"}
{"code": "SchemaValidatorBuilder function ( ) { this . strategy = new ValidateCanBeRead ( ) ; return this ; }", "nl": "use a strategy that validates that a schema can be read by existing schema s according to the avro default schema resolution . concode_field_sep SchemaValidationStrategy strategy concode_field_sep void valid concode_elem_sep SchemaValidatorBuilder canReadStrategy concode_elem_sep SchemaValidator validateAll concode_elem_sep SchemaValidator validateLatest concode_elem_sep SchemaValidatorBuilder mutualReadStrategy concode_elem_sep SchemaValidatorBuilder strategy"}
{"code": "Callable < T > function ( final Callable < T > arg0 ) { return new ContextCallable < T > ( arg0 ) ; }", "nl": "returns a callable that will retain the stack trace information about where it originated from . concode_field_sep Field causeField concode_field_sep Executor decorate concode_elem_sep ExecutorService decorate concode_elem_sep ScheduledExecutorService decorate concode_elem_sep ListeningExecutorService decorate concode_elem_sep ListeningScheduledExecutorService decorate concode_elem_sep void handleException concode_elem_sep StackTraceElement[] getStackContext concode_elem_sep Throwable findRootCause concode_elem_sep Runnable makeContextRunnable concode_elem_sep List<Callable<T>> makeContextWrappedCollection"}
{"code": "Duration function ( Duration arg0 , Duration arg1 ) { checkValid ( arg0 ) ; checkValid ( arg1 ) ; return normalizedDuration ( checkedAdd ( arg0 . getSeconds ( ) , arg1 . getSeconds ( ) ) , checkedAdd ( arg0 . getNanos ( ) , arg1 . getNanos ( ) ) ) ; }", "nl": "add two durations . concode_field_sep long DURATION_SECONDS_MAX concode_elem_sep long DURATION_SECONDS_MIN concode_elem_sep Duration MAX_VALUE concode_elem_sep Duration MIN_VALUE concode_elem_sep Comparator<Duration> COMPARATOR concode_field_sep int compare concode_elem_sep Duration fromNanos concode_elem_sep boolean isValid concode_elem_sep boolean isValid concode_elem_sep Duration checkValid concode_elem_sep Duration subtract concode_elem_sep Duration parse concode_elem_sep long toSeconds concode_elem_sep Duration fromSeconds concode_elem_sep Comparator<Duration> comparator concode_elem_sep long toNanos concode_elem_sep Duration fromMillis concode_elem_sep Duration fromMicros concode_elem_sep String toString concode_elem_sep long toMillis concode_elem_sep long toMicros concode_elem_sep Duration normalizedDuration"}
{"code": "void function ( Event arg0 ) { release ( ) ; }", "nl": "default implementation of mouseup simply releases capture . concode_field_sep CaptureReleaser releaser concode_field_sep void handleEvent concode_elem_sep void release concode_elem_sep void setCaptureReleaser concode_elem_sep void onMouseMove concode_elem_sep void onMouseDown"}
{"code": "String function ( ) { return ( this . classInfo ( ) . name ( ) ) ; }", "nl": "returns the name of the class represented by this classeditor . concode_field_sep boolean dirty concode_elem_sep ClassInfo classInfo concode_elem_sep Type[] interfaces concode_elem_sep Type superclass concode_elem_sep EditorContext context concode_elem_sep ConstantPool constants concode_elem_sep Type type concode_elem_sep boolean DEBUG concode_field_sep void setInterface concode_elem_sep void setInterfaces concode_elem_sep boolean isStatic concode_elem_sep boolean isSuper concode_elem_sep MethodInfo[] methods concode_elem_sep void commit concode_elem_sep boolean isPrivate concode_elem_sep Type type concode_elem_sep int modifiers concode_elem_sep void setDirty concode_elem_sep void setFinal concode_elem_sep void setSuper concode_elem_sep boolean isDirty concode_elem_sep boolean isProtected concode_elem_sep Type superclass concode_elem_sep int hashCode concode_elem_sep void setProtected concode_elem_sep EditorContext context concode_elem_sep boolean isPublic concode_elem_sep boolean isFinal concode_elem_sep ConstantPool constants concode_elem_sep boolean isInterface concode_elem_sep ClassInfo classInfo concode_elem_sep void setPublic concode_elem_sep Type[] interfaces concode_elem_sep void addInterface concode_elem_sep void addInterface concode_elem_sep void setStatic concode_elem_sep void setType concode_elem_sep void commitOnly concode_elem_sep boolean isAbstract concode_elem_sep void setSuperclass concode_elem_sep boolean equals concode_elem_sep void setAbstract concode_elem_sep String toString concode_elem_sep void visit concode_elem_sep FieldInfo[] fields concode_elem_sep void setPrivate"}
{"code": "boolean function ( ) { if ( proximitySensor != null ) { return true ; } proximitySensor = sensorManager . getDefaultSensor ( Sensor . TYPE_PROXIMITY ) ; if ( proximitySensor == null ) { return false ; } logProximitySensorInfo ( ) ; return true ; }", "nl": "get default proximity sensor if it exists . tablet devices e.g. nexus 7 does not support this type of sensor and false will be retured in such cases . concode_field_sep String TAG concode_elem_sep SensorManager sensorManager concode_elem_sep RtkUtils.NonThreadSafe nonThreadSafe concode_elem_sep Sensor proximitySensor concode_elem_sep Runnable onSensorStateListener concode_elem_sep boolean lastStateReportIsNear concode_field_sep void checkIfCalledOnValidThread concode_elem_sep void onSensorChanged concode_elem_sep void stop concode_elem_sep boolean start concode_elem_sep RtkProximitySensor create concode_elem_sep void logProximitySensorInfo concode_elem_sep boolean sensorReportsNearState concode_elem_sep void onAccuracyChanged"}
{"code": "String [ ] function ( ) { return keyAliases ; }", "nl": "returns the suffixed result-set column-aliases for columns making up the key for this collection i.e. , its fk to its owner . concode_field_sep Map userProvidedAliases concode_elem_sep String[] indexAliases concode_elem_sep String[] keyAliases concode_elem_sep String identifierAlias concode_elem_sep String suffix concode_elem_sep String[] elementAliases concode_field_sep String getSuffix concode_elem_sep String getSuffixedIdentifierAlias concode_elem_sep String getUserProvidedAlias concode_elem_sep String toString concode_elem_sep String[] getUserProvidedAliases concode_elem_sep String[] getSuffixedIndexAliases concode_elem_sep String[] getSuffixedElementAliases concode_elem_sep String join"}
{"code": "ResourceEditPropertyBuilder function ( boolean arg0 ) { this . isTesting = arg0 ; return this ; }", "nl": "indicate if property is in testing mode concode_field_sep boolean isTesting concode_elem_sep String typeName concode_elem_sep Clob propertyValue concode_elem_sep Clob exampleValue concode_elem_sep boolean isEncrypted concode_elem_sep String propContName concode_elem_sep Integer descriptorId concode_elem_sep String typeContName concode_elem_sep Integer typeId concode_elem_sep Clob defaultValue concode_elem_sep String resourceName concode_elem_sep String fcExternalKey concode_elem_sep String technicalKey concode_elem_sep String mik concode_elem_sep Integer propContextId concode_elem_sep String origin concode_elem_sep Integer cardinalityProperty concode_elem_sep Integer propertyValueTypeId concode_elem_sep String displayName concode_elem_sep String fcOwner concode_elem_sep Integer propertyId concode_elem_sep Integer masterTypeId concode_elem_sep boolean isNullable concode_elem_sep String fcExternalLink concode_elem_sep String validationRegex concode_elem_sep String loadedFor concode_elem_sep boolean isOptional concode_elem_sep String validationLogic concode_elem_sep String descriptorOrigin concode_elem_sep Integer typeContextId concode_elem_sep Clob propertyComment concode_field_sep ResourceEditPropertyBuilder withDisplayAndTechKeyName concode_elem_sep ResourceEditPropertyBuilder withOrigin concode_elem_sep ResourceEditPropertyBuilder withValidationRegex concode_elem_sep ResourceEditPropertyBuilder withIsEncrypted concode_elem_sep ResourceEditPropertyBuilder withDescriptorOrigin concode_elem_sep Clob convert concode_elem_sep ResourceEditPropertyBuilder withTechnicalKey concode_elem_sep ResourceEditPropertyBuilder withMasterResTypeName concode_elem_sep ResourceEditPropertyBuilder withLoadedFor concode_elem_sep ResourceEditPropertyBuilder withDisplayName concode_elem_sep ResourceEditPropertyBuilder withValue concode_elem_sep ResourceEditPropertyBuilder withFcExternalLink concode_elem_sep ResourceEditPropertyBuilder withDefaultValue concode_elem_sep ResourceEditPropertyBuilder withDescriptorId concode_elem_sep ResourceEditPropertyBuilder withTypeId concode_elem_sep ResourceEditPropertyBuilder withDescriptor concode_elem_sep ResourceEditPropertyBuilder withCardinality concode_elem_sep ResourceEditPropertyBuilder withPropTypeContName concode_elem_sep ResourceEditPropertyBuilder withValidationLogic concode_elem_sep ResourceEditPropertyBuilder withPropertyContextTypeId concode_elem_sep ResourceEditPropertyBuilder withPropertyId concode_elem_sep ResourceEditPropertyBuilder withPropContName concode_elem_sep ResourceEditPropertyBuilder withComment concode_elem_sep ResourceEditPropertyBuilder withFcOwner concode_elem_sep ResourceEditPropertyBuilder withMasterResTypeId concode_elem_sep ResourceEditPropertyBuilder withFcExternalKey concode_elem_sep ResourceEditProperty build concode_elem_sep ResourceEditPropertyBuilder withExampleValue concode_elem_sep ResourceEditPropertyBuilder withResourceName concode_elem_sep ResourceEditPropertyBuilder withPropContextId concode_elem_sep ResourceEditPropertyBuilder withIsNullable"}
{"code": "SortedBag function ( SortedBag arg0 , Class arg1 ) { return new PredicatedSortedBag ( arg0 , InstanceofPredicate . getInstance ( arg1 ) ) ; }", "nl": "factory method to create a typed sorted bag . if there are any elements already in the bag being decorated , they are validated . concode_field_sep PlaceHolder placeHolder concode_field_sep placeholderType placeHolder"}
{"code": "void function ( Asn1Type arg0 ) { Asn1Dumper loc0 = new Asn1Dumper ( ) ; loc0 . dumpType ( 0 , arg0 ) ; String loc1 = loc0 . loc1 ( ) ; System . out . println ( loc1 ) ; }", "nl": "dump out a value . concode_field_sep PlaceHolder placeHolder concode_field_sep void encode concode_elem_sep byte[] encode concode_elem_sep void decodeAndDump concode_elem_sep void decodeAndDump concode_elem_sep void decodeAndDump concode_elem_sep Asn1ParseResult parse concode_elem_sep Asn1ParseResult parse concode_elem_sep Asn1Type decode concode_elem_sep Asn1Type decode concode_elem_sep void decode concode_elem_sep void decode concode_elem_sep void parseAndDump concode_elem_sep void parseAndDump concode_elem_sep void parseAndDump"}
{"code": "void function ( ) { SecurityConfiguration . getCipherKey ( ) ; }", "nl": "test method for org.jboss.security.config.securityconfiguration #getcipherkey . concode_field_sep PlaceHolder placeHolder concode_field_sep void testGetCipherAlgorithm concode_elem_sep void testSetIterationCount concode_elem_sep void testGetKeyStoreURL concode_elem_sep void testGetSalt concode_elem_sep void testGetTrustStoreType concode_elem_sep void testGetKeyStoreType concode_elem_sep void testSetTrustStoreURL concode_elem_sep void testSetKeyStoreURL concode_elem_sep void testSetSalt concode_elem_sep void testLoadPassword concode_elem_sep void testSetCipherSpec concode_elem_sep void testGetExternalPasswordCacheInstance concode_elem_sep void testSetKeyStoreType concode_elem_sep void testIsDeepCopySubjectMode concode_elem_sep void testGetKeyStorePass concode_elem_sep WebArchive deployment concode_elem_sep void testSetTrustStorePass concode_elem_sep void testGetTrustStorePass concode_elem_sep void testSetCipherAlgorithm concode_elem_sep void testSetTrustStoreType concode_elem_sep void testGetTrustStoreURL concode_elem_sep void testSetDeepCopySubjectMode concode_elem_sep void testGetCipherSpec concode_elem_sep void testAddApplicationPolicy concode_elem_sep void testGetApplicationPolicy concode_elem_sep void testSetKeyStorePass concode_elem_sep void testRemoveApplicationPolicy concode_elem_sep void testSetCipherKey concode_elem_sep void testGetIterationCount"}
{"code": "boolean function ( ) { return Platform . isLinux ( ) && Platform . JAVA_VERSION <= 0x1424 ; }", "nl": "locking key state is reported incorrectly . concode_field_sep boolean gotBug1Event concode_elem_sep java.util.ArrayList bugList concode_field_sep boolean fileDialogRequiresDismiss concode_elem_sep boolean hasHierarchyEventGenerationBug concode_elem_sep boolean hasKeyStrokeGenerationBug concode_elem_sep String[] bugCheck concode_elem_sep boolean hasRobotMotionBug concode_elem_sep boolean fileDialogMisreportsBounds concode_elem_sep boolean needsRobotVerification concode_elem_sep boolean hasMenuDisableBug concode_elem_sep boolean hasInputMethodInsteadOfKeyTyped concode_elem_sep boolean hasMissingWindowMouseMotion concode_elem_sep boolean hasEscapeGenerationBug concode_elem_sep boolean showAWTPopupMenuBlocks concode_elem_sep boolean hasChoiceLockupBug concode_elem_sep boolean hasRobotButtonsSwapped concode_elem_sep boolean hasKeyInputDelay concode_elem_sep boolean hasFrameDeiconifyBug concode_elem_sep boolean dragDropRequiresNativeEvents concode_elem_sep boolean hasTextComponentSelectionDelay concode_elem_sep boolean hasMultiClickFrameBug concode_elem_sep boolean fileDialogRequiresVisibleFrame"}
{"code": "List < Pair < String , ? extends Table >> function ( final List < String > arg0 ) { return getTablesByNames ( arg0 ) ; }", "nl": "get the collection of table tables specified in the tablenames with bulk-load if the underlying storageplugin supports . it is not guaranteed that the retrieved tables would have rowtype and statistic being fully populated . specifically , calling table #getrowtype reldatatypefactory or table #getstatistic might incur unsupportedoperationexception being thrown . concode_field_sep List<String> schemaPath concode_elem_sep String name concode_elem_sep org.slf4j.Logger logger concode_elem_sep Expression EXPRESSION concode_field_sep Iterable<String> getSubPartitions concode_elem_sep boolean contentsHaveChangedSince concode_elem_sep String getName concode_elem_sep String getFullSchemaName concode_elem_sep Collection<Function> getFunctions concode_elem_sep void dropView concode_elem_sep Set<String> getTableNames concode_elem_sep Set<String> getSubSchemaNames concode_elem_sep Expression getExpression concode_elem_sep boolean isMutable concode_elem_sep Set<String> getFunctionNames concode_elem_sep Table getTable concode_elem_sep Schema getSubSchema concode_elem_sep Schema getDefaultSchema concode_elem_sep List<Pair<String,? extends Table>> getTablesByNames concode_elem_sep CreateTableEntry createNewTable concode_elem_sep String getTypeName concode_elem_sep boolean createView concode_elem_sep void close concode_elem_sep List<String> getSchemaPath concode_elem_sep boolean showInInformationSchema concode_elem_sep void dropTable"}
{"code": "int function ( Object arg0 , Object arg1 ) { return ( ( Comparable ) arg0 ) . compareTo ( arg1 ) ; }", "nl": "compare the two comparable comparable arguments.this method is equivalent to : comparable obj1 . compareto obj2 concode_field_sep long serialVersionUID concode_elem_sep ComparableComparator instance concode_field_sep int hashCode concode_elem_sep boolean equals concode_elem_sep ComparableComparator getInstance"}
{"code": "byte [ ] function ( ) { byte [ ] loc0 = new byte [ 12 ] ; System . arraycopy ( data , 0 , loc0 , 0 , 12 ) ; return loc0 ; }", "nl": "export objectid to plain byte array concode_field_sep byte[] data concode_field_sep int hashCode concode_elem_sep boolean equals concode_elem_sep boolean isValid concode_elem_sep String toString"}
{"code": "void function ( float arg0 , float arg1 ) { this . startPoint = new Point2D . Float ( arg0 , arg1 ) ; }", "nl": "sets the start point of the subpath . concode_field_sep List<Shape> segments concode_elem_sep Point2D startPoint concode_elem_sep boolean closed concode_field_sep Point2D getStartPoint concode_elem_sep boolean isSinglePointOpen concode_elem_sep void addSegment concode_elem_sep boolean isDegenerate concode_elem_sep boolean isClosed concode_elem_sep boolean isEmpty concode_elem_sep boolean isSinglePointClosed concode_elem_sep List<Point2D> getPiecewiseLinearApproximation concode_elem_sep Point2D getLastPoint concode_elem_sep void setClosed concode_elem_sep List<Shape> getSegments"}
{"code": "Symbol function ( ) { return stack [ pos - 1 ] ; }", "nl": "returns the top symbol from the stack . concode_field_sep Symbol[] stack concode_elem_sep int pos concode_elem_sep ActionHandler symbolHandler concode_field_sep Symbol popSymbol concode_elem_sep int depth concode_elem_sep void processImplicitActions concode_elem_sep void pushSymbol concode_elem_sep void reset concode_elem_sep void expandStack concode_elem_sep void processTrailingImplicitActions concode_elem_sep Symbol doAction concode_elem_sep void pushProduction concode_elem_sep Symbol advance"}
{"code": "CRL function ( X509Certificate arg0 ) { return CertificateUtil . getCRL ( CertificateUtil . getCRLURL ( arg0 ) ) ; }", "nl": "gets a crl from a certificate concode_field_sep PlaceHolder placeHolder concode_field_sep String getOCSPURL concode_elem_sep String getCRLURL concode_elem_sep String getTSAURL concode_elem_sep String getStringFromGeneralName concode_elem_sep ASN1Primitive getExtensionValue"}
{"code": "int function ( ) { return number ; }", "nl": "get number . concode_field_sep String LABEL_SUFFIX concode_elem_sep Joiner JOINER concode_elem_sep String ETAG concode_elem_sep String BODY_FORMAT concode_elem_sep String body concode_elem_sep String title concode_elem_sep Pattern BODY_PATTERN concode_elem_sep List<Label> labels concode_elem_sep String NEW_LINE concode_elem_sep int number concode_elem_sep Pattern ETAG_PATTERN concode_elem_sep Pattern LABEL_PATTERN concode_elem_sep Splitter SPLITTER concode_elem_sep String state concode_field_sep Map<String,String> getRequestParams concode_elem_sep String getBody concode_elem_sep void readEtag concode_elem_sep Phenotype asPhenotype concode_elem_sep void setTitle concode_elem_sep void setBody concode_elem_sep void setNumber concode_elem_sep Phenotype.Status getPTStatus concode_elem_sep List<Label> getLabels concode_elem_sep String getState concode_elem_sep String getTitle concode_elem_sep void setState concode_elem_sep String describe concode_elem_sep String getIssueTitle concode_elem_sep void setLabels"}
{"code": "int function ( ) { return stack . size ( ) ; }", "nl": "returns the depth of the stack . concode_field_sep Deque<Map<String,Object>> stack concode_elem_sep int INITIAL_MAP_CAPACITY concode_field_sep void init concode_elem_sep Set<java.util.Map.Entry<String,Object>> entrySet concode_elem_sep boolean containsKey concode_elem_sep Collection<Object> values concode_elem_sep void clear concode_elem_sep boolean isEmpty concode_elem_sep void push concode_elem_sep boolean containsValue concode_elem_sep Object put concode_elem_sep Object remove concode_elem_sep void pop concode_elem_sep Map<String,Object> top concode_elem_sep int size concode_elem_sep int hashCode concode_elem_sep Object get concode_elem_sep void putAll concode_elem_sep boolean equals concode_elem_sep String toString concode_elem_sep Set<String> keySet"}
{"code": "void function ( ) { Tag loc0 = new Tag ( \"srini_string\" ) ; Tag loc1 = new Tag ( \"srini_string\" ) ; loc0 . addChild ( loc1 ) ; Assert . assertEquals ( loc0 , loc1 . getParent ( ) ) ; }", "nl": "validates that the tags parent is set when adding it as a child concode_field_sep PlaceHolder placeHolder concode_field_sep void validateChildrenNotNull concode_elem_sep void compareFalse concode_elem_sep void compareFalseTagAndNS concode_elem_sep void validateAttributesNotNull concode_elem_sep void validateCssNotNull concode_elem_sep void compareTrueNS concode_elem_sep void validateChildNotSetOnSetParent concode_elem_sep void compareTrue concode_elem_sep void compareFalseNS"}
{"code": "boolean function ( List < Check > arg0 , List < Check > arg1 ) { return true ; }", "nl": "compares if the same failures occur concode_field_sep Sequence sequenceToSimplify concode_elem_sep List<Integer> removed_indices concode_elem_sep ExecutableSequence eSeq concode_elem_sep MultiVisitor visitor concode_field_sep List<Integer> compute_indices_in_original_sequence concode_elem_sep List<Check> getFailureChecks concode_elem_sep ExecutableSequence execute_sequence concode_elem_sep int compute_index_in_simplified_sequence concode_elem_sep List<Integer> getRemovedIndices concode_elem_sep int compute_index_in_original_sequence concode_elem_sep ExecutableSequence simplfy_sequence concode_elem_sep int getFailureIndex"}
{"code": "MathUtil function ( ) { if ( MathUtil . instance == null ) { MathUtil . instance = new MathUtil ( ) ; } return MathUtil . instance ; }", "nl": "returns the singleton instance of this class . this method is useless for now as all methods are static . it may be used in future if vm-global configuration will be put to the state of the instance . # concode_field_sep MathUtil instance concode_field_sep void assertDouble concode_elem_sep Integer increment concode_elem_sep boolean assertEqual concode_elem_sep boolean isDouble"}
{"code": "void function ( final ClassContainer < T > arg0 ) { LOGGER . debug ( \"srini_string\" ) ; arg0 . addClasses ( JBossPDPServiceBean . class , XACMLTestUtils . class ) ; }", "nl": "adds common classes to the given archive . concode_field_sep String TESTOBJECTS_CONFIG concode_elem_sep String MED_EXAMPLE_POLICY_SET concode_elem_sep Logger LOGGER concode_elem_sep String SUBST_SUBJECT_ID concode_elem_sep String TESTOBJECTS_REQUESTS concode_elem_sep String TESTOBJECTS_POLICIES concode_elem_sep String MED_EXAMPLE_POLICY_SET2 concode_field_sep void addXACMLPoliciesToArchive concode_elem_sep void addJBossDeploymentStructureToArchive"}
{"code": "int function ( int arg0 , int arg1 ) { if ( arg0 < 0 ) { arg0 = - arg0 ; } if ( arg1 < 0 ) { arg1 = - arg1 ; } while ( arg1 != 0 ) { int loc0 = arg0 % arg1 ; arg0 = arg1 ; arg1 = loc0 ; } return arg0 ; }", "nl": "calculate the greatest common divisor . concode_field_sep String PROMPT concode_field_sep void main"}
{"code": "boolean function ( ) { return isKeyOptional ; }", "nl": "gets the value of the iskeyoptional property . concode_field_sep String validationPattern concode_elem_sep boolean isValueOptional concode_elem_sep boolean encrypted concode_elem_sep String machineInterpretationKey concode_elem_sep String displayName concode_elem_sep String defaultValue concode_elem_sep String technicalKey concode_elem_sep boolean isKeyOptional concode_elem_sep List<String> tags concode_elem_sep String exampleValue concode_field_sep void setDefaultValue concode_elem_sep String getExampleValue concode_elem_sep List<String> getTags concode_elem_sep String getValidationPattern concode_elem_sep void setIsKeyOptional concode_elem_sep void setDisplayName concode_elem_sep void setMachineInterpretationKey concode_elem_sep void setExampleValue concode_elem_sep String getDefaultValue concode_elem_sep String getTechnicalKey concode_elem_sep void setEncrypted concode_elem_sep void setTechnicalKey concode_elem_sep String getDisplayName concode_elem_sep boolean isEncrypted concode_elem_sep String getMachineInterpretationKey concode_elem_sep void setValidationPattern concode_elem_sep boolean isIsValueOptional concode_elem_sep void setIsValueOptional"}
{"code": "void function ( Throwable arg0 ) { getMonitor ( ) . exceptionCaught ( arg0 ) ; }", "nl": "called when an exception is caught in test execution . concode_field_sep IExecutionMonitor monitor concode_elem_sep String DEFAULT_THREAD_NAME concode_field_sep void runFinishing concode_elem_sep IExecutionMonitor getMonitor concode_elem_sep String getTestThreadName concode_elem_sep TestIdentifier getCurrentTest concode_elem_sep void waitUntilFinished concode_elem_sep void runStarting concode_elem_sep void exec concode_elem_sep void runFinished"}
{"code": "void function ( ) { violations = new ArrayList < Violation > ( ) ; }", "nl": "empty the violations list . concode_field_sep long numNormalPptExits concode_elem_sep long numEvaluations concode_elem_sep List<Throwable> internalInvariantEvaluationErrors concode_elem_sep long numPptEntries concode_elem_sep List<Violation> violations concode_elem_sep long numExceptionalPptExits concode_field_sep boolean violationsEmpty concode_elem_sep void violationsAdd concode_elem_sep List<Violation> getViolations"}
{"code": "void function ( Object arg0 ) { }", "nl": "children should override this . the default implementation does nothing . concode_field_sep IPropertyDescriptor[] EMPTY_ARRAY concode_elem_sep PropertyChangeSupport pcsDelegate concode_elem_sep long serialVersionUID concode_field_sep void firePropertyChange concode_elem_sep Object getPropertyValue concode_elem_sep void setPropertyValue concode_elem_sep Object getEditableValue concode_elem_sep IPropertyDescriptor[] getPropertyDescriptors concode_elem_sep void addPropertyChangeListener concode_elem_sep boolean isPropertySet concode_elem_sep void removePropertyChangeListener concode_elem_sep void readObject"}
{"code": "JoinSequence function ( QueryableCollection arg0 , String arg1 ) { JoinSequence loc0 = createJoinSequence ( ) ; loc0 . setRoot ( arg0 , arg1 ) ; loc0 . setUseThetaStyle ( true ) ; return loc0 ; }", "nl": "create a join sequence rooted at the given collection . concode_field_sep SessionFactoryImplementor sfi concode_elem_sep Map<String,PropertyMapping> collectionPropertyMappingByRole concode_field_sep QueryableCollection getCollectionPersister concode_elem_sep Type getElementType concode_elem_sep JoinSequence createJoinSequence concode_elem_sep JoinSequence createJoinSequence concode_elem_sep Type findFunctionReturnType concode_elem_sep Type findFunctionReturnType concode_elem_sep PropertyMapping getCollectionPropertyMapping concode_elem_sep AssociationType getElementAssociationType concode_elem_sep String getImportedClassName concode_elem_sep SQLFunction requireSQLFunction concode_elem_sep SessionFactoryImplementor getFactory concode_elem_sep boolean hasPhysicalDiscriminatorColumn concode_elem_sep EntityPersister requireClassPersister concode_elem_sep QueryableCollection requireQueryableCollection concode_elem_sep String[] getCollectionElementColumns concode_elem_sep String[][] generateColumnNames concode_elem_sep String getIdentifierOrUniqueKeyPropertyName concode_elem_sep int getColumnSpan concode_elem_sep String getAssociatedEntityName concode_elem_sep Queryable findQueryableUsingImports concode_elem_sep Queryable findQueryableUsingImports concode_elem_sep boolean isStrictJPAQLComplianceEnabled concode_elem_sep EntityPersister findEntityPersisterByName concode_elem_sep SQLFunction findSQLFunction"}
{"code": "BasicType function ( String arg0 ) { return basicTypeRegistry . getRegisteredType ( arg0 ) ; }", "nl": "locate a hibernate @linkplain basictype basic type given one of its registration names . concode_field_sep TypeFactory typeFactory concode_elem_sep BasicTypeRegistry basicTypeRegistry concode_field_sep void registerTypeOverride concode_elem_sep void registerTypeOverride concode_elem_sep void registerTypeOverride concode_elem_sep TypeFactory getTypeFactory concode_elem_sep TypeResolver scope concode_elem_sep Type heuristicType concode_elem_sep Type heuristicType"}
{"code": "void function ( Context arg0 , SynchronizerDelegate arg1 ) { this . synchronizerDelegate = arg1 ; this . session = newSynchronizerSession ( ) ; this . session . init ( arg0 , bundleA , bundleB ) ; }", "nl": "start synchronizing , calling delegate 's callback methods . concode_field_sep SynchronizerDelegate synchronizerDelegate concode_elem_sep String configSyncID concode_elem_sep Repository repositoryA concode_elem_sep RepositorySessionBundle bundleB concode_elem_sep String LOG_TAG concode_elem_sep SynchronizerSession session concode_elem_sep RepositorySessionBundle bundleA concode_elem_sep Repository repositoryB concode_field_sep void load concode_elem_sep SynchronizerSession getSynchronizerSession concode_elem_sep void onSynchronizeSkipped concode_elem_sep SynchronizerConfiguration save concode_elem_sep void onInitialized concode_elem_sep void onSynchronized concode_elem_sep SynchronizerSession newSynchronizerSession concode_elem_sep void onSynchronizeFailed"}
{"code": "String function ( TreeItem arg0 ) { String loc0 = TextUtils . escapeSlashes ( arg0 . getText ( ) ) ; for ( TreeItem loc1 = arg0 . getParentItem ( ) ; loc1 != null ; loc1 = loc1 . getParentItem ( ) ) { loc0 = loc1 . getText ( ) + '/' + loc0 ; } return loc0 ; }", "nl": "create a path string that identifies this tree item with respect to its parent 's e.g. `` java/project '' concode_field_sep TreeItemSelector _selector concode_elem_sep TreeItemTester _treeItemTester concode_elem_sep TreeTester _treeTester concode_field_sep Widget reveal concode_elem_sep Widget reveal concode_elem_sep Widget doClick concode_elem_sep TreeItem findNode"}
{"code": "float function ( ) { if ( list . isEmpty ( ) ) { throw new EmptyStackException ( ) ; } return list . removeElementAt ( list . size ( ) - 1 ) ; }", "nl": "removes the value at the top of this stack and returns it . concode_field_sep ArrayFloatList list concode_field_sep int search concode_elem_sep int size concode_elem_sep float get concode_elem_sep void clear concode_elem_sep float push concode_elem_sep boolean empty concode_elem_sep float peek concode_elem_sep float peek"}
{"code": "int function ( ) { return size ; }", "nl": "length returns the length of this list . concode_field_sep SListNode head concode_elem_sep int size concode_elem_sep SListNode tail concode_field_sep Object nth concode_elem_sep void testAfterInsertEnd concode_elem_sep void testAfterInsertFront concode_elem_sep void insertEnd concode_elem_sep boolean isEmpty concode_elem_sep void insertFront concode_elem_sep String toString concode_elem_sep void main concode_elem_sep void testEmpty"}
{"code": "Closure function ( String arg0 , Class [ ] arg1 , Object [ ] arg2 ) { return asClosure ( InvokerTransformer . getInstance ( arg0 , arg1 , arg2 ) ) ; }", "nl": "creates a closure that will invoke a specific method on the closure 's input object by reflection . concode_field_sep PlaceHolder placeHolder concode_field_sep Closure nopClosure concode_elem_sep Closure switchClosure concode_elem_sep Closure switchClosure concode_elem_sep Closure switchClosure concode_elem_sep Closure chainedClosure concode_elem_sep Closure chainedClosure concode_elem_sep Closure chainedClosure concode_elem_sep Closure forClosure concode_elem_sep Closure ifClosure concode_elem_sep Closure whileClosure concode_elem_sep Closure doWhileClosure concode_elem_sep Closure switchMapClosure concode_elem_sep Closure asClosure concode_elem_sep Closure exceptionClosure"}
{"code": "DurationFieldType function ( int arg0 ) { return getPeriodType ( ) . getFieldType ( arg0 ) ; }", "nl": "gets the field type at the specified index . concode_field_sep PlaceHolder placeHolder concode_field_sep int size concode_elem_sep int[] getValues concode_elem_sep int hashCode concode_elem_sep int get concode_elem_sep boolean equals concode_elem_sep Period toPeriod concode_elem_sep MutablePeriod toMutablePeriod concode_elem_sep String toString concode_elem_sep String toString concode_elem_sep boolean isSupported concode_elem_sep int indexOf concode_elem_sep DurationFieldType[] getFieldTypes"}
{"code": "float function ( ) { return width ; }", "nl": "getter for the cell width concode_field_sep boolean percentage concode_elem_sep float width concode_elem_sep PdfPCell cell concode_field_sep boolean add concode_elem_sep boolean process concode_elem_sep PdfPCell getCell concode_elem_sep boolean isContent concode_elem_sep boolean isNestable concode_elem_sep PdfPCell createPdfPCell concode_elem_sep List<Chunk> getChunks concode_elem_sep boolean isPercentage concode_elem_sep int type"}
{"code": "void function ( final String arg0 ) { if ( null != this . currentAttr ) { if ( isHtml ) { attr . put ( this . currentAttr . toLowerCase ( ) , arg0 ) ; } else { attr . put ( this . currentAttr , arg0 ) ; } this . currentAttr = null ; } }", "nl": "sets the current attribute value and adds the attribute if it 's not null to the attribute map . concode_field_sep StringBuilder currentEntity concode_elem_sep StringBuilder comment concode_elem_sep String currentTag concode_elem_sep boolean isHtml concode_elem_sep String currentAttr concode_elem_sep char lastChar concode_elem_sep String wsTag concode_elem_sep String storedString concode_elem_sep Map<String,String> attr concode_elem_sep String currentNameSpace concode_elem_sep StringBuilder baos concode_field_sep StringBuilder currentEntity concode_elem_sep Map<String,String> getAttributes concode_elem_sep void currentAttr concode_elem_sep boolean hasCurrentAttribute concode_elem_sep String getNameSpace concode_elem_sep String whitespaceTag concode_elem_sep void whitespaceTag concode_elem_sep void flushNameSpace concode_elem_sep void setStoredString concode_elem_sep String getCurrentTag concode_elem_sep StringBuilder current concode_elem_sep void currentTag concode_elem_sep void resetBuffer concode_elem_sep void lastChar concode_elem_sep char lastChar concode_elem_sep void namespace concode_elem_sep String getStoredString concode_elem_sep StringBuilder comment"}
{"code": "Iterator function ( FloatIterator arg0 ) { return null == arg0 ? null : new FloatIteratorIterator ( arg0 ) ; }", "nl": "create an iterator iterator wrappingthe specified floatiterator floatiterator . when the given iterator is null , returns null . concode_field_sep FloatIterator _iterator concode_field_sep Object next concode_elem_sep boolean hasNext concode_elem_sep void remove"}
{"code": "Block function ( ) { Node loc0 = this ; while ( loc0 != null ) { if ( loc0 instanceof Tree ) { return ( ( Tree ) loc0 ) . block ( ) ; } loc0 = loc0 . parent ; } throw new RuntimeException ( this + \"srini_string\" ) ; }", "nl": "returns the basic block in which this node resides . concode_field_sep Node parent concode_elem_sep int valueNumber concode_elem_sep int key concode_field_sep Node parent concode_elem_sep int valueNumber concode_elem_sep Node copyInto concode_elem_sep void setValueNumber concode_elem_sep void visitChildren concode_elem_sep void cleanupOnly concode_elem_sep void visitForceChildren concode_elem_sep void cleanup concode_elem_sep String toString concode_elem_sep void visit concode_elem_sep void setParent concode_elem_sep int key concode_elem_sep void setKey concode_elem_sep void visitOnly concode_elem_sep boolean hasParent concode_elem_sep void replaceWith concode_elem_sep void replaceWith"}
{"code": "void function ( ) { final List < Element > loc0 = li . end ( workerContextImpl , new Tag ( \"srini_string\" ) , currentContent ) ; Assert . assertTrue ( loc0 . get ( 0 ) instanceof ListItem ) ; }", "nl": "verifies if the class of the elements returned by orderedunorderedlistitem #end is a listitem . concode_field_sep List<Element> currentContent concode_elem_sep OrderedUnorderedListItem li concode_elem_sep WorkerContextImpl workerContextImpl concode_field_sep void init concode_elem_sep void verifyContent concode_elem_sep void verifyIfStackOwner"}
{"code": "boolean function ( ) { return Platform . JAVA_VERSION < Platform . JAVA_1_4 ; }", "nl": "prior to 1.4.1 , hierarchy events are only sent if listeners are added to a given component . concode_field_sep boolean gotBug1Event concode_elem_sep java.util.ArrayList bugList concode_field_sep boolean fileDialogRequiresDismiss concode_elem_sep boolean hasKeyStrokeGenerationBug concode_elem_sep String[] bugCheck concode_elem_sep boolean hasRobotMotionBug concode_elem_sep boolean reportsIncorrectLockingKeyState concode_elem_sep boolean fileDialogMisreportsBounds concode_elem_sep boolean needsRobotVerification concode_elem_sep boolean hasMenuDisableBug concode_elem_sep boolean hasInputMethodInsteadOfKeyTyped concode_elem_sep boolean hasMissingWindowMouseMotion concode_elem_sep boolean hasEscapeGenerationBug concode_elem_sep boolean showAWTPopupMenuBlocks concode_elem_sep boolean hasChoiceLockupBug concode_elem_sep boolean hasRobotButtonsSwapped concode_elem_sep boolean hasKeyInputDelay concode_elem_sep boolean hasFrameDeiconifyBug concode_elem_sep boolean dragDropRequiresNativeEvents concode_elem_sep boolean hasTextComponentSelectionDelay concode_elem_sep boolean hasMultiClickFrameBug concode_elem_sep boolean fileDialogRequiresVisibleFrame"}
{"code": "String function ( ) { return stack . toString ( ) ; }", "nl": "returns a string represntation of this stack . concode_field_sep ArrayList stack concode_elem_sep int height concode_field_sep Expr pop concode_elem_sep void set concode_elem_sep Expr pop1 concode_elem_sep int size concode_elem_sep Expr[] pop2 concode_elem_sep Expr get concode_elem_sep boolean isEmpty concode_elem_sep void replace concode_elem_sep void push concode_elem_sep Expr peek concode_elem_sep Expr peek concode_elem_sep int height"}
{"code": "R function ( ) { return defaultValue ; }", "nl": "the default action executed from the visit methods . this returns the default value provided at the construction time . concode_field_sep R defaultValue concode_field_sep R visitMetricType concode_elem_sep R visitMetricType concode_elem_sep R visitRelationship concode_elem_sep R visitRelationship concode_elem_sep R visitMetadataPack concode_elem_sep R visitMetadataPack concode_elem_sep R visitData concode_elem_sep R visitData concode_elem_sep R visitResourceType concode_elem_sep R visitResourceType concode_elem_sep R visitTenant concode_elem_sep R visitTenant concode_elem_sep R visitUnknown concode_elem_sep R visitUnknown concode_elem_sep R visitEnvironment concode_elem_sep R visitEnvironment concode_elem_sep R visitMetric concode_elem_sep R visitMetric concode_elem_sep R visitResource concode_elem_sep R visitResource concode_elem_sep R visitFeed concode_elem_sep R visitFeed concode_elem_sep R visitOperationType concode_elem_sep R visitOperationType"}
{"code": "boolean function ( final String arg0 , final int arg1 ) { if ( arg1 < 0 || arg1 > arg0 . length ( ) - 2 ) return false ; return isSurrogateHigh ( arg0 . charAt ( arg1 ) ) && isSurrogateLow ( arg0 . charAt ( arg1 + 1 ) ) ; }", "nl": "checks if two subsequent characters in a string are are the higher and the lower character in a surrogate pair and therefore eligible for conversion to a utf 32 character . concode_field_sep PlaceHolder placeHolder concode_field_sep String unEscapeURL concode_elem_sep URL toURL concode_elem_sep char[] copyOfRange concode_elem_sep float inchesToPoints concode_elem_sep void skip concode_elem_sep float pointsToMillimeters concode_elem_sep Set<K> getKeySet concode_elem_sep boolean isSurrogateHigh concode_elem_sep float millimetersToInches concode_elem_sep String convertFromUtf32 concode_elem_sep int convertToUtf32 concode_elem_sep int convertToUtf32 concode_elem_sep int convertToUtf32 concode_elem_sep float millimetersToPoints concode_elem_sep float inchesToMillimeters concode_elem_sep String readFileToString concode_elem_sep String readFileToString concode_elem_sep float pointsToInches concode_elem_sep String convertToHex concode_elem_sep boolean checkTrueOrFalse concode_elem_sep boolean isSurrogateLow concode_elem_sep Object[][] addToArray"}
{"code": "void function ( File arg0 , String arg1 ) { write ( arg0 , arg1 , false ) ; }", "nl": "writes the text to the given file , overwriting the previous file if it existed . concode_field_sep Logger LOG concode_elem_sep int BUFFER_SIZE concode_field_sep String readFully concode_elem_sep String readFully concode_elem_sep int copy concode_elem_sep int copy concode_elem_sep void copy concode_elem_sep void close"}
{"code": "Block function ( final Block arg0 ) { for ( int loc0 = 0 ; loc0 < paths . size ( ) ; loc0 ++ ) { final Block [ ] loc1 = ( Block [ ] ) paths . get ( loc0 ) ; if ( loc1 [ 1 ] == arg0 ) { return loc1 [ 0 ] ; } } return null ; }", "nl": "returns the `` caller block '' for a given `` return block '' . concode_field_sep Block entry concode_elem_sep Block exit concode_elem_sep ArrayList paths concode_elem_sep FlowGraph graph concode_elem_sep LocalVariable returnAddress concode_field_sep void setReturnAddress concode_elem_sep int numPaths concode_elem_sep void setExit concode_elem_sep FlowGraph graph concode_elem_sep void addPath concode_elem_sep LocalVariable returnAddress concode_elem_sep void removePathsContaining concode_elem_sep void removePath concode_elem_sep Block entry concode_elem_sep Block exit concode_elem_sep void print concode_elem_sep Block pathTarget concode_elem_sep Collection paths concode_elem_sep String toString concode_elem_sep void removeAllPaths concode_elem_sep void setEntry"}
{"code": "boolean function ( Object arg0 ) { if ( ! ( arg0 instanceof BigDecimal ) ) { return false ; } BigDecimal loc0 = ( BigDecimal ) arg0 ; return val . equals ( loc0 . val ) ; }", "nl": "comparison with any other object . concode_field_sep java.math.BigDecimal val concode_elem_sep int DEFAULT_PRECISION concode_elem_sep BigDecimal ZERO concode_elem_sep MathContext DEFAULT_CONTEXT concode_elem_sep MathContext context concode_elem_sep BigDecimal ONE concode_elem_sep Random random concode_field_sep boolean isField concode_elem_sep boolean isCommutative concode_elem_sep BigDecimal gcd concode_elem_sep BigDecimal sum concode_elem_sep int compareTo concode_elem_sep java.math.BigInteger characteristic concode_elem_sep BigDecimal random concode_elem_sep BigDecimal random concode_elem_sep BigDecimal random concode_elem_sep BigDecimal random concode_elem_sep int hashCode concode_elem_sep BigDecimal divide concode_elem_sep BigDecimal copy concode_elem_sep BigDecimal multiply concode_elem_sep int signum concode_elem_sep boolean isONE concode_elem_sep BigDecimal inverse concode_elem_sep BigDecimal valueOf concode_elem_sep BigDecimal valueOf concode_elem_sep boolean isUnit concode_elem_sep BigDecimal subtract concode_elem_sep BigDecimal parse concode_elem_sep BigDecimal parse concode_elem_sep BigDecimal[] egcd concode_elem_sep BigDecimal abs concode_elem_sep BigDecimal[] divideAndRemainder concode_elem_sep BigDecimal negate concode_elem_sep BigDecimal clone concode_elem_sep BigDecimal getONE concode_elem_sep BigDecimal getZERO concode_elem_sep BigDecimal fromInteger concode_elem_sep BigDecimal fromInteger concode_elem_sep boolean isZERO concode_elem_sep boolean isAssociative concode_elem_sep String toString concode_elem_sep BigDecimal remainder"}
{"code": "Rectangle2D . Float function ( ) { float loc0 = getStartPoint ( ) . get ( Vector . I1 ) ; float loc1 = getStartPoint ( ) . get ( Vector . I2 ) ; float loc2 = getEndPoint ( ) . get ( Vector . I1 ) ; float loc3 = getEndPoint ( ) . get ( Vector . I2 ) ; return new Rectangle2D . Float ( Math . min ( loc0 , loc2 ) , Math . min ( loc1 , loc3 ) , Math . abs ( loc2 - loc0 ) , Math . abs ( loc3 - loc1 ) ) ; }", "nl": "computes the bounding rectangle for this line segment . the rectangle has a rotation 0 degrees with respect to the coordinate system that the line system is in . for example , if a line segment is 5 unit long and sits at a 37 degree angle from horizontal , the bounding rectangle will have origin of the lower left hand end point of the segment , with width = 4 and height = 3 . concode_field_sep Vector endPoint concode_elem_sep Vector startPoint concode_field_sep Vector getStartPoint concode_elem_sep LineSegment transformBy concode_elem_sep Vector getEndPoint concode_elem_sep float getLength"}
{"code": "boolean function ( long arg0 ) { return timespan <= arg0 - startTime ; }", "nl": "returns true , if the timespan of the interpolator has elapsed since initialize was called . concode_field_sep float endValue concode_elem_sep long startTime concode_elem_sep float startValue concode_elem_sep long timespan concode_elem_sep boolean isFinished concode_field_sep boolean replaces concode_elem_sep void setTimespan concode_elem_sep void update concode_elem_sep void interpolate concode_elem_sep void finish concode_elem_sep void initialize concode_elem_sep boolean isFinished concode_elem_sep boolean isSequential concode_elem_sep float getFraction"}
{"code": "List < PropertyDeclaration > function ( ) { if ( properties == null ) { properties = new ArrayList < PropertyDeclaration > ( ) ; } return this . properties ; }", "nl": "gets the value of the properties property . this accessor method returns a reference to the live list , not a snapshot . therefore any modification you make to the returned list will be present inside the jaxb object . this is why there is not a set method for the properties property . for example , to add a new item , do as follows : getproperties . add newitem ; objects of the following type s are allowed in the list propertydeclaration concode_field_sep List<ProvidedPort> providedPorts concode_elem_sep List<ConsumedPort> consumedPorts concode_elem_sep List<PropertyDeclaration> properties concode_field_sep List<ConsumedPort> getConsumedPorts concode_elem_sep List<ProvidedPort> getProvidedPorts"}
{"code": "IntListIterator function ( ListIterator arg0 ) { return null == arg0 ? null : new ListIteratorIntListIterator ( arg0 ) ; }", "nl": "create an intlistiterator intlistiterator wrappingthe specified listiterator listiterator . when the given iterator is null , returns null . concode_field_sep ListIterator _iterator concode_field_sep int next concode_elem_sep void add concode_elem_sep void set concode_elem_sep int previous concode_elem_sep boolean hasPrevious concode_elem_sep boolean hasNext concode_elem_sep int nextIndex concode_elem_sep int previousIndex concode_elem_sep void remove"}
{"code": "ByteListIterator function ( ListIterator arg0 ) { return null == arg0 ? null : new ListIteratorByteListIterator ( arg0 ) ; }", "nl": "create an bytelistiterator bytelistiterator wrappingthe specified listiterator listiterator . when the given iterator is null , returns null . concode_field_sep ListIterator _iterator concode_field_sep byte next concode_elem_sep void add concode_elem_sep void set concode_elem_sep byte previous concode_elem_sep boolean hasPrevious concode_elem_sep boolean hasNext concode_elem_sep int nextIndex concode_elem_sep int previousIndex concode_elem_sep void remove"}
{"code": "boolean function ( ) { start ( ) ; return anyValueSet ( valueSet ) || anyHasNext ( iterators ) ; }", "nl": "returns true if any child iterator has remaining elements . concode_field_sep int lastReturned concode_elem_sep Comparator comparator concode_elem_sep ArrayList values concode_elem_sep BitSet valueSet concode_elem_sep ArrayList iterators concode_field_sep Object next concode_elem_sep boolean set concode_elem_sep Comparator getComparator concode_elem_sep void addIterator concode_elem_sep boolean anyValueSet concode_elem_sep void start concode_elem_sep void clear concode_elem_sep int least concode_elem_sep boolean anyHasNext concode_elem_sep void remove concode_elem_sep void setComparator concode_elem_sep List getIterators concode_elem_sep void setIterator concode_elem_sep void checkNotStarted"}
{"code": "VectorXYZ function ( double arg0 , VectorXYZ arg1 , VectorXYZ arg2 ) { VectorXYZ loc0 = this . subtract ( arg1 ) ; loc0 = loc0 . rotateVec ( arg0 , arg2 ) ; loc0 = loc0 . add ( arg1 ) ; return loc0 ; }", "nl": "returns the result of rotating this vector around a freely chosen axis and origin concode_field_sep VectorXYZ NULL_VECTOR concode_elem_sep double x concode_elem_sep double y concode_elem_sep VectorXYZ X_UNIT concode_elem_sep double z concode_elem_sep VectorXYZ Z_UNIT concode_elem_sep VectorXYZ Y_UNIT concode_field_sep VectorXZ xz concode_elem_sep VectorXYZ mult concode_elem_sep AxisAlignedBoundingBoxXZ getAxisAlignedBoundingBoxXZ concode_elem_sep double dot concode_elem_sep double distanceToXZ concode_elem_sep double distanceToXZ concode_elem_sep int hashCode concode_elem_sep VectorXYZ normalize concode_elem_sep VectorXYZ xyz concode_elem_sep VectorXYZ rotateX concode_elem_sep VectorXYZ rotateY concode_elem_sep VectorXYZ rotateZ concode_elem_sep VectorXYZ add concode_elem_sep VectorXYZ add concode_elem_sep VectorXYZ add concode_elem_sep double angleTo concode_elem_sep double lengthSquared concode_elem_sep VectorXYZ invert concode_elem_sep double distanceToSquared concode_elem_sep List<VectorXYZ> addYList concode_elem_sep VectorXYZ subtract concode_elem_sep VectorXYZ subtract concode_elem_sep double length concode_elem_sep VectorXYZ cross concode_elem_sep VectorXYZ crossNormalized concode_elem_sep double distanceTo concode_elem_sep double getX concode_elem_sep double getY concode_elem_sep double getZ concode_elem_sep VectorXYZ addY concode_elem_sep boolean equals concode_elem_sep VectorXYZ x concode_elem_sep VectorXYZ y concode_elem_sep String toString concode_elem_sep VectorXYZ z"}
{"code": "void function ( ) { if ( ! started ) { started = true ; deltaUs = elapsedRealtimeMinus ( positionUs ) ; } }", "nl": "starts the clock . does nothing if the clock is already started . concode_field_sep long deltaUs concode_elem_sep long positionUs concode_elem_sep boolean started concode_field_sep long elapsedRealtimeMinus concode_elem_sep void stop concode_elem_sep long getPositionUs concode_elem_sep void setPositionUs"}
{"code": "ClassLoader function ( ) { ClassLoader loc0 = Thread . currentThread ( ) . getContextClassLoader ( ) ; if ( loc0 == null ) { loc0 = CatalogFactory . class . getClassLoader ( ) ; } return loc0 ; }", "nl": "return the relevant classloader to use as a map key for this request . if there is a thread context class loader , return that ; otherwise , return the class loader that loaded this class . concode_field_sep Log log concode_elem_sep String DELIMITER concode_elem_sep Map factories concode_field_sep void addCatalog concode_elem_sep Command getCommand concode_elem_sep void clear concode_elem_sep void setCatalog concode_elem_sep Iterator getNames concode_elem_sep CatalogFactory getInstance concode_elem_sep Catalog getCatalog concode_elem_sep Catalog getCatalog"}
{"code": "void function ( List < HashMap < String , Object >> arg0 ) { fc . setOutlines ( arg0 ) ; }", "nl": "sets the bookmarks . the list structure is defined in simplebookmark # . concode_field_sep PdfCopyFieldsImp fc concode_field_sep void setViewerPreferences concode_elem_sep void addJavaScript concode_elem_sep void addViewerPreference concode_elem_sep void addDocument concode_elem_sep void addDocument concode_elem_sep void addDocument concode_elem_sep PdfWriter getWriter concode_elem_sep boolean isFullCompression concode_elem_sep void setEncryption concode_elem_sep void setEncryption concode_elem_sep void setEncryption concode_elem_sep void setEncryption concode_elem_sep void setFullCompression concode_elem_sep void close concode_elem_sep void open"}
{"code": "void function ( Object arg0 ) { if ( arg0 == null ) { throw new XMPException ( \"srini_string\" , XMPError . BADPARAM ) ; } else if ( ( arg0 instanceof String ) && ( ( String ) arg0 ) . length ( ) == 0 ) { throw new XMPException ( \"srini_string\" , XMPError . BADPARAM ) ; } }", "nl": "asserts that any string parameter is set . concode_field_sep PlaceHolder placeHolder concode_field_sep void assertSchemaNS concode_elem_sep void assertPrefix concode_elem_sep void assertSpecificLang concode_elem_sep void assertPropName concode_elem_sep void assertArrayName concode_elem_sep void assertStructName concode_elem_sep void assertImplementation"}
{"code": "void function ( Object arg0 ) { getListIterator ( ) . add ( arg0 ) ; }", "nl": "invokes the underlying listiterator #add object method . concode_field_sep ListIterator iterator concode_field_sep Object next concode_elem_sep void set concode_elem_sep Object previous concode_elem_sep boolean hasPrevious concode_elem_sep boolean hasNext concode_elem_sep ListIterator getListIterator concode_elem_sep int nextIndex concode_elem_sep int previousIndex concode_elem_sep void remove concode_elem_sep void setListIterator"}
{"code": "T [ ] function ( T [ ] arg0 , T [ ] arg1 , int arg2 , boolean arg3 ) { return ArrayTool . transferValues ( arg0 , arg1 , arg2 , arg1 . length , arg3 ) ; }", "nl": "transfers from right to left concode_field_sep PlaceHolder placeHolder concode_field_sep void swap concode_elem_sep void swap"}
{"code": "boolean function ( @ NonNull Class < T > arg0 , T arg1 ) { AbstractModel < T > loc0 = getModelInstanceOrThrow ( arg0 ) ; return loc0 . updateInTx ( helper . getWritableDatabase ( ) , arg1 ) ; }", "nl": "update entity inside transaction . concode_field_sep Object LOCK concode_elem_sep OpenHelper helper concode_elem_sep Map<Class<?>,AbstractModel<?>> modelMap concode_elem_sep Orm orm concode_field_sep T loadById concode_elem_sep AbstractModel<T> getRepository concode_elem_sep long insert concode_elem_sep boolean update concode_elem_sep boolean delete concode_elem_sep long[] insertInTx concode_elem_sep long[] insertInTx concode_elem_sep long insertInTx concode_elem_sep T rawQuerySingle concode_elem_sep T rawQuerySingle concode_elem_sep int deleteById concode_elem_sep AbstractModel<T> getModelInstanceOrThrow concode_elem_sep Orm getInstance concode_elem_sep int deleteByIdInTx concode_elem_sep int deleteInTx concode_elem_sep int deleteInTx concode_elem_sep boolean deleteInTx concode_elem_sep List<T> rawQuery concode_elem_sep List<T> rawQuery"}
{"code": "Player function ( ) { return player ; }", "nl": "liefert den player concode_field_sep JComponent vis_component concode_elem_sep Visualization visualization_api concode_elem_sep UIMainWindow ui concode_elem_sep EventTimeline timeline concode_elem_sep VisDataModel model concode_elem_sep Player player concode_field_sep void connectModelToUI concode_elem_sep void init concode_elem_sep VisDataModel getModel concode_elem_sep void loadModelBackend concode_elem_sep void deinit concode_elem_sep EventTimeline getTimeline concode_elem_sep void resetView concode_elem_sep void loadModelFrontend concode_elem_sep UIMainWindow getUIMainWindow concode_elem_sep Visualization getVisApi"}
{"code": "boolean function ( ) { return ( collection . size ( ) > 0 ) ; }", "nl": "has the iterator any more elements . returns false only if the collection originally had zero elements , or all the elements have been #remove removed . concode_field_sep Iterator iterator concode_elem_sep Collection collection concode_field_sep Object next concode_elem_sep int size concode_elem_sep void reset concode_elem_sep void remove"}
{"code": "void function ( int arg0 ) { this . iterations = arg0 ; }", "nl": "sets the value of iterations concode_field_sep long theirs concode_elem_sep long ours concode_elem_sep String description concode_elem_sep int iterations concode_field_sep int getIterations concode_elem_sep void setOurs concode_elem_sep long getOurAvg concode_elem_sep String toString concode_elem_sep void setDescription concode_elem_sep void setTheirs concode_elem_sep long getTheirs concode_elem_sep String getDescription concode_elem_sep long getOurs concode_elem_sep long getTheirAvg"}
{"code": "int function ( ) { return addends . size ( ) ; }", "nl": "this method returns the number of clauses , of which a query currently consists . concode_field_sep int solvedAddend concode_elem_sep SkyNetNodeInfo queryOriginator concode_elem_sep Vector<QueryAddend> addends concode_elem_sep float answerQuality concode_elem_sep int hops concode_elem_sep int queryID concode_elem_sep long timestamp concode_elem_sep String queryType concode_field_sep void insertAddend concode_elem_sep int getIndexOfSolvedAddend concode_elem_sep int getHops concode_elem_sep void setAnswerQuality concode_elem_sep float getAnswerQuality concode_elem_sep void setHops concode_elem_sep SkyNetNodeInfo getQueryOriginator concode_elem_sep void setQueryID concode_elem_sep void setQueryType concode_elem_sep Vector<QueryAddend> getAllAddends concode_elem_sep long getSize concode_elem_sep int getQueryID concode_elem_sep void addAddend concode_elem_sep long getTimestamp concode_elem_sep String getQueryType concode_elem_sep Query clone concode_elem_sep String toString concode_elem_sep void setAllAddends concode_elem_sep void setSolvedAddend concode_elem_sep QueryAddend removeAddend concode_elem_sep QueryAddend getAddend concode_elem_sep void setTimestamp concode_elem_sep void incrementHops"}
{"code": "void function ( final int arg0 ) { if ( ! started ) { numHosts = arg0 ; } }", "nl": "sets the number of hosts that take part in the overlay network . if not set , the default value of 1 host is assumed . has to be set before analysis is started and will be ignored else . concode_field_sep Logger log concode_elem_sep double numHosts concode_elem_sep boolean started concode_elem_sep Map<Long,Long> sentMaintenance concode_elem_sep Map<Long,Long> sentUser concode_field_sep void writeTraffic concode_elem_sep void stop concode_elem_sep void start concode_elem_sep void transMsgSent concode_elem_sep void messageSent concode_elem_sep void transMsgReceived"}
{"code": "Protocol function ( ) { return REMOTE . get ( ) ; }", "nl": "return the remote protocol . accesses a threadlocal that 's setaround calls to #respond protocol.message , object . concode_field_sep Map<MD5,Protocol> protocols concode_elem_sep Logger LOG concode_elem_sep GenericDatumReader<Map<String,ByteBuffer>> META_READER concode_elem_sep List<RPCPlugin> rpcMetaPlugins concode_elem_sep Schema META concode_elem_sep ThreadLocal<Protocol> REMOTE concode_elem_sep SpecificDatumWriter<HandshakeResponse> handshakeWriter concode_elem_sep SpecificDatumReader<HandshakeRequest> handshakeReader concode_elem_sep MD5 localHash concode_elem_sep Protocol local concode_elem_sep GenericDatumWriter<Map<String,ByteBuffer>> META_WRITER concode_field_sep Protocol handshake concode_elem_sep Object readRequest concode_elem_sep Protocol getLocal concode_elem_sep void writeResponse concode_elem_sep void addRPCPlugin concode_elem_sep List<ByteBuffer> respond concode_elem_sep List<ByteBuffer> respond concode_elem_sep Object respond concode_elem_sep void writeError"}
{"code": "void function ( PdfArray arg0 ) { if ( arg0 == null ) return ; for ( int loc0 = 0 ; loc0 < arg0 . size ( ) ; loc0 ++ ) { inspectChild ( arg0 . getDirectObject ( loc0 ) ) ; } }", "nl": "if the child of a structured element is an array , we need to loop over the elements . concode_field_sep PdfReader reader concode_elem_sep PrintWriter out concode_field_sep String xmlName concode_elem_sep void convertToXml concode_elem_sep void convertToXml concode_elem_sep String fixTagName concode_elem_sep void inspectChildDictionary concode_elem_sep void inspectChildDictionary concode_elem_sep void inspectChild concode_elem_sep void parseTag"}
{"code": "Branch function ( String arg0 , String arg1 , int arg2 , int arg3 , boolean arg4 ) { Branch loc0 = new Branch ( arg0 , arg1 , arg2 , arg3 , arg4 ) ; Branch loc1 = savedBranchInfos . get ( loc0 ) ; if ( loc1 == null ) { savedBranchInfos . put ( loc0 , loc0 ) ; loc1 = loc0 ; } return loc1 ; }", "nl": "creates a new branch object . concode_field_sep int branchNumber concode_elem_sep Map<Branch,Branch> savedBranchInfos concode_elem_sep String methodName concode_elem_sep String className concode_elem_sep int lineNumber concode_elem_sep long serialVersionUID concode_elem_sep boolean branch concode_field_sep int getLineNumber concode_elem_sep void writeToFile concode_elem_sep String getMethodName concode_elem_sep Set<Branch> readFromFile concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep Branch getOppositeBranch concode_elem_sep List<Pair<String,String>> readKeyValuePairs concode_elem_sep String toString concode_elem_sep String getClassName concode_elem_sep Branch parse"}
{"code": "Object function ( String arg0 ) { Class loc0 ; try { loc0 = classForName ( StringHelper . qualifier ( arg0 ) ) ; } catch ( Throwable loc1 ) { return null ; } try { return loc0 . getField ( StringHelper . unqualify ( arg0 ) ) . get ( null ) ; } catch ( Throwable loc1 ) { return null ; } }", "nl": "resolve a constant to its actual value . concode_field_sep PropertyAccessor DIRECT_PROPERTY_ACCESSOR concode_elem_sep Method OBJECT_EQUALS concode_elem_sep Class[] SINGLE_OBJECT_PARAM_SIGNATURE concode_elem_sep Object[] NO_PARAMS concode_elem_sep Method OBJECT_HASHCODE concode_elem_sep Class[] NO_PARAM_SIGNATURE concode_elem_sep PropertyAccessor BASIC_PROPERTY_ACCESSOR concode_field_sep boolean overridesHashCode concode_elem_sep Getter getGetter concode_elem_sep Getter getter concode_elem_sep boolean isFinalClass concode_elem_sep boolean overridesEquals concode_elem_sep Method getMethod concode_elem_sep Class classForName concode_elem_sep Class classForName concode_elem_sep Constructor getConstructor concode_elem_sep boolean implementsInterface concode_elem_sep Constructor<T> getDefaultConstructor concode_elem_sep Method extractHashCodeMethod concode_elem_sep Method extractEqualsMethod concode_elem_sep boolean isPublic concode_elem_sep boolean isPublic concode_elem_sep Class reflectedPropertyClass concode_elem_sep Class reflectedPropertyClass concode_elem_sep boolean isAbstractClass"}
{"code": "void function ( long arg0 , String arg1 , String arg2 ) { trace ( arg1 , arg2 , \"srini_string\" + arg0 ) ; try { Thread . sleep ( arg0 ) ; } catch ( InterruptedException loc0 ) { } trace ( arg1 , arg2 , \"srini_string\" ) ; }", "nl": "causes the currently executing thread to sleep temporarily cease execution for the specified number of milliseconds . the thread does not lose ownership of any monitors . if trace messages associated with the given trace option have been enabled , log the start and end of the sleep cycle along with thread information . if trace options are not enabled , then just sleep . concode_field_sep PrintWriter sysOut concode_elem_sep ILog log concode_elem_sep boolean isDebugging concode_field_sep void setLog concode_elem_sep boolean isDebugging concode_elem_sep void trace concode_elem_sep void trace concode_elem_sep void setDebugging concode_elem_sep boolean isTracing concode_elem_sep void close"}
{"code": "MSG_TYPE function ( ) { return this . msgType ; }", "nl": "gets the type of the message back . concode_field_sep MSG_TYPE msgType concode_field_sep long getSize concode_elem_sep boolean equals"}
{"code": "void function ( Iterable < BeanDeploymentArchiveImpl > arg0 ) { for ( BeanDeploymentArchiveImpl loc0 : arg0 ) { for ( BeanDeploymentArchiveImpl loc1 : arg0 ) { if ( loc0 . isAccessible ( loc1 ) ) { loc0 . addBeanDeploymentArchive ( loc1 ) ; } } } }", "nl": "org.jboss.as.weld.deployment.processors.welddeploymentprocessor assembles a basic accessibility graph based onthe deployment structure . here , we complete the graph by examining classloader visibility . this allows additional accessibility edges caused e.g. by the class-path declaration in the manifest file , to be recognized . concode_field_sep Set<Metadata<Extension>> extensions concode_elem_sep Map<ClassLoader,BeanDeploymentArchiveImpl> additionalBeanDeploymentArchivesByClassloader concode_elem_sep ServiceRegistry serviceRegistry concode_elem_sep BeanDeploymentArchiveImpl bootstrapClassLoaderBeanDeploymentArchive concode_elem_sep Map<ModuleIdentifier,EEModuleDescriptor> eeModuleDescriptors concode_elem_sep String ADDITIONAL_CLASSES_BDA_SUFFIX concode_elem_sep Module module concode_elem_sep Set<BeanDeploymentArchiveImpl> beanDeploymentArchives concode_elem_sep BeanDeploymentModule rootBeanDeploymentModule concode_elem_sep String BOOTSTRAP_CLASSLOADER_BDA_ID concode_elem_sep Set<ClassLoader> subDeploymentClassLoaders concode_field_sep Collection<BeanDeploymentArchive> getBeanDeploymentArchives concode_elem_sep Module getModule concode_elem_sep Set<ClassLoader> getSubDeploymentClassLoaders concode_elem_sep void addWeldService concode_elem_sep BeanDeploymentArchiveImpl createAndRegisterAdditionalBeanDeploymentArchive concode_elem_sep BeanDeploymentArchive getBeanDeploymentArchive concode_elem_sep void makeTopLevelBdasVisibleFromStaticModules concode_elem_sep ServiceRegistry getServices concode_elem_sep Iterable<Metadata<Extension>> getExtensions concode_elem_sep BeanDeploymentArchive loadBeanDeploymentArchive"}
{"code": "int function ( Object arg0 ) { return ( ( Map ) arg0 ) . size ( ) ; }", "nl": "called by the default implementation of #writemap to get the sizeof a map . the default implementation is for map . concode_field_sep GenericData data concode_elem_sep Schema root concode_field_sep NullPointerException npe concode_elem_sep void writeWithoutConversion concode_elem_sep Iterator<? extends Object> getArrayElements concode_elem_sep void writeFixed concode_elem_sep void writeEnum concode_elem_sep Object convert concode_elem_sep void writeField concode_elem_sep void error concode_elem_sep void writeMap concode_elem_sep void setSchema concode_elem_sep void writeRecord concode_elem_sep void writeBytes concode_elem_sep void writeArray concode_elem_sep Iterable<Map.Entry<Object,Object>> getMapEntries concode_elem_sep int resolveUnion concode_elem_sep long getArraySize concode_elem_sep void write concode_elem_sep void write concode_elem_sep void writeString concode_elem_sep void writeString concode_elem_sep GenericData getData"}
{"code": "void function ( final Collection < T > arg0 , final Collection < T > arg1 , final Predicate < T > arg2 , final Comparator < T > arg3 , final int arg4 ) { final List < T > loc0 = new ArrayList < T > ( arg0 . size ( ) ) ; arg2 ( arg0 , loc0 , arg2 ) ; Collections . sort ( loc0 , arg3 ) ; final Iterator < T > loc1 = loc0 . iterator ( ) ; final int loc2 = arg1 . size ( ) + arg4 ; while ( loc1 . hasNext ( ) && arg1 . size ( ) < loc2 ) { arg1 . add ( loc1 . next ( ) ) ; } }", "nl": "sorts source and adds the first n entries that match filter to dest . if source contains less than n entries , all of them are added to dest . for details , see collectionhelpers #copynsorted collection , collection , comparator , int , except that source is filtered using filter before selecting entries to copy . concode_field_sep PlaceHolder placeHolder concode_field_sep void filter concode_elem_sep void filterMap concode_elem_sep void copyNSorted concode_elem_sep double getQuantile concode_elem_sep void splitMap concode_elem_sep List<T> getRandomPartFrom concode_elem_sep E getRandomEntry concode_elem_sep E getRandomEntry concode_elem_sep void copyUntilFull concode_elem_sep List<Tt> transformList"}
{"code": "String [ ] function ( ) { return columnNames ; }", "nl": "returns an array of string objects . the array represents the names of the columns arranged in the same order as in the getrowsbyindex method . concode_field_sep boolean isLimited concode_elem_sep String[] columnNames concode_elem_sep List rowMap concode_elem_sep List rowByIndex concode_field_sep int getRowCount concode_elem_sep Object[][] getRowsByIndex concode_elem_sep boolean isLimitedByMaxRows concode_elem_sep SortedMap[] getRows"}
{"code": "RemittanceInformation5 function ( String arg0 ) { checkMax140Text ( arg0 ) ; RemittanceInformation5 loc0 = new RemittanceInformation5 ( ) ; loc0 . getUstrd ( ) . add ( arg0 ) ; return loc0 ; }", "nl": "information supplied to enable the matching of an entry with the items that the transfer is intended to settle , such as commercial invoices in an accounts ' receivable system max length : 140 concode_field_sep Pattern bicRegex concode_field_sep PartyIdentification32 createIdParty concode_elem_sep PaymentIdentification1 createPaymentIdentification concode_elem_sep void checkMax70Text concode_elem_sep PartyIdentification32 createParty concode_elem_sep PartyIdentification32 createParty concode_elem_sep RemittanceInformation5 createRmtInf_struct concode_elem_sep void checkMax140Text concode_elem_sep XMLGregorianCalendar createXMLGregorianCalendarDate concode_elem_sep BranchAndFinancialInstitutionIdentification4 createFinInstnId concode_elem_sep XMLGregorianCalendar createXMLGregorianCalendar concode_elem_sep CashAccount16 createAccount concode_elem_sep CashAccount16 createAccount concode_elem_sep ActiveOrHistoricCurrencyAndAmount createAmount concode_elem_sep void checkMax35Text"}
{"code": "int function ( ) { return remCount ; }", "nl": "get the number of required pairs removed from the pairlist . concode_field_sep ArrayList<GenPolynomial<C>> P concode_elem_sep ArrayList<BitSet> red concode_elem_sep boolean useCriterion4 concode_elem_sep int putCount concode_elem_sep Logger logger concode_elem_sep GenPolynomialRing<C> ring concode_elem_sep boolean oneInGB concode_elem_sep int remCount concode_elem_sep int moduleVars concode_elem_sep Reduction<C> reduction concode_elem_sep TreeMap<ExpVector,LinkedList<Pair<C>>> pairlist concode_field_sep int putOne concode_elem_sep int putCount concode_elem_sep ArrayList<GenPolynomial<C>> getList concode_elem_sep boolean hasNext concode_elem_sep boolean criterion3 concode_elem_sep int put concode_elem_sep Pair<C> removeNext"}
{"code": "boolean function ( ) { return needBeforeSpace ; }", "nl": "get the flag to know the character should have a space . concode_field_sep boolean needAfterSpace concode_elem_sep SymbolType name concode_elem_sep long serialVersionUID concode_elem_sep char[] invalidChars concode_elem_sep boolean needBeforeSpace concode_elem_sep char value concode_field_sep char getValue concode_elem_sep boolean isNeedAfterSpace concode_elem_sep char[] getInvalidChars concode_elem_sep SymbolType getType concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep String toString"}
{"code": "Collection < EvaluationListener > function ( ) { return evaluationListeners ; }", "nl": "returns the evaluation listeners registered in this configuration concode_field_sep JsonProvider jsonProvider concode_elem_sep Collection<EvaluationListener> evaluationListener concode_elem_sep Collection<EvaluationListener> evaluationListeners concode_elem_sep EnumSet<Option> options concode_elem_sep Set<Option> options concode_elem_sep MappingProvider mappingProvider concode_elem_sep Defaults DEFAULTS concode_field_sep Configuration addEvaluationListeners concode_elem_sep Configuration setEvaluationListeners concode_elem_sep ConfigurationBuilder evaluationListener concode_elem_sep ConfigurationBuilder evaluationListener concode_elem_sep void setDefaults concode_elem_sep Configuration defaultConfiguration concode_elem_sep Configuration jsonProvider concode_elem_sep JsonProvider jsonProvider concode_elem_sep ConfigurationBuilder jsonProvider concode_elem_sep JsonProvider jsonProvider concode_elem_sep Defaults getEffectiveDefaults concode_elem_sep Configuration build concode_elem_sep ConfigurationBuilder builder concode_elem_sep ConfigurationBuilder options concode_elem_sep ConfigurationBuilder options concode_elem_sep Set<Option> options concode_elem_sep Configuration setOptions concode_elem_sep boolean containsOption concode_elem_sep Set<Option> getOptions concode_elem_sep Configuration mappingProvider concode_elem_sep MappingProvider mappingProvider concode_elem_sep ConfigurationBuilder mappingProvider concode_elem_sep MappingProvider mappingProvider concode_elem_sep Configuration addOptions"}
{"code": "CompositeData function ( ) { try { return new CompositeDataSupport ( COMPOSITE_TYPE , ITEM_NAMES , new Object [ ] { roleName , shortName , loadCount , fetchCount , updateCount , removeCount , recreateCount } ) ; } catch ( OpenDataException loc0 ) { throw new RuntimeException ( loc0 ) ; } }", "nl": "builds a jmx compositedata view of our state concode_field_sep OpenType[] ITEM_TYPES concode_elem_sep long updateCount concode_elem_sep long fetchCount concode_elem_sep String TABULAR_TYPE_NAME concode_elem_sep String COMPOSITE_TYPE_NAME concode_elem_sep CompositeType COMPOSITE_TYPE concode_elem_sep long loadCount concode_elem_sep String[] ITEM_NAMES concode_elem_sep long recreateCount concode_elem_sep String roleName concode_elem_sep String[] ITEM_DESCRIPTIONS concode_elem_sep String[] INDEX_NAMES concode_elem_sep String COMPOSITE_TYPE_DESCRIPTION concode_elem_sep String TABULAR_TYPE_DESCRIPTION concode_elem_sep String shortName concode_elem_sep TabularType TABULAR_TYPE concode_elem_sep long removeCount concode_field_sep void add concode_elem_sep String getRoleName concode_elem_sep TabularData newTabularDataInstance concode_elem_sep CollectionStats[] fromTabularData concode_elem_sep long getLoadCount concode_elem_sep String getShortName concode_elem_sep String toString concode_elem_sep long getFetchCount concode_elem_sep long getUpdateCount concode_elem_sep long getRecreateCount concode_elem_sep long getRemoveCount"}
{"code": "void function ( int arg0 , List < Sentence > arg1 ) { listElements . add ( new ListElement ( arg0 , arg1 ) ) ; }", "nl": "append listelement . concode_field_sep List<ListElement> listElements concode_field_sep List<ListElement> getListElements concode_elem_sep ListElement getListElement concode_elem_sep int getNumberOfListElements"}
{"code": "void function ( ) { JdbcDataSource loc0 = new JdbcDataSource ( ) ; loc0 . setURL ( DB_URL ) ; dao = new DbCustomerDao ( loc0 ) ; boolean loc1 = dao . add ( existingCustomer ) ; assertTrue ( loc1 ) ; }", "nl": "setup for connection success scenario . concode_field_sep String DB_URL concode_elem_sep DbCustomerDao dao concode_elem_sep Customer existingCustomer concode_elem_sep String EXCEPTION_CAUSE concode_elem_sep ExpectedException exception concode_field_sep void addingShouldResultInSuccess concode_elem_sep void deletionShouldBeFailureAndNotAffectExistingCustomers concode_elem_sep void retrievingAllCustomersFailsWithExceptionAsFeedbackToClient concode_elem_sep void updatingACustomerFailsWithFeedbackToTheClient concode_elem_sep void retrieveShouldReturnNoCustomer concode_elem_sep void createSchema concode_elem_sep void updationShouldBeFailureAndNotAffectExistingCustomers concode_elem_sep void deletionShouldBeSuccessAndCustomerShouldBeNonAccessible concode_elem_sep void addingShouldResultInFailureAndNotAffectExistingCustomers concode_elem_sep void deleteSchema concode_elem_sep void assertCustomerCountIs concode_elem_sep void addingACustomerFailsWithExceptionAsFeedbackToClient concode_elem_sep DataSource mockedDatasource concode_elem_sep void updationShouldBeSuccessAndAccessingTheSameCustomerShouldReturnUpdatedInformation concode_elem_sep void retrievingACustomerByIdFailsWithExceptionAsFeedbackToClient concode_elem_sep int getNonExistingCustomerId concode_elem_sep void deletingACustomerFailsWithExceptionAsFeedbackToTheClient"}
{"code": "void function ( Object [ ] arg0 , Collection < Object > arg1 ) { int loc0 = testContains ( arg0 , arg1 ) ; if ( loc0 != - 1 ) fail ( \"srini_string\" + arg0 [ loc0 ] , arg0 , arg1 ) ; }", "nl": "assert that the actual collection contains the expected elements but may contain more . concode_field_sep PlaceHolder placeHolder concode_field_sep int testContains concode_elem_sep int testContains concode_elem_sep boolean testContains concode_elem_sep void fail concode_elem_sep void assertContainsOnly concode_elem_sep void assertContainsOnly concode_elem_sep void assertContainsOnly concode_elem_sep void assertContainsOnly concode_elem_sep boolean testContainsOnly concode_elem_sep boolean testContainsOnly"}
{"code": "double function ( int arg0 ) { return list . get ( arg0 ) ; }", "nl": "gets items from the stack where the index is zero based and the top of the stack is at an index of size -1 with the bottom of the stack at an index of 0 . concode_field_sep ArrayDoubleList list concode_field_sep double pop concode_elem_sep int search concode_elem_sep int size concode_elem_sep void clear concode_elem_sep double push concode_elem_sep boolean empty concode_elem_sep double peek concode_elem_sep double peek"}
{"code": "ResourceEditPropertyBuilder function ( Integer arg0 ) { this . cardinalityProperty = arg0 ; return this ; }", "nl": "cardinality of property concode_field_sep boolean isTesting concode_elem_sep String typeName concode_elem_sep Clob propertyValue concode_elem_sep Clob exampleValue concode_elem_sep boolean isEncrypted concode_elem_sep String propContName concode_elem_sep Integer descriptorId concode_elem_sep String typeContName concode_elem_sep Integer typeId concode_elem_sep Clob defaultValue concode_elem_sep String resourceName concode_elem_sep String fcExternalKey concode_elem_sep String technicalKey concode_elem_sep String mik concode_elem_sep Integer propContextId concode_elem_sep String origin concode_elem_sep Integer cardinalityProperty concode_elem_sep Integer propertyValueTypeId concode_elem_sep String displayName concode_elem_sep String fcOwner concode_elem_sep Integer propertyId concode_elem_sep Integer masterTypeId concode_elem_sep boolean isNullable concode_elem_sep String fcExternalLink concode_elem_sep String validationRegex concode_elem_sep String loadedFor concode_elem_sep boolean isOptional concode_elem_sep String validationLogic concode_elem_sep String descriptorOrigin concode_elem_sep Integer typeContextId concode_elem_sep Clob propertyComment concode_field_sep ResourceEditPropertyBuilder withDisplayAndTechKeyName concode_elem_sep ResourceEditPropertyBuilder withOrigin concode_elem_sep ResourceEditPropertyBuilder withValidationRegex concode_elem_sep ResourceEditPropertyBuilder withIsEncrypted concode_elem_sep ResourceEditPropertyBuilder withDescriptorOrigin concode_elem_sep Clob convert concode_elem_sep ResourceEditPropertyBuilder withTechnicalKey concode_elem_sep ResourceEditPropertyBuilder withMasterResTypeName concode_elem_sep ResourceEditPropertyBuilder withLoadedFor concode_elem_sep ResourceEditPropertyBuilder withDisplayName concode_elem_sep ResourceEditPropertyBuilder withValue concode_elem_sep ResourceEditPropertyBuilder withFcExternalLink concode_elem_sep ResourceEditPropertyBuilder withDefaultValue concode_elem_sep ResourceEditPropertyBuilder withDescriptorId concode_elem_sep ResourceEditPropertyBuilder withTypeId concode_elem_sep ResourceEditPropertyBuilder withDescriptor concode_elem_sep ResourceEditPropertyBuilder withPropTypeContName concode_elem_sep ResourceEditPropertyBuilder withValidationLogic concode_elem_sep ResourceEditPropertyBuilder withPropertyContextTypeId concode_elem_sep ResourceEditPropertyBuilder withPropertyId concode_elem_sep ResourceEditPropertyBuilder withPropContName concode_elem_sep ResourceEditPropertyBuilder withComment concode_elem_sep ResourceEditPropertyBuilder withFcOwner concode_elem_sep ResourceEditPropertyBuilder withMasterResTypeId concode_elem_sep ResourceEditPropertyBuilder withFcExternalKey concode_elem_sep ResourceEditProperty build concode_elem_sep ResourceEditPropertyBuilder withIsTesting concode_elem_sep ResourceEditPropertyBuilder withExampleValue concode_elem_sep ResourceEditPropertyBuilder withResourceName concode_elem_sep ResourceEditPropertyBuilder withPropContextId concode_elem_sep ResourceEditPropertyBuilder withIsNullable"}
{"code": "int [ ] function ( BufferedImage arg0 ) { return histogram ( arg0 , RED ) ; }", "nl": "calculate the red histogram of an image concode_field_sep int[] histogram concode_elem_sep float[] RED concode_elem_sep float[] GRAYSCALE concode_elem_sep float[] BLUE concode_elem_sep float[] GREEN concode_field_sep int[] histogram concode_elem_sep int[] histogram concode_elem_sep int[] histogram concode_elem_sep int[] grayscaleHistogram concode_elem_sep int[] blueHistogram concode_elem_sep int[] greenHistogram"}
{"code": "Parameters function ( ) { final Parameters loc0 = new Parameters ( alias , AND , queryParamCounter ) ; negatedParameters . add ( loc0 ) ; return loc0 ; }", "nl": "adds negated parameters , by default with the `` and '' connective . these paremeters will be grouped in parentheses in the generated query and negated , e.g. ... not exp1 and exp2 ... concode_field_sep String OR concode_elem_sep MutableInteger queryParamCounter concode_elem_sep List<Parameters> negatedParameters concode_elem_sep List<Parameters> subParameters concode_elem_sep String alias concode_elem_sep String connective concode_elem_sep List<String> expressions concode_elem_sep Map<String,Object> localQueryParamValues concode_elem_sep String AND concode_field_sep void addWhereWithParams concode_elem_sep void addWhere concode_elem_sep void addWhere concode_elem_sep void addWhere concode_elem_sep void addWhere concode_elem_sep void addNotNullRestriction concode_elem_sep boolean isEmpty concode_elem_sep void addNullRestriction concode_elem_sep void addWhereWithParam concode_elem_sep void addWhereWithParam concode_elem_sep void addWhereWithFunction concode_elem_sep Parameters deepCopy concode_elem_sep void build concode_elem_sep Parameters addSubParameters concode_elem_sep void addWhereWithNamedParam concode_elem_sep void addWhereWithNamedParam concode_elem_sep String generateQueryParam concode_elem_sep void append"}
{"code": "void function ( PdfReader arg0 ) { fc . addDocument ( arg0 ) ; }", "nl": "concatenates a pdf document . concode_field_sep PdfCopyFieldsImp fc concode_field_sep void setOutlines concode_elem_sep void setViewerPreferences concode_elem_sep void addJavaScript concode_elem_sep void addViewerPreference concode_elem_sep PdfWriter getWriter concode_elem_sep boolean isFullCompression concode_elem_sep void setEncryption concode_elem_sep void setEncryption concode_elem_sep void setEncryption concode_elem_sep void setEncryption concode_elem_sep void setFullCompression concode_elem_sep void close concode_elem_sep void open"}
{"code": "Throwable function ( ) { return EDTExceptionCatcher . getThrowable ( ) ; }", "nl": "returns the last exception thrown on the event dispatch thread , or null if no such exception has been thrown . concode_field_sep AWTEventListener listener concode_elem_sep SystemState state concode_field_sep void restore concode_elem_sep long getEventDispatchErrorTime"}
{"code": "Object function ( Object arg0 ) { if ( last == null ) { throw new IllegalStateException ( \"srini_string\" ) ; } return last . setValue ( arg0 ) ; }", "nl": "sets the value associated with the current key . concode_field_sep Iterator iterator concode_elem_sep Map.Entry last concode_elem_sep Map map concode_elem_sep boolean canRemove concode_field_sep Object next concode_elem_sep Object getKey concode_elem_sep Object getValue concode_elem_sep void reset concode_elem_sep boolean hasNext concode_elem_sep String toString concode_elem_sep void remove"}
{"code": "int function ( Context arg0 , int arg1 ) { TypedArray loc0 = null ; try { loc0 = arg0 . getTheme ( ) . obtainStyledAttributes ( new int [ ] { arg1 } ) ; return loc0 . getDimensionPixelSize ( 0 , 0 ) ; } finally { if ( loc0 != null ) { loc0 . recycle ( ) ; } } }", "nl": "returns the size in pixels of an attribute dimension concode_field_sep PlaceHolder placeHolder concode_field_sep int getThemeColor concode_elem_sep float convertPixelsToDp concode_elem_sep void setBackground concode_elem_sep void setBackground concode_elem_sep float convertDpToPixel concode_elem_sep int getThemeColorFromAttrOrRes"}
{"code": "boolean function ( int arg0 , List < GenSolvablePolynomial < C >> arg1 ) { return sbb . isTwosidedGB ( arg0 , arg1 ) ; }", "nl": "module twosided groebner base test . concode_field_sep SolvableGroebnerBase<C> sbb concode_elem_sep boolean debug concode_elem_sep Logger logger concode_field_sep List<GenSolvablePolynomial<C>> leftGB concode_elem_sep ModuleList<C> leftGB concode_elem_sep List<GenSolvablePolynomial<C>> rightGB concode_elem_sep ModuleList<C> rightGB concode_elem_sep boolean isLeftGB concode_elem_sep boolean isLeftGB concode_elem_sep boolean isRightGB concode_elem_sep boolean isRightGB concode_elem_sep List<GenSolvablePolynomial<C>> twosidedGB concode_elem_sep ModuleList<C> twosidedGB"}
{"code": "BigInteger function ( BigInteger arg0 ) { if ( arg0 == null ) return null ; return arg0 . negate ( ) ; }", "nl": "negative value . concode_field_sep java.math.BigInteger val concode_elem_sep BigInteger ONE concode_elem_sep BigInteger ZERO concode_elem_sep Random random concode_field_sep BigInteger IRAND concode_elem_sep boolean isField concode_elem_sep boolean isCommutative concode_elem_sep BigInteger gcd concode_elem_sep BigInteger IPROD concode_elem_sep BigInteger sum concode_elem_sep int compareTo concode_elem_sep BigInteger IABS concode_elem_sep java.math.BigInteger characteristic concode_elem_sep BigInteger random concode_elem_sep BigInteger random concode_elem_sep int hashCode concode_elem_sep BigInteger IDIF concode_elem_sep BigInteger divide concode_elem_sep BigInteger copy concode_elem_sep BigInteger multiply concode_elem_sep BigInteger IGCD concode_elem_sep int signum concode_elem_sep BigInteger ISUM concode_elem_sep boolean isONE concode_elem_sep BigInteger inverse concode_elem_sep java.math.BigInteger getVal concode_elem_sep BigInteger valueOf concode_elem_sep BigInteger valueOf concode_elem_sep boolean isUnit concode_elem_sep BigInteger subtract concode_elem_sep BigInteger IQ concode_elem_sep BigInteger[] IQR concode_elem_sep BigInteger parse concode_elem_sep BigInteger parse concode_elem_sep BigInteger[] egcd concode_elem_sep int ISIGN concode_elem_sep BigInteger abs concode_elem_sep BigInteger IREM concode_elem_sep BigInteger[] divideAndRemainder concode_elem_sep BigInteger negate concode_elem_sep boolean equals concode_elem_sep BigInteger clone concode_elem_sep BigInteger getONE concode_elem_sep BigInteger getZERO concode_elem_sep BigInteger fromInteger concode_elem_sep BigInteger fromInteger concode_elem_sep boolean isZERO concode_elem_sep boolean isAssociative concode_elem_sep String toString concode_elem_sep int ICOMP concode_elem_sep BigInteger remainder"}
{"code": "int function ( CanVID arg0 ) { int loc0 = 0 ; for ( int loc1 = 0 ; loc1 < Math . min ( VID . size ( ) , arg0 . getVIDList ( ) . size ( ) ) ; loc1 ++ ) { if ( ! VID . get ( loc1 ) . toString ( ) . equals ( arg0 . getVIDList ( ) . get ( loc1 ) . toString ( ) ) ) break ; loc0 ++ ; } return loc0 ; }", "nl": "compares two canvid and gives the number of common values back . so it gives the number of common parents concode_field_sep List<String> VID concode_field_sep boolean inBetween concode_elem_sep List<String> listCommon concode_elem_sep boolean lower concode_elem_sep boolean closestNeighbour concode_elem_sep void addToVID concode_elem_sep boolean allZero concode_elem_sep void removeFromList concode_elem_sep String einzelnToString concode_elem_sep boolean allOne concode_elem_sep List<String> getVIDList concode_elem_sep String toString concode_elem_sep void setVIDList concode_elem_sep boolean higher"}
{"code": "String function ( String arg0 ) { return addUnderscores ( arg0 ) ; }", "nl": "convert mixed case to underscores concode_field_sep NamingStrategy INSTANCE concode_field_sep String classToTableName concode_elem_sep String collectionTableName concode_elem_sep String propertyToColumnName concode_elem_sep String logicalColumnName concode_elem_sep String joinKeyColumnName concode_elem_sep String logicalCollectionColumnName concode_elem_sep String logicalCollectionTableName concode_elem_sep String foreignKeyColumnName concode_elem_sep String tableName concode_elem_sep String columnName concode_elem_sep String addUnderscores"}
{"code": "void function ( ) { this . slsb . buildDefaultValidatorFactory ( ) ; }", "nl": "test that javax.validation.validation #builddefaultvalidatorfactory works fine within an ejb concode_field_sep StatelessBean slsb concode_field_sep JavaArchive getDeployment concode_elem_sep void testValidatorInjection concode_elem_sep void testGetValidatorFromValidatorFactory"}
{"code": "String function ( ) { return name ; }", "nl": "the name of the document origin . interpretation is relative to the type , but might be the resource name or file url . concode_field_sep String name concode_elem_sep SourceType type concode_elem_sep String UNKNOWN_FILE_PATH concode_field_sep SourceType getType concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep String toString"}
{"code": "Optional < JobStatus > function ( @ PathParam ( \"srini_string\" ) @ Valid final JobId arg0 ) { if ( ! arg0 . isFullyQualified ( ) ) { throw badRequest ( \"srini_string\" ) ; } return Optional . fromNullable ( model . getJobStatus ( arg0 ) ) ; }", "nl": "returns the job status for the given job id . the job status includes things like where it 's deployed , and the status of the jobs where it 's deployed , etc. . concode_field_sep Logger log concode_elem_sep MasterModel model concode_elem_sep MasterMetrics metrics concode_elem_sep JobValidator JOB_VALIDATOR concode_field_sep CreateJobResponse post concode_elem_sep Optional<Job> get concode_elem_sep Map<JobId,Job> list concode_elem_sep JobDeleteResponse delete concode_elem_sep Map<JobId,JobStatus> jobStatuses"}
{"code": "void function ( final RecordBatch arg0 ) { executeMethodLogic ( new PartitionBatchHandlingClass ( arg0 ) ) ; }", "nl": "partitionbatch - decorator method to call real partitioner s to process incoming batch uses either threading or not threading approach based on number partitioners concode_field_sep RecordBatch incoming concode_elem_sep boolean isLastBatch concode_elem_sep Partitioner part concode_elem_sep org.slf4j.Logger logger concode_elem_sep String childThreadPrefix concode_elem_sep GeneralExecuteIface iface concode_elem_sep ControlsInjector injector concode_elem_sep String parentThreadName concode_elem_sep CountDownLatchInjection testCountDownLatch concode_elem_sep OperatorStats stats concode_elem_sep ExecutorService executor concode_elem_sep String tName concode_elem_sep FragmentContext context concode_elem_sep boolean schemaChanged concode_elem_sep CountDownLatch latch concode_elem_sep IOException exp concode_elem_sep List<Partitioner> partitioners concode_field_sep PartitionOutgoingBatch getOutgoingBatches concode_elem_sep IOException getException concode_elem_sep List<Partitioner> getPartitioners concode_elem_sep void clear concode_elem_sep void flushOutgoingBatches concode_elem_sep void executeMethodLogic concode_elem_sep void run concode_elem_sep Partitioner getPart concode_elem_sep void initialize concode_elem_sep void execute concode_elem_sep void execute concode_elem_sep void execute"}
{"code": "Throwable function ( ) { return cause ; }", "nl": "get cause concode_field_sep FailedType failedType concode_elem_sep Throwable cause concode_field_sep FailedType getFailedType"}
{"code": "String function ( Plugin arg0 ) { return arg0 . getBundle ( ) . getSymbolicName ( ) ; }", "nl": "return the unique identifier of the given plug-in . concode_field_sep PlaceHolder placeHolder concode_field_sep PluginVersionIdentifier getVersion concode_elem_sep PluginVersionIdentifier getVersion concode_elem_sep URL getUrl concode_elem_sep URL getUrl concode_elem_sep String getName concode_elem_sep URL getInstallUrl concode_elem_sep URL getInstallUrl concode_elem_sep String getVersionString concode_elem_sep String getVersionString"}
{"code": "void function ( ) { resources = GWT . create ( Resources . class ) ; }", "nl": "initializes resources . this must be called before monitorresources #getresources . this allows us to avoid an evil static initializer that would pollute all the getresources call sites . concode_field_sep Resources resources concode_field_sep String buildInfoView concode_elem_sep String even concode_elem_sep Resources getResources concode_elem_sep CommonCss commonCss concode_elem_sep Css monitorCss concode_elem_sep String odd"}
{"code": "void function ( ICharacterScanner arg0 ) { for ( int loc0 = fBuffer . length ( ) - 1 ; loc0 >= 0 ; loc0 -- ) arg0 . unread ( ) ; }", "nl": "returns the characters in the buffer to the scanner . concode_field_sep char[] fContent concode_elem_sep boolean fIsHashCached concode_elem_sep IWordDetector fDetector concode_elem_sep int fLength concode_elem_sep List<WordMatcher> fMatchers concode_elem_sep Map<CharacterBuffer,IToken> fWords concode_elem_sep int UNDEFINED concode_elem_sep CharacterBuffer fBuffer concode_elem_sep int fHashCode concode_elem_sep IToken fDefaultToken concode_elem_sep int fColumn concode_field_sep void addWord concode_elem_sep void setColumnConstraint concode_elem_sep void clearWords concode_elem_sep void addWordMatcher concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep boolean equals concode_elem_sep void clear concode_elem_sep int length concode_elem_sep String toString concode_elem_sep IToken evaluate concode_elem_sep IToken evaluate concode_elem_sep void append concode_elem_sep char charAt"}
{"code": "void function ( double arg0 ) { VectorXYZ loc0 = getRight ( ) ; VectorXZ loc1 = new VectorXZ ( loc0 . x , loc0 . z ) . normalize ( ) ; move ( loc1 . x * arg0 , 0 , loc1 . z * arg0 ) ; }", "nl": "moves pos and lookat to the right in the map plane concode_field_sep VectorXYZ pos concode_elem_sep VectorXYZ lookAt concode_elem_sep VectorXYZ up concode_field_sep void setCamera concode_elem_sep void setCamera concode_elem_sep void moveForward concode_elem_sep void move concode_elem_sep void move concode_elem_sep void roll concode_elem_sep VectorXYZ getUp concode_elem_sep void yaw concode_elem_sep void moveMapUp concode_elem_sep void setPos concode_elem_sep void setPos concode_elem_sep void mapPitch concode_elem_sep VectorXYZ getRight concode_elem_sep void setLookAt concode_elem_sep void setLookAt concode_elem_sep VectorXYZ getViewDirection concode_elem_sep VectorXYZ getPos concode_elem_sep void moveRight concode_elem_sep VectorXYZ getLookAt concode_elem_sep void moveMapForward concode_elem_sep String toString concode_elem_sep void pitch concode_elem_sep void rotateY concode_elem_sep void moveUp"}
{"code": "Iterator function ( DoubleIterator arg0 ) { return null == arg0 ? null : new DoubleIteratorIterator ( arg0 ) ; }", "nl": "create an iterator iterator wrappingthe specified doubleiterator doubleiterator . when the given iterator is null , returns null . concode_field_sep DoubleIterator _iterator concode_field_sep Object next concode_elem_sep boolean hasNext concode_elem_sep void remove"}
{"code": "List < ReleaseEntity > function ( boolean arg0 ) { return persistenceService . loadAllReleaseEntities ( arg0 ) ; }", "nl": "load all releases concode_field_sep ReleaseMgmtPersistenceService persistenceService concode_elem_sep Logger log concode_elem_sep PropertyEditor propertyEditor concode_elem_sep EntityManager em concode_elem_sep ResourceDependencyResolverService resourceDependencyResolver concode_field_sep Map<Integer,ReleaseEntity> loadReleasesForCreatingNewRelease concode_elem_sep ReleaseEntity getDefaultRelease concode_elem_sep Map<ReleaseEntity,Date> getDeployableReleasesForResourceGroupWithLatestDeploymentDate concode_elem_sep List<ReleaseEntity> getDeployableReleasesForResourceGroup concode_elem_sep boolean save concode_elem_sep List<ResourceEntity> getResourcesForRelease concode_elem_sep ReleaseEntity findByName concode_elem_sep void changeReleaseOfResource concode_elem_sep int countReleases concode_elem_sep List<ReleaseEntity> loadReleasesForMgmt concode_elem_sep boolean delete concode_elem_sep DeploymentEntity getLastSuccessfulDeploymentForResourceGroup"}
{"code": "boolean function ( Object arg0 ) { ColorPolynomial < C > loc0 = null ; try { loc0 = ( ColorPolynomial < C > ) arg0 ; } catch ( ClassCastException loc1 ) { return false ; } if ( loc0 == null ) { return false ; } return ( green . equals ( loc0 . green ) && red . equals ( loc0 . red ) && white . equals ( loc0 . white ) ) ; }", "nl": "is this polynomial equal to other . concode_field_sep GenPolynomial<GenPolynomial<C>> red concode_elem_sep GenPolynomial<GenPolynomial<C>> green concode_elem_sep GenPolynomial<GenPolynomial<C>> white concode_field_sep List<GenPolynomial<C>> getRedCoefficients concode_elem_sep boolean isONE concode_elem_sep ExpVector leadingExpVector concode_elem_sep Map.Entry<ExpVector,GenPolynomial<C>> leadingMonomial concode_elem_sep boolean checkInvariant concode_elem_sep ColorPolynomial<C> subtract concode_elem_sep ColorPolynomial<C> subtract concode_elem_sep int length concode_elem_sep boolean isDetermined concode_elem_sep GenPolynomial<GenPolynomial<C>> getPolynomial concode_elem_sep ColorPolynomial<C> sum concode_elem_sep ColorPolynomial<C> sum concode_elem_sep ColorPolynomial<C> abs concode_elem_sep int hashCode concode_elem_sep boolean isZERO concode_elem_sep List<GenPolynomial<C>> getGreenCoefficients concode_elem_sep String toString concode_elem_sep ColorPolynomial<C> divide concode_elem_sep GenPolynomial<GenPolynomial<C>> getEssentialPolynomial concode_elem_sep ColorPolynomial<C> multiply concode_elem_sep ColorPolynomial<C> multiply"}
{"code": "T function ( Class < T > arg0 ) { try { return arg0 . newInstance ( ) ; } catch ( InstantiationException loc0 ) { throw new RuntimeException ( loc0 ) ; } catch ( IllegalAccessException loc0 ) { throw new RuntimeException ( loc0 ) ; } }", "nl": "a helper method to create a new instance of a type using the default constructor arguments . concode_field_sep PlaceHolder placeHolder concode_field_sep boolean hasAnnotation concode_elem_sep boolean hasMethodWithAnnotation concode_elem_sep Object invokeMethod"}
{"code": "SkyNetNodeInfo function ( ) { return nodeInfo ; }", "nl": "this method returns the id of the node , that measured or aggregated the metrics , which are currently stored within this class . concode_field_sep SkyNetNodeInfo nodeInfo concode_elem_sep HashMap<String,MetricsAggregate> metrics concode_field_sep long getSize concode_elem_sep IAggregationResult getAggregationResult concode_elem_sep HashMap<String,MetricsAggregate> getMetrics concode_elem_sep int getMapSize concode_elem_sep Set<String> getKeySet"}
{"code": "boolean function ( Object arg0 ) { if ( ! ( arg0 instanceof ResidueRing ) ) { return false ; } ResidueRing < C > loc0 = null ; try { loc0 = ( ResidueRing < C > ) arg0 ; } catch ( ClassCastException loc1 ) { } if ( loc0 == null ) { return false ; } if ( ! ring . equals ( loc0 . ring ) ) { return false ; } return modul . equals ( loc0 . modul ) ; }", "nl": "comparison with any other object . concode_field_sep Logger logger concode_elem_sep RingFactory<C> ring concode_elem_sep int isField concode_elem_sep C modul concode_field_sep Residue<C> random concode_elem_sep Residue<C> random concode_elem_sep int hashCode concode_elem_sep boolean isField concode_elem_sep Residue<C> getONE concode_elem_sep boolean isCommutative concode_elem_sep Residue<C> getZERO concode_elem_sep Residue<C> fromInteger concode_elem_sep Residue<C> fromInteger concode_elem_sep boolean isAssociative concode_elem_sep String toString concode_elem_sep Residue<C> parse concode_elem_sep Residue<C> parse concode_elem_sep Residue<C> copy concode_elem_sep java.math.BigInteger characteristic"}
{"code": "WebArchive function ( ) { return createWar ( SD_DEFAULT ) ; }", "nl": "creates war with a secured servlet and basic authentication configured in web.xml deployment descriptor . it uses default security domain . concode_field_sep String SD_WITHOUT_LOGIN_PERMISSION concode_elem_sep SimpleSecurityDomain securityDomain concode_elem_sep UndertowDomainMapper applicationSecurityDomain concode_elem_sep String PASSWORD concode_elem_sep String EMPTY_PASSWORD concode_elem_sep String SUCCESSFUL_AUTH_EVENT concode_elem_sep String SUCCESSFUL_PERMISSION_CHECK_EVENT concode_elem_sep URL url concode_elem_sep String UNSUCCESSFUL_PERMISSION_CHECK_EVENT concode_elem_sep String USER concode_elem_sep String UNKNOWN_USER concode_elem_sep String NAME concode_elem_sep String WRONG_PASSWORD concode_elem_sep String UNSUCCESSFUL_AUTH_EVENT concode_elem_sep String SD_DEFAULT concode_field_sep WebArchive customizedDeployment concode_elem_sep SimpleSecurityDomain createSecurityDomainWithoutPermissionMapper concode_elem_sep WebArchive createWar concode_elem_sep void setup concode_elem_sep void setDefaultEventListenerOfApplicationDomain concode_elem_sep void setEventListenerOfApplicationDomain concode_elem_sep void tearDown"}
{"code": "ReflectClass function ( String arg0 ) { Class loc0 = _classLoader . loadClass ( arg0 ) ; if ( loc0 == null ) { return null ; } return createClass ( loc0 ) ; }", "nl": "returns reflectclass for the specified class name concode_field_sep Reflector _parent concode_elem_sep ReflectArray _array concode_elem_sep JdkLoader _classLoader concode_elem_sep ReflectorConfiguration _config concode_field_sep Reflector parent concode_elem_sep void configuration concode_elem_sep ReflectorConfiguration configuration concode_elem_sep boolean isCollection concode_elem_sep boolean methodCallsSupported concode_elem_sep Object nullValue concode_elem_sep Class[] toNative concode_elem_sep Class toNative concode_elem_sep ReflectClass[] toMeta concode_elem_sep ReflectArray array concode_elem_sep Object deepClone concode_elem_sep ReflectClass forClass concode_elem_sep JdkClass createClass concode_elem_sep ReflectClass forObject concode_elem_sep void setParent"}
{"code": "boolean function ( double [ ] arg0 ) { for ( int loc0 = 0 ; loc0 < arg0 . length ; loc0 ++ ) { if ( arg0 [ loc0 ] <= 0 ) { return false ; } } return true ; }", "nl": "returns true iff all entries of the input array are > 0 . returns true if the array is non-null , but empty concode_field_sep DistributionFactory distributionFactory concode_field_sep double chiSquare concode_elem_sep double chiSquare concode_elem_sep void checkArray concode_elem_sep DistributionFactory getDistributionFactory concode_elem_sep boolean isNonNegative concode_elem_sep boolean isNonNegative concode_elem_sep boolean isRectangular concode_elem_sep double chiSquareTest concode_elem_sep boolean chiSquareTest concode_elem_sep double chiSquareTest concode_elem_sep boolean chiSquareTest"}
{"code": "SortHandlerMethodArgumentResolver function ( ) { return new SortHandlerMethodArgumentResolver ( ) ; }", "nl": "this method returns a org.springframework.web.method.support.handlermethodargumentresolver that canconstruct org.springframework.data.domain.sort objects by using the request params of theincoming request . concode_field_sep PlaceHolder placeHolder concode_field_sep MappingJackson2HttpMessageConverter jacksonDateTimeConverter concode_elem_sep LocalValidatorFactoryBean validator concode_elem_sep LocaleResolver fixedLocaleResolver concode_elem_sep ExceptionHandlerExceptionResolver restErrorHandler"}
{"code": "KeyValuePairList function ( ) { return new KeyValuePairList ( ) ; }", "nl": "create an instance of keyvaluepairlist concode_field_sep QName _HistoryHeader_QNAME concode_elem_sep QName _ISDVInfo_QNAME concode_elem_sep QName _KeyValuePairList_QNAME concode_elem_sep QName _LocalizedMessage_QNAME concode_elem_sep QName _BusinessException_QNAME concode_elem_sep QName _Message_QNAME concode_elem_sep QName _CallContext_QNAME concode_elem_sep QName _ValidationException_QNAME concode_elem_sep QName _NotFoundException_QNAME concode_elem_sep QName _ValidationContext_QNAME concode_elem_sep QName _TimePeriod_QNAME concode_elem_sep QName _OpenTimePeriod_QNAME concode_elem_sep QName _LocalizedString_QNAME concode_elem_sep QName _KeyValuePair_QNAME concode_elem_sep QName _TechnicalException_QNAME concode_field_sep ISDVInfo createISDVInfo concode_elem_sep JAXBElement<ISDVInfo> createISDVInfo concode_elem_sep ValidationException createValidationException concode_elem_sep JAXBElement<ValidationException> createValidationException concode_elem_sep CallContext createCallContext concode_elem_sep JAXBElement<CallContext> createCallContext concode_elem_sep OpenTimePeriod createOpenTimePeriod concode_elem_sep JAXBElement<OpenTimePeriod> createOpenTimePeriod concode_elem_sep LocalizedMessage createLocalizedMessage concode_elem_sep JAXBElement<LocalizedMessage> createLocalizedMessage concode_elem_sep TechnicalException createTechnicalException concode_elem_sep JAXBElement<TechnicalException> createTechnicalException concode_elem_sep TimePeriod createTimePeriod concode_elem_sep JAXBElement<TimePeriod> createTimePeriod concode_elem_sep LocalizedString createLocalizedString concode_elem_sep JAXBElement<LocalizedString> createLocalizedString concode_elem_sep HistoryHeader createHistoryHeader concode_elem_sep JAXBElement<HistoryHeader> createHistoryHeader concode_elem_sep KeyValuePair createKeyValuePair concode_elem_sep JAXBElement<KeyValuePair> createKeyValuePair concode_elem_sep BusinessException createBusinessException concode_elem_sep JAXBElement<BusinessException> createBusinessException concode_elem_sep NotFoundException createNotFoundException concode_elem_sep JAXBElement<NotFoundException> createNotFoundException concode_elem_sep ValidationContext createValidationContext concode_elem_sep JAXBElement<ValidationContext> createValidationContext concode_elem_sep Message createMessage concode_elem_sep JAXBElement<Message> createMessage"}
{"code": "Local < C > [ ] function ( Local < C > arg0 ) { throw new RuntimeException ( \"srini_string\" + this . getClass ( ) . getName ( ) ) ; }", "nl": "extended greatest common divisor . note : not implemented , throws runtimeexception . concode_field_sep Logger logger concode_elem_sep LocalRing<C> ring concode_elem_sep boolean debug concode_elem_sep GenPolynomial<C> num concode_elem_sep int isunit concode_elem_sep GenPolynomial<C> den concode_field_sep int signum concode_elem_sep boolean isONE concode_elem_sep Local<C> inverse concode_elem_sep boolean isUnit concode_elem_sep Local<C> subtract concode_elem_sep GenPolynomial<C> gcd concode_elem_sep Local<C> gcd concode_elem_sep Local<C> sum concode_elem_sep int compareTo concode_elem_sep Local<C> monic concode_elem_sep Local<C> abs concode_elem_sep int hashCode concode_elem_sep Local<C> negate concode_elem_sep GenPolynomial<C> lcm concode_elem_sep boolean equals concode_elem_sep Local<C> clone concode_elem_sep boolean isZERO concode_elem_sep String toString concode_elem_sep Local<C> divide concode_elem_sep Local<C> multiply concode_elem_sep Local<C> remainder"}
{"code": "boolean function ( String arg0 ) { return arg0 . matches ( \"srini_string\" + class_name + \"srini_string\" ) ; }", "nl": "determines if fully qualified method name is in this class example methodname : public static string dostuff int , java.lang.object concode_field_sep RootInfo traversalObject concode_elem_sep List<MethodInfo> method_infos concode_elem_sep ClassLoader loader concode_elem_sep Map<String,String> staticMap concode_elem_sep String class_name concode_elem_sep Class<?> clazz concode_elem_sep RootInfo traversalClass concode_elem_sep boolean shouldInclude concode_field_sep void set_method_infos concode_elem_sep void init_traversal concode_elem_sep void initViaReflection concode_elem_sep String toString concode_elem_sep List<MethodInfo> get_method_infos concode_elem_sep void dump"}
{"code": "void function ( ) { synchronized ( queuedEvents ) { if ( started ) { return ; } started = true ; isProcessing = true ; } processEvents ( ) ; }", "nl": "start processing events as soon as the queue is n't empty . if the queue is not empty , this method will process all events already in the queue and any event that will be added while the queue is being processed . concode_field_sep boolean started concode_elem_sep LinkedList<T> queuedEvents concode_elem_sep boolean isProcessing concode_field_sep void processEvents concode_elem_sep void sendEvent concode_elem_sep void processEvent"}
{"code": "void function ( ) { getLarnacaAirport ( ) . setName ( \"srini_string\" ) ; getLarnacaAirport ( ) . setCity ( \"srini_string\" ) ; getLarnacaAirport ( ) . setCountry ( \"srini_string\" ) ; getLarnacaAirport ( ) . setCode ( \"srini_string\" ) ; }", "nl": "larnacaairport initializer concode_field_sep int larnacaAirportNumberOfRunways concode_elem_sep Passenger[] passengersArray concode_elem_sep Airport larnacaAirport concode_elem_sep Plane[] planesArray concode_elem_sep Flight[] flightsArray concode_elem_sep int numberOfPassengers concode_elem_sep int numberOfFlightAttributes concode_elem_sep Runway[] runwaysArray concode_elem_sep int numberOfFlights concode_field_sep void setLarnacaAirport concode_elem_sep void setPassengersArray concode_elem_sep void setFlightsArray concode_elem_sep Passenger[] getPassengersArray concode_elem_sep Object[][] getArrivalsOrDeparturesList concode_elem_sep void loadFromFile concode_elem_sep void freeUpRunway concode_elem_sep void initializeRunwaysArray concode_elem_sep Plane[] getPlanesArray concode_elem_sep void setRunwaysArray concode_elem_sep Object[][] getFlightData concode_elem_sep void initializePlanesArray concode_elem_sep void setPlanesArray concode_elem_sep void saveToFile concode_elem_sep void initializeFlightsArray concode_elem_sep boolean checkForFreeRunways concode_elem_sep void initializePassengersArray concode_elem_sep Airport getLarnacaAirport concode_elem_sep Object[] getArrivalsOrDeparturesRecord concode_elem_sep String[] getListOfAllFlightCodes concode_elem_sep Runway[] getRunwaysArray concode_elem_sep Flight[] getFlightsArray concode_elem_sep Object[] getFlightsRow"}
{"code": "String function ( ) { return lang ; }", "nl": "returns language targeted by this configuration concode_field_sep List<ValidatorConfiguration> validatorConfigs concode_elem_sep SymbolTable symbolTable concode_elem_sep File home concode_elem_sep boolean built concode_elem_sep String lang concode_elem_sep List<Symbol> customSymbols concode_elem_sep Optional<String> variant concode_elem_sep String lang concode_elem_sep boolean secure concode_elem_sep RedPenTokenizer tokenizer concode_elem_sep File base concode_field_sep List<ValidatorConfiguration> getValidatorConfigs concode_elem_sep RedPenTokenizer getTokenizer concode_elem_sep ConfigurationBuilder addSymbol concode_elem_sep ConfigurationBuilder secure concode_elem_sep ConfigurationBuilder setBaseDir concode_elem_sep void checkBuilt concode_elem_sep File getHome concode_elem_sep int hashCode concode_elem_sep ConfigurationBuilder builder concode_elem_sep ConfigurationBuilder builder concode_elem_sep ConfigurationBuilder setVariant concode_elem_sep ConfigurationBuilder addAvailableValidatorConfigs concode_elem_sep String getKey concode_elem_sep List<String> getDefaultConfigKeys concode_elem_sep ConfigurationBuilder addValidatorConfig concode_elem_sep String getVariant concode_elem_sep File findFile concode_elem_sep boolean secureExists concode_elem_sep boolean isSecure concode_elem_sep SymbolTable getSymbolTable concode_elem_sep void readObject concode_elem_sep void initTokenizer concode_elem_sep Configuration build concode_elem_sep boolean equals concode_elem_sep Configuration clone concode_elem_sep File getBase concode_elem_sep String toString concode_elem_sep ConfigurationBuilder setLanguage"}
{"code": "List < Integer > function ( ) { return initialAvailableNumer ; }", "nl": "gets the initial available numer . concode_field_sep Map<Integer,String> buyedNumber concode_elem_sep Map<Integer,Integer> winnerNumer concode_elem_sep List<Integer> initialAvailableNumer concode_elem_sep List<Integer> availableNumer concode_elem_sep List<Command> commands concode_field_sep Map<Integer,Integer> getWinnerNumer concode_elem_sep Map<Integer,String> getBuyedNumber concode_elem_sep List<Integer> getAvailableNumer concode_elem_sep void executeCommand concode_elem_sep List<Command> getCommands"}
{"code": "boolean function ( String arg0 , String arg1 ) { try { DateFormat loc0 = new SimpleDateFormat ( \"srini_string\" ) ; Date loc1 = loc0 . parse ( arg0 ) ; Date loc2 = loc0 . parse ( arg1 ) ; return loc2 . before ( loc1 ) ; } catch ( Exception loc0 ) { loc0 . printStackTrace ( ) ; } return false ; }", "nl": "return is other before first concode_field_sep int[] retentionMonthly concode_elem_sep int[] browsingFreq concode_elem_sep int[] retentionDaily concode_elem_sep int[] retentionWeekly concode_field_sep int weekBetween concode_elem_sep String getMonthRetention concode_elem_sep String dayOfweek concode_elem_sep long dateTimeDuration concode_elem_sep String getIntervalSegment concode_elem_sep String format concode_elem_sep String format concode_elem_sep String getWeekRetention concode_elem_sep List<String> getLastestDays concode_elem_sep String getDayRetention concode_elem_sep int getDuration concode_elem_sep String dayOfMonth concode_elem_sep int dayBetween concode_elem_sep boolean isAfter concode_elem_sep String getBrowsingFreq"}
{"code": "Predicate function ( Collection arg0 ) { Predicate [ ] loc0 = FunctorUtils . validate ( arg0 ) ; return new OnePredicate ( loc0 ) ; }", "nl": "factory to create the predicate . concode_field_sep Predicate[] iPredicates concode_elem_sep long serialVersionUID concode_field_sep boolean evaluate concode_elem_sep Predicate[] getPredicates"}
{"code": "Collection function ( ) { return bag ; }", "nl": "returns the bag . concode_field_sep List components concode_elem_sep One one concode_elem_sep List manyToMany concode_elem_sep Foo foo concode_elem_sep int count concode_elem_sep Collection bag concode_elem_sep Simple simple concode_elem_sep Many many concode_elem_sep Set composites concode_elem_sep Collection lazyBag concode_elem_sep Collection cascades concode_elem_sep String name concode_elem_sep Set ternarySet concode_elem_sep Glarch glarch concode_elem_sep List oneToMany concode_elem_sep long id concode_elem_sep Map ternaryMap concode_field_sep void setName concode_elem_sep void setName concode_elem_sep void setCascades concode_elem_sep String getName concode_elem_sep String getName concode_elem_sep void setBag concode_elem_sep void setFoo concode_elem_sep Map getTernaryMap concode_elem_sep long getId concode_elem_sep Glarch getGlarch concode_elem_sep List getOneToMany concode_elem_sep void setComposites concode_elem_sep void setGlarch concode_elem_sep int hashCode concode_elem_sep Many getMany concode_elem_sep Foo getFoo concode_elem_sep List getComponents concode_elem_sep void setId concode_elem_sep int getCount concode_elem_sep Collection getLazyBag concode_elem_sep void setCount concode_elem_sep Set getComposites concode_elem_sep void setComponents concode_elem_sep void setOneToMany concode_elem_sep void setOne concode_elem_sep void setLazyBag concode_elem_sep Simple getSimple concode_elem_sep void setTernaryMap concode_elem_sep void setMany concode_elem_sep void setTernarySet concode_elem_sep void setSimple concode_elem_sep List getManyToMany concode_elem_sep boolean equals concode_elem_sep One getOne concode_elem_sep void setManyToMany concode_elem_sep String toString concode_elem_sep Collection getCascades concode_elem_sep Set getTernarySet"}
{"code": "int function ( ) { return _index ; }", "nl": "get this widget 's index relative to its parent widget . concode_field_sep long serialVersionUID concode_elem_sep HashMap _map concode_elem_sep int UNASSIGNED concode_elem_sep int _index concode_elem_sep WidgetLocator _parentInfo concode_elem_sep Class _cls concode_elem_sep String _nameOrLabel concode_elem_sep IWidgetMatcher _matcher concode_field_sep void setData concode_elem_sep WidgetLocator getParentInfo concode_elem_sep String getNameOrLabel concode_elem_sep IWidgetLocator[] findAll concode_elem_sep boolean matches concode_elem_sep Map getDataMap concode_elem_sep void setParentInfo concode_elem_sep Class getTargetClass concode_elem_sep void setIndex concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep String toString concode_elem_sep String getTargetClassName concode_elem_sep String getData"}
{"code": "List < ? extends NamedIdentifiable > function ( String arg0 , Integer arg1 ) { ResourceEntity loc0 = resourceRepository . loadWithResourceGroupAndRelatedResourcesForId ( arg1 ) ; return resourceGroupService . loadGroupsForTypeNameExcludeSelected ( arg0 , Collections . singletonList ( loc0 . getResourceGroup ( ) . getId ( ) ) ) ; }", "nl": "load all resourcegroups for the given type concode_field_sep EntityManager entityManager concode_elem_sep ResourceRepository resourceRepository concode_elem_sep ResourceRelationService resourceRelationService concode_elem_sep ResourceTypeDomainService resourceTypeDomainService concode_elem_sep ForeignableService foreignableService concode_elem_sep ResourceGroupPersistenceService resourceGroupService concode_field_sep Set<ResourceGroupEntity> getApplicationsFromOtherResourcesInGroup concode_elem_sep ResourceGroupEntity getResourceGroupWithAllResources concode_elem_sep void addResourceTypeRelation concode_elem_sep void removeRelation concode_elem_sep void addRelation concode_elem_sep void removeResourceTypeRelation"}
{"code": "ITrace2D function ( ) { return this . m_trace ; }", "nl": "returns the trace data is added to . concode_field_sep ITrace2D m_trace concode_field_sep void collectData"}
{"code": "Archive < ? > function ( ) { return ShrinkWrap . create ( WebArchive . class , MODULE_WEB + \"srini_string\" ) . setWebXML ( InterDeploymentDependenciesEarTestCase . class . getPackage ( ) , \"srini_string\" ) . addClass ( SleeperContextListener . class ) ; }", "nl": "creates testing web-app module for app1.ear concode_field_sep EnterpriseArchive DEPENDENT concode_elem_sep String DEP_APP1 concode_elem_sep Logger LOGGER concode_elem_sep String DEP_APP2 concode_elem_sep EnterpriseArchive DEPENDEE concode_elem_sep String MODULE_WEB concode_elem_sep ManagementClient managementClient concode_elem_sep ArchiveDeployer deployer concode_elem_sep String MODULE_EJB concode_field_sep Archive<?> getDeployment concode_elem_sep JavaArchive createLogLibrary concode_elem_sep Archive<?> createBeanJar concode_elem_sep LogAccess lookupEJB concode_elem_sep void forceDependeeUndeploy concode_elem_sep void test concode_elem_sep void cleanUp concode_elem_sep void testWithRestart concode_elem_sep void setup"}
{"code": "void function ( GridBagConstraints arg0 ) { this . constraints = arg0 ; }", "nl": "sets the constraints . concode_field_sep Component component concode_elem_sep GridBagConstraints constraints concode_field_sep GridBagConstraints getConstraints concode_elem_sep Component getComponent concode_elem_sep void setComponent"}
{"code": "Closure [ ] function ( ) { return iClosures ; }", "nl": "gets the closures , do not modify the array . concode_field_sep Closure[] iClosures concode_elem_sep Predicate[] iPredicates concode_elem_sep long serialVersionUID concode_elem_sep Closure iDefault concode_field_sep Closure getDefaultClosure concode_elem_sep Closure getInstance concode_elem_sep Closure getInstance concode_elem_sep void execute concode_elem_sep Predicate[] getPredicates"}
{"code": "void function ( String arg0 ) { outputFile = new File ( arg0 ) ; createOutputFile = true ; }", "nl": "set the output resource file . if not set , no output file will be created . concode_field_sep int bufferIndex concode_elem_sep ArrayList<Byte> bytes concode_elem_sep int delayMax concode_elem_sep File inputImage1 concode_elem_sep File inputImage2 concode_elem_sep int delayMin concode_elem_sep boolean createOutputImage concode_elem_sep File outputFile concode_elem_sep SecureRandom random concode_elem_sep boolean createOutputFile concode_elem_sep boolean overwriteOutputFile concode_elem_sep boolean deleteInputFiles concode_elem_sep boolean considerTwoLSB concode_elem_sep File outputImage concode_elem_sep byte buffer concode_elem_sep int delay concode_field_sep void deleteInputFiles concode_elem_sep void setInputImages concode_elem_sep void setOutputImage concode_elem_sep void overwriteOutputFile concode_elem_sep void addToGroup concode_elem_sep void considerTwoLSB concode_elem_sep ArrayList<Byte> generateRandom concode_elem_sep String encodeISO88591"}
{"code": "Piece function ( int arg0 ) { Piece loc0 = new SinglePiece ( Color . red ) ; try { if ( isOccupied ( arg0 ) ) { loc0 = pieces [ arg0 ] ; } } catch ( ArrayIndexOutOfBoundsException loc1 ) { } catch ( NullPointerException loc1 ) { } return loc0 ; }", "nl": "returns the piece at the certain position . concode_field_sep int MAX_BOARD_SIZE concode_elem_sep Piece pieces[] concode_elem_sep int KING_PIECE_TYPE concode_elem_sep int SINGLE_PIECE_TYPE concode_field_sep boolean isOccupied concode_elem_sep void removePiece concode_elem_sep Vector<Piece> getBluePieces concode_elem_sep int sizeOf concode_elem_sep void kingPiece concode_elem_sep int movePiece concode_elem_sep Color getPieceColorAtSpace concode_elem_sep Vector<Piece> getWhitePieces concode_elem_sep boolean boardContainsPiece"}
{"code": "void function ( PdfWriter arg0 , Document arg1 , Rectangle arg2 , String arg3 ) { PdfPageEvent loc0 ; for ( Object loc1 : events ) { loc0 = ( PdfPageEvent ) loc1 ; loc0 . onGenericTag ( arg0 , arg1 , arg2 , arg3 ) ; } }", "nl": "called when a chunk with a generic tag is written . it is useful to pinpoint the chunk location to generate bookmarks , for example . concode_field_sep ArrayList<PdfPageEvent> events concode_field_sep void addPageEvent concode_elem_sep void onSection concode_elem_sep void onParagraph concode_elem_sep void onParagraphEnd concode_elem_sep void onOpenDocument concode_elem_sep void onSectionEnd concode_elem_sep void onEndPage concode_elem_sep void onChapter concode_elem_sep void onCloseDocument concode_elem_sep void onChapterEnd concode_elem_sep void onStartPage"}
{"code": "void function ( String arg0 ) { clusterId = arg0 ; }", "nl": "sets the current cluster id . concode_field_sep ProcessListener processListener concode_elem_sep FXMLController guiController concode_elem_sep String user concode_elem_sep File fileBiBiGridJar concode_elem_sep File fileSingularityScript concode_elem_sep ProcessBuilder processBuilder concode_elem_sep File fileInput concode_elem_sep String masterIp concode_elem_sep ObservableList<String> flavorChoices concode_elem_sep PropertiesController propertiesController concode_elem_sep String clusterId concode_field_sep void exit concode_elem_sep String getClusterId concode_elem_sep File getInputFile concode_elem_sep void setMasterIp concode_elem_sep void StopCluster concode_elem_sep PropertiesController getPropertiesController concode_elem_sep String getMasterIp concode_elem_sep void StartCluster concode_elem_sep void setInputFile concode_elem_sep void UnlockSettings concode_elem_sep void UnlockStopButton concode_elem_sep ObservableList<String> getFlavorChoices"}
{"code": "void function ( IProject arg0 , String arg1 , String arg2 ) { Assert . assertNotNull ( \"srini_string\" , arg0 ) ; Assert . assertNotNull ( \"srini_string\" , arg1 ) ; Assert . assertNotNull ( \"srini_string\" , arg2 ) ; compareFileContents ( arg0 . getFile ( arg1 ) , arg2 ) ; }", "nl": "compare the contents of two files : concode_field_sep FileFilter CVSFILTER concode_field_sep void compareResourceTree concode_elem_sep void compareResourceTree concode_elem_sep void compareResourceTree concode_elem_sep void compareResourceTree concode_elem_sep boolean accept"}
{"code": "StringBuilder function ( ) { return baos ; }", "nl": "the current text buffer . concode_field_sep StringBuilder currentEntity concode_elem_sep StringBuilder comment concode_elem_sep String currentTag concode_elem_sep boolean isHtml concode_elem_sep String currentAttr concode_elem_sep char lastChar concode_elem_sep String wsTag concode_elem_sep String storedString concode_elem_sep Map<String,String> attr concode_elem_sep String currentNameSpace concode_elem_sep StringBuilder baos concode_field_sep StringBuilder currentEntity concode_elem_sep Map<String,String> getAttributes concode_elem_sep void putCurrentAttrValue concode_elem_sep void currentAttr concode_elem_sep boolean hasCurrentAttribute concode_elem_sep String getNameSpace concode_elem_sep String whitespaceTag concode_elem_sep void whitespaceTag concode_elem_sep void flushNameSpace concode_elem_sep void setStoredString concode_elem_sep String getCurrentTag concode_elem_sep void currentTag concode_elem_sep void resetBuffer concode_elem_sep void lastChar concode_elem_sep char lastChar concode_elem_sep void namespace concode_elem_sep String getStoredString concode_elem_sep StringBuilder comment"}
{"code": "int function ( ) { return num_values ; }", "nl": "a lower bound on the number of elements in the set . returns either the number of elements that have been inserted in the set , or max_size , whichever is less . concode_field_sep int num_values concode_elem_sep int[] values concode_elem_sep long serialVersionUID concode_field_sep void add concode_elem_sep boolean contains concode_elem_sep boolean repNulled concode_elem_sep void addAll concode_elem_sep LimitedSizeIntSet merge concode_elem_sep Object clone concode_elem_sep String toString concode_elem_sep int max_size"}
{"code": "Symbol function ( Schema arg0 ) { return Symbol . root ( generate ( arg0 , new HashMap < LitS , Symbol > ( ) ) ) ; }", "nl": "returns the non-terminal that is the start symbol for the grammar for the given schema sc . concode_field_sep Schema actual concode_field_sep int hashCode concode_elem_sep boolean equals"}
{"code": "String [ ] function ( String arg0 ) { if ( arg0 == null ) throw new IllegalArgumentException ( \"srini_string\" ) ; return new PathTokenizer ( arg0 ) . tokenize ( ) ; }", "nl": "take a path string elements delimited by the ' \\ ' character and break it into tokens . if an element contains the delimeter , it must be escaped . for example : `` edit/find \\ \\ / replace '' tokenizes to `` edit '' , `` find/replace '' . concode_field_sep List _items concode_elem_sep char _delimeter concode_elem_sep char _escape concode_elem_sep String _pathString concode_elem_sep StringBuffer _sb concode_field_sep String[] getItems concode_elem_sep void addItem concode_elem_sep char getChar concode_elem_sep boolean inBounds concode_elem_sep boolean isEscape concode_elem_sep void addChar concode_elem_sep boolean isEscapeCase concode_elem_sep boolean isDelimeter"}
{"code": "void function ( boolean arg0 , String arg1 ) { if ( ! arg0 ) { throw new IllegalArgumentException ( arg1 ) ; } }", "nl": "ensures that the expression given as a method parameter is true . concode_field_sep PlaceHolder placeHolder concode_field_sep void notNull concode_elem_sep void notEmpty"}
{"code": "String function ( ) { return fTextControl != null ? fTextControl . getText ( ) : null ; }", "nl": "convenience method to return the text of the filter control . if the text widget is not created , then null is returned . concode_field_sep Text fTextControl concode_elem_sep ImageDescriptor fgClearIconDescriptor concode_elem_sep Control fClearButton concode_elem_sep Composite fComposite concode_elem_sep Boolean fgUseNativeSearchField concode_elem_sep ImageDescriptor fgDisabledClearIconDescriptor concode_field_sep void createControls concode_elem_sep boolean useNativeSearchField concode_elem_sep void createTextControl concode_elem_sep void updateClearButtonVisibility concode_elem_sep Text getFilterControl concode_elem_sep void createClearButton"}
{"code": "boolean function ( List < GroupCategory > arg0 ) { for ( Iterator < GroupCategory > loc0 = arg0 . iterator ( ) ; loc0 . hasNext ( ) ; ) { GroupCategory loc1 = loc0 . next ( ) ; if ( contains ( loc1 ) ) return true ; } return false ; }", "nl": "returns whether one of the given categories is contained in this set of group categories concode_field_sep List<GroupCategory> fContent concode_elem_sep GroupCategorySet NONE concode_field_sep boolean contains concode_elem_sep boolean contains concode_elem_sep GroupCategorySet union concode_elem_sep List<GroupCategory> asList concode_elem_sep List<GroupCategory> asList"}
{"code": "boolean function ( int arg0 ) { return ( arg0 >= 1 && arg0 <= 63 && pieces [ arg0 ] == null ) ? false : true ; }", "nl": "checks if the space on the board contains a piece . if outside board array bounds , return true . concode_field_sep int MAX_BOARD_SIZE concode_elem_sep Piece pieces[] concode_elem_sep int KING_PIECE_TYPE concode_elem_sep int SINGLE_PIECE_TYPE concode_field_sep void removePiece concode_elem_sep Vector<Piece> getBluePieces concode_elem_sep int sizeOf concode_elem_sep void kingPiece concode_elem_sep int movePiece concode_elem_sep Piece getPieceAt concode_elem_sep Color getPieceColorAtSpace concode_elem_sep Vector<Piece> getWhitePieces concode_elem_sep boolean boardContainsPiece"}
{"code": "void function ( byte [ ] arg0 , int arg1 , int arg2 ) { ensureCapacity ( length + arg2 ) ; System . arraycopy ( arg0 , arg1 , buffer , length , arg2 ) ; length += arg2 ; }", "nl": "appends a byte array or part of to the buffer . concode_field_sep String encoding concode_elem_sep int length concode_elem_sep byte[] buffer concode_field_sep InputStream getByteStream concode_elem_sep String getEncoding concode_elem_sep byte byteAt concode_elem_sep int length concode_elem_sep void ensureCapacity concode_elem_sep int charAt"}
{"code": "int function ( ) { return size ; }", "nl": "return the number of words in the dictionary . this is not necessarily the same as the number of trienodes in the trie . concode_field_sep int size concode_elem_sep TrieNode root concode_field_sep boolean addWord concode_elem_sep List<String> predictCompletions concode_elem_sep boolean isWord concode_elem_sep void printNode concode_elem_sep void printTree"}
{"code": "boolean function ( CtClass arg0 ) { return arg0 . hasAnnotation ( Entity . class ) ; }", "nl": "look for @entity annotation concode_field_sep PlaceHolder placeHolder concode_field_sep boolean isPersistentField concode_elem_sep boolean doDirtyCheckingInline concode_elem_sep boolean hasLazyLoadableAttributes concode_elem_sep boolean isCompositeClass concode_elem_sep boolean isLazyLoadable concode_elem_sep boolean isMappedCollection concode_elem_sep ClassLoader getLoadingClassLoader concode_elem_sep CtField[] order"}
{"code": "String function ( ) { return \"srini_string\" + ( getSupportedType ( ) == null ? \"srini_string\" : getSupportedType ( ) . getName ( ) ) + \"srini_string\" ; }", "nl": "gets a debugging string version of this converter . concode_field_sep PlaceHolder placeHolder concode_field_sep long getInstantMillis concode_elem_sep boolean isReadableInterval concode_elem_sep PeriodType getPeriodType concode_elem_sep Chronology getChronology concode_elem_sep Chronology getChronology concode_elem_sep int[] getPartialValues concode_elem_sep int[] getPartialValues"}
{"code": "TemplateContextType function ( ) { return fContextType ; }", "nl": "gets the context type . concode_field_sep TemplateContextType fContextType concode_elem_sep Comparator<TemplateVariableProposal> fgTemplateVariableProposalComparator concode_field_sep char[] getCompletionProposalAutoActivationCharacters concode_elem_sep int compare concode_elem_sep int getStart concode_elem_sep IContextInformationValidator getContextInformationValidator concode_elem_sep char[] getContextInformationAutoActivationCharacters concode_elem_sep void setContextType concode_elem_sep ICompletionProposal[] computeCompletionProposals concode_elem_sep IContextInformation[] computeContextInformation concode_elem_sep String getErrorMessage"}
{"code": "void function ( String [ ] arg0 ) { String loc0 ; TextIO . putln ( \"srini_string\" ) ; loc0 = TextIO . getln ( ) ; TextIO . putln ( ) ; TextIO . putln ( \"srini_string\" ) ; printCapitalized ( loc0 ) ; }", "nl": "sole entry point to application , as always . concode_field_sep PlaceHolder placeHolder concode_field_sep void printCapitalized"}
{"code": "boolean function ( Class < ? > arg0 ) { if ( arg0 == null ) throw new IllegalArgumentException ( \"srini_string\" ) ; Boolean loc0 = isPrimitiveCached . get ( arg0 ) ; if ( loc0 == null ) { loc0 = arg0 . isPrimitive ( ) ; isPrimitiveCached . put ( arg0 , loc0 ) ; } return loc0 ; }", "nl": "same as c.isprimitive but faster if this test is done very frequently as it is in randoop . concode_field_sep Map<String,Boolean> stringLengthOKCached concode_elem_sep Map<Class<?>,Class<?>> boxedToPrimitiveAndString concode_elem_sep Map<String,Class<?>> typeNameToPrimitiveOrString concode_elem_sep Map<Class<?>,Boolean> isPrimitiveCached concode_elem_sep String OBJECT_REF_PATTERN concode_elem_sep Map<String,Class<?>> typeNameToBoxed concode_elem_sep Map<Class<?>,Class<?>> primitiveAndStringToBoxed concode_field_sep boolean isBoxedPrimitiveTypeOrString concode_elem_sep boolean isPrimitiveOrStringTypeName concode_elem_sep Class<?> getPrimitiveTypeOrString concode_elem_sep Class<?> boxedType concode_elem_sep Set<Class<?>> getPrimitiveTypesAndString concode_elem_sep String toCodeString concode_elem_sep Class<?> getUnboxType concode_elem_sep boolean stringLengthOK concode_elem_sep boolean isBoxedOrPrimitiveOrStringType concode_elem_sep boolean isPrimitiveOrStringType concode_elem_sep Class<?> primitiveType concode_elem_sep Class<?> getBoxedType concode_elem_sep Set<Class<?>> getBoxedTypesAndString concode_elem_sep boolean looksLikeObjectToString"}
{"code": "void function ( ActionEvent arg0 ) { if ( gui . isPlaying ( ) ) { this . gui . getPuzzle ( ) . removeIncorrect ( ) ; this . gui . getMainPanel ( ) . getGamePanel ( ) . paintGamePanel ( gui . getPuzzle ( ) ) ; this . gui . initiateCommandHistory ( ) ; } }", "nl": "remove incorrect values and repaint the panel concode_field_sep KenKenGUI gui concode_field_sep placeholderType placeHolder"}
{"code": "boolean function ( ) { for ( ColoredSystem < C > loc0 : list ) { if ( ! loc0 . checkInvariant ( ) ) { return false ; } } return true ; }", "nl": "check invariants . check if all colored systems are determined and all invariants are met . concode_field_sep Logger logger concode_elem_sep boolean debug concode_elem_sep List<Condition<C>> conds concode_elem_sep List<ColoredSystem<C>> list concode_elem_sep PolynomialList<GenPolynomial<C>> cgb concode_field_sep List<GenPolynomial<GenPolynomial<C>>> getCGB concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep boolean isDetermined concode_elem_sep String toString concode_elem_sep List<Condition<C>> getConditions"}
{"code": "String function ( ) { return technicalKey ; }", "nl": "gets the value of the technicalkey property . concode_field_sep String validationPattern concode_elem_sep boolean isValueOptional concode_elem_sep boolean encrypted concode_elem_sep String machineInterpretationKey concode_elem_sep String displayName concode_elem_sep String defaultValue concode_elem_sep String technicalKey concode_elem_sep boolean isKeyOptional concode_elem_sep List<String> tags concode_elem_sep String exampleValue concode_field_sep void setDefaultValue concode_elem_sep String getExampleValue concode_elem_sep List<String> getTags concode_elem_sep String getValidationPattern concode_elem_sep boolean isIsKeyOptional concode_elem_sep void setIsKeyOptional concode_elem_sep void setDisplayName concode_elem_sep void setMachineInterpretationKey concode_elem_sep void setExampleValue concode_elem_sep String getDefaultValue concode_elem_sep void setEncrypted concode_elem_sep void setTechnicalKey concode_elem_sep String getDisplayName concode_elem_sep boolean isEncrypted concode_elem_sep String getMachineInterpretationKey concode_elem_sep void setValidationPattern concode_elem_sep boolean isIsValueOptional concode_elem_sep void setIsValueOptional"}
{"code": "int function ( ) { return ( e1 . hashCode ( ) << 16 ) + e2 . hashCode ( ) ; }", "nl": "hash code . concode_field_sep ExpVector e1 concode_elem_sep ExpVector e2 concode_field_sep ExpVector getFirst concode_elem_sep boolean equals concode_elem_sep boolean equals concode_elem_sep ExpVector getSecond concode_elem_sep String toString concode_elem_sep boolean isMultiple"}
{"code": "boolean function ( ForeignableOwner arg0 , ForeignableOwner arg1 ) { return isChuckNorris ( ) || arg1 . isSameOwner ( arg0 ) ; }", "nl": "verifies if a given editing owner is equals the foreignable owner or if the the user has super user chuck norris role which can overrule foreignable rules concode_field_sep PermissionService permissionService concode_field_sep boolean isNewObject concode_elem_sep boolean isChuckNorris concode_elem_sep void verifyEditableByOwner concode_elem_sep void verifyDeletableByOwner concode_elem_sep boolean hasOnlyDecorationsChanged"}
{"code": "void function ( File arg0 ) { try { SAXReader loc0 = new SAXReader ( false ) ; Document loc1 = loc0 . read ( arg0 ) ; Element loc2 = loc1 . getRootElement ( ) ; importFromXML ( loc2 ) ; } catch ( DocumentException loc0 ) { loc0 . printStackTrace ( ) ; } }", "nl": "import lockup data from an xml-file . concode_field_sep HashMap<String,String[]> countryLookup concode_elem_sep ArrayList<String> pingErCountry concode_elem_sep ArrayList<String> pingErRegion concode_elem_sep long serialVersionUID concode_elem_sep Logger log concode_elem_sep HashMap<String,String> pingErCountryRegions concode_elem_sep String pingErCountryRegionFilename concode_field_sep void importPingErCountryRegionFile concode_elem_sep String getGeoIpCountryName concode_elem_sep String getPingErCountryName concode_elem_sep boolean containsPingErCountryOrRegion concode_elem_sep ArrayList<String> getPingErRegions concode_elem_sep void keepCountries concode_elem_sep void addCountryFromGeoIP concode_elem_sep String getPingErCountryRegionFilename concode_elem_sep Element exportToXML concode_elem_sep void assignCountryCodeToPingErData concode_elem_sep Set<String> getCountryCodes concode_elem_sep String getPingErRegionName concode_elem_sep ArrayList<String> getPingErCountrys"}
{"code": "RefactoringDescriptorProxy function ( ) { return fProxy ; }", "nl": "returns the refactoring descriptor proxy . depending on the event , this proxy may refer to an inexisting refactoring and can not be resolved to a refactoring descriptor . clients should also be prepared to receive notifications for unknown refactorings , which are discriminated by their special id refactoringdescriptor #id_unknown ; concode_field_sep int UNDONE concode_elem_sep RefactoringDescriptorProxy fProxy concode_elem_sep int fType concode_elem_sep int ABOUT_TO_PERFORM concode_elem_sep IRefactoringHistoryService fService concode_elem_sep int ABOUT_TO_REDO concode_elem_sep int ABOUT_TO_UNDO concode_elem_sep int PERFORMED concode_elem_sep int REDONE concode_field_sep int getEventType concode_elem_sep IRefactoringHistoryService getHistoryService"}
{"code": "void function ( Color arg0 ) { color = arg0 ; Canvas . getInstance ( ) . repaint ( ) ; }", "nl": "sets the color of this rectangle . concode_field_sep boolean filled concode_elem_sep double x concode_elem_sep double width concode_elem_sep double y concode_elem_sep Color color concode_elem_sep double height concode_field_sep int getX concode_elem_sep int getHeight concode_elem_sep int getY concode_elem_sep void grow concode_elem_sep String toString concode_elem_sep int getWidth concode_elem_sep void draw concode_elem_sep void fill concode_elem_sep void translate concode_elem_sep void paintShape"}
{"code": "void function ( final Context arg0 , final String arg1 , final Object arg2 ) { final Name loc0 = arg0 . getNameParser ( \"srini_string\" ) . parse ( arg1 ) ; rebind ( arg0 , loc0 , arg2 ) ; }", "nl": "rebind val to name in ctx , and make sure that all intermediate contexts exist concode_field_sep PlaceHolder placeHolder concode_field_sep Context createSubcontext concode_elem_sep void unbind concode_elem_sep void unbind concode_elem_sep boolean isEmpty concode_elem_sep NameNotFoundException nameNotFoundException concode_elem_sep String getLastComponent concode_elem_sep NameAlreadyBoundException nameAlreadyBoundException concode_elem_sep NotContextException notAContextException concode_elem_sep boolean isLastComponentEmpty concode_elem_sep NamingException namingException concode_elem_sep NamingException namingException concode_elem_sep CannotProceedException cannotProceedException concode_elem_sep InvalidNameException emptyNameException concode_elem_sep NamingEnumeration<T> namingEnumeration"}
{"code": "int function ( ) { return 999 ; }", "nl": "an arbitrary number which does not correspond to an active customer id . concode_field_sep InMemoryCustomerDao dao concode_elem_sep Customer CUSTOMER concode_field_sep void addingShouldResultInSuccess concode_elem_sep void deletionShouldBeFailureAndNotAffectExistingCustomers concode_elem_sep void deletionShouldBeSuccessAndCustomerShouldBeNonAccessible concode_elem_sep void addingShouldResultInFailureAndNotAffectExistingCustomers concode_elem_sep void retriveShouldReturnTheCustomer concode_elem_sep void assertCustomerCountIs concode_elem_sep void retrieveShouldReturnNoCustomer concode_elem_sep void setUp concode_elem_sep void updationShouldBeFailureAndNotAffectExistingCustomers concode_elem_sep void updationShouldBeSuccessAndAccessingTheSameCustomerShouldReturnUpdatedInformation"}
{"code": "AgencyTx function ( String arg0 ) { return new AgencyTx ( getRawAgencyTx ( arg0 ) ) ; }", "nl": "start a transaction in an agency database . no checking is done to ensure the agency exists ; if it does not you will get a hopefully empty db , unless you 've done the same thing previously . concode_field_sep DB tx concode_elem_sep TxMaker globalTxMaker concode_elem_sep Map<String,TxMaker> agencyTxMakers concode_elem_sep File dataDirectory concode_elem_sep boolean closed concode_field_sep void rollback concode_elem_sep List<Stop> restore concode_elem_sep NavigableSet<T> getSet concode_elem_sep DB getSnapshotDb concode_elem_sep Snapshot takeSnapshot concode_elem_sep boolean agencyExists concode_elem_sep void commit concode_elem_sep GlobalTx getGlobalTx concode_elem_sep DB getRawAgencyTx concode_elem_sep BTreeMap<T1,T2> getMap concode_elem_sep File getSnapshotDir concode_elem_sep void finalize concode_elem_sep void rollbackIfOpen"}
{"code": "Quotient < C > function ( ) { return new Quotient < C > ( ring , num . abs ( ) , den , true ) ; }", "nl": "quotient absolute value . concode_field_sep Logger logger concode_elem_sep QuotientRing<C> ring concode_elem_sep boolean debug concode_elem_sep GenPolynomial<C> num concode_elem_sep GenPolynomial<C> den concode_field_sep int signum concode_elem_sep boolean isONE concode_elem_sep Quotient<C> inverse concode_elem_sep boolean isUnit concode_elem_sep Quotient<C> subtract concode_elem_sep Quotient<C> gcd concode_elem_sep Quotient<C> sum concode_elem_sep int compareTo concode_elem_sep Quotient<C>[] egcd concode_elem_sep Quotient<C> monic concode_elem_sep int hashCode concode_elem_sep Quotient<C> negate concode_elem_sep boolean equals concode_elem_sep Quotient<C> clone concode_elem_sep boolean isZERO concode_elem_sep String toString concode_elem_sep Quotient<C> divide concode_elem_sep Quotient<C> multiply concode_elem_sep Quotient<C> multiply concode_elem_sep Quotient<C> remainder"}
{"code": "String function ( ) { return \"srini_string\" + getName ( ) + \"srini_string\" ; }", "nl": "output a debugging string . concode_field_sep PlaceHolder placeHolder concode_field_sep int getMaximumValueOverall concode_elem_sep String getName concode_elem_sep int getMinimumValueOverall concode_elem_sep int getMaximumShortTextLength concode_elem_sep DateTimeField getField concode_elem_sep DateTimeFieldType getFieldType concode_elem_sep ReadablePartial getReadablePartial concode_elem_sep String getAsString concode_elem_sep int compareTo concode_elem_sep int compareTo concode_elem_sep String getAsText concode_elem_sep String getAsText concode_elem_sep DurationField getDurationField concode_elem_sep String getAsShortText concode_elem_sep String getAsShortText concode_elem_sep int hashCode concode_elem_sep int get concode_elem_sep boolean equals concode_elem_sep int getMaximumValue concode_elem_sep int getMaximumTextLength concode_elem_sep DurationField getRangeDurationField concode_elem_sep int getMinimumValue"}
{"code": "boolean function ( Collection < V > arg0 ) { return ( arg0 == null || arg0 . size ( ) == 0 ) ; }", "nl": "is null or its size is 0 isempty null = true ; isempty = true ; isempty 1 = false ; concode_field_sep CharSequence DEFAULT_JOIN_SEPARATOR concode_field_sep String join"}
{"code": "String function ( ) { return ( this . catalogKey ) ; }", "nl": "return the context key under which our catalog has beenstored . concode_field_sep String catalogKey concode_field_sep boolean execute concode_elem_sep void setCatalogKey"}
{"code": "Person function ( ) { return built ; }", "nl": "builds the new person object . concode_field_sep String firstName concode_elem_sep String lastName concode_elem_sep Date creationTime concode_elem_sep Person built concode_elem_sep Date modificationTime concode_elem_sep long version concode_elem_sep Long id concode_field_sep long getVersion concode_elem_sep String getName concode_elem_sep Date getModificationTime concode_elem_sep void prePersist concode_elem_sep void update concode_elem_sep Long getId concode_elem_sep String getLastName concode_elem_sep Builder getBuilder concode_elem_sep Date getCreationTime concode_elem_sep void setId concode_elem_sep String toString concode_elem_sep String getFirstName concode_elem_sep void preUpdate"}
{"code": "MessageSource function ( ) { return messageSourceMock ; }", "nl": "returns the message source mock . concode_field_sep String ERROR_MESSAGE concode_elem_sep String FEEDBACK_MESSAGE concode_elem_sep String FLASH_ERROR_MESSAGE concode_elem_sep String VIEW_REDIRECT_PREFIX concode_elem_sep MessageSource messageSourceMock concode_elem_sep String FLASH_FEEDBACK_MESSAGE concode_elem_sep Validator validator concode_field_sep void assertFeedbackMessage concode_elem_sep void assertFieldErrors concode_elem_sep BindingResult bindAndValidate concode_elem_sep void assertErrorMessage concode_elem_sep void initMessageSourceForErrorMessage concode_elem_sep void setUp concode_elem_sep void assertFlashMessages concode_elem_sep String createExpectedRedirectViewPath concode_elem_sep void setUpTest concode_elem_sep void initMessageSourceForFeedbackMessage"}
{"code": "HttpClient function ( ) { return this . backend ; }", "nl": "gets the httpclient to issue request . concode_field_sep HttpResponseInterceptor contentEncodingInterceptor concode_elem_sep HttpClient backend concode_elem_sep HttpRequestInterceptor acceptEncodingInterceptor concode_field_sep HttpHost getHttpHost concode_elem_sep ClientConnectionManager getConnectionManager concode_elem_sep HttpResponse execute concode_elem_sep HttpResponse execute concode_elem_sep HttpResponse execute concode_elem_sep HttpResponse execute concode_elem_sep T execute concode_elem_sep T execute concode_elem_sep T execute concode_elem_sep T execute concode_elem_sep HttpParams getParams"}
{"code": "void function ( Point3D arg0 , double arg1 , double arg2 ) { float loc0 = arg0 . loc0 ; float loc1 = arg0 . loc1 ; arg0 . loc0 = ( float ) ( arg2 * loc0 - arg1 * loc1 ) ; arg0 . loc1 = ( float ) ( arg1 * loc0 + arg2 * loc1 ) ; }", "nl": "rotates a vector on the y axis concode_field_sep float x concode_elem_sep float z concode_elem_sep float y concode_field_sep void setLength concode_elem_sep void logVector concode_elem_sep void normalize concode_elem_sep double dot concode_elem_sep void cross concode_elem_sep void cross concode_elem_sep float length concode_elem_sep void copy concode_elem_sep void copy concode_elem_sep void reverse concode_elem_sep double rotToRad concode_elem_sep void rotateX concode_elem_sep void rotateZ"}
{"code": "MockWebServer function ( MockDispatcher arg0 , int arg1 , int arg2 ) { return new MockPreloadedPullTarget ( arg0 , arg1 , arg2 ) . getMockWebServer ( ) ; }", "nl": "get a `` preloaded '' mock couchdb suitable to be used as a pull replication target . it 's preloaded in the sense that it is ready serve up mock documents . this ca n't be used to simulate a sync gateway , because it does not support _ bulk_get concode_field_sep String PATH_REGEX_ALL_DOCS concode_elem_sep String PATH_REGEX_SESSION_COUCHDB concode_elem_sep String PATH_REGEX_FACEBOOK_AUTH concode_elem_sep String PATH_REGEX_BULK_DOCS concode_elem_sep String PATH_REGEX_CHECKPOINT concode_elem_sep String PATH_REGEX_SESSION concode_elem_sep String PATH_REGEX_CHANGES_NORMAL concode_elem_sep String PATH_REGEX_CHANGES_LONGPOLL concode_elem_sep String PATH_REGEX_BULK_GET concode_elem_sep String PATH_REGEX_CHANGES concode_elem_sep String PATH_REGEX_REVS_DIFF concode_elem_sep String PATH_REGEX_DB concode_elem_sep int batchSize concode_elem_sep BlockingQueue<T> items concode_field_sep byte[] getUncompressedBody concode_elem_sep MockWebServer getMockWebServer concode_elem_sep boolean isGzip concode_elem_sep boolean hasMoreBatches concode_elem_sep void set404NotFoundJson concode_elem_sep List<T> nextBatch concode_elem_sep void addFake404CheckpointResponse concode_elem_sep String getUtf8Body concode_elem_sep void set200OKJson concode_elem_sep Map<String,Object> getJsonMapFromRequest concode_elem_sep List<MockDocumentGet.MockDocument> getMockDocuments concode_elem_sep void set201OKJson concode_elem_sep Map<String,Object> generateRandomJsonMap concode_elem_sep SmartMockResponse wrap concode_elem_sep boolean shutdown concode_elem_sep boolean shutdown concode_elem_sep boolean shutdown"}
{"code": "void function ( int arg0 , int [ ] arg1 ) { int loc0 = ( arg0 & 0xff0000 ) >>> 16 ; int loc1 = ( arg0 & 0xff00 ) >>> 8 ; int loc2 = arg0 & 0xff ; int loc3 = 77 * loc0 + 153 * loc1 + 26 * loc2 ; int loc4 = loc0 * 256 - loc3 ; int loc5 = loc2 * 256 - loc3 ; int loc6 = ( loc5 / 2 ) + 128 * 256 ; int loc7 = ( loc4 * 5 / 8 ) + 128 * 256 ; arg1 [ 0 ] = loc3 ; arg1 [ 1 ] = loc6 ; arg1 [ 2 ] = loc7 ; }", "nl": "rgb 8-bit per channel to ycc 16-bit per channel . concode_field_sep int bits concode_elem_sep String name concode_elem_sep int mask concode_field_sep int getBits concode_elem_sep void RGBtoYUV concode_elem_sep void RGBtoYIQ concode_elem_sep void YUVtoRGB concode_elem_sep String toString concode_elem_sep String toString concode_elem_sep int compareTo concode_elem_sep void YCCtoRGB concode_elem_sep void YCCtoRGB concode_elem_sep int YCCtoRGB concode_elem_sep void YIQtoRGB"}
{"code": "String function ( ) { return name ; }", "nl": "getowner returns the name of this account 's owner . concode_field_sep int number concode_elem_sep int balance concode_elem_sep String name concode_field_sep int getNumber concode_elem_sep int getKey concode_elem_sep int getBalance concode_elem_sep boolean lessThan concode_elem_sep void deposit concode_elem_sep String toString concode_elem_sep void withdraw"}
{"code": "boolean function ( ) { return globalMutex . isEmpty ( ) ; }", "nl": "nobody get the lock when globalmutex contains nothing concode_field_sep int currentReaderCount concode_elem_sep ReadLock readerLock concode_elem_sep Object readerMutex concode_elem_sep WriteLock writerLock concode_elem_sep Set<Object> globalMutex concode_field_sep Lock writeLock concode_elem_sep void unlock concode_elem_sep void unlock concode_elem_sep void lockInterruptibly concode_elem_sep void lockInterruptibly concode_elem_sep boolean doesWriterOwnThisLock concode_elem_sep void waitUninterruptibly concode_elem_sep Condition newCondition concode_elem_sep Condition newCondition concode_elem_sep Lock readLock concode_elem_sep boolean doesReaderOwnThisLock concode_elem_sep void lock concode_elem_sep void lock concode_elem_sep boolean tryLock concode_elem_sep boolean tryLock concode_elem_sep boolean tryLock concode_elem_sep boolean tryLock"}
{"code": "void function ( String arg0 , Object [ ] arg1 , Collection arg2 ) { fail ( arg0 , arg1 , arg2 , new Comparator < Object > ( ) { public int compare ( Object arg3 , Object arg4 ) { return arg3 == arg4 ? 0 : - 1 ; } } ) ; }", "nl": "fail with the specified message and the content of the specified collections concode_field_sep PlaceHolder placeHolder concode_field_sep int testContains concode_elem_sep int testContains concode_elem_sep boolean testContains concode_elem_sep void assertContainsOnly concode_elem_sep void assertContainsOnly concode_elem_sep void assertContainsOnly concode_elem_sep void assertContainsOnly concode_elem_sep void assertContainsOnly concode_elem_sep void assertContains concode_elem_sep boolean testContainsOnly concode_elem_sep boolean testContainsOnly"}
{"code": "String function ( int arg0 ) { String loc0 = keyCodeDescMap . get ( arg0 ) ; if ( loc0 == null ) { return Character . toString ( ( char ) arg0 ) ; } return loc0 ; }", "nl": "looks up a key code and returns a human readable string . sometimes this is just the key , other times it is the function of the key written out in english . concode_field_sep JsIntegerMap<String> keyCodeDescMap concode_elem_sep Handler handler concode_elem_sep int keyCode concode_elem_sep int handlerCount concode_elem_sep JsIntegerMap<Data> handlers concode_elem_sep String description concode_elem_sep int LEFT_ARROW concode_elem_sep int RIGHT_ARROW concode_elem_sep EventListenerRemover remover concode_field_sep void onKeyDown concode_elem_sep void onKeyUp concode_elem_sep JSOArray<Data> getHotKeyData concode_elem_sep void unregister concode_elem_sep void unregisterAll concode_elem_sep Handler getHandler concode_elem_sep int getKeyCode concode_elem_sep String getDescription concode_elem_sep void register concode_elem_sep EventListenerRemover addEventListeners"}
{"code": "Object function ( final int arg0 ) { final Iterator loc0 = IndStore . values ( ) . iterator ( ) ; while ( loc0 . hasNext ( ) ) { final Swizzler loc1 = ( Swizzler ) loc0 . next ( ) ; if ( ( loc1 . target ( ) . valueNumber ( ) == arg0 ) || ( loc1 . ind_var ( ) . valueNumber ( ) == arg0 ) ) { return loc1 ; } } return null ; }", "nl": "searches the list of induction variables for an induction variable with a given value number . concode_field_sep Expr ind_term concode_elem_sep boolean changed concode_elem_sep FlowGraph CFG concode_elem_sep Expr ind_var concode_elem_sep Expr ind_init concode_elem_sep Expr tgt concode_elem_sep boolean DEBUG concode_elem_sep Expr ind_inc concode_elem_sep SSAGraph ssaGraph concode_elem_sep HashMap LocalStore concode_elem_sep HashMap IndStore concode_field_sep void transform concode_elem_sep Block isMu concode_elem_sep MemExpr get_local concode_elem_sep void Display_store concode_elem_sep void insert_aswrange concode_elem_sep void displaySwizzler"}
{"code": "void function ( String [ ] arg0 ) { String loc0 ; TextIO . putln ( \"srini_string\" ) ; loc0 = TextIO . getln ( ) ; TextIO . putln ( ) ; TextIO . putln ( \"srini_string\" ) ; printCapitalized ( loc0 ) ; }", "nl": "sole entry point to application , as always . concode_field_sep PlaceHolder placeHolder concode_field_sep void printCapitalized"}
{"code": "long function ( ) { return - 1 ; }", "nl": "return the events of interest to this recorder . concode_field_sep Resolver resolver concode_elem_sep ActionListener al concode_elem_sep long lastEventTime concode_field_sep long getLastEventTime concode_elem_sep void recordEvent concode_elem_sep void insertStep concode_elem_sep Step createStep concode_elem_sep void addActionListener concode_elem_sep Step getStep concode_elem_sep void record concode_elem_sep void start concode_elem_sep void terminate concode_elem_sep ActionListener getListener concode_elem_sep Resolver getResolver concode_elem_sep void setStatus"}
{"code": "void function ( MetricsAggregate arg0 ) { this . conditionVarition = arg0 ; }", "nl": "this method sets a new aggregate of the complexity of the solved queries at a certain level . the complexity is attained by varying the conditions of a query . concode_field_sep MetricsAggregate peerVariation concode_elem_sep int counter concode_elem_sep MetricsAggregate conditionVarition concode_field_sep int getCounter concode_elem_sep void setPeerVariation concode_elem_sep MetricsAggregate getConditionVarition concode_elem_sep MetricsAggregate getPeerVariation concode_elem_sep void setCounter"}
{"code": "Widget function ( int arg0 , Widget arg1 , Point arg2 , int arg3 ) { return _selector . click ( arg1 , arg2 . x , arg2 . y , arg3 , arg0 ) ; }", "nl": "perform the click . this is intended to be overridden in subclasses concode_field_sep BasicWidgetSelector _selector concode_field_sep boolean unspecifiedXY concode_elem_sep Point getXYOffset concode_elem_sep IWidgetLocator click concode_elem_sep IWidgetLocator contextClick"}
{"code": "void function ( Object arg0 , Object arg1 , Object arg2 ) { if ( isMap ( arg0 ) ) ( ( Map ) arg0 ) . put ( arg1 . toString ( ) , arg2 ) ; else { throw new JsonPathException ( \"srini_string\" + arg0 != null ? arg0 . getClass ( ) . getName ( ) : \"srini_string\" ) ; } }", "nl": "sets a value in an object concode_field_sep PlaceHolder placeHolder concode_field_sep Object getMapValue concode_elem_sep Iterable<? extends Object> toIterable concode_elem_sep Collection<String> getPropertyKeys concode_elem_sep int length concode_elem_sep boolean isArray concode_elem_sep Object getArrayIndex concode_elem_sep Object getArrayIndex concode_elem_sep void setArrayIndex concode_elem_sep void removeProperty concode_elem_sep boolean isMap concode_elem_sep Object unwrap"}
{"code": "Optional < String > function ( final String arg0 ) { String loc0 = null ; for ( String loc1 : activeStorms ( ) ) { String loc2 = stormBase ( loc1 , null ) . get_name ( ) ; if ( arg0 . equals ( loc2 ) ) { loc0 = loc1 ; break ; } } return Optional . ofNullable ( loc0 ) ; }", "nl": "get a topology id from the name of a topology concode_field_sep PlaceHolder placeHolder concode_field_sep void disconnect concode_elem_sep void workerHeartbeat concode_elem_sep List<String> assignments concode_elem_sep ErrorInfo lastError concode_elem_sep void addNimbusHost concode_elem_sep List<String> blobstoreInfo concode_elem_sep void updateStorm concode_elem_sep List<String> backpressureTopologies concode_elem_sep void removeStorm concode_elem_sep void setupBackpressure concode_elem_sep void workerBackpressure concode_elem_sep VersionedData<Assignment> assignmentInfoWithVersion concode_elem_sep ClusterWorkerHeartbeat getWorkerHeartbeat concode_elem_sep List<NimbusSummary> nimbuses concode_elem_sep void removeWorkerBackpressure concode_elem_sep List<ProfileRequest> getWorkerProfileRequests concode_elem_sep StormBase stormBase concode_elem_sep void removeKeyVersion concode_elem_sep List<String> activeStorms concode_elem_sep void removeStormBase concode_elem_sep Map<String,StormBase> topologyBases concode_elem_sep void supervisorHeartbeat concode_elem_sep void removeBlobstoreKey concode_elem_sep List<String> blobstore concode_elem_sep void removeWorkerHeartbeat concode_elem_sep List<String> errorTopologies concode_elem_sep Map<String,SupervisorInfo> allSupervisorInfo concode_elem_sep Map<String,SupervisorInfo> allSupervisorInfo concode_elem_sep Integer assignmentVersion concode_elem_sep List<ErrorInfo> errors concode_elem_sep void setupHeatbeats concode_elem_sep Credentials credentials concode_elem_sep List<String> heartbeatStorms concode_elem_sep Map<String,Assignment> topologyAssignments concode_elem_sep List<String> activeKeys concode_elem_sep void setCredentials concode_elem_sep boolean topologyBackpressure concode_elem_sep void setupBlobstore concode_elem_sep LogConfig topologyLogConfig concode_elem_sep void setTopologyLogConfig concode_elem_sep void removeBackpressure concode_elem_sep void setWorkerProfileRequest concode_elem_sep void activateStorm concode_elem_sep void setAssignment concode_elem_sep SupervisorInfo supervisorInfo concode_elem_sep void reportError concode_elem_sep List<ProfileRequest> getTopologyProfileRequests concode_elem_sep void deleteTopologyProfileRequests concode_elem_sep void teardownHeartbeats concode_elem_sep Assignment assignmentInfo concode_elem_sep Map<ExecutorInfo,ExecutorBeat> executorBeats concode_elem_sep List<String> supervisors concode_elem_sep void teardownTopologyErrors"}
{"code": "void function ( String arg0 ) { discardString += \"srini_string\" + arg0 ; }", "nl": "adds the specified string as an additional reason concode_field_sep Invariant inv concode_elem_sep String discardFormat concode_elem_sep String discardString concode_elem_sep DiscardCode discardCode concode_elem_sep String className concode_field_sep String discardFormat concode_elem_sep void add_implied_vis concode_elem_sep String discardString concode_elem_sep DiscardCode discardCode concode_elem_sep String format concode_elem_sep String className"}
{"code": "byte [ ] function ( ) { if ( ! isByteArrayComputed ) computeByteArray ( ) ; return byteArray ; }", "nl": "return the osc byte stream for this packet . concode_field_sep byte[] byteArray concode_elem_sep boolean isByteArrayComputed concode_field_sep void init concode_elem_sep void computeByteArray concode_elem_sep void computeByteArray"}
{"code": "Collection function ( ) { return tracker . getRootWindows ( ) ; }", "nl": "return all root components in the current awt hierarchy . concode_field_sep Collection EMPTY concode_elem_sep WindowTracker tracker concode_elem_sep Hierarchy defaultHierarchy concode_field_sep boolean contains concode_elem_sep Container getParent concode_elem_sep Collection getComponents concode_elem_sep Collection findInternalFramesFromIcons concode_elem_sep Hierarchy getDefault concode_elem_sep void dispose concode_elem_sep void setDefault"}
{"code": "String function ( ) { return KRB5_CONF_FILE . getAbsolutePath ( ) ; }", "nl": "returns an absolute path to krb5.conf file . concode_field_sep File keyTabFileName concode_elem_sep Logger LOGGER concode_elem_sep String password concode_elem_sep String origKrbDebug concode_elem_sep String origKrb5Conf concode_elem_sep String KRB5_CONF concode_elem_sep File KRB5_CONF_FILE concode_elem_sep String origIbmKrbDebug concode_elem_sep File HTTP_KEYTAB_FILE concode_elem_sep String origIbmJGSSDebug concode_elem_sep String user concode_elem_sep File WORK_DIR concode_field_sep void createKeytab concode_elem_sep String getPassword concode_elem_sep String getKeyTabFullPath concode_elem_sep List<UserForKeyTab> kerberosUsers concode_elem_sep void createServerKeytab concode_elem_sep String getUser concode_elem_sep File getKeyTabFileName concode_elem_sep void setup concode_elem_sep String getSupportedEncTypes concode_elem_sep void tearDown"}
{"code": "BigDecimal function ( BigDecimal arg0 ) { return new BigDecimal ( arg0 . val , arg0 . context ) ; }", "nl": "copy bigdecimal element c. concode_field_sep java.math.BigDecimal val concode_elem_sep int DEFAULT_PRECISION concode_elem_sep BigDecimal ZERO concode_elem_sep MathContext DEFAULT_CONTEXT concode_elem_sep MathContext context concode_elem_sep BigDecimal ONE concode_elem_sep Random random concode_field_sep boolean isField concode_elem_sep boolean isCommutative concode_elem_sep BigDecimal gcd concode_elem_sep BigDecimal sum concode_elem_sep int compareTo concode_elem_sep java.math.BigInteger characteristic concode_elem_sep BigDecimal random concode_elem_sep BigDecimal random concode_elem_sep BigDecimal random concode_elem_sep BigDecimal random concode_elem_sep int hashCode concode_elem_sep BigDecimal divide concode_elem_sep BigDecimal multiply concode_elem_sep int signum concode_elem_sep boolean isONE concode_elem_sep BigDecimal inverse concode_elem_sep BigDecimal valueOf concode_elem_sep BigDecimal valueOf concode_elem_sep boolean isUnit concode_elem_sep BigDecimal subtract concode_elem_sep BigDecimal parse concode_elem_sep BigDecimal parse concode_elem_sep BigDecimal[] egcd concode_elem_sep BigDecimal abs concode_elem_sep BigDecimal[] divideAndRemainder concode_elem_sep BigDecimal negate concode_elem_sep boolean equals concode_elem_sep BigDecimal clone concode_elem_sep BigDecimal getONE concode_elem_sep BigDecimal getZERO concode_elem_sep BigDecimal fromInteger concode_elem_sep BigDecimal fromInteger concode_elem_sep boolean isZERO concode_elem_sep boolean isAssociative concode_elem_sep String toString concode_elem_sep BigDecimal remainder"}
{"code": "String function ( ) { return this . charset ; }", "nl": "the string encoding used for decoding and encoding . concode_field_sep String charset concode_elem_sep int RADIX concode_elem_sep byte ESCAPE_CHAR concode_elem_sep BitSet WWW_FORM_URL concode_field_sep byte[] encode concode_elem_sep String encode concode_elem_sep String encode concode_elem_sep Object encode concode_elem_sep byte[] decodeUrl concode_elem_sep String getDefaultCharset concode_elem_sep byte[] decode concode_elem_sep String decode concode_elem_sep String decode concode_elem_sep Object decode concode_elem_sep byte[] encodeUrl"}
{"code": "void function ( ITestRunSession arg0 , File arg1 ) { JUnitModel . exportTestRunSession ( ( TestRunSession ) arg0 , arg1 ) ; }", "nl": "exports the given test run session into an xml report file . concode_field_sep IPath JUNIT3_CONTAINER_PATH concode_elem_sep String JUNIT_CONTAINER_ID concode_elem_sep IPath JUNIT4_CONTAINER_PATH concode_field_sep IType[] findTestTypes concode_elem_sep ITestRunSession importTestRunSession concode_elem_sep ITestRunSession importTestRunSession concode_elem_sep void addTestRunListener concode_elem_sep void addTestRunListener concode_elem_sep void removeTestRunListener concode_elem_sep void removeTestRunListener"}
{"code": "void function ( ) { fileLoggerModule = FileLoggerModule . getSingleton ( ) . prepare ( ) ; consoleLoggerModule = ConsoleLoggerModule . getSingleton ( ) . prepare ( ) ; }", "nl": "following method performs the initialization concode_field_sep FileLoggerModule fileLoggerModule concode_elem_sep ConsoleLoggerModule consoleLoggerModule concode_field_sep void unprepare concode_elem_sep void main concode_elem_sep void execute"}
{"code": "Closure function ( Collection arg0 ) { return ChainedClosure . getInstance ( arg0 ) ; }", "nl": "create a new closure that calls each closure in turn , passing the result into the next closure . the ordering is that of the iterator method on the collection . concode_field_sep PlaceHolder placeHolder concode_field_sep Closure nopClosure concode_elem_sep Closure switchClosure concode_elem_sep Closure switchClosure concode_elem_sep Closure switchClosure concode_elem_sep Closure forClosure concode_elem_sep Closure invokerClosure concode_elem_sep Closure invokerClosure concode_elem_sep Closure ifClosure concode_elem_sep Closure whileClosure concode_elem_sep Closure doWhileClosure concode_elem_sep Closure switchMapClosure concode_elem_sep Closure asClosure concode_elem_sep Closure exceptionClosure"}
{"code": "ConditionMapping function ( ICondition arg0 ) { ConditionMapping loc0 ; synchronized ( _mappings ) { for ( Iterator loc1 = _mappings . iterator ( ) ; loc1 . hasNext ( ) ; ) { loc0 = ( ConditionMapping ) loc1 . next ( ) ; if ( loc0 . arg0 == arg0 ) return loc0 ; } } return null ; }", "nl": "find the mapping associated with this condition or null if no associated mapping can be found . concode_field_sep List _mappings concode_elem_sep IHandler handler concode_elem_sep IConditionMonitor _parent concode_elem_sep ICondition condition concode_elem_sep ConditionMonitor ROOT concode_elem_sep boolean _isProcessing concode_elem_sep ConditionMapping[] _cachedMappings concode_field_sep void add concode_elem_sep void add concode_elem_sep void removeAll concode_elem_sep int process concode_elem_sep boolean test concode_elem_sep ICondition[] getConditions concode_elem_sep ConditionMonitor getInstance concode_elem_sep void removeHandler"}
{"code": "boolean function ( ) { return _runningTest != noTest ( ) ; }", "nl": "check to see if a test is running . this can be used to see whether the runtime is executing in the context of a test run or a recording session . concode_field_sep ITestIdentifier _runningTest concode_elem_sep TestMonitor _monitor concode_field_sep void endTestCase concode_elem_sep String getCurrentTestCaseID concode_elem_sep ITestIdentifier getRunningTest concode_elem_sep void logTestStart concode_elem_sep void beginTest concode_elem_sep String getId concode_elem_sep void beginTestCase concode_elem_sep TestMonitor getInstance concode_elem_sep NoRunningTestId noTest concode_elem_sep void setRunningTest"}
{"code": "Object function ( String arg0 ) { return responseHeaders == null ? null : responseHeaders . get ( arg0 ) ; }", "nl": "get response header , not avaliable now concode_field_sep boolean isInCache concode_elem_sep int responseCode concode_elem_sep String responseBody concode_elem_sep Map<String,Object> responseHeaders concode_elem_sep boolean isInitExpiredTime concode_elem_sep int type concode_elem_sep String url concode_elem_sep long expiredTime concode_field_sep boolean isInCache concode_elem_sep long getExpiresInMillis concode_elem_sep HttpResponse setInCache concode_elem_sep void setResponseHeader concode_elem_sep void setExpiredTime concode_elem_sep String getResponseBody concode_elem_sep void setResponseCode concode_elem_sep void setResponseHeaders concode_elem_sep void setType concode_elem_sep long getExpiredTime concode_elem_sep void setUrl concode_elem_sep String getUrl concode_elem_sep String getExpiresHeader concode_elem_sep long getCacheControlMaxAge concode_elem_sep int getType concode_elem_sep int getResponseCode concode_elem_sep Map<String,Object> getResponseHeaders concode_elem_sep void setResponseBody concode_elem_sep boolean isExpired"}
{"code": "byte [ ] function ( ) { if ( consumedData . length == consumedLength ) { return consumedData ; } consumedData = truncateBytes ( consumedData , consumedLength ) ; return consumedData ; }", "nl": "get the data trimmed to the length of the actual payload read , caching the result . concode_field_sep byte[] consumedData concode_elem_sep int consumedLength concode_elem_sep String LOGTAG concode_field_sep ConsumedInputStream readFully concode_elem_sep void safeStreamClose concode_elem_sep byte[] truncateBytes concode_elem_sep byte[] getData"}
{"code": "String function ( ) { return fElement . getAttribute ( CLASS_ATTRIBUTE ) ; }", "nl": "returns the hover 's class name . concode_field_sep String fModifierString concode_elem_sep String VALUE_SEPARATOR concode_elem_sep String NO_MODIFIER concode_elem_sep IConfigurationElement fElement concode_elem_sep boolean fIsEnabled concode_elem_sep int fStateMask concode_elem_sep String ACTIVATE_PLUG_IN_ATTRIBUTE concode_elem_sep String JAVA_EDITOR_TEXT_HOVER_EXTENSION_POINT concode_elem_sep String ID_ATTRIBUTE concode_elem_sep String LABEL_ATTRIBUTE concode_elem_sep String DISABLED_TAG concode_elem_sep String CLASS_ATTRIBUTE concode_elem_sep String DESCRIPTION_ATTRIBUTE concode_elem_sep String HOVER_TAG concode_field_sep boolean canActivatePlugIn concode_elem_sep String getLabel concode_elem_sep String getId concode_elem_sep String getModifierString concode_elem_sep String getDescription concode_elem_sep JavaEditorTextHoverDescriptor[] getContributedHovers concode_elem_sep int getStateMask concode_elem_sep void initializeFromPreferences concode_elem_sep int computeStateMask concode_elem_sep int hashCode concode_elem_sep IConfigurationElement getConfigurationElement concode_elem_sep boolean equals concode_elem_sep boolean isEnabled concode_elem_sep JavaEditorTextHoverDescriptor[] createDescriptors concode_elem_sep IJavaEditorTextHover createTextHover"}
{"code": "ByteString function ( byte [ ] arg0 , int arg1 , int arg2 ) { return ByteString . wrap ( arg0 , arg1 , arg2 ) ; }", "nl": "an unsafe operation that returns a bytestring that is backed by a subregion of theprovided buffer . concode_field_sep PlaceHolder placeHolder concode_field_sep void unsafeWriteTo"}
{"code": "Section function ( ) { Section loc0 = null ; if ( sections . size ( ) > 0 ) { loc0 = sections . get ( sections . size ( ) - 1 ) ; } return loc0 ; }", "nl": "get last section . concode_field_sep Optional<String> fileName concode_elem_sep long serialVersionUID concode_elem_sep boolean built concode_elem_sep Set<PreprocessorRule> preprocessorRules concode_elem_sep List<Section> sections concode_elem_sep RedPenTokenizer tokenizer concode_field_sep DocumentBuilder appendSection concode_elem_sep void ensureNotBuilt concode_elem_sep DocumentBuilder addSection concode_elem_sep DocumentBuilder addSection concode_elem_sep DocumentBuilder setPreprocessorRules concode_elem_sep Set<PreprocessorRule> getPreprocessorRules concode_elem_sep DocumentBuilder setFileName concode_elem_sep Iterator<Section> iterator concode_elem_sep Section getSection concode_elem_sep Section getSection concode_elem_sep DocumentBuilder addSectionHeader concode_elem_sep int size concode_elem_sep DocumentBuilder addSentence concode_elem_sep DocumentBuilder addSentence concode_elem_sep Document build concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep DocumentBuilder builder concode_elem_sep DocumentBuilder builder concode_elem_sep String toString concode_elem_sep DocumentBuilder addParagraph concode_elem_sep DocumentBuilder addListBlock concode_elem_sep Optional<String> getFileName concode_elem_sep DocumentBuilder addListElement concode_elem_sep DocumentBuilder addListElement"}
{"code": "byte [ ] function ( String arg0 ) { return StringUtils . getBytesUnchecked ( arg0 , CharEncoding . UTF_16 ) ; }", "nl": "encodes the given string into a sequence of bytes using the utf-16 charset , storing the result into a new byte array . concode_field_sep PlaceHolder placeHolder concode_field_sep byte[] getBytesUtf16Le concode_elem_sep String newStringUsAscii concode_elem_sep String newStringUtf8 concode_elem_sep byte[] getBytesUnchecked concode_elem_sep byte[] getBytesIso8859_1 concode_elem_sep byte[] getBytesUtf16Be concode_elem_sep IllegalStateException newIllegalStateException concode_elem_sep byte[] getBytesUsAscii concode_elem_sep String newStringIso8859_1 concode_elem_sep String newString concode_elem_sep byte[] getBytesUtf8 concode_elem_sep String newStringUtf16 concode_elem_sep String newStringUtf16Le concode_elem_sep String newStringUtf16Be"}
{"code": "Quadrant function ( int arg0 ) { if ( arg0 == QuadTreeNode . WEST || arg0 == QuadTreeNode . EAST ) { return cSouthEast ; } return cNorthWest ; }", "nl": "return the quadrant of a block of equal size that is adjacent to the given side of this quadrant . concode_field_sep PlaceHolder placeHolder concode_field_sep boolean adjacent concode_elem_sep QuadTreeNode child"}
{"code": "void function ( String [ ] arg0 ) { testSetMatrix ( ) ; testFillPattern1 ( ) ; testGetCount ( ) ; testGetTotal ( ) ; testGetTotalNested ( ) ; testGetLargest ( ) ; testGetColTotal ( ) ; ( origin / master ) = $missing$ ; }", "nl": "method to test getcoltotal concode_field_sep PlaceHolder placeHolder concode_field_sep void testGetCount concode_elem_sep void testGetLargest concode_elem_sep void testSetMatrix concode_elem_sep void testFillPattern1 concode_elem_sep void testGetTotal concode_elem_sep void testGetColTotal concode_elem_sep void testGetTotalNested"}
{"code": "void function ( Object arg0 ) { if ( ! isValidNode ( ) ) { throw new InvalidNodeException ( ) ; } this . item = arg0 ; }", "nl": "setitem sets this node 's item to `` item '' . if this node is invalid , throws an exception . performance : runs in o 1 time . concode_field_sep Object item concode_elem_sep List myList concode_field_sep ListNode next concode_elem_sep Object item concode_elem_sep ListNode prev concode_elem_sep boolean isValidNode concode_elem_sep void insertAfter concode_elem_sep void remove concode_elem_sep void insertBefore"}
{"code": "void function ( Device arg0 ) { startInputTask ( arg0 . getHandle ( ) ) ; }", "nl": "starts the input task of a device . concode_field_sep int latencyTimer concode_elem_sep int usbReceiveBufferSize concode_elem_sep String configFile concode_elem_sep int readTimeout concode_elem_sep Logger logger concode_elem_sep int writeTimeout concode_elem_sep int usbTransmitBufferSize concode_elem_sep int resetPipeRetryCount concode_field_sep Device[] listDevicesBySerialNumber concode_elem_sep Device[] listDevicesByType concode_elem_sep void configureDevice concode_elem_sep void stopInputTask concode_elem_sep void stopInputTask concode_elem_sep void loadProperties concode_elem_sep void loadProperties concode_elem_sep void initializeProperties concode_elem_sep Device[] listDevices concode_elem_sep Device[] listDevicesByDescription"}
{"code": "Label function ( ) { return end ; }", "nl": "get the end label of the protected block . concode_field_sep Label handler concode_elem_sep Label start concode_elem_sep Label end concode_elem_sep Type type concode_field_sep Label handler concode_elem_sep void setHandler concode_elem_sep Label start concode_elem_sep String toString concode_elem_sep Type type"}
{"code": "TLinkable function ( ) { return _next ; }", "nl": "returns the linked list node after this one . concode_field_sep TLinkable _next concode_elem_sep TLinkable _previous concode_field_sep TLinkable getPrevious concode_elem_sep void setNext concode_elem_sep void setPrevious"}
{"code": "void function ( ) { delegate . readLock ( ) . lock ( ) ; incReadLockCount ( ) ; }", "nl": "delegate the call to the internal java.util.concurrent.locks.reentrantreadwritelock instanceand then increment the read lock count held by the thread concode_field_sep ThreadLocal<Integer> readLockCount concode_elem_sep ReentrantReadWriteLock delegate concode_elem_sep Lock readLock concode_elem_sep long serialVersionUID concode_elem_sep Lock writeLock concode_field_sep void checkLoopback concode_elem_sep void decReadLockCount concode_elem_sep void lockInterruptibly concode_elem_sep void lockInterruptibly concode_elem_sep void unlock concode_elem_sep void unlock concode_elem_sep Lock writeLock concode_elem_sep Condition newCondition concode_elem_sep Condition newCondition concode_elem_sep Lock readLock concode_elem_sep boolean tryLock concode_elem_sep boolean tryLock concode_elem_sep boolean tryLock concode_elem_sep boolean tryLock concode_elem_sep void incReadLockCount"}
{"code": "void function ( Long arg0 ) { this . endIp = arg0 ; }", "nl": "this method sets the value of the database column sys_ip_area . end_ip concode_field_sep String areaCode concode_elem_sep String IPCODE_UNKNOWN concode_elem_sep String city concode_elem_sep String province concode_elem_sep String edu concode_elem_sep String district concode_elem_sep String company concode_elem_sep Date createTime concode_elem_sep Long endIp concode_elem_sep String owner concode_elem_sep Long startIp concode_elem_sep String country concode_field_sep boolean isIp concode_elem_sep void setCountry concode_elem_sep Date getCreateTime concode_elem_sep String getCountry concode_elem_sep void setProvince concode_elem_sep long valueOfIpv4 concode_elem_sep String getEdu concode_elem_sep Long getStartIp concode_elem_sep Long getEndIp concode_elem_sep String getOwner concode_elem_sep void setStartIp concode_elem_sep void setOwner concode_elem_sep String getStartIpv4 concode_elem_sep String getEndIpv4 concode_elem_sep String getAreaCode concode_elem_sep String ipv4 concode_elem_sep String getDistrict concode_elem_sep String getProvince concode_elem_sep void setDistrict concode_elem_sep void setCompany concode_elem_sep String getCity concode_elem_sep void setCity concode_elem_sep void setAreaCode concode_elem_sep void setCreateTime concode_elem_sep String getCompany concode_elem_sep void setEdu concode_elem_sep String toString"}
{"code": "HashCodeBuilder function ( float arg0 ) { iTotal = iTotal * iConstant + Float . floatToIntBits ( arg0 ) ; return this ; }", "nl": "append a hashcode for a float . concode_field_sep int iConstant concode_elem_sep int iTotal concode_field_sep HashCodeBuilder appendSuper concode_elem_sep int toHashCode"}
{"code": "boolean function ( ) { return ( type == NULL ) ; }", "nl": "checks if this pdfobject is of the type pdfnull . concode_field_sep int INDIRECT concode_elem_sep int STRING concode_elem_sep int DICTIONARY concode_elem_sep int NULL concode_elem_sep int NUMBER concode_elem_sep int type concode_elem_sep int NAME concode_elem_sep String NOTHING concode_elem_sep int BOOLEAN concode_elem_sep int ARRAY concode_elem_sep byte[] bytes concode_elem_sep String TEXT_UNICODE concode_elem_sep String TEXT_PDFDOCENCODING concode_elem_sep PRIndirectReference indRef concode_elem_sep int STREAM concode_field_sep void toPdf concode_elem_sep void setContent concode_elem_sep void setIndRef concode_elem_sep int length concode_elem_sep boolean isStream concode_elem_sep PRIndirectReference getIndRef concode_elem_sep int type concode_elem_sep byte[] getBytes concode_elem_sep boolean isDictionary concode_elem_sep boolean isBoolean concode_elem_sep boolean isName concode_elem_sep boolean isNumber concode_elem_sep boolean isString concode_elem_sep String toString concode_elem_sep boolean canBeInObjStm concode_elem_sep boolean isArray concode_elem_sep boolean isIndirect"}
{"code": "void function ( String arg0 ) { jdbcService . deleteBlobsByContainer ( arg0 ) ; }", "nl": "deletes all the blobs in a container concode_field_sep Location mockLocation concode_elem_sep JdbcContainerNameValidator jdbcContainerNameValidator concode_elem_sep JdbcBlobKeyValidator jdbcBlobKeyValidator concode_elem_sep Provider<BlobBuilder> blobBuilders concode_elem_sep JdbcService jdbcService concode_elem_sep BlobEntityToBlob blobEntityToBlob concode_field_sep void setContainerAccess concode_elem_sep Location getLocation concode_elem_sep ContainerAccess getContainerAccess concode_elem_sep Collection<String> getAllContainerNames concode_elem_sep boolean directoryExists concode_elem_sep String putDirectoryBlob concode_elem_sep Blob getBlob concode_elem_sep Iterable<String> getBlobKeysInsideContainer concode_elem_sep String putBlob concode_elem_sep void setBlobAccess concode_elem_sep boolean createContainerInLocation concode_elem_sep void removeBlob concode_elem_sep boolean blobExists concode_elem_sep void deleteContainer concode_elem_sep StorageMetadata getContainerMetadata concode_elem_sep long countBlobs concode_elem_sep BlobAccess getBlobAccess concode_elem_sep String getSeparator concode_elem_sep boolean containerExists concode_elem_sep void createDirectory concode_elem_sep void deleteDirectory"}
{"code": "int function ( ) { return num_sets ; }", "nl": "accessor for testing only . concode_field_sep int num_sets concode_elem_sep int[] this_bits_exception_index concode_elem_sep boolean[] this_bits concode_elem_sep boolean[] this_bits_valid concode_elem_sep boolean debug concode_elem_sep int num_vars concode_elem_sep int[] index concode_elem_sep BitSet[] modbits_arrays concode_elem_sep long serialVersionUID concode_elem_sep int num_samples concode_field_sep void add concode_elem_sep int split concode_elem_sep BitSet get concode_elem_sep boolean get concode_elem_sep int num_vars concode_elem_sep int num_samples concode_elem_sep void checkRep"}
{"code": "boolean function ( ) { MatchResult loc0 = new WidgetFinder ( ) . find ( _display , _matcher ) ; return loc0 . getType ( ) == WidgetFinder . MATCH ; }", "nl": "test whether the widget in question is showing . concode_field_sep Display _display concode_elem_sep Matcher _matcher concode_field_sep String toString"}
{"code": "String [ ] function ( AssociationType arg0 , int arg1 , OuterJoinLoadable arg2 , Mapping arg3 ) { return getLHSColumnNames ( arg0 , arg1 , 0 , arg2 , arg3 ) ; }", "nl": "get the unqualified names of the columns of the owning entity which are to be used in the join . concode_field_sep PlaceHolder placeHolder concode_field_sep String[] getRHSColumnNames concode_elem_sep String getLHSTableName concode_elem_sep String[] toColumns concode_elem_sep String[] getAliasedLHSColumnNames concode_elem_sep String[] getAliasedLHSColumnNames"}
{"code": "void function ( Composite arg0 ) { createTextControl ( arg0 ) ; createClearButton ( arg0 ) ; updateClearButtonVisibility ( false ) ; }", "nl": "create the filter controls . concode_field_sep Text fTextControl concode_elem_sep ImageDescriptor fgClearIconDescriptor concode_elem_sep Control fClearButton concode_elem_sep Composite fComposite concode_elem_sep Boolean fgUseNativeSearchField concode_elem_sep ImageDescriptor fgDisabledClearIconDescriptor concode_field_sep boolean useNativeSearchField concode_elem_sep void createTextControl concode_elem_sep void updateClearButtonVisibility concode_elem_sep String getFilterString concode_elem_sep Text getFilterControl concode_elem_sep void createClearButton"}
{"code": "boolean function ( ) { return percentage ; }", "nl": "getter for percentage concode_field_sep boolean percentage concode_elem_sep float width concode_elem_sep PdfPCell cell concode_field_sep boolean add concode_elem_sep boolean process concode_elem_sep PdfPCell getCell concode_elem_sep boolean isContent concode_elem_sep boolean isNestable concode_elem_sep PdfPCell createPdfPCell concode_elem_sep float getWidth concode_elem_sep List<Chunk> getChunks concode_elem_sep int type"}
{"code": "boolean function ( ) { if ( isZERO ( ) ) { return false ; } if ( ring . isField ( ) ) { return true ; } java . math . BigInteger loc0 = ring . modul . gcd ( val ) . abs ( ) ; return ( loc0 . equals ( java . math . BigInteger . ONE ) ) ; }", "nl": "is modinteger number a unit . concode_field_sep java.math.BigInteger val concode_elem_sep ModIntegerRing ring concode_field_sep ModInteger MIREM concode_elem_sep java.math.BigInteger getSymmetricVal concode_elem_sep int MISIGN concode_elem_sep ModInteger gcd concode_elem_sep ModInteger sum concode_elem_sep int compareTo concode_elem_sep ModInteger MINEG concode_elem_sep ModInteger MISUM concode_elem_sep int hashCode concode_elem_sep ModInteger MIDIF concode_elem_sep ModInteger divide concode_elem_sep ModInteger multiply concode_elem_sep int signum concode_elem_sep boolean isONE concode_elem_sep ModInteger inverse concode_elem_sep int MICOMP concode_elem_sep java.math.BigInteger getVal concode_elem_sep ModInteger subtract concode_elem_sep ModInteger MIABS concode_elem_sep ModInteger MIINV concode_elem_sep ModInteger[] egcd concode_elem_sep java.math.BigInteger getModul concode_elem_sep ModInteger abs concode_elem_sep ModInteger MIQ concode_elem_sep ModInteger negate concode_elem_sep boolean equals concode_elem_sep ModInteger clone concode_elem_sep boolean isZERO concode_elem_sep String toString concode_elem_sep ModInteger MIPROD concode_elem_sep ModInteger remainder"}
{"code": "Header function ( ) { return myHeader ; }", "nl": "returns the record 's header . concode_field_sep ByteBuffer myData concode_elem_sep Header myHeader concode_elem_sep Header myConnectionHeader concode_elem_sep SeekableByteChannel myChannel concode_elem_sep int headerLength concode_elem_sep Logger myLogger concode_elem_sep long myDataOffset concode_elem_sep int myDataLength concode_field_sep void readData concode_elem_sep Header getConnectionHeader concode_elem_sep void setConnectionHeader concode_elem_sep ByteBuffer getData"}
{"code": "Duration function ( int arg0 ) { return new Duration ( arg0 , TimeUnit . DAYS ) ; }", "nl": "returns a duration corresponding to the the given value in days . concode_field_sep Map<String,Object> windowConfiguration concode_elem_sep TimestampExtractor timestampExtractor concode_elem_sep int value concode_elem_sep Logger LOG concode_field_sep BaseWindowedBolt withWindow concode_elem_sep BaseWindowedBolt withWindow concode_elem_sep BaseWindowedBolt withWindow concode_elem_sep BaseWindowedBolt withWindow concode_elem_sep BaseWindowedBolt withWindow concode_elem_sep BaseWindowedBolt withWindow concode_elem_sep Map<String,Object> getComponentConfiguration concode_elem_sep void prepare concode_elem_sep void declareOutputFields concode_elem_sep Duration hours concode_elem_sep BaseWindowedBolt withWindowLength concode_elem_sep BaseWindowedBolt withWindowLength concode_elem_sep TimestampExtractor getTimestampExtractor concode_elem_sep Duration minutes concode_elem_sep BaseWindowedBolt withLag concode_elem_sep BaseWindowedBolt withTimestampExtractor concode_elem_sep BaseWindowedBolt withWatermarkInterval concode_elem_sep Duration seconds concode_elem_sep BaseWindowedBolt withTumblingWindow concode_elem_sep BaseWindowedBolt withTumblingWindow concode_elem_sep BaseWindowedBolt withSlidingInterval concode_elem_sep BaseWindowedBolt withSlidingInterval concode_elem_sep void cleanup concode_elem_sep int hashCode concode_elem_sep int hashCode concode_elem_sep Count of concode_elem_sep Duration of concode_elem_sep boolean equals concode_elem_sep boolean equals concode_elem_sep BaseWindowedBolt withTimestampField concode_elem_sep Duration days concode_elem_sep String toString concode_elem_sep String toString concode_elem_sep BaseWindowedBolt withLateTupleStream"}
{"code": "ClassLoader function ( ClassLoader arg0 , Class arg1 ) { if ( arg0 != null ) { return arg0 ; } return getClassLoader ( arg1 ) ; }", "nl": "return the class loader to be used for instantiating application objects when a context class loader is not specified . this is determined based upon the following rules : the specified class loader , if any the class loader used to load the calling class . the system class loader . concode_field_sep Log log concode_field_sep Class loadClass concode_elem_sep Class loadClass"}
{"code": "Product function ( ) { return new Product ( ) ; }", "nl": "factory method to create a new product concode_field_sep Product product concode_elem_sep int amount concode_elem_sep double price concode_field_sep void setProduct concode_elem_sep Product getProduct concode_elem_sep String toString concode_elem_sep void setAmount concode_elem_sep void setPrice concode_elem_sep double getPrice concode_elem_sep int getAmount"}
{"code": "boolean function ( ) { return false ; }", "nl": "indic languages are written from right to left . concode_field_sep int MATRA_E concode_elem_sep int LETTER_HA concode_elem_sep int HALANTA concode_elem_sep int MATRA_AI concode_elem_sep int MATRA_HLR concode_elem_sep int MATRA_I concode_elem_sep int LETTER_A concode_elem_sep int LETTER_KA concode_elem_sep int LETTER_AU concode_elem_sep int MATRA_AA concode_elem_sep char[] langTable concode_elem_sep int MATRA_HLRR concode_field_sep boolean IsSwaraMatra concode_elem_sep String process concode_elem_sep boolean IsSwaraLetter concode_elem_sep void swap concode_elem_sep boolean IsVyanjana"}
{"code": "boolean function ( Object arg0 , Object arg1 ) { if ( arg0 == null ) { return arg1 == null ; } return arg0 . equals ( arg1 ) ; }", "nl": "compares two keys or two values , handling null correctly . concode_field_sep List<Entry> entries concode_elem_sep V value concode_elem_sep K key concode_field_sep K getKey concode_elem_sep Set<Map.Entry<K,V>> entrySet concode_elem_sep boolean containsKey concode_elem_sep Collection<V> values concode_elem_sep void clear concode_elem_sep Entry findEntry concode_elem_sep boolean isEmpty concode_elem_sep void main concode_elem_sep boolean containsValue concode_elem_sep V put concode_elem_sep V remove concode_elem_sep V getValue concode_elem_sep int size concode_elem_sep Collection<? extends java.util.Map.Entry<K,V>> getEntries concode_elem_sep V setValue concode_elem_sep V get concode_elem_sep void putAll concode_elem_sep Set<K> keySet"}
{"code": "void function ( String arg0 ) { this . serialNumber = arg0 ; }", "nl": "sets the new serialnumber . concode_field_sep long signature1 concode_elem_sep int productID concode_elem_sep String manufacturer concode_elem_sep int vendorID concode_elem_sep long version concode_elem_sep long signature2 concode_elem_sep String productDescription concode_elem_sep String serialNumber concode_elem_sep int MAX_HEADER_LENGTH concode_elem_sep String manufacturerID concode_elem_sep boolean remoteWakeupCapable concode_elem_sep boolean pnpEnabled concode_elem_sep int maxPower concode_elem_sep boolean selfPowered concode_field_sep boolean isPnpEnabled concode_elem_sep long getSignature2 concode_elem_sep void setProductID concode_elem_sep void setPnpEnabled concode_elem_sep void setManufacturer concode_elem_sep void setMaxPower concode_elem_sep void setProductDescription concode_elem_sep String getManufacturer concode_elem_sep void setSelfPowered concode_elem_sep long getSignature1 concode_elem_sep void setManufacturerID concode_elem_sep boolean isRemoteWakeupCapable concode_elem_sep String getManufacturerID concode_elem_sep void validate concode_elem_sep int getMaxPower concode_elem_sep long getVersion concode_elem_sep void setSignature1 concode_elem_sep String getSerialNumber concode_elem_sep void setVersion concode_elem_sep void setSignature2 concode_elem_sep String getProductDescription concode_elem_sep int getProductID concode_elem_sep boolean isSelfPowered concode_elem_sep void setRemoteWakeupCapable concode_elem_sep void setVendorID concode_elem_sep int getVendorID"}
{"code": "ImageDescriptor function ( ) { return fImage ; }", "nl": "returns the image descriptor of the described category . concode_field_sep String fId concode_elem_sep boolean fIsEnabled concode_elem_sep IConfigurationElement fElement concode_elem_sep boolean fNeedsSortingAfterFiltering concode_elem_sep boolean fIsIncluded concode_elem_sep String ICON concode_elem_sep Expression fEnablementExpression concode_elem_sep int fSortOrder concode_elem_sep String fName concode_elem_sep ImageDescriptor fImage concode_elem_sep String fLastError concode_elem_sep CompletionProposalComputerRegistry fRegistry concode_elem_sep boolean fIsSeparateCommand concode_field_sep boolean isSeparateCommand concode_elem_sep String getName concode_elem_sep void sessionEnded concode_elem_sep void setSortOrder concode_elem_sep void sessionStarted concode_elem_sep Expression getEnablementExpression concode_elem_sep void setSeparateCommand concode_elem_sep String getId concode_elem_sep void setIncluded concode_elem_sep boolean matches concode_elem_sep Bundle getBundle concode_elem_sep int getSortOrder concode_elem_sep void setEnabled concode_elem_sep void checkNotNull concode_elem_sep String getDisplayName concode_elem_sep boolean isEnabled concode_elem_sep boolean hasComputers concode_elem_sep boolean hasComputers concode_elem_sep boolean isSortingAfterFilteringNeeded concode_elem_sep boolean isIncluded concode_elem_sep List<ICompletionProposal> computeCompletionProposals concode_elem_sep List<IContextInformation> computeContextInformation concode_elem_sep String getErrorMessage"}
{"code": "RequestType function ( ) { return requestType ; }", "nl": "get the type of this request , used by each person in the chain of command to see if they should or can handle this particular request concode_field_sep RequestType requestType concode_elem_sep boolean handled concode_elem_sep String requestDescription concode_field_sep void markHandled concode_elem_sep String toString concode_elem_sep boolean isHandled concode_elem_sep String getRequestDescription"}
{"code": "PdfIndirectReference function ( PdfDictionary arg0 ) { if ( views == null ) throw new IllegalPdfSyntaxException ( \"srini_string\" ) ; PdfIndirectReference loc0 = writer . addToBody ( arg0 ) . getIndirectReference ( ) ; views . add ( loc0 ) ; return loc0 ; }", "nl": "adds a view dictionary . part of the richmediacontent . concode_field_sep PdfDictionary richMediaSettings concode_elem_sep PdfArray configurations concode_elem_sep PdfArray views concode_elem_sep HashMap<String,PdfIndirectReference> assetsmap concode_elem_sep PdfDictionary richMediaContent concode_elem_sep PdfIndirectReference richMediaContentReference concode_elem_sep PdfWriter writer concode_elem_sep PdfAnnotation annot concode_field_sep PdfIndirectReference addAsset concode_elem_sep PdfIndirectReference addAsset concode_elem_sep PdfIndirectReference getRichMediaContentReference concode_elem_sep PdfAnnotation createAnnotation concode_elem_sep void setActivation concode_elem_sep PdfIndirectReference addConfiguration concode_elem_sep PdfIndirectReference addConfiguration concode_elem_sep void setDeactivation"}
{"code": "boolean function ( ) { return num . equals ( den ) ; }", "nl": "is local one . concode_field_sep Logger logger concode_elem_sep LocalRing<C> ring concode_elem_sep boolean debug concode_elem_sep C num concode_elem_sep int isunit concode_elem_sep C den concode_field_sep int signum concode_elem_sep Local<C> inverse concode_elem_sep boolean isUnit concode_elem_sep Local<C> subtract concode_elem_sep Local<C> gcd concode_elem_sep Local<C> sum concode_elem_sep int compareTo concode_elem_sep Local<C>[] egcd concode_elem_sep Local<C> abs concode_elem_sep int hashCode concode_elem_sep Local<C> negate concode_elem_sep boolean equals concode_elem_sep Local<C> clone concode_elem_sep boolean isZERO concode_elem_sep String toString concode_elem_sep Local<C> divide concode_elem_sep Local<C> multiply concode_elem_sep Local<C> remainder"}
{"code": "RuleSet function ( ) { if ( ruleSet == null ) { ruleSet = new ConfigRuleSet ( ) ; } return ( ruleSet ) ; }", "nl": "return the ruleset to be used for configuring our digester parsing rules , creating one if necessary . concode_field_sep boolean useContextClassLoader concode_elem_sep RuleSet ruleSet concode_elem_sep Digester digester concode_field_sep Digester getDigester concode_elem_sep boolean getUseContextClassLoader concode_elem_sep void setRuleSet concode_elem_sep void parse concode_elem_sep void parse concode_elem_sep void setUseContextClassLoader"}
{"code": "String function ( final XMLExtendedStreamReader arg0 ) { return readRequiredAttributes ( arg0 , EnumSet . of ( Attribute . VALUE ) ) . get ( Attribute . VALUE ) ; }", "nl": "reads a value attribute on an element . concode_field_sep AttributeParser VALUE concode_field_sep Map<Attribute,String> readRequiredAttributes concode_elem_sep boolean isParseAsElement concode_elem_sep void parseElement concode_elem_sep String readNameAttribute"}
{"code": "String function ( final Name arg0 ) { if ( arg0 . size ( ) > 0 ) return arg0 . get ( arg0 . size ( ) - 1 ) ; return \"srini_string\" ; }", "nl": "get the last component of a name . concode_field_sep PlaceHolder placeHolder concode_field_sep Context createSubcontext concode_elem_sep void rebind concode_elem_sep void rebind concode_elem_sep void unbind concode_elem_sep void unbind concode_elem_sep boolean isEmpty concode_elem_sep NameNotFoundException nameNotFoundException concode_elem_sep NameAlreadyBoundException nameAlreadyBoundException concode_elem_sep NotContextException notAContextException concode_elem_sep boolean isLastComponentEmpty concode_elem_sep NamingException namingException concode_elem_sep NamingException namingException concode_elem_sep CannotProceedException cannotProceedException concode_elem_sep InvalidNameException emptyNameException concode_elem_sep NamingEnumeration<T> namingEnumeration"}
{"code": "String function ( final String arg0 ) { return fAttributes . get ( arg0 ) ; }", "nl": "returns the attribute with the specified name . concode_field_sep Map<String,String> fAttributes concode_elem_sep String fProject concode_field_sep String toString concode_elem_sep String getProject"}
{"code": "Label function ( ) { return defaultTarget ; }", "nl": "get the default target of the switch . concode_field_sep Label defaultTarget concode_elem_sep int[] values concode_elem_sep Label[] targets concode_field_sep int lowValue concode_elem_sep boolean hasContiguousValues concode_elem_sep int partition concode_elem_sep int highValue concode_elem_sep int[] values concode_elem_sep void uniq concode_elem_sep void setDefaultTarget concode_elem_sep String toString concode_elem_sep void sort concode_elem_sep Label[] targets concode_elem_sep void quicksort"}
{"code": "float function ( ) { return rise ; }", "nl": "getter for text rise concode_field_sep boolean knockout concode_elem_sep LineDashPattern lineDashPattern concode_elem_sep BaseColor fillColor concode_elem_sep float wordSpacing concode_elem_sep float leading concode_elem_sep BaseColor strokeColor concode_elem_sep int lineJoinStyle concode_elem_sep float miterLimit concode_elem_sep int lineCapStyle concode_elem_sep float lineWidth concode_elem_sep int renderMode concode_elem_sep PdfName colorSpaceFill concode_elem_sep PdfName colorSpaceStroke concode_elem_sep float fontSize concode_elem_sep float rise concode_elem_sep Matrix ctm concode_elem_sep float horizontalScaling concode_elem_sep float characterSpacing concode_elem_sep CMapAwareDocumentFont font concode_field_sep float getFontSize concode_elem_sep int getRenderMode concode_elem_sep void setLineDashPattern concode_elem_sep int getLineJoinStyle concode_elem_sep PdfName getColorSpaceStroke concode_elem_sep float getCharacterSpacing concode_elem_sep void setLineWidth concode_elem_sep Matrix getCtm concode_elem_sep void setLineCapStyle concode_elem_sep PdfName getColorSpaceFill concode_elem_sep float getMiterLimit concode_elem_sep float getLineWidth concode_elem_sep float getWordSpacing concode_elem_sep boolean isKnockout concode_elem_sep BaseColor getFillColor concode_elem_sep CMapAwareDocumentFont getFont concode_elem_sep void setMiterLimit concode_elem_sep BaseColor getStrokeColor concode_elem_sep int getLineCapStyle concode_elem_sep float getLeading concode_elem_sep LineDashPattern getLineDashPattern concode_elem_sep float getHorizontalScaling concode_elem_sep void setLineJoinStyle"}
{"code": "void function ( ILaunchConfiguration arg0 ) { fListeneredDisabled = true ; initializeWithoutListenersFrom ( arg0 ) ; fListeneredDisabled = false ; }", "nl": "disables the listeners and calls initializewithoutlistenersfrom . listeners are disabled because it is common for listeners to be used for saving launch configurations . if a the configuration is saved during initialization , it is possible for attributes necessary for other options to be erased . concode_field_sep List<IOptionChangeListener> fListeners concode_elem_sep boolean fListeneredDisabled concode_field_sep void removeChangeListener concode_elem_sep void initializeWithoutListenersFrom concode_elem_sep void notifyListeners concode_elem_sep void addChangeListener"}
{"code": "int function ( ) { return n ; }", "nl": "get removed pair number . concode_field_sep boolean useCriterion4 concode_elem_sep GenPolynomial<C> pi concode_elem_sep int i concode_elem_sep GenPolynomial<C> pj concode_elem_sep int j concode_elem_sep boolean useCriterion3 concode_elem_sep int n concode_elem_sep boolean toZero concode_field_sep MiniPair toMiniPair concode_elem_sep void setUseCriterion3 concode_elem_sep boolean equals concode_elem_sep boolean getUseCriterion3 concode_elem_sep void setZero concode_elem_sep boolean isZero concode_elem_sep void setUseCriterion4 concode_elem_sep String toString concode_elem_sep int compareTo concode_elem_sep void pairNumber concode_elem_sep boolean getUseCriterion4"}
{"code": "String function ( String arg0 ) { if ( TextUtils . isEmpty ( arg0 ) ) { return arg0 ; } arg0 = DATE_CLEANUP_PATTERN_WRONG_TIMEZONE . matcher ( arg0 ) . replaceFirst ( \"srini_string\" ) ; return arg0 ; }", "nl": "try to make a date mime rfc 2822/5322 - compliant . it fixes : - `` thu , 10 dec 09 15:08:08 gmt-0700 '' to `` thu , 10 dec 09 15:08:08 -0700 '' 4 digit zone value ca n't be preceded by `` gmt '' we got a report saying ebay sends a date in this format concode_field_sep int WARN concode_elem_sep Boolean sDebugLoggingEnabledForTests concode_elem_sep Pattern DATE_CLEANUP_PATTERN_WRONG_TIMEZONE concode_elem_sep int VERBOSE concode_elem_sep int MAX_ENABLED_LOG_LEVEL concode_elem_sep int ERROR concode_elem_sep int DEBUG concode_elem_sep int INFO concode_elem_sep String TAG concode_field_sep boolean isLoggable concode_elem_sep int d concode_elem_sep int d concode_elem_sep int e concode_elem_sep int e concode_elem_sep int v concode_elem_sep int v concode_elem_sep int w concode_elem_sep int w concode_elem_sep int wtf concode_elem_sep int wtf concode_elem_sep String byteToHex concode_elem_sep StringBuilder byteToHex concode_elem_sep int i concode_elem_sep int i concode_elem_sep boolean buildPreventsDebugLogging concode_elem_sep boolean isDebugLoggingEnabled concode_elem_sep void setDebugLoggingEnabledForTests"}
{"code": "IProduct function ( ) { return product ; }", "nl": "answer the product associated with the receiver concode_field_sep IProduct product concode_elem_sep String INDENT concode_field_sep void printPlatformInfo concode_elem_sep String getInstallationLocation concode_elem_sep void printInfo concode_elem_sep void printPrefPageInfo concode_elem_sep String getPrefPageInfo concode_elem_sep String getPrefPageFeedback concode_elem_sep void printProductInfo concode_elem_sep void printSupportInfo concode_elem_sep String getAuthorNames concode_elem_sep IStatus getLastStatus concode_elem_sep int getCurrentYear"}
{"code": "void function ( ) { head = null ; end = null ; cache . clear ( ) ; }", "nl": "clear cache concode_field_sep Node next concode_elem_sep Map<String,Node> cache concode_elem_sep Node head concode_elem_sep Node previous concode_elem_sep Logger LOGGER concode_elem_sep UserAccount userAccount concode_elem_sep Node end concode_elem_sep String userId concode_elem_sep int capacity concode_field_sep boolean contains concode_elem_sep void set concode_elem_sep UserAccount getLruData concode_elem_sep UserAccount get concode_elem_sep void setHead concode_elem_sep List<UserAccount> getCacheDataInListForm concode_elem_sep void invalidate concode_elem_sep boolean isFull concode_elem_sep void setCapacity concode_elem_sep void remove"}
{"code": "void function ( CryptoRecord arg0 , String arg1 , String arg2 ) { if ( arg2 == null ) { return ; } arg0 . payload . put ( arg1 , arg2 ) ; }", "nl": "utility for safely populating an output cryptorecord . concode_field_sep boolean deleted concode_elem_sep long sortIndex concode_elem_sep String guid concode_elem_sep String collection concode_elem_sep long lastModified concode_elem_sep long ttl concode_elem_sep long androidID concode_field_sep boolean equalTimestamps concode_elem_sep String toJSONString concode_elem_sep boolean equalIdentifiers concode_elem_sep byte[] toJSONBytes concode_elem_sep void populatePayload concode_elem_sep boolean equalAndroidIDs concode_elem_sep void initFromPayload concode_elem_sep boolean congruentWith concode_elem_sep boolean equalPayloads concode_elem_sep boolean equals concode_elem_sep void checkGUIDs concode_elem_sep Record copyWithIDs concode_elem_sep boolean congruentAndroidIDs concode_elem_sep CryptoRecord getEnvelope concode_elem_sep boolean equalSortIndices concode_elem_sep void initFromEnvelope"}
{"code": "void function ( final LetterComposite arg0 , final String arg1 ) { final String [ ] loc0 = arg1 . split ( \"srini_string\" ) ; assertNotNull ( arg0 ) ; assertEquals ( loc0 . length , arg0 . count ( ) ) ; arg0 . print ( ) ; assertEquals ( arg1 , new String ( this . stdOutBuffer . toByteArray ( ) ) . trim ( ) ) ; }", "nl": "test if the given composed message matches the expected message concode_field_sep PrintStream realStdOut concode_elem_sep ByteArrayOutputStream stdOutBuffer concode_field_sep void testMessageFromElves concode_elem_sep void setUp concode_elem_sep void testMessageFromOrcs concode_elem_sep void tearDown"}
{"code": "int [ ] function ( String arg0 ) { return getNamedParameterDescriptor ( arg0 ) . getSourceLocations ( ) ; }", "nl": "deprecated . concode_field_sep Map<String,NamedParameterDescriptor> namedDescriptorMap concode_elem_sep OrdinalParameterDescriptor[] ordinalDescriptors concode_elem_sep OrdinalParameterDescriptor[] EMPTY_ORDINALS concode_field_sep int getOrdinalParameterSourceLocation concode_elem_sep NamedParameterDescriptor getNamedParameterDescriptor concode_elem_sep Type getOrdinalParameterExpectedType concode_elem_sep Type getNamedParameterExpectedType concode_elem_sep OrdinalParameterDescriptor getOrdinalParameterDescriptor concode_elem_sep int getOrdinalParameterCount concode_elem_sep Set<String> getNamedParameterNames"}
{"code": "boolean function ( ) { return _exists == _project . exists ( ) ; }", "nl": "test for the existence of the given project . concode_field_sep IProject _project concode_elem_sep boolean _exists concode_field_sep String toString"}
{"code": "int [ ] function ( Integer [ ] arg0 ) { int [ ] loc0 = new int [ arg0 . length ] ; for ( int loc1 = 0 ; loc1 < arg0 . length ; loc1 ++ ) { loc0 [ loc1 ] = arg0 [ loc1 ] ; } return loc0 ; }", "nl": "convert integer array to int array concode_field_sep PlaceHolder placeHolder concode_field_sep String nullStrToEmpty concode_elem_sep Long[] transformLongArray concode_elem_sep long[] transformLongArray concode_elem_sep int compare concode_elem_sep boolean isEquals"}
{"code": "void function ( int arg0 ) { this . foreColor = this . foreColor . getColorFromCode ( arg0 ) ; }", "nl": "allows for setting of the color using int codes . concode_field_sep boolean border concode_elem_sep Position position concode_elem_sep ConsoleSystemInterface si concode_elem_sep int width concode_elem_sep String spaces concode_elem_sep Position inPosition concode_elem_sep int inHeight concode_elem_sep CSIColor foreColor concode_elem_sep int height concode_elem_sep CSIColor borderColor concode_elem_sep int inWidth concode_field_sep void drawBorder concode_elem_sep void clearBox concode_elem_sep void setBorderColor concode_elem_sep void setBorderColor concode_elem_sep void recalcInnerBounds concode_elem_sep int getForeColor concode_elem_sep int getWidth concode_elem_sep void draw concode_elem_sep void setWidth concode_elem_sep void setHeight concode_elem_sep void setBounds concode_elem_sep void setPosition concode_elem_sep int getHeight concode_elem_sep void setBorder concode_elem_sep boolean hasBorder"}
{"code": "void function ( Operator arg0 ) { calculate ( arg0 ) ; }", "nl": "addoperator runs operator through calculate as soon as it gets it so the stack is always up to date . concode_field_sep Stack<Double> operands concode_elem_sep Stack<OperationsInterface> operators concode_field_sep int size concode_elem_sep void debugPrintStacks concode_elem_sep void clear concode_elem_sep void addGrouping concode_elem_sep double getTotal concode_elem_sep void calculate concode_elem_sep void addOperand"}
{"code": "void function ( Window arg0 , int arg1 ) { WindowManager . LayoutParams loc0 = arg0 . getAttributes ( ) ; loc0 . screenBrightness = arg1 / 255.0f ; arg0 . setAttributes ( loc0 ) ; }", "nl": "sets the screen brightness for this activity . the screen brightness will change immediately . as soon as the activity terminates , the brightness will return to the system brightness . valid brightnesses range from 0 to 255 . concode_field_sep int SCREEN_BRIGHTNESS_MODE_AUTOMATIC concode_elem_sep int SCREEN_BRIGHTNESS_MODE_MANUAL concode_elem_sep String SCREEN_BRIGHTNESS_MODE concode_field_sep void setAutoBrightnessEnabled concode_elem_sep int getPhoneBrighness concode_elem_sep boolean supportsAutoBrightness concode_elem_sep boolean getAutoBrightnessEnabled concode_elem_sep int getSystemBrightness concode_elem_sep void setPhoneBrightness concode_elem_sep void setSystemBrightness"}
{"code": "long function ( Duration arg0 ) { return Durations . toMicros ( arg0 ) ; }", "nl": "convert a duration to the number of microseconds.the result will be rounded towards 0 to the nearest microseconds . e.g. , if the duration represents -1 nanosecond , it will be rounded to 0 . concode_field_sep BigInteger NANOS_PER_SECOND_BIG_INTEGER concode_elem_sep long DURATION_SECONDS_MAX concode_elem_sep long DURATION_SECONDS_MIN concode_elem_sep long TIMESTAMP_SECONDS_MAX concode_elem_sep long NANOS_PER_SECOND concode_elem_sep long TIMESTAMP_SECONDS_MIN concode_field_sep Timestamp add concode_elem_sep Duration add concode_elem_sep Duration distance concode_elem_sep Duration createDurationFromMicros concode_elem_sep Timestamp subtract concode_elem_sep Duration subtract concode_elem_sep Timestamp createTimestampFromMillis concode_elem_sep BigInteger toBigInteger concode_elem_sep BigInteger toBigInteger concode_elem_sep Duration createDurationFromNanos concode_elem_sep Timestamp createTimestampFromMicros concode_elem_sep Duration createDurationFromMillis concode_elem_sep Duration createDurationFromBigInteger concode_elem_sep Duration parseDuration concode_elem_sep long toNanos concode_elem_sep long toNanos concode_elem_sep Timestamp getEpoch concode_elem_sep Timestamp parseTimestamp concode_elem_sep String toString concode_elem_sep String toString concode_elem_sep long toMillis concode_elem_sep long toMillis concode_elem_sep Duration divide concode_elem_sep Duration divide concode_elem_sep long divide concode_elem_sep Timestamp createTimestampFromNanos concode_elem_sep Timestamp getCurrentTime concode_elem_sep Duration multiply concode_elem_sep Duration multiply concode_elem_sep Duration remainder concode_elem_sep Duration normalizedDuration"}
{"code": "void function ( int arg0 ) { this . lineJoinStyle = arg0 ; }", "nl": "setter for the line join style . for possible values see pdfcontentbyte concode_field_sep boolean knockout concode_elem_sep LineDashPattern lineDashPattern concode_elem_sep BaseColor fillColor concode_elem_sep float wordSpacing concode_elem_sep float leading concode_elem_sep BaseColor strokeColor concode_elem_sep int lineJoinStyle concode_elem_sep float miterLimit concode_elem_sep int lineCapStyle concode_elem_sep float lineWidth concode_elem_sep int renderMode concode_elem_sep PdfName colorSpaceFill concode_elem_sep PdfName colorSpaceStroke concode_elem_sep float fontSize concode_elem_sep float rise concode_elem_sep Matrix ctm concode_elem_sep float horizontalScaling concode_elem_sep float characterSpacing concode_elem_sep CMapAwareDocumentFont font concode_field_sep float getFontSize concode_elem_sep int getRenderMode concode_elem_sep void setLineDashPattern concode_elem_sep int getLineJoinStyle concode_elem_sep PdfName getColorSpaceStroke concode_elem_sep float getCharacterSpacing concode_elem_sep void setLineWidth concode_elem_sep Matrix getCtm concode_elem_sep void setLineCapStyle concode_elem_sep PdfName getColorSpaceFill concode_elem_sep float getMiterLimit concode_elem_sep float getLineWidth concode_elem_sep float getWordSpacing concode_elem_sep boolean isKnockout concode_elem_sep BaseColor getFillColor concode_elem_sep CMapAwareDocumentFont getFont concode_elem_sep void setMiterLimit concode_elem_sep float getRise concode_elem_sep BaseColor getStrokeColor concode_elem_sep int getLineCapStyle concode_elem_sep float getLeading concode_elem_sep LineDashPattern getLineDashPattern concode_elem_sep float getHorizontalScaling"}
{"code": "boolean function ( Menu arg0 ) { return arg0 . getParentMenu ( ) != null ; }", "nl": "is this menu a submenu ? concode_field_sep SWTHierarchy _hierarchy concode_field_sep boolean isOrphanedBy concode_elem_sep boolean isContainedBy"}
{"code": "void function ( int arg0 ) { decrementTransactionCount ( ) ; }", "nl": "notifies handler that an active transaction has completed . concode_field_sep int activeInvocationCount concode_elem_sep InjectedValue<DeploymentRepository> deploymentRepositoryInjectedValue concode_elem_sep AtomicIntegerFieldUpdater<EJBSuspendHandlerService> activeTransactionCountUpdater concode_elem_sep boolean gracefulTxnShutdown concode_elem_sep ServerActivityCallback listener concode_elem_sep AtomicReferenceFieldUpdater<EJBSuspendHandlerService,ServerActivityCallback> listenerUpdater concode_elem_sep InjectedValue<SuspendController> suspendControllerInjectedValue concode_elem_sep InjectedValue<LocalTransactionContext> localTransactionContextInjectedValue concode_elem_sep int activeTransactionCount concode_elem_sep AtomicIntegerFieldUpdater<EJBSuspendHandlerService> activeInvocationCountUpdater concode_elem_sep boolean suspended concode_elem_sep ServiceName SERVICE_NAME concode_field_sep void resume concode_elem_sep void beforeCompletion concode_elem_sep void enableGracefulTxnShutdown concode_elem_sep void invocationComplete concode_elem_sep void doneSuspended concode_elem_sep boolean isSuspended concode_elem_sep void decrementTransactionCount concode_elem_sep void start concode_elem_sep InjectedValue<SuspendController> getSuspendControllerInjectedValue concode_elem_sep void suspended concode_elem_sep void transactionCreated concode_elem_sep EJBSuspendHandlerService getValue concode_elem_sep void stop concode_elem_sep InjectedValue<LocalTransactionContext> getLocalTransactionContextInjectedValue concode_elem_sep InjectedValue<DeploymentRepository> getDeploymentRepositoryInjectedValue concode_elem_sep boolean acceptInvocation concode_elem_sep void preSuspend"}
{"code": "String function ( byte [ ] arg0 , byte [ ] arg1 ) { return Base64 . encodeBase64String ( hmacSha256 ( arg0 , arg1 ) ) ; }", "nl": "sign a hawk request string . concode_field_sep int HAWK_HEADER_VERSION concode_elem_sep long skewSeconds concode_elem_sep String LOG_TAG concode_elem_sep boolean includePayloadHash concode_elem_sep String id concode_elem_sep String HMAC_SHA256_ALGORITHM concode_elem_sep int NONCE_LENGTH_IN_BYTES concode_elem_sep byte[] key concode_field_sep long getTimestampSeconds concode_elem_sep String getPayloadHashString concode_elem_sep byte[] hmacSha256 concode_elem_sep long now concode_elem_sep String escapeExtraString concode_elem_sep String getBaseContentType concode_elem_sep String escapeExtraHeaderAttribute concode_elem_sep byte[] getPayloadHash concode_elem_sep String getRequestString concode_elem_sep Header getAuthHeader concode_elem_sep Header getAuthHeader"}
{"code": "void function ( Test arg0 ) { fTests . addElement ( arg0 ) ; }", "nl": "adds a test to the suite . concode_field_sep String fName concode_elem_sep Vector fTests concode_field_sep void setName concode_elem_sep int testCount concode_elem_sep void addTestSuite concode_elem_sep String getName concode_elem_sep void addTestMethod concode_elem_sep void run concode_elem_sep boolean isTestMethod concode_elem_sep Test createTest concode_elem_sep Test testAt concode_elem_sep Enumeration tests concode_elem_sep String exceptionToString concode_elem_sep Constructor getTestConstructor concode_elem_sep Test warning concode_elem_sep String toString concode_elem_sep int countTestCases concode_elem_sep boolean isPublicTestMethod concode_elem_sep void runTest"}
{"code": "Iterator4 function ( Iterator4 arg0 ) { return new FlatteningIterator ( arg0 ) ; }", "nl": "yields a flat sequence of elements . any iterable4 or iterator4 found in the original sequence is recursively flattened . concode_field_sep Object NO_ELEMENT concode_elem_sep Object SKIP concode_elem_sep Iterator4 EMPTY_ITERATOR concode_elem_sep Iterable4 EMPTY_ITERABLE concode_field_sep Object next concode_elem_sep Iterable4 crossProduct concode_elem_sep Iterable4 crossProduct concode_elem_sep Iterable4 crossProduct concode_elem_sep Iterable4 iterable concode_elem_sep Iterable4 iterable concode_elem_sep Iterator4<Integer> range concode_elem_sep Object current concode_elem_sep Iterator4 iterator concode_elem_sep Iterator4 iterator concode_elem_sep Iterator4 iterator concode_elem_sep Object[] toArray concode_elem_sep Object[] toArray concode_elem_sep Iterable4 enumerate concode_elem_sep String join concode_elem_sep String join concode_elem_sep String join concode_elem_sep Iterator4 copy concode_elem_sep Iterator4 map concode_elem_sep Iterator4 map concode_elem_sep Iterable4 map concode_elem_sep Iterator4 iterate concode_elem_sep Iterator4 singletonIterator concode_elem_sep boolean moveNext concode_elem_sep Iterable4 singletonIterable concode_elem_sep java.util.Iterator<T> platformIterator concode_elem_sep Iterator4 concat concode_elem_sep Iterator4 concat concode_elem_sep Iterable4 concat concode_elem_sep Iterable4 concat concode_elem_sep Iterator4 concat concode_elem_sep Iterable4 concatMap concode_elem_sep boolean any concode_elem_sep Iterator4<T> filter concode_elem_sep Iterable4 filter concode_elem_sep Iterator4 filter concode_elem_sep Iterator4<T> take concode_elem_sep int size concode_elem_sep int size concode_elem_sep Iterable4<T> series concode_elem_sep void reset concode_elem_sep String toString concode_elem_sep String toString concode_elem_sep Iterable4 append"}
{"code": "ResourceEditPropertyBuilder function ( String arg0 ) { this . propertyComment = convert ( arg0 ) ; return this ; }", "nl": "comment on propertydescriptor concode_field_sep boolean isTesting concode_elem_sep String typeName concode_elem_sep Clob propertyValue concode_elem_sep Clob exampleValue concode_elem_sep boolean isEncrypted concode_elem_sep String propContName concode_elem_sep Integer descriptorId concode_elem_sep String typeContName concode_elem_sep Integer typeId concode_elem_sep Clob defaultValue concode_elem_sep String resourceName concode_elem_sep String fcExternalKey concode_elem_sep String technicalKey concode_elem_sep String mik concode_elem_sep Integer propContextId concode_elem_sep String origin concode_elem_sep Integer cardinalityProperty concode_elem_sep Integer propertyValueTypeId concode_elem_sep String displayName concode_elem_sep String fcOwner concode_elem_sep Integer propertyId concode_elem_sep Integer masterTypeId concode_elem_sep boolean isNullable concode_elem_sep String fcExternalLink concode_elem_sep String validationRegex concode_elem_sep String loadedFor concode_elem_sep boolean isOptional concode_elem_sep String validationLogic concode_elem_sep String descriptorOrigin concode_elem_sep Integer typeContextId concode_elem_sep Clob propertyComment concode_field_sep ResourceEditPropertyBuilder withDisplayAndTechKeyName concode_elem_sep ResourceEditPropertyBuilder withOrigin concode_elem_sep ResourceEditPropertyBuilder withValidationRegex concode_elem_sep ResourceEditPropertyBuilder withIsEncrypted concode_elem_sep ResourceEditPropertyBuilder withDescriptorOrigin concode_elem_sep Clob convert concode_elem_sep ResourceEditPropertyBuilder withTechnicalKey concode_elem_sep ResourceEditPropertyBuilder withMasterResTypeName concode_elem_sep ResourceEditPropertyBuilder withLoadedFor concode_elem_sep ResourceEditPropertyBuilder withDisplayName concode_elem_sep ResourceEditPropertyBuilder withValue concode_elem_sep ResourceEditPropertyBuilder withFcExternalLink concode_elem_sep ResourceEditPropertyBuilder withDefaultValue concode_elem_sep ResourceEditPropertyBuilder withDescriptorId concode_elem_sep ResourceEditPropertyBuilder withTypeId concode_elem_sep ResourceEditPropertyBuilder withDescriptor concode_elem_sep ResourceEditPropertyBuilder withCardinality concode_elem_sep ResourceEditPropertyBuilder withPropTypeContName concode_elem_sep ResourceEditPropertyBuilder withValidationLogic concode_elem_sep ResourceEditPropertyBuilder withPropertyContextTypeId concode_elem_sep ResourceEditPropertyBuilder withPropertyId concode_elem_sep ResourceEditPropertyBuilder withPropContName concode_elem_sep ResourceEditPropertyBuilder withFcOwner concode_elem_sep ResourceEditPropertyBuilder withMasterResTypeId concode_elem_sep ResourceEditPropertyBuilder withFcExternalKey concode_elem_sep ResourceEditProperty build concode_elem_sep ResourceEditPropertyBuilder withIsTesting concode_elem_sep ResourceEditPropertyBuilder withExampleValue concode_elem_sep ResourceEditPropertyBuilder withResourceName concode_elem_sep ResourceEditPropertyBuilder withPropContextId concode_elem_sep ResourceEditPropertyBuilder withIsNullable"}
{"code": "IUICondition function ( String arg0 ) { return new HasTextCondition ( this , arg0 ) ; }", "nl": "create a condition that tests if the given widget has the expected text . concode_field_sep PlaceHolder placeHolder concode_field_sep String getText"}
{"code": "boolean function ( Object arg0 ) { if ( ! ( arg0 instanceof LocalRing ) ) { return false ; } LocalRing < C > loc0 = null ; try { loc0 = ( LocalRing < C > ) arg0 ; } catch ( ClassCastException loc1 ) { } if ( loc0 == null ) { return false ; } if ( ! ring . equals ( loc0 . ring ) ) { return false ; } return ideal . equals ( loc0 . ideal ) ; }", "nl": "comparison with any other object . concode_field_sep Logger logger concode_elem_sep C ideal concode_elem_sep RingFactory<C> ring concode_elem_sep int isField concode_field_sep Local<C> random concode_elem_sep Local<C> random concode_elem_sep int hashCode concode_elem_sep boolean isField concode_elem_sep Local<C> getONE concode_elem_sep boolean isCommutative concode_elem_sep Local<C> getZERO concode_elem_sep Local<C> fromInteger concode_elem_sep Local<C> fromInteger concode_elem_sep boolean isAssociative concode_elem_sep String toString concode_elem_sep Local<C> parse concode_elem_sep Local<C> parse concode_elem_sep Local<C> copy concode_elem_sep java.math.BigInteger characteristic"}
{"code": "void function ( double arg0 ) { this . torusDimensionSize = arg0 ; this . halfTorusDimensionSize = arg0 * 0.5d ; }", "nl": "to be set by the configurator . concode_field_sep RandomGenerator rand concode_elem_sep double torusDimensionSize concode_elem_sep int noOfDimensions concode_elem_sep double halfTorusDimensionSize concode_elem_sep double[] rawPos concode_field_sep double getDistance concode_elem_sep NetPosition getPosition concode_elem_sep void writeBackToXML concode_elem_sep void setNoOfDimensions concode_elem_sep double[] getRawTorusPositionFor concode_elem_sep double[] getRawPos"}
{"code": "HttpRequestHandler function ( final HttpRequest arg0 ) { Args . notNull ( arg0 , \"srini_string\" ) ; return matcher . lookup ( getRequestPath ( arg0 ) ) ; }", "nl": "looks up a handler matching the given request uri . concode_field_sep UriPatternMatcher<HttpRequestHandler> matcher concode_field_sep void unregister concode_elem_sep void register concode_elem_sep String getRequestPath"}
{"code": "byte [ ] function ( ) { byte loc0 [ ] = new byte [ pos ] ; System . arraycopy ( buf , 0 , loc0 , 0 , pos ) ; return loc0 ; }", "nl": "makes a copy of the internal buffer . concode_field_sep int pos concode_elem_sep byte buf[] concode_field_sep void writeInt concode_elem_sep void writeByte concode_elem_sep byte[] getBuffer concode_elem_sep void writeFloat concode_elem_sep void writeChar concode_elem_sep void writeLong concode_elem_sep void writeBytes concode_elem_sep int size concode_elem_sep void writeCharsAsBytes concode_elem_sep void writeUTF concode_elem_sep void reset concode_elem_sep void writeStringZ concode_elem_sep void writeShort concode_elem_sep void writeChars concode_elem_sep void write concode_elem_sep void write concode_elem_sep void write concode_elem_sep void ensureSpace concode_elem_sep void writeBoolean concode_elem_sep void writeDouble"}
{"code": "byte function ( int arg0 ) { if ( list . isEmpty ( ) ) { throw new EmptyStackException ( ) ; } return list . get ( list . size ( ) - arg0 - 1 ) ; }", "nl": "return the n'th byte down the stack , where 0 is the top element and size -1 is the bottom element . concode_field_sep ArrayByteList list concode_field_sep byte pop concode_elem_sep int search concode_elem_sep int size concode_elem_sep byte get concode_elem_sep void clear concode_elem_sep byte push concode_elem_sep boolean empty"}
{"code": "ModInteger function ( ModInteger arg0 , ModInteger arg1 ) { if ( arg0 == null ) return null ; return arg0 . remainder ( arg1 ) ; }", "nl": "modinteger remainder . concode_field_sep java.math.BigInteger val concode_elem_sep ModIntegerRing ring concode_field_sep java.math.BigInteger getSymmetricVal concode_elem_sep int MISIGN concode_elem_sep ModInteger gcd concode_elem_sep ModInteger sum concode_elem_sep int compareTo concode_elem_sep ModInteger MINEG concode_elem_sep ModInteger MISUM concode_elem_sep int hashCode concode_elem_sep ModInteger MIDIF concode_elem_sep ModInteger divide concode_elem_sep ModInteger multiply concode_elem_sep int signum concode_elem_sep boolean isONE concode_elem_sep ModInteger inverse concode_elem_sep int MICOMP concode_elem_sep java.math.BigInteger getVal concode_elem_sep boolean isUnit concode_elem_sep ModInteger subtract concode_elem_sep ModInteger MIABS concode_elem_sep ModInteger MIINV concode_elem_sep ModInteger[] egcd concode_elem_sep java.math.BigInteger getModul concode_elem_sep ModInteger abs concode_elem_sep ModInteger MIQ concode_elem_sep ModInteger negate concode_elem_sep boolean equals concode_elem_sep ModInteger clone concode_elem_sep boolean isZERO concode_elem_sep String toString concode_elem_sep ModInteger MIPROD concode_elem_sep ModInteger remainder"}
{"code": "void function ( Host arg0 , double arg1 ) { if ( cumulatedRTTs != null ) throw new IllegalStateException ( \"srini_string\" ) ; List < Double > loc0 = rttToMonitors . get ( arg0 ) ; if ( loc0 == null ) { loc0 = new ArrayList < Double > ( 10 ) ; rttToMonitors . put ( arg0 , loc0 ) ; } loc0 . add ( arg1 ) ; }", "nl": "adds a measured rtt to monitor . if there is still a rtt , it will be replaced , if the new one is smaller concode_field_sep int MONITOR concode_elem_sep AverageAccumulator avgPingAttemptsPerNode concode_elem_sep long serialVersionUID concode_elem_sep double latitude concode_elem_sep String city concode_elem_sep String isp concode_elem_sep boolean locatable concode_elem_sep boolean useCountryNames concode_elem_sep int type concode_elem_sep String countryCode concode_elem_sep GnpPosition coordinateRef concode_elem_sep HostMap mapRef concode_elem_sep int HOST concode_elem_sep String area concode_elem_sep int ipAddress concode_elem_sep HashMap<Host,List<Double>> rttToMonitors concode_elem_sep CumulateRTTStrategy currentStrategy concode_elem_sep HashMap<Host,Double> cumulatedRTTs concode_elem_sep int isNotLocatable concode_elem_sep int regionNotFound concode_elem_sep double longitude concode_elem_sep int ccNotFound concode_elem_sep String region concode_elem_sep int cityNotFound concode_elem_sep String countryName concode_field_sep boolean issetUseCountryNames concode_elem_sep void setUseCountryNames concode_elem_sep void setPositionReference concode_elem_sep int getIpAddress concode_elem_sep int getHostType concode_elem_sep void setLocation concode_elem_sep int hashCode concode_elem_sep String getISP concode_elem_sep String getCountryName concode_elem_sep Set<Host> getMeasuredMonitors concode_elem_sep boolean isLocatable concode_elem_sep String getCity concode_elem_sep void removeRTT concode_elem_sep String getCountryCode concode_elem_sep void printLocatorStats concode_elem_sep double getLongitude concode_elem_sep double getLatitude concode_elem_sep void setHostType concode_elem_sep double getAvgPingAttemptsPerNode concode_elem_sep Double cumulate concode_elem_sep void setRtt concode_elem_sep double getRtt concode_elem_sep String getRegion concode_elem_sep boolean equals concode_elem_sep void setRTTCumulationStrategy concode_elem_sep void cumulateRTTsCond concode_elem_sep String toString concode_elem_sep String getArea concode_elem_sep GnpPosition getGnpPositionReference"}
{"code": "void function ( int arg0 ) { if ( sampleEncryptionData == null || sampleEncryptionData . limit ( ) < arg0 ) { sampleEncryptionData = new ParsableByteArray ( arg0 ) ; } sampleEncryptionDataLength = arg0 ; definesEncryptionData = true ; sampleEncryptionDataNeedsFill = true ; }", "nl": "configures the fragment to be one that defines encryption data of the specified length . #definesencryptiondata is set to true , #sampleencryptiondatalength is set tothe specified length , and #sampleencryptiondata is resized if necessary such that itis at least this length . concode_field_sep boolean definesEncryptionData concode_elem_sep int length concode_elem_sep boolean sampleEncryptionDataNeedsFill concode_elem_sep boolean[] sampleIsSyncFrameTable concode_elem_sep int sampleEncryptionDataLength concode_elem_sep boolean[] sampleHasSubsampleEncryptionTable concode_elem_sep long auxiliaryDataPosition concode_elem_sep long[] sampleDecodingTimeTable concode_elem_sep ParsableByteArray sampleEncryptionData concode_elem_sep int[] sampleSizeTable concode_elem_sep DefaultSampleValues header concode_elem_sep int[] sampleCompositionTimeOffsetTable concode_elem_sep long dataPosition concode_field_sep long getSamplePresentationTime concode_elem_sep void initTables concode_elem_sep void reset concode_elem_sep void fillEncryptionData concode_elem_sep void fillEncryptionData"}
{"code": "C function ( GenVector < C > arg0 ) { C loc0 = modul . coFac . getZERO ( ) ; List < C > loc1 = arg0 . val ; int loc2 = 0 ; for ( C loc3 : val ) { C loc4 = loc3 . multiply ( loc1 . get ( loc2 ++ ) ) ; loc0 = loc0 . sum ( loc4 ) ; } return loc0 ; }", "nl": "scalar / dot product of this vector with other vector . concode_field_sep List<C> val concode_elem_sep Logger logger concode_elem_sep GenVectorModul<C> modul concode_field_sep int signum concode_elem_sep GenVector<C> leftLinearCombination concode_elem_sep GenVector<C> rightScalarProduct concode_elem_sep GenVector<C> subtract concode_elem_sep GenVector<C> scalarMultiply concode_elem_sep GenVector<C> sum concode_elem_sep GenVector<C> linearCombination concode_elem_sep GenVector<C> linearCombination concode_elem_sep GenVector<C> linearCombination concode_elem_sep int compareTo concode_elem_sep GenVector<C> leftScalarMultiply concode_elem_sep GenVector<C> abs concode_elem_sep int hashCode concode_elem_sep GenVector<C> negate concode_elem_sep boolean equals concode_elem_sep GenVector<C> clone concode_elem_sep boolean isZERO concode_elem_sep String toString"}
{"code": "ITracePoint2D function ( ) { return this . m_previousPoint ; }", "nl": "returns the previous trace point that had to be painted by #paintpoint int , int , int , int , graphics , itracepoint2d . this value will be null if no previous point had to be painted . concode_field_sep ITracePoint2D m_previousPoint concode_elem_sep int m_previousY concode_elem_sep int m_previousX concode_elem_sep long serialVersionUID concode_elem_sep boolean m_isEnded concode_field_sep void discontinue concode_elem_sep void endPaintIteration concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep void paintPoint concode_elem_sep void startPaintIteration concode_elem_sep int getPreviousX concode_elem_sep int compareTo concode_elem_sep int getPreviousY"}
{"code": "void function ( boolean arg0 ) { this . payloadSizeEstimatedWhenAdding = arg0 ; }", "nl": "indicate if payload size should be estimated and controlled when adding properties default is false . concode_field_sep int expiry concode_elem_sep boolean payloadSizeEstimatedWhenAdding concode_elem_sep Logger logger concode_elem_sep JSONObject payload concode_elem_sep int preSendConfiguration concode_elem_sep String DEFAULT_CHARACTER_ENCODING concode_elem_sep String characterEncoding concode_field_sep void setExpiry concode_elem_sep byte[] getPayloadAsBytes concode_elem_sep int getPreSendConfiguration concode_elem_sep void verifyPayloadIsNotEmpty concode_elem_sep Payload asSimulationOnly concode_elem_sep boolean isEstimatedPayloadSizeAllowedAfterAdding concode_elem_sep int estimatePayloadSizeAfterAdding concode_elem_sep int getExpiry concode_elem_sep void validateMaximumPayloadSize concode_elem_sep int getPayloadSize concode_elem_sep int getMaximumPayloadSize concode_elem_sep void put concode_elem_sep void setCharacterEncoding concode_elem_sep JSONObject getPayload concode_elem_sep void addCustomDictionary concode_elem_sep void addCustomDictionary concode_elem_sep void addCustomDictionary concode_elem_sep boolean isPayloadTooLong concode_elem_sep String getCharacterEncoding concode_elem_sep byte[] getPayloadAsBytesUnchecked concode_elem_sep boolean isPayloadSizeEstimatedWhenAdding concode_elem_sep String toString concode_elem_sep void setPreSendConfiguration"}
{"code": "WorkerContext function ( ) { return context . get ( ) ; }", "nl": "returns the local workercontext , beware : could be a newly initialized one , if xmlworker #close or xmlworker #closelocalwc has been called before . concode_field_sep ThreadLocal<WorkerContextImpl> context concode_elem_sep boolean parseHtml concode_elem_sep Pipeline<?> rootpPipe concode_field_sep void closeLocalWC concode_elem_sep void init concode_elem_sep void endElement concode_elem_sep Tag createTag concode_elem_sep void startElement concode_elem_sep boolean ignoreCdata concode_elem_sep void comment concode_elem_sep void text concode_elem_sep WorkerContextImpl initialValue concode_elem_sep void unknownText concode_elem_sep void close concode_elem_sep Tag getCurrentTag"}
{"code": "void function ( Lockscope arg0 ) { this . lockscope = arg0 ; }", "nl": "sets the value of the lockscope property . concode_field_sep Locktype locktype concode_elem_sep Lockscope lockscope concode_field_sep Lockscope getLockscope concode_elem_sep void setLocktype concode_elem_sep Locktype getLocktype"}
{"code": "boolean function ( Integer arg0 ) { return JDBC_TYPE_MAP . containsKey ( arg0 ) ; }", "nl": "same as call to #isstandardtypecode int concode_field_sep CoreMessageLogger LOG concode_elem_sep Map<Integer,String> JDBC_TYPE_MAP concode_field_sep Map<Integer,String> buildJdbcTypeMap concode_elem_sep String getTypeName"}
{"code": "String function ( ) { return toXMLString ( this ) ; }", "nl": "convert this step into a string suitable for editing . the default is the xml representation of the step . concode_field_sep String description concode_elem_sep Resolver resolver concode_elem_sep Throwable invalidScriptError concode_field_sep String toXMLString concode_elem_sep Map getAttributes concode_elem_sep String getXMLTag concode_elem_sep void writeObject concode_elem_sep void usage concode_elem_sep void usage concode_elem_sep Element addAttributes concode_elem_sep void run concode_elem_sep Element toXML concode_elem_sep void setDescription concode_elem_sep String simpleClassName concode_elem_sep Element addContent concode_elem_sep String getDescription concode_elem_sep void parseStepAttributes concode_elem_sep String getUsage concode_elem_sep void readObject concode_elem_sep String getDefaultDescription concode_elem_sep Step createStep concode_elem_sep Step createStep concode_elem_sep void runStep concode_elem_sep ComponentTester resolveTester concode_elem_sep Class resolveClass concode_elem_sep void setScriptError concode_elem_sep String toString concode_elem_sep Resolver getResolver concode_elem_sep Map createAttributeMap"}
{"code": "void function ( ) { reactor = new NioReactor ( dispatcher ) ; LoggingHandler loc0 = new LoggingHandler ( ) ; reactor . registerChannel ( tcpChannel ( 6666 , loc0 ) ) . registerChannel ( tcpChannel ( 6667 , loc0 ) ) . registerChannel ( udpChannel ( 6668 , loc0 ) ) . start ( ) ; }", "nl": "starts the nio reactor . concode_field_sep List<AbstractNioChannel> channels concode_elem_sep NioReactor reactor concode_elem_sep Dispatcher dispatcher concode_field_sep AbstractNioChannel udpChannel concode_elem_sep void stop concode_elem_sep AbstractNioChannel tcpChannel concode_elem_sep void main"}
{"code": "String function ( String arg0 ) { while ( true ) { int loc0 = arg0 . indexOf ( ' ' ) ; if ( loc0 < 0 ) { break ; } arg0 = arg0 . substring ( 0 , loc0 ) + arg0 . substring ( loc0 + 1 ) ; } return ( arg0 ) ; }", "nl": "translate space character into & pct ; 20 to avoid problems with paths that contain spaces on some jvms . concode_field_sep String CONFIG_CLASS_RESOURCE concode_elem_sep Log log concode_elem_sep String CONFIG_WEB_RESOURCE concode_elem_sep String RULE_SET concode_elem_sep String CONFIG_ATTR concode_field_sep void contextInitialized concode_elem_sep void contextDestroyed concode_elem_sep void parseJarResources concode_elem_sep void parseJarResources"}
{"code": "String function ( String arg0 ) { return Strings . markLTR ( arg0 , URL_DELIMITERS ) ; }", "nl": "returns the label for a url , uri or url part . example is ` http://www.x.xom/s.html#1 ' concode_field_sep String CODE_DELIMITERS concode_elem_sep String FILE_PATTERN_DELIMITERS concode_elem_sep String URL_DELIMITERS concode_field_sep String getJavaCodeString concode_elem_sep String getWorkingSetLabel concode_elem_sep String getJavaElementName concode_elem_sep String getFilePattern concode_elem_sep String getResourceName concode_elem_sep String getResourceName concode_elem_sep String getVersionName concode_elem_sep String getFileName concode_elem_sep String getPathLabel concode_elem_sep String getPathLabel"}
{"code": "Asn1Type function ( byte [ ] arg0 ) { return decode ( ByteBuffer . wrap ( arg0 ) ) ; }", "nl": "blindly decode content and return the result asn1 object . concode_field_sep PlaceHolder placeHolder concode_field_sep void encode concode_elem_sep byte[] encode concode_elem_sep void decodeAndDump concode_elem_sep void decodeAndDump concode_elem_sep void decodeAndDump concode_elem_sep Asn1ParseResult parse concode_elem_sep Asn1ParseResult parse concode_elem_sep void dump concode_elem_sep void parseAndDump concode_elem_sep void parseAndDump concode_elem_sep void parseAndDump"}
{"code": "boolean function ( Bundle arg0 ) { if ( null == arg0 ) { return false ; } if ( ! arg0 . containsKey ( BUNDLE_EXTRA_STRING_MESSAGE ) ) { return false ; } return true ; }", "nl": "method to verify the content of the bundle are correct . this method will not mutate bundle . concode_field_sep String BUNDLE_EXTRA_STRING_MESSAGE concode_field_sep Bundle generateBundle"}
{"code": "Class < ? > function ( ) { return this . elementType ; }", "nl": "returns the class of type of elements held in this arraydeclarationinfo concode_field_sep long serialVersionUID concode_elem_sep List<Class<?>> inputTypesCached concode_elem_sep Class<?> outputTypeCached concode_elem_sep int hashCodeCached concode_elem_sep boolean hashCodeComputed concode_elem_sep String ID concode_elem_sep int length concode_elem_sep Class<?> elementType concode_field_sep Class<?> getOutputType concode_elem_sep List<Class<?>> getInputTypes concode_elem_sep String toStringShort concode_elem_sep String toParseableString concode_elem_sep StatementKind parse concode_elem_sep Object writeReplace concode_elem_sep ExecutionOutcome execute concode_elem_sep void appendCode concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep String toStringVerbose concode_elem_sep int getLength concode_elem_sep String toString"}
{"code": "void function ( PersistentCollection arg0 ) { if ( isIgnore ( ) ) { ignore = false ; } else if ( ! isProcessed ( ) ) { throw new AssertionFailure ( \"srini_string\" + arg0 . getRole ( ) + \"srini_string\" ) ; } arg0 . setSnapshot ( loadedKey , role , snapshot ) ; }", "nl": "called after a successful flush concode_field_sep CollectionPersister currentPersister concode_elem_sep String role concode_elem_sep boolean fromMerge concode_elem_sep boolean dorecreate concode_elem_sep boolean processed concode_elem_sep Serializable currentKey concode_elem_sep Logger LOG concode_elem_sep CollectionPersister loadedPersister concode_elem_sep boolean reached concode_elem_sep boolean ignore concode_elem_sep Serializable loadedKey concode_elem_sep boolean doremove concode_elem_sep boolean doupdate concode_elem_sep Serializable snapshot concode_field_sep Serializable getCurrentKey concode_elem_sep void setDoupdate concode_elem_sep CollectionPersister getLoadedPersister concode_elem_sep void afterDeserialize concode_elem_sep void setProcessed concode_elem_sep boolean isDorecreate concode_elem_sep void preFlush concode_elem_sep void resetStoredSnapshot concode_elem_sep boolean isDoremove concode_elem_sep void postInitialize concode_elem_sep void setCurrentKey concode_elem_sep void setLoadedPersister concode_elem_sep boolean wasDereferenced concode_elem_sep boolean isReached concode_elem_sep boolean isDoupdate concode_elem_sep CollectionEntry deserialize concode_elem_sep void dirty concode_elem_sep Serializable getKey concode_elem_sep boolean isIgnore concode_elem_sep String getRole concode_elem_sep boolean isSnapshotEmpty concode_elem_sep Serializable getLoadedKey concode_elem_sep void afterAction concode_elem_sep Serializable getSnapshot concode_elem_sep Collection getOrphans concode_elem_sep void serialize concode_elem_sep void setReached concode_elem_sep void setCurrentPersister concode_elem_sep void setDoremove concode_elem_sep void setRole concode_elem_sep boolean isProcessed concode_elem_sep String toString concode_elem_sep CollectionPersister getCurrentPersister concode_elem_sep void setDorecreate"}
{"code": "JavaPairRDD < String , MatchableEntity > function ( JavaPairRDD < String , MatchableEntity > arg0 ) { return arg0 ; }", "nl": "returns the same citations rdd that was specified as argument . concode_field_sep PlaceHolder placeHolder concode_field_sep JavaPairRDD<String,MatchableEntity> convertDocuments"}
{"code": "void function ( SourceDataLine arg0 ) { if ( lines . size ( ) < 16 ) { lines . addElement ( arg0 ) ; } else { arg0 . close ( ) ; } }", "nl": "adds a line to the pool and makes it available for reuse . if more than 8 lines are in the cache , then the line is closed . concode_field_sep int volume concode_elem_sep Vector lines concode_elem_sep int loopCount concode_elem_sep int loopStart concode_elem_sep Thread workerThread concode_elem_sep Mixer mixer concode_elem_sep float pan concode_elem_sep int loopEnd concode_elem_sep int sampleRate concode_elem_sep byte[] samples concode_field_sep void play concode_elem_sep void setLoopPoints concode_elem_sep void stop concode_elem_sep void configureDataLine concode_elem_sep void loop concode_elem_sep void loop concode_elem_sep SourceDataLine aquireLine concode_elem_sep void run concode_elem_sep Mixer getMixer"}
{"code": "void function ( int arg0 ) { if ( ! eventPool . containsKey ( arg0 ) ) { throw new EventDoesNotExistException ( arg0 + \"srini_string\" ) ; } eventPool . get ( arg0 ) . status ( ) ; }", "nl": "get status of a running event . concode_field_sep Random rand concode_elem_sep int currentlyRunningSyncEvent concode_elem_sep int MIN_ID concode_elem_sep int MAX_RUNNING_EVENTS concode_elem_sep int MAX_EVENT_TIME concode_elem_sep Map<Integer,Event> eventPool concode_elem_sep int MAX_ID concode_field_sep void cancel concode_elem_sep void completedEventHandler concode_elem_sep void start concode_elem_sep int generateId concode_elem_sep int create concode_elem_sep int createEvent concode_elem_sep Map<Integer,Event> getEventPool concode_elem_sep int numOfCurrentlyRunningSyncEvent concode_elem_sep int createAsync concode_elem_sep void statusOfAllEvents concode_elem_sep void shutdown"}
{"code": "void function ( ) { isTrue ( false ) ; }", "nl": "fail . should be used whenever an impossible state is encountered such as the default branch of a switch over all possible values of an enum : such an assertion may save future developers time when they try to add new states concode_field_sep PlaceHolder placeHolder concode_field_sep void equal concode_elem_sep void equal concode_elem_sep void isNotNull concode_elem_sep void isNotNull concode_elem_sep void isTrue concode_elem_sep void isTrue concode_elem_sep void isNull concode_elem_sep void isNull concode_elem_sep void isFalse concode_elem_sep void isFalse"}
{"code": "void function ( int arg0 ) { this . weight = arg0 ; }", "nl": "set a new opponent 's weight . should be negative or zero concode_field_sep String teamName concode_elem_sep int weight concode_elem_sep Player player concode_field_sep String getPlayerNick concode_elem_sep void changeWeight concode_elem_sep int getWeight concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep Opponent clone concode_elem_sep String toString concode_elem_sep int compareTo concode_elem_sep String getTeamName"}
{"code": "void function ( ) { }", "nl": "called on the event dispatching thread not on the worker thread after the construct method has finished and after done or failed has been invoked . the default implementation does nothing . subclasses may override this method to perform completion actions on the event dispatch thread . concode_field_sep Throwable error concode_elem_sep T value concode_field_sep Throwable getError concode_elem_sep T getValue concode_elem_sep void setError concode_elem_sep void setValue concode_elem_sep void start concode_elem_sep void run concode_elem_sep T construct concode_elem_sep void failed concode_elem_sep void done"}
{"code": "void function ( int arg0 [ ] , int arg1 [ ] , int arg2 , int arg3 , int arg4 ) { for ( int loc0 = arg2 ; loc0 <= arg3 ; loc0 ++ ) { arg0 [ loc0 ] += arg4 ; } updateSegmentTreeRange ( arg1 , arg2 , arg3 , arg4 , 0 , arg0 . length - 1 , 0 ) ; }", "nl": "updates segment tree for given range by given delta concode_field_sep PlaceHolder placeHolder concode_field_sep int rangeMinimumQueryLazy concode_elem_sep int rangeMinimumQueryLazy concode_elem_sep int rangeMinimumQuery concode_elem_sep int rangeMinimumQuery concode_elem_sep int[] createSegmentTree concode_elem_sep void constructMinSegmentTree concode_elem_sep void main concode_elem_sep void updateSegmentTree concode_elem_sep void updateSegmentTree concode_elem_sep void updateSegmentTreeRangeLazy concode_elem_sep void updateSegmentTreeRangeLazy"}
{"code": "int function ( ) { if ( resultComputed ) { return iterationCount ; } else { throw new IllegalStateException ( \"srini_string\" ) ; } }", "nl": "access the last iteration count . concode_field_sep double functionValueAccuracy concode_elem_sep boolean resultComputed concode_elem_sep double defaultFunctionValueAccuracy concode_elem_sep UnivariateRealFunction f concode_elem_sep double relativeAccuracy concode_elem_sep double absoluteAccuracy concode_elem_sep double result concode_elem_sep int iterationCount concode_elem_sep int defaultMaximalIterationCount concode_elem_sep int maximalIterationCount concode_elem_sep double defaultAbsoluteAccuracy concode_elem_sep double defaultRelativeAccuracy concode_elem_sep long serialVersionUID concode_field_sep double getFunctionValueAccuracy concode_elem_sep void setAbsoluteAccuracy concode_elem_sep void verifySequence concode_elem_sep boolean isSequence concode_elem_sep void setResult concode_elem_sep void setRelativeAccuracy concode_elem_sep void resetFunctionValueAccuracy concode_elem_sep int getMaximalIterationCount concode_elem_sep void resetRelativeAccuracy concode_elem_sep double getAbsoluteAccuracy concode_elem_sep void resetAbsoluteAccuracy concode_elem_sep void verifyInterval concode_elem_sep double getResult concode_elem_sep void setMaximalIterationCount concode_elem_sep void resetMaximalIterationCount concode_elem_sep boolean isBracketing concode_elem_sep void clearResult concode_elem_sep void verifyBracketing concode_elem_sep double getRelativeAccuracy concode_elem_sep void setFunctionValueAccuracy"}
{"code": "int [ ] function ( ) { return this . aVueltas ; }", "nl": "obtener las vueltas calculadas , para saber el valor de cada posicion del array podemos usar la variable : public static final int billetes_monedas concode_field_sep float precio concode_elem_sep int BILLETE_MINIMO concode_elem_sep int[] aVueltas concode_elem_sep float pago concode_elem_sep float[] BILLETES_MONEDAS concode_field_sep void calcular concode_elem_sep void imprimirVueltas concode_elem_sep float getPago concode_elem_sep float getPago"}
{"code": "void function ( ) { this . testSarWithinEar ( \"srini_string\" ) ; }", "nl": "tests that invocation on a service deployed within a . sar , inside a . ear without an application.xml , is successful . concode_field_sep JMXConnector connector concode_elem_sep String EAR_WITH_APPLICATION_XML concode_elem_sep ManagementClient managementClient concode_elem_sep String EAR_WITHOUT_APPLICATION_XML concode_field_sep void closeConnector concode_elem_sep MBeanServerConnection getMBeanServerConnection concode_elem_sep void testSarWithinEar concode_elem_sep EnterpriseArchive getEarWithApplicationDotXml concode_elem_sep void testSarWithinEarWithApplicationXml concode_elem_sep EnterpriseArchive getEarWithoutApplicationDotXml"}
{"code": "SAXParser function ( ) { try { return SAXParserFactory . newInstance ( ) . newSAXParser ( ) ; } catch ( ParserConfigurationException loc0 ) { throw new OsmosisRuntimeException ( \"srini_string\" , loc0 ) ; } catch ( SAXException loc0 ) { throw new OsmosisRuntimeException ( \"srini_string\" , loc0 ) ; } }", "nl": "creates a new sax parser . concode_field_sep Logger log concode_elem_sep File file concode_elem_sep boolean enableDateParsing concode_elem_sep Sink sink concode_elem_sep InputStream inputStream concode_elem_sep CompressionMethod compressionMethod concode_field_sep void setSink concode_elem_sep void run"}
{"code": "MetricsAggregate function ( ) { return peerVariation ; }", "nl": "this method returns an aggregate of the complexity of the solved queries at a certain level . the method returns the complexity , which is attained by varying the amount of searched peers . concode_field_sep MetricsAggregate peerVariation concode_elem_sep int counter concode_elem_sep MetricsAggregate conditionVarition concode_field_sep int getCounter concode_elem_sep void setPeerVariation concode_elem_sep void setConditionVarition concode_elem_sep MetricsAggregate getConditionVarition concode_elem_sep void setCounter"}
{"code": "void function ( ) { p . content ( context , null , null , po ) ; Assert . assertEquals ( writable , lst . get ( 0 ) ) ; }", "nl": "verifies that the content of the processobject is processed on content . concode_field_sep ElementHandlerPipeline p concode_elem_sep WorkerContextImpl context concode_elem_sep List<Writable> lst concode_elem_sep ProcessObject po concode_elem_sep WritableElement writable concode_field_sep void runOpen concode_elem_sep void setup concode_elem_sep void runClose"}
{"code": "void function ( final Type arg0 ) { final Type [ ] loc0 = new Type [ this . interfaces . length + 1 ] ; for ( int loc1 = 0 ; loc1 < this . interfaces . length ; loc1 ++ ) { loc0 [ loc1 ] = this . interfaces [ loc1 ] ; } loc0 [ loc0 . length - 1 ] = arg0 ; this . setInterfaces ( loc0 ) ; }", "nl": "adds an interface of a given type to the set of interfaces that the class implements . concode_field_sep boolean dirty concode_elem_sep ClassInfo classInfo concode_elem_sep Type[] interfaces concode_elem_sep Type superclass concode_elem_sep EditorContext context concode_elem_sep ConstantPool constants concode_elem_sep Type type concode_elem_sep boolean DEBUG concode_field_sep void setInterface concode_elem_sep void setInterfaces concode_elem_sep boolean isStatic concode_elem_sep boolean isSuper concode_elem_sep MethodInfo[] methods concode_elem_sep void commit concode_elem_sep boolean isPrivate concode_elem_sep Type type concode_elem_sep int modifiers concode_elem_sep void setDirty concode_elem_sep void setFinal concode_elem_sep void setSuper concode_elem_sep boolean isDirty concode_elem_sep boolean isProtected concode_elem_sep Type superclass concode_elem_sep int hashCode concode_elem_sep void setProtected concode_elem_sep EditorContext context concode_elem_sep boolean isPublic concode_elem_sep boolean isFinal concode_elem_sep ConstantPool constants concode_elem_sep boolean isInterface concode_elem_sep ClassInfo classInfo concode_elem_sep void setPublic concode_elem_sep Type[] interfaces concode_elem_sep void setStatic concode_elem_sep void setType concode_elem_sep void commitOnly concode_elem_sep boolean isAbstract concode_elem_sep void setSuperclass concode_elem_sep boolean equals concode_elem_sep String name concode_elem_sep void setAbstract concode_elem_sep String toString concode_elem_sep void visit concode_elem_sep FieldInfo[] fields concode_elem_sep void setPrivate"}
{"code": "LocalValidatorFactoryBean function ( ) { return new LocalValidatorFactoryBean ( ) ; }", "nl": "this method creates a validator object that adds support for bean validation api 1.0 and 1.1 . concode_field_sep PlaceHolder placeHolder concode_field_sep SortHandlerMethodArgumentResolver sortArgumentResolver concode_elem_sep MappingJackson2HttpMessageConverter jacksonDateTimeConverter concode_elem_sep LocaleResolver fixedLocaleResolver concode_elem_sep ExceptionHandlerExceptionResolver restErrorHandler"}
{"code": "String function ( ) { return this . baseID ; }", "nl": "get the base id url or system id from where urls will be resolved . concode_field_sep Node node concode_elem_sep String FEATURE concode_elem_sep String baseID concode_field_sep void setSystemId concode_elem_sep void setNode concode_elem_sep Node getNode"}
{"code": "List < String > function ( Tag arg0 ) { List < String > loc0 = new ArrayList < String > ( ) ; Tag loc1 = arg0 . getParent ( ) ; while ( loc1 != null && ! ( loc1 . getName ( ) . equals ( HTML . Tag . BODY ) ) ) { loc0 . add ( loc1 . getName ( ) ) ; loc1 = loc1 . getParent ( ) ; } return loc0 ; }", "nl": "creates a parenttree of all parents of a given tag concode_field_sep PlaceHolder placeHolder concode_field_sep List<Tag> getParentTagTree"}
{"code": "void function ( ) { Query loc0 = st . query ( ) ; loc0 . descend ( \"srini_string\" ) ; Object [ ] loc1 = store ( ) ; st . expect ( loc0 , loc1 ) ; }", "nl": "only concode_field_sep SodaTest st concode_elem_sep Object childFirst concode_elem_sep Object child concode_field_sep String toString concode_elem_sep String toString concode_elem_sep void main concode_elem_sep Object[] store"}
{"code": "void function ( final int arg0 ) { final int loc0 = this . m_value ; this . m_value -= arg0 ; if ( loc0 < this . m_value ) { this . m_value = loc0 ; throw new ArithmeticException ( \"srini_string\" ) ; } }", "nl": "substracts the given value from the internal value . concode_field_sep int MIN_VALUE concode_elem_sep int MAX_VALUE concode_elem_sep int m_value concode_field_sep void add concode_elem_sep void add concode_elem_sep void add concode_elem_sep int getValue concode_elem_sep int hashCode concode_elem_sep int intValue concode_elem_sep boolean equals concode_elem_sep void setValue concode_elem_sep String toString"}
{"code": "void function ( String arg0 ) { this . outOfServiceByRelease = arg0 ; }", "nl": "sets the value of the outofservicebyrelease property . concode_field_sep String fcLink concode_elem_sep String techStack concode_elem_sep String fcKey concode_elem_sep String outOfServiceByRelease concode_elem_sep ApplicationID id concode_elem_sep List<ApplicationReleaseBinding> structure concode_field_sep String getFcLink concode_elem_sep void setTechStack concode_elem_sep String getTechStack concode_elem_sep String getFcKey concode_elem_sep void setFcKey concode_elem_sep List<ApplicationReleaseBinding> getStructure concode_elem_sep void setFcLink concode_elem_sep void setId concode_elem_sep ApplicationID getId concode_elem_sep String getOutOfServiceByRelease"}
{"code": "ClassLoader function ( ClassLoader arg0 , boolean arg1 , Class arg2 ) { if ( arg0 != null ) { return arg0 ; } if ( arg1 ) { ClassLoader loc0 = Thread . currentThread ( ) . getContextClassLoader ( ) ; if ( loc0 != null ) { return loc0 ; } } return getClassLoader ( arg2 ) ; }", "nl": "return the class loader to be used for instantiating application objects when required . this is determined based upon the following rules : the specified class loader , if any the thread context class loader , if it exists and usecontextclassloader is true the class loader used to load the calling class . the system class loader . concode_field_sep Log log concode_field_sep Class loadClass concode_elem_sep Class loadClass"}
{"code": "Set < String > function ( ) { return namedDescriptorMap . keySet ( ) ; }", "nl": "access to the names of all named parameters concode_field_sep Map<String,NamedParameterDescriptor> namedDescriptorMap concode_elem_sep OrdinalParameterDescriptor[] ordinalDescriptors concode_elem_sep OrdinalParameterDescriptor[] EMPTY_ORDINALS concode_field_sep int getOrdinalParameterSourceLocation concode_elem_sep NamedParameterDescriptor getNamedParameterDescriptor concode_elem_sep Type getOrdinalParameterExpectedType concode_elem_sep Type getNamedParameterExpectedType concode_elem_sep int[] getNamedParameterSourceLocations concode_elem_sep OrdinalParameterDescriptor getOrdinalParameterDescriptor concode_elem_sep int getOrdinalParameterCount"}
{"code": "void function ( ) { if ( fDialogFieldListener != null ) { fDialogFieldListener . dialogFieldChanged ( this ) ; } }", "nl": "programatical invocation of a dialog field change . concode_field_sep String fLabelText concode_elem_sep IDialogFieldListener fDialogFieldListener concode_elem_sep Label fLabel concode_elem_sep boolean fEnabled concode_field_sep Label getLabelControl concode_elem_sep boolean isOkToUse concode_elem_sep void refresh concode_elem_sep boolean setFocus concode_elem_sep void setEnabled concode_elem_sep void setDialogFieldListener concode_elem_sep Control[] doFillIntoGrid concode_elem_sep Control createEmptySpace concode_elem_sep Control createEmptySpace concode_elem_sep boolean isEnabled concode_elem_sep void setLabelText concode_elem_sep GridData gridDataForLabel concode_elem_sep void updateEnableState concode_elem_sep void postSetFocusOnDialogField concode_elem_sep void assertEnoughColumns concode_elem_sep void assertCompositeNotNull concode_elem_sep int getNumberOfControls"}
{"code": "String function ( String arg0 ) { final String loc0 = hostToIp . get ( arg0 ) ; return loc0 == null ? arg0 : loc0 ; }", "nl": "returns the ip address mapped to the given hostname . if no mapping exists , the hostname is returned . concode_field_sep Map<String,TaskStatus> statuses concode_elem_sep Set<String> waitPorts concode_elem_sep List<String> hosts concode_elem_sep Map<String,String> hostToIp concode_elem_sep Logger log concode_elem_sep HeliosClient client concode_elem_sep Prober prober concode_elem_sep String jobDeployedMessageFormat concode_elem_sep Job job concode_field_sep void awaitHasContainerId concode_elem_sep List<HostAndPort> addresses concode_elem_sep HostAndPort address concode_elem_sep void awaitUp concode_elem_sep List<String> hosts concode_elem_sep void verifyHealthy concode_elem_sep void verifyHealthy concode_elem_sep void deploy concode_elem_sep void outputDeployedMessage concode_elem_sep Integer port concode_elem_sep Map<String,TaskStatus> statuses concode_elem_sep Job job concode_elem_sep void awaitPort concode_elem_sep void undeploy concode_elem_sep void undeploy"}
{"code": "List function ( ) { return ones ; }", "nl": "returns the ones . concode_field_sep String name concode_elem_sep List ones concode_elem_sep Holder otherHolder concode_elem_sep String id concode_elem_sep Foo[] fooArray concode_elem_sep Set foos concode_field_sep Foo[] getFooArray concode_elem_sep void setName concode_elem_sep void setOnes concode_elem_sep String getName concode_elem_sep void setFooArray concode_elem_sep void setFoos concode_elem_sep void setOtherHolder concode_elem_sep void setId concode_elem_sep String getId concode_elem_sep Holder getOtherHolder concode_elem_sep Set getFoos"}
{"code": "byte [ ] function ( Object arg0 ) { ObjectMapper loc0 = new ObjectMapper ( ) ; loc0 . setSerializationInclusion ( JsonInclude . Include . NON_NULL ) ; return loc0 . writeValueAsBytes ( arg0 ) ; }", "nl": "transforms an object into json and returns the json as a byte array . concode_field_sep PlaceHolder placeHolder concode_field_sep placeholderType placeHolder"}
{"code": "String function ( ) { return \"srini_string\" + _topDistance + \"srini_string\" + _leftDistance + \"srini_string\" + _endTopDistance + \"srini_string\" + _endLeftDistance + \"srini_string\" ; }", "nl": "methode tostring du vector concode_field_sep double _size concode_elem_sep double _yDirection concode_elem_sep double _endTopDistance concode_elem_sep double _leftDistance concode_elem_sep double _topDistance concode_elem_sep double _xDirection concode_elem_sep double _endLeftDistance concode_field_sep double getLeftDistance concode_elem_sep double getXDirection concode_elem_sep Vector restore concode_elem_sep void setYDirection concode_elem_sep void setLeftDistance concode_elem_sep String save concode_elem_sep void _updateDirection concode_elem_sep void _updateEndDistance concode_elem_sep void setXDirection concode_elem_sep double getEndTopDistance concode_elem_sep void setEndTopDistance concode_elem_sep double getSize concode_elem_sep void setSize concode_elem_sep double getYDirection concode_elem_sep double getEndLeftDistance concode_elem_sep boolean equals concode_elem_sep void setEndLeftDistance concode_elem_sep Vector clone concode_elem_sep void setTopDistance concode_elem_sep double getTopDistance"}
{"code": "Set function ( ) { return _register . entrySet ( ) ; }", "nl": "returns a set view of the mappings contained in this registry . each element in the returned set is a map.entry . the set is backed by the registry , so changes to the map are reflected in the set , and vice-versa . if the registry is modified while an iteration over the set is in progress , the results of the iteration are undefined . concode_field_sep Map _values concode_elem_sep Map _register concode_field_sep WidgetLocator add concode_elem_sep String getKey concode_elem_sep boolean containsKey concode_elem_sep WidgetLocator get concode_elem_sep WidgetLocator remove concode_elem_sep boolean containsValue"}
{"code": "T [ ] function ( T [ ] arg0 , T [ ] arg1 , int arg2 , int arg3 ) { return ArrayTool . transferValues ( arg0 , arg1 , arg2 , 0 , arg3 ) ; }", "nl": "transfers from right to left concode_field_sep PlaceHolder placeHolder concode_field_sep void swap concode_elem_sep void swap"}
{"code": "String function ( ) { return \"srini_string\" + name + \"srini_string\" ; }", "nl": "header in freemarker syntax for function concode_field_sep Set<AmwFunctionEntity> overwritingChildFunction concode_elem_sep ResourceEntity resource concode_elem_sep String implementation concode_elem_sep Set<MikEntity> miks concode_elem_sep String name concode_elem_sep Integer id concode_elem_sep AmwFunctionEntity overwrittenParent concode_elem_sep long serialVersionUID concode_elem_sep String COMMASEPARATOR concode_elem_sep ResourceTypeEntity resourceType concode_field_sep void setName concode_elem_sep String getDecoratedImplementation concode_elem_sep void addOverwritingFunction concode_elem_sep boolean isDefinedOnResource concode_elem_sep void setResource concode_elem_sep void resetOverwriting concode_elem_sep String getFreemarkerFooter concode_elem_sep void removeOverwritingFunction concode_elem_sep boolean isOverwrittenBySubTypeOrResourceFunction concode_elem_sep AmwFunctionEntity getCopy concode_elem_sep Set<String> getMikNames concode_elem_sep String getCommaseparatedMikNames concode_elem_sep Set<AmwFunctionEntity> getOverwritingChildFunction concode_elem_sep boolean isDefinedOnResourceType concode_elem_sep Set<MikEntity> getMiks concode_elem_sep void setResourceType concode_elem_sep boolean isOverwritingResourceTypeFunction concode_elem_sep String toString concode_elem_sep void addMik concode_elem_sep void overwrite concode_elem_sep String getOverwrittenFunctionResourceTypeName"}
{"code": "Device function ( String arg0 ) { if ( ( arg0 == null ) || ( arg0 . trim ( ) . equals ( \"srini_string\" ) ) ) { throw new NullIdException ( ) ; } else { if ( this . devices . containsKey ( arg0 ) ) { return this . devices . get ( arg0 ) ; } else { throw new UnknownDeviceException ( ) ; } } }", "nl": "get a device according to his id concode_field_sep Object synclock concode_elem_sep Map<String,BasicDevice> devices concode_field_sep Device addDevice concode_elem_sep void removeDevice"}
{"code": "String function ( double arg0 ) { return ( int ) arg0 + UNIT_MILLISECONDS ; }", "nl": "formats time as milliseconds with units . concode_field_sep String UNIT_MILLISECONDS concode_elem_sep String UNIT_SECONDS concode_field_sep String format concode_elem_sep String format concode_elem_sep String format concode_elem_sep String formatToFixedDecimalPoint concode_elem_sep String formatSeconds concode_elem_sep String formatSeconds"}
{"code": "RawFragmentBatch function ( final BufferAllocator arg0 ) { final DrillBuf loc0 = body == null ? null : body . transferOwnership ( arg0 ) . buffer ; sender . increment ( ) ; return new RawFragmentBatch ( header , loc0 , sender ) ; }", "nl": "create a new rawfragmentbatch based on this incoming data batch that is transferred into the provided allocator . also increments the acksender to expect one additional return message . concode_field_sep AckSender sender concode_elem_sep FragmentRecordBatch header concode_elem_sep DrillBuf body concode_field_sep FragmentRecordBatch getHeader"}
{"code": "Quotient < C > function ( long arg0 ) { return new Quotient < C > ( this , ring . fromInteger ( arg0 ) ) ; }", "nl": "get a quotient element from a long value . concode_field_sep RingFactory<C> ring concode_elem_sep boolean debug concode_elem_sep Logger logger concode_field_sep Quotient<C> random concode_elem_sep Quotient<C> random concode_elem_sep int hashCode concode_elem_sep boolean isField concode_elem_sep boolean equals concode_elem_sep Quotient<C> getONE concode_elem_sep boolean isCommutative concode_elem_sep Quotient<C> getZERO concode_elem_sep boolean isAssociative concode_elem_sep String toString concode_elem_sep Quotient<C> parse concode_elem_sep Quotient<C> parse concode_elem_sep Quotient<C> copy concode_elem_sep java.math.BigInteger characteristic"}
{"code": "String [ ] function ( ) { if ( Build . VERSION . SDK_INT < Build . VERSION_CODES . LOLLIPOP ) { return new String [ ] { Build . CPU_ABI , Build . CPU_ABI2 } ; } else { return LollipopSysdeps . getSupportedAbis ( ) ; } }", "nl": "return an list of abis we supported on this device ordered according to preference . use a separate inner class to isolate the version-dependent call where it wo n't cause the whole class to fail preverification . concode_field_sep byte[] cachedBuffer concode_field_sep void reliablyCopyExecutable concode_elem_sep void deleteOrThrow concode_elem_sep FileLocker lockLibsDirectory concode_elem_sep void freeCopyBuffer concode_elem_sep File createLibsDirectory concode_elem_sep File getLibsDirectory concode_elem_sep int findAbiScore concode_elem_sep void dumbDeleteRecrusive concode_elem_sep void fallocateIfSupported concode_elem_sep void fallocate"}
{"code": "DataSource function ( ) { BasicDataSource loc0 = new BasicDataSource ( ) ; loc0 . setDriverClassName ( \"srini_string\" ) ; loc0 . setUrl ( \"srini_string\" ) ; loc0 . setUsername ( \"srini_string\" ) ; loc0 . setPassword ( \"srini_string\" ) ; return ( DataSource ) loc0 ; }", "nl": "creation of h2 db concode_field_sep Logger LOGGER concode_field_sep LocalContainerEntityManagerFactoryBean entityManagerFactory concode_elem_sep JpaTransactionManager transactionManager concode_elem_sep void main concode_elem_sep Properties jpaProperties"}
{"code": "int function ( int arg0 ) { int loc0 = 0 ; while ( ( arg0 < lowestRangeHit ( loc0 ) ) || ( arg0 > highestRangeHit ( loc0 ) ) ) { loc0 ++ ; } return loc0 ; }", "nl": "get index into children array , that is hit by this planindex concode_field_sep int[] childRanges concode_elem_sep int[] childSizes concode_elem_sep int planSpaceSize concode_elem_sep PlanSpaceNode[] children concode_field_sep PlanSpaceNode[] getChildren concode_elem_sep int lowestRangeHit concode_elem_sep PlanSpaceNode getChild concode_elem_sep int getChildPlanIndex concode_elem_sep int getPlanSpaceSize concode_elem_sep Plan getPlan concode_elem_sep void setChildren concode_elem_sep int highestRangeHit"}
{"code": "HazelcastInstance function ( ) { InstanceHelper . makeServer ( \"srini_string\" + Constants . HAZELCAST_INSTANCE_NAME , CLUSTER_PORT ) ; HazelcastInstance loc0 = InstanceHelper . makeClient ( Constants . HAZELCAST_INSTANCE_NAME ) ; LOG . trace ( \"srini_string\" , loc0 ) ; return loc0 ; }", "nl": "create a client-server topology , using one hazelcastinstance server and one hazelcastinstance client . the client is the returned as the @bean . concode_field_sep String CLUSTER_HOST concode_elem_sep Logger LOG concode_elem_sep String MASTER_SERVER concode_elem_sep HazelcastInstance hazelcastInstance concode_elem_sep int CLUSTER_PORT concode_field_sep HazelcastInstance singleton concode_elem_sep HazelcastInstance makeClient concode_elem_sep void preDestroy concode_elem_sep HazelcastInstance makeServer concode_elem_sep KeyValueOperations keyValueTemplate"}
{"code": "void function ( Permission arg0 , String arg1 ) { permissionService . checkPermissionAndFireException ( arg0 , arg1 ) ; }", "nl": "checks if given permission is available . if not a checked exception is thrown with error message containing extrainfo part . concode_field_sep EntityManager entityManager concode_elem_sep PermissionService permissionService concode_elem_sep ResourceTypeProvider resourceTypeProvider concode_field_sep boolean hasPermissionToEditPropertiesOfResource concode_elem_sep boolean canCreateAppAndAddToAppServer concode_elem_sep boolean hasPermissionToAddRelation concode_elem_sep boolean hasPermissionToDeploy concode_elem_sep boolean canCopyFromResource concode_elem_sep void checkPermissionAndFireCheckedException concode_elem_sep boolean hasPermissionToDeleteRelation concode_elem_sep boolean hasPermissionToDeleteRelationType concode_elem_sep boolean hasPermissionToRenameResource concode_elem_sep boolean hasPermissionToRemoveDefaultInstanceOfResType concode_elem_sep boolean hasPermission concode_elem_sep boolean hasPermission concode_elem_sep boolean hasPermissionToTemplateModify concode_elem_sep boolean hasPermissionToEditPropertiesByResource concode_elem_sep boolean canCreateResourceInstance concode_elem_sep boolean canCreateResourceInstance concode_elem_sep boolean hasPermissionToRenameResourceType"}
{"code": "Object function ( String arg0 , int arg1 , int arg2 , int arg3 , int arg4 , Color arg5 , Graphics2D arg6 ) { return paintCachedTeXFormula ( new CachedTeXFormula ( arg0 , arg1 , arg2 , arg3 , arg4 , arg5 ) , arg6 ) ; }", "nl": "paint a cached formula concode_field_sep Image image concode_elem_sep ConcurrentMap<CachedTeXFormula,SoftReference<CachedImage>> cache concode_elem_sep String f concode_elem_sep int inset concode_elem_sep Color fgcolor concode_elem_sep AffineTransform identity concode_elem_sep int width concode_elem_sep int type concode_elem_sep ReferenceQueue queue concode_elem_sep int depth concode_elem_sep int size concode_elem_sep int style concode_elem_sep CachedTeXFormula cachedTf concode_elem_sep int max concode_elem_sep int height concode_field_sep void removeCachedTeXFormula concode_elem_sep void removeCachedTeXFormula concode_elem_sep void removeCachedTeXFormula concode_elem_sep int[] getCachedTeXFormulaDimensions concode_elem_sep int[] getCachedTeXFormulaDimensions concode_elem_sep int[] getCachedTeXFormulaDimensions concode_elem_sep Image getCachedTeXFormulaImage concode_elem_sep Image getCachedTeXFormulaImage concode_elem_sep Image getCachedTeXFormulaImage concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep void setDimensions concode_elem_sep void clearCache concode_elem_sep SoftReference<CachedImage> makeImage concode_elem_sep void setMaxCachedObjects concode_elem_sep Object getCachedTeXFormula concode_elem_sep Object getCachedTeXFormula"}
{"code": "void function ( ) { isRoot = false ; }", "nl": "this method puts treehandler back in its initial state , if the host got off-line or if the peer left the underlying overlay . concode_field_sep SkyNetNodeInfo parentCoordinator concode_elem_sep SkyNetNodeInterface skyNetNode concode_elem_sep TreeHandlerDelegator treeHandlerDelegator concode_elem_sep Logger log concode_elem_sep boolean isRoot concode_elem_sep int level concode_elem_sep SkyNetID coordinatorKey concode_elem_sep int branchingFactor concode_field_sep void calculateResponsibilityIntervalOperationFailed concode_elem_sep void calculateResponsibilityInterval concode_elem_sep boolean isRoot concode_elem_sep void processNextLevelOperationSucceeded concode_elem_sep void lookupParentCoordinator concode_elem_sep void horizontalDispatching concode_elem_sep void calculateNextLevel concode_elem_sep void calculateResponsibilityIntervalOperationSucceeded concode_elem_sep void lookupOperationSucceeded concode_elem_sep void verticalDispatching concode_elem_sep void lookupOperationFailed concode_elem_sep void processNextLevelOperationFailed concode_elem_sep SkyNetNodeInfo getParentCoordinator concode_elem_sep void checkResponsibility concode_elem_sep void processNextLevel"}
{"code": "void function ( double arg0 , double arg1 , double arg2 ) { if ( ! isSequence ( arg0 , arg1 , arg2 ) ) { throw new IllegalArgumentException ( \"srini_string\" + arg0 + \"srini_string\" + arg1 + \"srini_string\" + arg2 ) ; } }", "nl": "verifies that lower throws illegalargumentexception if not concode_field_sep double functionValueAccuracy concode_elem_sep boolean resultComputed concode_elem_sep double defaultFunctionValueAccuracy concode_elem_sep UnivariateRealFunction f concode_elem_sep double relativeAccuracy concode_elem_sep double absoluteAccuracy concode_elem_sep double result concode_elem_sep int iterationCount concode_elem_sep int defaultMaximalIterationCount concode_elem_sep int maximalIterationCount concode_elem_sep double defaultAbsoluteAccuracy concode_elem_sep double defaultRelativeAccuracy concode_elem_sep long serialVersionUID concode_field_sep double getFunctionValueAccuracy concode_elem_sep void setAbsoluteAccuracy concode_elem_sep boolean isSequence concode_elem_sep void setResult concode_elem_sep void setRelativeAccuracy concode_elem_sep void resetFunctionValueAccuracy concode_elem_sep int getMaximalIterationCount concode_elem_sep void resetRelativeAccuracy concode_elem_sep double getAbsoluteAccuracy concode_elem_sep int getIterationCount concode_elem_sep void resetAbsoluteAccuracy concode_elem_sep void verifyInterval concode_elem_sep double getResult concode_elem_sep void setMaximalIterationCount concode_elem_sep void resetMaximalIterationCount concode_elem_sep boolean isBracketing concode_elem_sep void clearResult concode_elem_sep void verifyBracketing concode_elem_sep double getRelativeAccuracy concode_elem_sep void setFunctionValueAccuracy"}
{"code": "PdfIndirectReference function ( RichMediaConfiguration arg0 ) { if ( configurations == null ) throw new IllegalPdfSyntaxException ( \"srini_string\" ) ; PdfIndirectReference loc0 = writer . addToBody ( arg0 ) . getIndirectReference ( ) ; configurations . add ( loc0 ) ; return loc0 ; }", "nl": "adds a richmediaconfiguration . part of the richmediacontent . concode_field_sep PdfDictionary richMediaSettings concode_elem_sep PdfArray configurations concode_elem_sep PdfArray views concode_elem_sep HashMap<String,PdfIndirectReference> assetsmap concode_elem_sep PdfDictionary richMediaContent concode_elem_sep PdfIndirectReference richMediaContentReference concode_elem_sep PdfWriter writer concode_elem_sep PdfAnnotation annot concode_field_sep PdfIndirectReference addAsset concode_elem_sep PdfIndirectReference addAsset concode_elem_sep PdfIndirectReference getRichMediaContentReference concode_elem_sep PdfAnnotation createAnnotation concode_elem_sep void setActivation concode_elem_sep PdfIndirectReference addView concode_elem_sep PdfIndirectReference addView concode_elem_sep void setDeactivation"}
{"code": "List < Document > function ( DocumentParser arg0 , File [ ] arg1 ) { List < Document > loc0 = new ArrayList < > ( ) ; for ( File loc1 : arg1 ) { loc0 . add ( arg0 . parse ( loc1 , sentenceExtractor , configuration . getTokenizer ( ) ) ) ; } return loc0 ; }", "nl": "parse given files . concode_field_sep String VERSION concode_elem_sep SentenceExtractor sentenceExtractor concode_elem_sep Configuration configuration concode_elem_sep List<Validator> validators concode_elem_sep Logger LOG concode_field_sep void runSectionValidators concode_elem_sep Configuration getConfiguration concode_elem_sep void initializeValidators concode_elem_sep void runDocumentValidators concode_elem_sep int hashCode concode_elem_sep void runSentenceValidators concode_elem_sep boolean equals concode_elem_sep void applyPreprocessorRules concode_elem_sep void applyPreprocessorRules concode_elem_sep String toString concode_elem_sep Map<Document,List<ValidationError>> validate concode_elem_sep List<ValidationError> validate concode_elem_sep List<Validator> getValidators"}
{"code": "void function ( MenuItemReference arg0 ) { arg0 . click ( ) ; }", "nl": "can be customized in subclasses . concode_field_sep int RETRY_LIMIT concode_elem_sep String[] textForItems concode_elem_sep MenuItemReference[] items concode_field_sep MenuItemReference getNextMenuItem concode_elem_sep MenuItemReference resolveAndSelect concode_elem_sep StringBuilder getAllItemText concode_elem_sep MenuItemReference resolveAndSelect0 concode_elem_sep void pause"}
{"code": "void function ( PRIndirectReference arg0 ) { this . indRef = arg0 ; }", "nl": "set the indirect reference concode_field_sep int INDIRECT concode_elem_sep int STRING concode_elem_sep int DICTIONARY concode_elem_sep int NULL concode_elem_sep int NUMBER concode_elem_sep int type concode_elem_sep int NAME concode_elem_sep String NOTHING concode_elem_sep int BOOLEAN concode_elem_sep int ARRAY concode_elem_sep byte[] bytes concode_elem_sep String TEXT_UNICODE concode_elem_sep String TEXT_PDFDOCENCODING concode_elem_sep PRIndirectReference indRef concode_elem_sep int STREAM concode_field_sep void toPdf concode_elem_sep void setContent concode_elem_sep int length concode_elem_sep boolean isStream concode_elem_sep PRIndirectReference getIndRef concode_elem_sep int type concode_elem_sep byte[] getBytes concode_elem_sep boolean isDictionary concode_elem_sep boolean isBoolean concode_elem_sep boolean isName concode_elem_sep boolean isNumber concode_elem_sep boolean isNull concode_elem_sep boolean isString concode_elem_sep String toString concode_elem_sep boolean canBeInObjStm concode_elem_sep boolean isArray concode_elem_sep boolean isIndirect"}
{"code": "MemExpr function ( final int arg0 ) { final Iterator loc0 = LocalStore . keySet ( ) . iterator ( ) ; while ( loc0 . hasNext ( ) ) { final MemExpr loc1 = ( MemExpr ) loc0 . next ( ) ; if ( loc1 . valueNumber ( ) == arg0 ) { return loc1 ; } } return null ; }", "nl": "searchs the stored list of local variables for a local variable with a given value number . concode_field_sep Expr ind_term concode_elem_sep boolean changed concode_elem_sep FlowGraph CFG concode_elem_sep Expr ind_var concode_elem_sep Expr ind_init concode_elem_sep Expr tgt concode_elem_sep boolean DEBUG concode_elem_sep Expr ind_inc concode_elem_sep SSAGraph ssaGraph concode_elem_sep HashMap LocalStore concode_elem_sep HashMap IndStore concode_field_sep void transform concode_elem_sep Block isMu concode_elem_sep void Display_store concode_elem_sep Object get_swizzler concode_elem_sep void insert_aswrange concode_elem_sep void displaySwizzler"}
{"code": "void function ( ) { final List < Element > loc0 = d . loc0 ( workerContextImpl , new Tag ( \"srini_string\" ) , \"srini_string\" ) ; Assert . assertTrue ( loc0 . get ( 0 ) instanceof NoNewLineParagraph ) ; }", "nl": "verifies that the call to content of div returns a nonewlineparagraph . concode_field_sep List<Element> currentContent concode_elem_sep Div d concode_elem_sep WorkerContextImpl workerContextImpl concode_field_sep void init concode_elem_sep void verifyNumberOfParagraphs concode_elem_sep void verifyIfPdfDiv concode_elem_sep void verifyIfStackOwner"}
{"code": "void function ( ) { for ( final NazgulName loc0 : NazgulName . values ( ) ) { final Nazgul loc1 = Nazgul . getInstance ( loc0 ) ; assertNotNull ( loc1 ) ; assertSame ( loc1 , Nazgul . getInstance ( loc0 ) ) ; assertEquals ( loc0 , loc1 . getName ( ) ) ; } }", "nl": "verify if nazgul #getinstance nazgulname returns the correct nazgul multiton instance concode_field_sep PlaceHolder placeHolder concode_field_sep placeholderType placeHolder"}
{"code": "ContextEntity function ( ContextEntity arg0 ) { if ( arg0 != null ) { return arg0 ; } return getGlobalResourceContextEntity ( ) ; }", "nl": "null-safe check for a context - if the given context is null , it returns the global context . concode_field_sep ContextEntity globalContext concode_elem_sep EntityManager entityManager concode_elem_sep Logger log concode_elem_sep ResourceTypeProvider resourceTypeProvider concode_field_sep Query fetchAllContexts concode_elem_sep List<ContextEntity> getEnvironments concode_elem_sep ContextEntity getContextEntityById concode_elem_sep ContextEntity getGlobalResourceContextEntity"}
{"code": "void function ( JobConf arg0 , Path arg1 , Schema arg2 ) { String loc0 = arg1 . toString ( ) + \"srini_string\" + toBase64 ( arg2 . toString ( ) ) ; String loc1 = arg0 . get ( schemaKey ) ; arg0 . set ( schemaKey , loc1 == null ? loc0 : loc1 + \"srini_string\" + loc0 ) ; arg0 . setInputFormat ( DelegatingInputFormat . class ) ; }", "nl": "add a path with a custom schema to the list ofinputs for the map-reduce job . concode_field_sep String mappersKey concode_elem_sep String schemaKey concode_field_sep String toBase64 concode_elem_sep Map<Path,Schema> getInputSchemaMap concode_elem_sep Map<Path,Class<? extends AvroMapper>> getMapperTypeMap concode_elem_sep String fromBase64"}
{"code": "boolean function ( ) { return ( size == 0 ) ; }", "nl": "isempty returns true if this list is empty , false otherwise . concode_field_sep ListNode head concode_elem_sep int size concode_field_sep Keyable find concode_elem_sep Enumeration elements concode_elem_sep int length concode_elem_sep void insert concode_elem_sep String toString"}
{"code": "void function ( Figure arg0 ) { _message = arg0 ; }", "nl": "change la figure passer en parametre concode_field_sep ArrayList<MyObserver> _observer concode_elem_sep Figure _message concode_field_sep void addObserver concode_elem_sep void notifyObs concode_elem_sep void notifyObservers"}
{"code": "void function ( Hessian2StreamingOutput arg0 ) { if ( arg0 == null ) { return ; } freeHessian2Output ( arg0 . getHessian2Output ( ) ) ; }", "nl": "frees a hessian 2.0 serializer concode_field_sep SerializerFactory _serializerFactory concode_elem_sep SerializerFactory _defaultSerializerFactory concode_elem_sep Logger log concode_elem_sep HessianFreeList<HessianInput> _freeHessianInput concode_elem_sep HessianFreeList<HessianOutput> _freeHessianOutput concode_elem_sep HessianFreeList<Hessian2Input> _freeHessian2Input concode_elem_sep HessianFreeList<Hessian2Output> _freeHessian2Output concode_field_sep Hessian2Input createHessian2Input concode_elem_sep void freeHessian2StreamingInput concode_elem_sep Hessian2Output createHessian2Output concode_elem_sep Hessian2StreamingOutput createHessian2StreamingOutput concode_elem_sep void setSerializerFactory concode_elem_sep OutputStream createHessian2DebugOutput concode_elem_sep SerializerFactory getSerializerFactory concode_elem_sep Hessian2StreamingInput createHessian2StreamingInput concode_elem_sep void freeHessian2Output concode_elem_sep HessianOutput createHessianOutput concode_elem_sep HessianInput createHessianInput concode_elem_sep void freeHessian2Input"}
{"code": "Limit function ( ) { return new Limit ( ) ; }", "nl": "create an instance of limit concode_field_sep QName _SyncToken_QNAME concode_elem_sep QName _Dst_QNAME concode_elem_sep QName _SyncLevel_QNAME concode_elem_sep QName _Status_QNAME concode_elem_sep QName _Depth_QNAME concode_elem_sep QName _Responsedescription_QNAME concode_elem_sep QName _Nresults_QNAME concode_elem_sep QName _Timeout_QNAME concode_elem_sep QName _Href_QNAME concode_elem_sep QName _Src_QNAME concode_field_sep JAXBElement<String> createDst concode_elem_sep Propstat createPropstat concode_elem_sep Supportedlock createSupportedlock concode_elem_sep Propertybehavior createPropertybehavior concode_elem_sep Lockentry createLockentry concode_elem_sep Resourcetype createResourcetype concode_elem_sep Unauthenticated createUnauthenticated concode_elem_sep JAXBElement<String> createSyncToken concode_elem_sep JAXBElement<String> createStatus concode_elem_sep Link createLink concode_elem_sep SyncCollection createSyncCollection concode_elem_sep Location createLocation concode_elem_sep JAXBElement<String> createSyncLevel concode_elem_sep SupportedReportSet createSupportedReportSet concode_elem_sep Lockinfo createLockinfo concode_elem_sep Getcontentlanguage createGetcontentlanguage concode_elem_sep Lockscope createLockscope concode_elem_sep Getcontenttype createGetcontenttype concode_elem_sep Owner createOwner concode_elem_sep Read createRead concode_elem_sep All createAll concode_elem_sep Lockdiscovery createLockdiscovery concode_elem_sep Exclusive createExclusive concode_elem_sep ReadAcl createReadAcl concode_elem_sep JAXBElement<String> createDepth concode_elem_sep WriteContent createWriteContent concode_elem_sep Getetag createGetetag concode_elem_sep Omit createOmit concode_elem_sep Collection createCollection concode_elem_sep Propname createPropname concode_elem_sep Error createError concode_elem_sep ReadCurrentUserPrivilegeSet createReadCurrentUserPrivilegeSet concode_elem_sep Authenticated createAuthenticated concode_elem_sep Bind createBind concode_elem_sep JAXBElement<BigInteger> createNresults concode_elem_sep JAXBElement<String> createHref concode_elem_sep Report createReport concode_elem_sep JAXBElement<String> createTimeout concode_elem_sep Keepalive createKeepalive concode_elem_sep Shared createShared concode_elem_sep Locktype createLocktype concode_elem_sep Remove createRemove concode_elem_sep Write createWrite concode_elem_sep JAXBElement<String> createResponsedescription concode_elem_sep Creationdate createCreationdate concode_elem_sep JAXBElement<String> createSrc concode_elem_sep Activelock createActivelock concode_elem_sep Getcontentlength createGetcontentlength concode_elem_sep Prop createProp concode_elem_sep Displayname createDisplayname concode_elem_sep Response createResponse concode_elem_sep UnBind createUnbind concode_elem_sep SearchRequest createSearch concode_elem_sep Set createSet concode_elem_sep Propertyupdate createPropertyupdate concode_elem_sep Locktoken createLocktoken concode_elem_sep Source createSource concode_elem_sep Propfind createPropfind concode_elem_sep Self createSelf concode_elem_sep Getlastmodified createGetlastmodified concode_elem_sep SupportedReport createSupportedReport concode_elem_sep Unlock createUnlock concode_elem_sep Multistatus createMultistatus concode_elem_sep Allprop createAllprop concode_elem_sep WriteProperties createWriteProperties"}
{"code": "void function ( Change arg0 ) { if ( arg0 != null ) Assert . isTrue ( fParent == null ) ; fParent = arg0 ; }", "nl": "sets the parent of this change . requires that this change is n't already connected to a parent . the parent can be null to disconnect this change from a parent . concode_field_sep boolean fIsEnabled concode_elem_sep Change fParent concode_field_sep ChangeDescriptor getDescriptor concode_elem_sep T getAdapter concode_elem_sep Change getParent concode_elem_sep Object[] getAffectedObjects concode_elem_sep String getName concode_elem_sep RefactoringStatus isValid concode_elem_sep Change perform concode_elem_sep Object getModifiedElement concode_elem_sep void setEnabled concode_elem_sep boolean isEnabled concode_elem_sep void initializeValidationData concode_elem_sep void setEnabledShallow concode_elem_sep void dispose"}
{"code": "AlgebraicNumber < C > function ( AlgebraicNumber < C > arg0 ) { if ( arg0 . isZERO ( ) ) { return this ; } if ( isZERO ( ) ) { return arg0 ; } if ( isUnit ( ) || arg0 . isUnit ( ) ) { return ring . getONE ( ) ; } return new AlgebraicNumber < C > ( ring , val . gcd ( arg0 . val ) ) ; }", "nl": "algebraicnumber greatest common divisor . concode_field_sep GenPolynomial<C> val concode_elem_sep AlgebraicNumberRing<C> ring concode_elem_sep int isunit concode_field_sep int signum concode_elem_sep boolean isONE concode_elem_sep AlgebraicNumber<C> inverse concode_elem_sep GenPolynomial<C> getVal concode_elem_sep boolean isUnit concode_elem_sep AlgebraicNumber<C> subtract concode_elem_sep AlgebraicNumber<C> sum concode_elem_sep int compareTo concode_elem_sep AlgebraicNumber<C>[] egcd concode_elem_sep AlgebraicNumber<C> monic concode_elem_sep AlgebraicNumber<C> abs concode_elem_sep int hashCode concode_elem_sep AlgebraicNumber<C> negate concode_elem_sep boolean equals concode_elem_sep AlgebraicNumber<C> clone concode_elem_sep boolean isZERO concode_elem_sep String toString concode_elem_sep AlgebraicNumber<C> divide concode_elem_sep AlgebraicNumber<C> multiply concode_elem_sep AlgebraicNumber<C> remainder"}
{"code": "IntList function ( IntList arg0 ) { if ( null == arg0 ) { throw new NullPointerException ( ) ; } return UnmodifiableIntList . wrap ( arg0 ) ; }", "nl": "returns an unmodifiable version of the given non-null intlist . concode_field_sep IntListIterator EMPTY_INT_LIST_ITERATOR concode_elem_sep IntList EMPTY_INT_LIST concode_elem_sep IntIterator EMPTY_INT_ITERATOR concode_field_sep IntListIterator singletonIntListIterator concode_elem_sep IntListIterator getEmptyIntListIterator concode_elem_sep IntIterator unmodifiableIntIterator concode_elem_sep IntIterator singletonIntIterator concode_elem_sep IntList getEmptyIntList concode_elem_sep IntIterator getEmptyIntIterator concode_elem_sep IntListIterator unmodifiableIntListIterator concode_elem_sep IntList singletonIntList"}
{"code": "void function ( ) { mDidChange = false ; mShouldDispatchChanges = false ; }", "nl": "stop dispatching item changed events to presenters until start | resume dispatchingitemschanged is called . useful when many menu operations are going to be performed as a batch . concode_field_sep int SHOW_AS_ACTION_NEVER concode_elem_sep Drawable mIcon concode_elem_sep MenuItem.OnMenuItemClickListener mMenuItemClickListener concode_elem_sep GeckoActionProvider mActionProvider concode_elem_sep GeckoSubMenu mSubMenu concode_elem_sep boolean mShouldDispatchChanges concode_elem_sep int mActionEnum concode_elem_sep GeckoMenu mMenu concode_elem_sep int mId concode_elem_sep boolean mCheckable concode_elem_sep boolean mChecked concode_elem_sep int mOrder concode_elem_sep OnShowAsActionChangedListener mShowAsActionChangedListener concode_elem_sep int SHOW_AS_ACTION_IF_ROOM concode_elem_sep int SHOW_AS_ACTION_ALWAYS concode_elem_sep boolean mVisible concode_elem_sep boolean mEnabled concode_elem_sep CharSequence mTitleCondensed concode_elem_sep CharSequence mTitle concode_elem_sep boolean mDidChange concode_elem_sep View mActionView concode_elem_sep int mIconRes concode_elem_sep int SHOW_AS_ACTION_IF_ROOM_WITH_TEXT concode_field_sep MenuItem setActionProvider concode_elem_sep MenuItem setActionProvider concode_elem_sep boolean hasSubMenu concode_elem_sep void startDispatchingChanges concode_elem_sep boolean invoke concode_elem_sep CharSequence getTitleCondensed concode_elem_sep int getGroupId concode_elem_sep CharSequence getTitle concode_elem_sep MenuItem setChecked concode_elem_sep char getAlphabeticShortcut concode_elem_sep MenuItem setOnMenuItemClickListener concode_elem_sep Intent getIntent concode_elem_sep boolean isActionViewExpanded concode_elem_sep MenuItem setVisible concode_elem_sep MenuItem setIntent concode_elem_sep MenuItem setSubMenu concode_elem_sep MenuItem setCheckable concode_elem_sep MenuItem setTitle concode_elem_sep MenuItem setTitle concode_elem_sep MenuItem setNumericShortcut concode_elem_sep boolean isVisible concode_elem_sep boolean isChecked concode_elem_sep MenuItem setTitleCondensed concode_elem_sep void resumeDispatchingChanges concode_elem_sep MenuItem setIcon concode_elem_sep MenuItem setIcon concode_elem_sep MenuItem setEnabled concode_elem_sep MenuItem setShowAsActionFlags concode_elem_sep boolean isEnabled concode_elem_sep MenuItem setActionView concode_elem_sep MenuItem setActionView concode_elem_sep void setOnShowAsActionChangedListener concode_elem_sep void setShowIcon concode_elem_sep MenuItem setOnActionExpandListener concode_elem_sep boolean expandActionView concode_elem_sep GeckoActionProvider getGeckoActionProvider concode_elem_sep boolean collapseActionView concode_elem_sep int getItemId concode_elem_sep View getActionView concode_elem_sep int getActionEnum concode_elem_sep boolean isCheckable concode_elem_sep boolean hasActionProvider concode_elem_sep MenuItem setShortcut concode_elem_sep void setShowAsAction concode_elem_sep void setShowAsAction concode_elem_sep SubMenu getSubMenu concode_elem_sep void onShowAsActionChanged concode_elem_sep MenuItem setAlphabeticShortcut concode_elem_sep ActionProvider getActionProvider concode_elem_sep Drawable getIcon concode_elem_sep boolean isActionItem concode_elem_sep boolean hasActionItemBar concode_elem_sep int getOrder concode_elem_sep char getNumericShortcut concode_elem_sep void initialize concode_elem_sep ContextMenu.ContextMenuInfo getMenuInfo"}
{"code": "void function ( ServiceRegistry arg0 , BeanState arg1 , Object arg2 ) { removeInstance ( arg0 , arg1 , arg2 . getClass ( ) , arg2 ) ; }", "nl": "remove bean instance . concode_field_sep Map<TypeBeanStateKey,Set<Object>> beans concode_elem_sep Set<Object> instances concode_elem_sep Map<TypeBeanStateKey,List<Callback>> incallbacks concode_elem_sep Map<TypeBeanStateKey,List<Callback>> uncallbacks concode_elem_sep Class<?> type concode_field_sep void removeUncallback concode_elem_sep void start concode_elem_sep void addCallback concode_elem_sep Set<Object> getValue concode_elem_sep void addInstance concode_elem_sep void addInstance concode_elem_sep void stop concode_elem_sep void invokeCallbacks concode_elem_sep void removeIncallback concode_elem_sep void addUncallback concode_elem_sep void removeCallback concode_elem_sep InstancesService putIfAbsent concode_elem_sep void addIncallback concode_elem_sep Set<Object> getBeans"}
{"code": "List < Message > function ( ) { if ( message == null ) { message = new ArrayList < Message > ( ) ; } return this . message ; }", "nl": "gets the value of the message property . this accessor method returns a reference to the live list , not a snapshot . therefore any modification you make to the returned list will be present inside the jaxb object . this is why there is not a set method for the message property . for example , to add a new item , do as follows : getmessage . add newitem ; objects of the following type s are allowed in the list message concode_field_sep ValidationContext validationContext concode_elem_sep List<LocalizedMessage> localizedMessage concode_elem_sep List<Message> message concode_field_sep void setValidationContext concode_elem_sep List<LocalizedMessage> getLocalizedMessage concode_elem_sep ValidationContext getValidationContext"}
{"code": "T function ( String arg0 ) { return ( T ) canvas . link ( type ( \"srini_string\" ) . href ( arg0 ) . rel ( \"srini_string\" ) ) ; }", "nl": "write the link tag with a reference to the external resource . concode_field_sep T canvas concode_field_sep T favicon concode_elem_sep T script concode_elem_sep T javascript concode_elem_sep T cdata"}
{"code": "Iterator < D > function ( ) { return this ; }", "nl": "returns an iterator over entries in this file . note that this iterator is shared with other users of the file : it does not contain a separate pointer into the file . concode_field_sep Schema schema concode_elem_sep List<String> metaKeyList concode_elem_sep long blockCount concode_elem_sep boolean availableBlock concode_elem_sep byte[] data concode_elem_sep DatumReader<D> reader concode_elem_sep long blockRemaining concode_elem_sep Map<String,byte[]> meta concode_elem_sep int blockSize concode_elem_sep ByteBuffer blockBuffer concode_elem_sep byte[] syncBuffer concode_elem_sep byte[] sync concode_elem_sep Codec codec concode_elem_sep boolean flushOnWrite concode_elem_sep BinaryDecoder datumIn concode_elem_sep int offset concode_elem_sep Header header concode_elem_sep BinaryDecoder vin concode_elem_sep DataBlock block concode_elem_sep long numEntries concode_field_sep D next concode_elem_sep D next concode_elem_sep boolean isFlushOnWrite concode_elem_sep void remove concode_elem_sep Header getHeader concode_elem_sep Codec resolveCodec concode_elem_sep void compressUsing concode_elem_sep boolean hasNextBlock concode_elem_sep ByteBuffer getAsByteBuffer concode_elem_sep long getBlockSize concode_elem_sep int getBlockSize concode_elem_sep void setFlushOnWrite concode_elem_sep DataBlock nextRawBlock concode_elem_sep long getBlockCount concode_elem_sep void writeBlockTo concode_elem_sep void close concode_elem_sep byte[] getData concode_elem_sep void decompressUsing concode_elem_sep void blockFinished concode_elem_sep String getMetaString concode_elem_sep long getMetaLong concode_elem_sep boolean hasNext concode_elem_sep ByteBuffer nextBlock concode_elem_sep Schema getSchema concode_elem_sep long getNumEntries concode_elem_sep List<String> getMetaKeys concode_elem_sep byte[] getMeta concode_elem_sep void initialize concode_elem_sep void initialize"}
{"code": "ContextQuery function ( final String arg0 ) { return new ContextQuery . BoundQueryContext ( arg0 ) ; }", "nl": "retrieves from the storm configuration the specified named query . concode_field_sep PlaceHolder placeHolder concode_field_sep BatchCQLStatementTupleMapper unLoggedBatch concode_elem_sep CqlMapper.DefaultCqlMapper all concode_elem_sep CQLStatementTupleMapper async concode_elem_sep ContextQuery namedByField concode_elem_sep BatchCQLStatementTupleMapper newBatchStatementBuilder concode_elem_sep BatchCQLStatementTupleMapper counterBatch concode_elem_sep FieldSelector field concode_elem_sep BatchCQLStatementTupleMapper loggedBatch concode_elem_sep BoundCQLStatementMapperBuilder boundQuery concode_elem_sep BoundCQLStatementMapperBuilder boundQuery concode_elem_sep FieldSelector[] fields concode_elem_sep SimpleCQLStatementMapperBuilder simpleQuery concode_elem_sep SimpleCQLStatementMapperBuilder simpleQuery"}
{"code": "String function ( Member arg0 ) { return arg0 instanceof Field ? getSignature ( ( Field ) arg0 ) : arg0 instanceof Method ? getSignature ( ( Method ) arg0 ) : getSignature ( ( Constructor < ? > ) arg0 ) ; }", "nl": "get the jni signaure for a member . concode_field_sep HashMap<String,String> NATIVE_TYPES concode_elem_sep HashMap<String,String> CLASS_DESCRIPTORS concode_elem_sep HashMap<String,String> NATIVE_ARRAY_TYPES concode_field_sep boolean isStatic concode_elem_sep String getClassDescriptor concode_elem_sep String getMemberName concode_elem_sep String getNativeParameterType concode_elem_sep boolean isFinal concode_elem_sep String getNativeName concode_elem_sep String getNativeReturnType concode_elem_sep String getUnqualifiedName"}
{"code": "void function ( Fum arg0 ) { this . fum = arg0 ; }", "nl": "sets the fum . concode_field_sep Locale locale concode_elem_sep Fum fum concode_field_sep Fum getFum concode_elem_sep void setId concode_elem_sep FumCompositeID getId concode_elem_sep Locale getLocale concode_elem_sep void setLocale"}
{"code": "Token [ ] function ( ) { return new Token [ 0 ] ; }", "nl": "return the list of issued and renewed tokens . concode_field_sep PlaceHolder placeHolder concode_field_sep void add concode_elem_sep Token[] getExpiredTokens concode_elem_sep Token[] getCancelledTokens concode_elem_sep String[] getTokenIdentifiers concode_elem_sep void handlePersistenceOnShutdown concode_elem_sep List<Token> getStorageTokens concode_elem_sep void removeToken concode_elem_sep Token getToken concode_elem_sep Token[] getRenewedTokens concode_elem_sep void update concode_elem_sep void handlePersistence"}
{"code": "void function ( ) { setText ( null ) ; }", "nl": "deletes all text from the clipboard . concode_field_sep String LOGTAG concode_elem_sep SynchronousQueue<String> sClipboardQueue concode_elem_sep Context mContext concode_field_sep void init concode_elem_sep String getClipboardTextImpl concode_elem_sep String getText concode_elem_sep boolean hasText concode_elem_sep void setText"}
{"code": "String function ( String arg0 , int arg1 ) { return doSendApiRequest ( \"srini_string\" , \"srini_string\" + arg0 + \"srini_string\" + arg1 ) ; }", "nl": "get objects that determines search query concode_field_sep String m_Url concode_elem_sep String m_Key concode_elem_sep String m_Packing concode_elem_sep String m_Language concode_elem_sep String m_Format concode_field_sep String getPacking concode_elem_sep String getLanguage concode_elem_sep void setPacking concode_elem_sep String getObjectsInBoxByBBox concode_elem_sep String getObjectById concode_elem_sep String getObjectInBox concode_elem_sep String getObjectsInBoxByLatLon concode_elem_sep String doSendApiRequest concode_elem_sep void setFormat concode_elem_sep String getObjectsInPoint concode_elem_sep String getObjectsInBoxByTile concode_elem_sep String getObjectsInBoxByTile concode_elem_sep String getFormat concode_elem_sep void setLanguage"}
{"code": "void function ( MethodGen arg0 ) { for ( Attribute loc0 : arg0 . getCodeAttributes ( ) ) { if ( is_local_variable_type_table ( loc0 , arg0 . getConstantPool ( ) ) ) { arg0 . removeCodeAttribute ( loc0 ) ; } } }", "nl": "remove the local variable type table attribute lvtt from mg . evidently some changes require this to be updated , but without bcel support that would be hard to do . it should be safe to just delete it since it is optional and really only of use to a debugger . concode_field_sep boolean skip_checks concode_elem_sep Type string_array concode_field_sep void add_line_numbers concode_elem_sep void add_to_start concode_elem_sep void dump_methods concode_elem_sep String get_attribute_name concode_elem_sep String get_attribute_name concode_elem_sep String instruction_descr concode_elem_sep void setup_init_locals concode_elem_sep String get_constant_str concode_elem_sep void empty_method concode_elem_sep void dump_method_declarations concode_elem_sep boolean in_jdk concode_elem_sep boolean in_jdk concode_elem_sep String get_access_flags concode_elem_sep String get_method_declaration concode_elem_sep boolean is_clinit concode_elem_sep boolean is_clinit concode_elem_sep void checkMgen concode_elem_sep String local_var_descr concode_elem_sep boolean is_constructor concode_elem_sep boolean is_constructor concode_elem_sep boolean is_main concode_elem_sep void dump concode_elem_sep void dump concode_elem_sep boolean is_local_variable_type_table concode_elem_sep void checkMgens"}
{"code": "void function ( BufferFlag arg0 ) { setFlag ( arg0 , true ) ; }", "nl": "convenience method for setting a flag . concode_field_sep Rational timeStamp concode_elem_sep long sequenceNumber concode_elem_sep EnumSet<BufferFlag> flags concode_elem_sep int NOT_SPECIFIED concode_elem_sep Object data concode_elem_sep int offset concode_elem_sep int length concode_elem_sep Format format concode_elem_sep Object header concode_elem_sep int sampleCount concode_elem_sep int track concode_elem_sep Rational sampleDuration concode_field_sep void setMetaTo concode_elem_sep void clearFlag concode_elem_sep boolean isFlag concode_elem_sep void clearFlags concode_elem_sep void setDataTo concode_elem_sep Object copy concode_elem_sep void setFlagsTo concode_elem_sep void setFlagsTo"}
{"code": "int function ( ) { return this . index ; }", "nl": "the index of the statement that creates this value . concode_field_sep Sequence sequence concode_elem_sep long serialVersionUID concode_elem_sep int index concode_field_sep Variable copyWithIndexUpdated concode_elem_sep String getName concode_elem_sep String getName concode_elem_sep Class<?> getType concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep String toString concode_elem_sep List<Integer> statementIndexList concode_elem_sep int compareTo concode_elem_sep StatementKind getDeclaringStatement"}
{"code": "void function ( ) { this . background = this . loadAndResizeSprite ( \"srini_string\" , 672 , 864 ) ; }", "nl": "initializes the main menu background concode_field_sep Image background concode_field_sep Image loadAndResizeSprite concode_elem_sep Image getBackGround"}
{"code": "SchemaValidatorBuilder function ( ) { this . strategy = new ValidateMutualRead ( ) ; return this ; }", "nl": "use a strategy that validates that a schema can read existing schema s , and vice-versa , according to the avro default schema resolution . concode_field_sep SchemaValidationStrategy strategy concode_field_sep void valid concode_elem_sep SchemaValidatorBuilder canReadStrategy concode_elem_sep SchemaValidator validateAll concode_elem_sep SchemaValidator validateLatest concode_elem_sep SchemaValidatorBuilder canBeReadStrategy concode_elem_sep SchemaValidatorBuilder strategy"}
{"code": "boolean function ( int arg0 ) { return ( arg0 == QuadTreeNode . SOUTH || arg0 == QuadTreeNode . EAST ) ; }", "nl": "return true iff this quadrant is adjacent to the boundary of an image in the given direction . concode_field_sep PlaceHolder placeHolder concode_field_sep Quadrant reflect concode_elem_sep QuadTreeNode child"}
{"code": "Executor function ( final Executor arg0 ) { return new Executor ( ) { @ Override public void execute ( Runnable arg1 ) { arg0 . execute ( makeContextRunnable ( arg1 ) ) ; } } ; }", "nl": "returns an executor that wraps runnables before submission to the passed in executor . concode_field_sep Field causeField concode_field_sep void handleException concode_elem_sep StackTraceElement[] getStackContext concode_elem_sep Throwable findRootCause concode_elem_sep Callable<T> makeContextCallable concode_elem_sep Runnable makeContextRunnable concode_elem_sep List<Callable<T>> makeContextWrappedCollection"}
{"code": "void function ( int arg0 , int arg1 ) { int [ ] loc0 = checkOffGrid ( arg0 , arg1 ) ; if ( gridData [ loc0 [ 0 ] ] [ loc0 [ 1 ] ] == null ) { gridData [ loc0 [ 0 ] ] [ loc0 [ 1 ] ] = new Animal ( 2 ) ; } }", "nl": "addfish places a fish in cell x , y if the cell is empty . if the cell is already occupied , leave the cell as it is . concode_field_sep int EMPTY concode_elem_sep int FISH concode_elem_sep int SHARK concode_elem_sep int starveTime concode_elem_sep int width concode_elem_sep Animal[][] gridData concode_elem_sep int height concode_field_sep int starveTime concode_elem_sep int[] animalAround concode_elem_sep void sharkUpdate concode_elem_sep void fishUpdate concode_elem_sep void main concode_elem_sep void addShark concode_elem_sep void addShark concode_elem_sep int cellContents concode_elem_sep int[] checkOffGrid concode_elem_sep int sharkFeeding concode_elem_sep Ocean timeStep concode_elem_sep int width concode_elem_sep void emptyUpdate concode_elem_sep int height"}
{"code": "String function ( ) { return code ; }", "nl": "returns the iso two-letter country code of this country/region . concode_field_sep String code concode_elem_sep String name concode_field_sep String getName"}
{"code": "BufferedImage function ( int [ ] arg0 , int arg1 , int arg2 ) { return new BufferedImage ( DirectColorModel . getRGBdefault ( ) , Raster . createWritableRaster ( new SinglePixelPackedSampleModel ( DataBuffer . TYPE_INT , arg1 , arg2 , new int [ ] { 0xff00000 , 0xff00 , 0xff } ) , new DataBufferInt ( arg0 , arg1 * arg2 ) , new Point ( 0 , 0 ) ) , false , null ) ; }", "nl": "converts an array of integer pixels into an image . the array is referenced by the image . concode_field_sep PlaceHolder placeHolder concode_field_sep BufferedImage[] split concode_elem_sep Image createImage concode_elem_sep Image createImage concode_elem_sep BufferedImage toIntImage concode_elem_sep int[] toPixels concode_elem_sep BufferedImage cloneImage concode_elem_sep BufferedImage toBufferedImage concode_elem_sep BufferedImage toBufferedImage concode_elem_sep boolean hasAlpha"}
{"code": "Link function ( ) { return new Link ( ) ; }", "nl": "create an instance of link concode_field_sep QName _SyncToken_QNAME concode_elem_sep QName _Dst_QNAME concode_elem_sep QName _SyncLevel_QNAME concode_elem_sep QName _Status_QNAME concode_elem_sep QName _Depth_QNAME concode_elem_sep QName _Responsedescription_QNAME concode_elem_sep QName _Nresults_QNAME concode_elem_sep QName _Timeout_QNAME concode_elem_sep QName _Href_QNAME concode_elem_sep QName _Src_QNAME concode_field_sep JAXBElement<String> createDst concode_elem_sep Propstat createPropstat concode_elem_sep Supportedlock createSupportedlock concode_elem_sep Propertybehavior createPropertybehavior concode_elem_sep Lockentry createLockentry concode_elem_sep Resourcetype createResourcetype concode_elem_sep Unauthenticated createUnauthenticated concode_elem_sep JAXBElement<String> createSyncToken concode_elem_sep JAXBElement<String> createStatus concode_elem_sep SyncCollection createSyncCollection concode_elem_sep Limit createLimit concode_elem_sep Location createLocation concode_elem_sep JAXBElement<String> createSyncLevel concode_elem_sep SupportedReportSet createSupportedReportSet concode_elem_sep Lockinfo createLockinfo concode_elem_sep Getcontentlanguage createGetcontentlanguage concode_elem_sep Lockscope createLockscope concode_elem_sep Getcontenttype createGetcontenttype concode_elem_sep Owner createOwner concode_elem_sep Read createRead concode_elem_sep All createAll concode_elem_sep Lockdiscovery createLockdiscovery concode_elem_sep Exclusive createExclusive concode_elem_sep ReadAcl createReadAcl concode_elem_sep JAXBElement<String> createDepth concode_elem_sep WriteContent createWriteContent concode_elem_sep Getetag createGetetag concode_elem_sep Omit createOmit concode_elem_sep Collection createCollection concode_elem_sep Propname createPropname concode_elem_sep Error createError concode_elem_sep ReadCurrentUserPrivilegeSet createReadCurrentUserPrivilegeSet concode_elem_sep Authenticated createAuthenticated concode_elem_sep Bind createBind concode_elem_sep JAXBElement<BigInteger> createNresults concode_elem_sep JAXBElement<String> createHref concode_elem_sep Report createReport concode_elem_sep JAXBElement<String> createTimeout concode_elem_sep Keepalive createKeepalive concode_elem_sep Shared createShared concode_elem_sep Locktype createLocktype concode_elem_sep Remove createRemove concode_elem_sep Write createWrite concode_elem_sep JAXBElement<String> createResponsedescription concode_elem_sep Creationdate createCreationdate concode_elem_sep JAXBElement<String> createSrc concode_elem_sep Activelock createActivelock concode_elem_sep Getcontentlength createGetcontentlength concode_elem_sep Prop createProp concode_elem_sep Displayname createDisplayname concode_elem_sep Response createResponse concode_elem_sep UnBind createUnbind concode_elem_sep SearchRequest createSearch concode_elem_sep Set createSet concode_elem_sep Propertyupdate createPropertyupdate concode_elem_sep Locktoken createLocktoken concode_elem_sep Source createSource concode_elem_sep Propfind createPropfind concode_elem_sep Self createSelf concode_elem_sep Getlastmodified createGetlastmodified concode_elem_sep SupportedReport createSupportedReport concode_elem_sep Unlock createUnlock concode_elem_sep Multistatus createMultistatus concode_elem_sep Allprop createAllprop concode_elem_sep WriteProperties createWriteProperties"}
{"code": "String function ( String arg0 ) { int loc0 = arg0 . lastIndexOf ( ZNODE_PATH_SEPARATOR ) ; return loc0 <= 0 ? null : arg0 . substring ( 0 , loc0 ) ; }", "nl": "returns the full path of the immediate parent of the specified node . null if passed the root node or an invalid node concode_field_sep char ZNODE_PATH_SEPARATOR concode_elem_sep Logger LOG concode_field_sep void createSetData concode_elem_sep int checkExists concode_elem_sep boolean setData concode_elem_sep List<String> listChildrenNoWatch concode_elem_sep String joinZNode concode_elem_sep ArrayList<ACL> createACL concode_elem_sep void deleteNodeRecursively concode_elem_sep byte[] getData concode_elem_sep void createWithParents concode_elem_sep void createWithParents"}
{"code": "Object function ( ) { return debug ; }", "nl": "returns the debug . concode_field_sep Object warn concode_elem_sep Object trace concode_elem_sep Object debug concode_elem_sep Throwable lastThrowable concode_elem_sep Object error concode_elem_sep Object info concode_elem_sep Object fatal concode_field_sep void debug concode_elem_sep void debug concode_elem_sep Object getInfo concode_elem_sep Object getFatal concode_elem_sep Throwable getLastThrowable concode_elem_sep void clear concode_elem_sep boolean isWarnEnabled concode_elem_sep void error concode_elem_sep void error concode_elem_sep boolean isFatalEnabled concode_elem_sep void fatal concode_elem_sep void fatal concode_elem_sep Object getError concode_elem_sep void warn concode_elem_sep void warn concode_elem_sep void trace concode_elem_sep void trace concode_elem_sep boolean isInfoEnabled concode_elem_sep boolean isErrorEnabled concode_elem_sep boolean isTraceEnabled concode_elem_sep Object getWarn concode_elem_sep Object getTrace concode_elem_sep boolean isDebugEnabled concode_elem_sep void info concode_elem_sep void info"}
{"code": "void function ( String arg0 ) { rowData = arg0 ; }", "nl": "sets the string to be contained . concode_field_sep String rowData concode_elem_sep char index concode_elem_sep int indexColor concode_field_sep void setIndexColor concode_elem_sep char getIndex concode_elem_sep void setIndex concode_elem_sep int getIndexColor concode_elem_sep String getRow"}
{"code": "FigureReference function ( IFigure arg0 ) { return lazy ( arg0 ) ; }", "nl": "create a figure info instance . note that by default this info object is lazily populated . if you need an eagerly populated info object , use the concode_field_sep IFigure _figure concode_elem_sep FigureInfoState _state concode_elem_sep IWidgetLocator _locatorDelegate concode_elem_sep ClassReference _class concode_field_sep Object getAdapter concode_elem_sep IFigureReference getParent concode_elem_sep FigureReference eager concode_elem_sep IFigure getWidget concode_elem_sep FigureReference lazy concode_elem_sep EditPart getEditPart concode_elem_sep IFigure getFigure concode_elem_sep IWidgetLocator[] findAll concode_elem_sep boolean matches concode_elem_sep void accept concode_elem_sep IFigureReference[] getChildren concode_elem_sep FigureInfoState getState concode_elem_sep ClassReference getType concode_elem_sep IConnectionInfo[] getConnections concode_elem_sep IWidgetLocator getLocatorDelegate"}
{"code": "UserAccount function ( String arg0 ) { UserAccount loc0 = CacheStore . get ( arg0 ) ; if ( loc0 != null ) { return loc0 ; } loc0 = DbManager . readFromDb ( arg0 ) ; if ( loc0 != null ) { CacheStore . set ( arg0 , loc0 ) ; } return loc0 ; }", "nl": "cache-aside find user account helper concode_field_sep CachingPolicy cachingPolicy concode_field_sep void initDb concode_elem_sep void initCacheCapacity concode_elem_sep String printCacheContent concode_elem_sep UserAccount find concode_elem_sep void save concode_elem_sep void saveAside concode_elem_sep void initCachingPolicy"}
{"code": "Integer function ( ) { return repeated ; }", "nl": "the position when headers/footers should be repeated on each page . concode_field_sep Integer normal concode_elem_sep Place place concode_elem_sep Integer repeated concode_elem_sep List<HtmlCell> content concode_field_sep Integer getNormal concode_elem_sep boolean process concode_elem_sep boolean isContent concode_elem_sep boolean isNestable concode_elem_sep List<HtmlCell> getContent concode_elem_sep List<Chunk> getChunks concode_elem_sep Place getPlace concode_elem_sep int type"}
{"code": "String function ( ) { return entry . getIdentifier ( ) ; }", "nl": "key methods concode_field_sep AuctionEntry entry concode_elem_sep Integer Zero concode_elem_sep Map<String,Seller> sellers concode_field_sep int getSellerFeedback concode_elem_sep Currency getCurrentTotal concode_elem_sep Seller getSeller concode_elem_sep Currency getMax concode_elem_sep Currency getMaxOrSnipe concode_elem_sep Currency getSnipe concode_elem_sep Currency getCurrentBid concode_elem_sep Currency getShippingInsurance concode_elem_sep int getSellerPositiveFeedback concode_elem_sep Currency getFixedPrice concode_elem_sep Currency getSnipeOrMax concode_elem_sep String getComment concode_elem_sep int safeConvert concode_elem_sep Currency getSnipeTotal"}
{"code": "void function ( String arg0 ) { frame . setTitle ( arg0 ) ; }", "nl": "method to set the title for the picture frame concode_field_sep ImageIcon imageIcon concode_elem_sep JLabel label concode_elem_sep JFrame frame concode_elem_sep DigitalPicture picture concode_field_sep void setVisible concode_elem_sep void setPicture concode_elem_sep void hide concode_elem_sep void displayImage concode_elem_sep void updateImageAndShowIt concode_elem_sep void updateImage concode_elem_sep void repaint concode_elem_sep void close concode_elem_sep void initFrame"}
{"code": "List < Potion > function ( ) { return Collections . unmodifiableList ( this . topShelf ) ; }", "nl": "get a read-only list of all the items on the top shelf concode_field_sep List<Potion> topShelf concode_elem_sep List<Potion> bottomShelf concode_elem_sep Logger LOGGER concode_field_sep List<Potion> getBottomShelf concode_elem_sep void enumerate concode_elem_sep void fillShelves"}
{"code": "void function ( Class < ? > arg0 , Object arg1 ) { if ( adapters == null ) adapters = new HashMap < Class < ? > , Object > ( ) ; adapters . put ( arg0 , arg1 ) ; }", "nl": "add an adapter to be returned by #getadapter class concode_field_sep T widget concode_elem_sep Map<Class<?>,Object> adapters concode_field_sep Object getAdapter concode_elem_sep T getWidget concode_elem_sep WidgetReference<T> create concode_elem_sep WidgetReference<T> create concode_elem_sep String toString concode_elem_sep IWidgetLocator[] findAll concode_elem_sep boolean matches"}
{"code": "SortedBag function ( SortedBag arg0 , Class arg1 ) { return TypedSortedBag . decorate ( arg0 , arg1 ) ; }", "nl": "returns a typed sorted bag backed by the given bag . only objects of the specified type can be added to the bag . concode_field_sep Bag EMPTY_BAG concode_elem_sep Bag EMPTY_SORTED_BAG concode_field_sep Bag predicatedBag concode_elem_sep SortedBag synchronizedSortedBag concode_elem_sep SortedBag predicatedSortedBag concode_elem_sep SortedBag transformedSortedBag concode_elem_sep Bag typedBag concode_elem_sep Bag transformedBag concode_elem_sep SortedBag unmodifiableSortedBag concode_elem_sep Bag unmodifiableBag concode_elem_sep Bag synchronizedBag"}
{"code": "int function ( ) { return data == null ? 0 : data . length ; }", "nl": "returns the capacity of the array , which may be larger than the limit . concode_field_sep byte[] data concode_elem_sep int limit concode_elem_sep int position concode_field_sep int readUnsignedInt24 concode_elem_sep int readSynchSafeInt concode_elem_sep int readUnsignedIntToInt concode_elem_sep void setPosition concode_elem_sep void skipBytes concode_elem_sep long readUnsignedInt concode_elem_sep int getPosition concode_elem_sep long readLong concode_elem_sep short readShort concode_elem_sep void setLimit concode_elem_sep int bytesLeft concode_elem_sep int limit concode_elem_sep void reset concode_elem_sep void reset concode_elem_sep void readBytes concode_elem_sep void readBytes concode_elem_sep void readBytes concode_elem_sep int readUnsignedFixedPoint1616 concode_elem_sep int readInt concode_elem_sep long readUnsignedLongToLong concode_elem_sep int readUnsignedByte concode_elem_sep int readUnsignedShort"}
{"code": "void function ( long arg0 , @ NonNull T arg1 ) { lock . lock ( ) ; try { map . put ( arg0 , new WeakReference < T > ( arg1 ) ) ; } finally { lock . unlock ( ) ; } }", "nl": "put entity in cache with cache lock . concode_field_sep ReentrantLock lock concode_elem_sep LongSparseArray<Reference<T>> map concode_field_sep void unlock concode_elem_sep T get concode_elem_sep void clear concode_elem_sep void lock concode_elem_sep void putNoLock concode_elem_sep T getNoLock concode_elem_sep void remove concode_elem_sep void remove"}
{"code": "Map < SpringConfig , String > function ( ) { return Collections . unmodifiableMap ( mSpringConfigMap ) ; }", "nl": "retrieve all springconfig in the registry concode_field_sep SpringConfigRegistry INSTANCE concode_elem_sep Map<SpringConfig,String> mSpringConfigMap concode_field_sep void removeAllSpringConfig concode_elem_sep boolean addSpringConfig concode_elem_sep boolean removeSpringConfig concode_elem_sep SpringConfigRegistry getInstance"}
{"code": "CookieAttributeHandler function ( final String arg0 ) { final CookieAttributeHandler loc0 = findAttribHandler ( arg0 ) ; if ( loc0 == null ) { throw new IllegalStateException ( \"srini_string\" + arg0 + \"srini_string\" ) ; } else { return loc0 ; } }", "nl": "gets attribute handler cookieattributehandler for thegiven attribute . concode_field_sep Map<String,CookieAttributeHandler> attribHandlerMap concode_field_sep CookieAttributeHandler findAttribHandler concode_elem_sep void registerAttribHandler concode_elem_sep Collection<CookieAttributeHandler> getAttribHandlers"}
{"code": "void function ( ) { lastRepublish = Simulator . getCurrentTime ( ) ; }", "nl": "updates the last republish time by setting it to the current simulation time . a republish takes place if either this or another peer sends the data item to its neighbours . concode_field_sep long lastRepublish concode_elem_sep DHTObject value concode_elem_sep ComponentsConfig config concode_field_sep DHTObject getValue concode_elem_sep boolean hasExpired concode_elem_sep long getLastRepublish concode_elem_sep String toString concode_elem_sep boolean needsRepublish"}
{"code": "void function ( String arg0 , BackToXMLWritable arg1 ) { if ( arg1 == null ) return ; Element loc0 = curRootNode . addElement ( arg0 ) ; loc0 . addAttribute ( \"srini_string\" , arg1 . getClass ( ) . getName ( ) ) ; arg1 . writeBackToXML ( new BackWriter ( loc0 ) ) ; }", "nl": "writes a complex type , that also implements backtoxmlwritable . concode_field_sep Element curRootNode concode_field_sep void writeTime concode_elem_sep void writeBack concode_elem_sep void writeBackToXML concode_elem_sep String getWrittenBackDoc concode_elem_sep void writeSimpleType"}
{"code": "double function ( double [ ] arg0 , double [ ] arg1 ) { assert ( ( arg0 . length == 3 ) && ( arg1 . length == 3 ) ) ; return ( arg0 [ 2 ] * arg1 [ 2 ] ) + ( arg0 [ 1 ] * arg1 [ 1 ] ) + ( arg0 [ 0 ] * arg1 [ 0 ] ) ; }", "nl": "computes the dotproduct of our sliding windows and weights vectors . todo jaimeyap : i could make this a general purpose dotproduct function , but for now , this is more performant . trivial to add later . concode_field_sep int eventDepth concode_elem_sep GraphModel graphModel concode_elem_sep Timer warmDownTimer concode_elem_sep int TICK_TIME concode_elem_sep double blockedTimeInWindow concode_elem_sep double[] weights concode_elem_sep double WINDOW_SLIDE_INCREMENT concode_elem_sep double weightedUtilizationPercent concode_elem_sep double WINDOW_WIDTH concode_elem_sep double maxUtilization concode_elem_sep double[] windowHistory concode_elem_sep double currentWindowStart concode_elem_sep double currentMarker concode_elem_sep double scaledWeightedUtilization concode_field_sep void updateWeightedUtilization concode_elem_sep double calculateCurrentUtilization concode_elem_sep double getThreadUtilization concode_elem_sep void enterBlocking concode_elem_sep void slideWindowTo concode_elem_sep void run concode_elem_sep void releaseBlocking"}
{"code": "void function ( ) { SecurityConfiguration . getKeyStoreURL ( ) ; }", "nl": "test method for org.jboss.security.config.securityconfiguration #getkeystoreurl . concode_field_sep PlaceHolder placeHolder concode_field_sep void testGetCipherAlgorithm concode_elem_sep void testSetIterationCount concode_elem_sep void testGetSalt concode_elem_sep void testGetTrustStoreType concode_elem_sep void testGetKeyStoreType concode_elem_sep void testSetTrustStoreURL concode_elem_sep void testSetKeyStoreURL concode_elem_sep void testSetSalt concode_elem_sep void testLoadPassword concode_elem_sep void testSetCipherSpec concode_elem_sep void testGetExternalPasswordCacheInstance concode_elem_sep void testSetKeyStoreType concode_elem_sep void testIsDeepCopySubjectMode concode_elem_sep void testGetKeyStorePass concode_elem_sep WebArchive deployment concode_elem_sep void testSetTrustStorePass concode_elem_sep void testGetTrustStorePass concode_elem_sep void testSetCipherAlgorithm concode_elem_sep void testSetTrustStoreType concode_elem_sep void testGetTrustStoreURL concode_elem_sep void testSetDeepCopySubjectMode concode_elem_sep void testGetCipherSpec concode_elem_sep void testAddApplicationPolicy concode_elem_sep void testGetApplicationPolicy concode_elem_sep void testSetKeyStorePass concode_elem_sep void testRemoveApplicationPolicy concode_elem_sep void testSetCipherKey concode_elem_sep void testGetIterationCount concode_elem_sep void testGetCipherKey"}
{"code": "void function ( EJBClientInvocationContext arg0 ) { Principal loc0 = SecurityContextAssociation . getPrincipal ( ) ; if ( loc0 != null ) { Map < String , Object > loc1 = arg0 . getContextData ( ) ; loc1 . put ( ServerSecurityInterceptor . DELEGATED_USER_KEY , loc0 . getName ( ) ) ; } arg0 . sendRequest ( ) ; }", "nl": "sets the current principal name to the invocation context . principal name is stored to the context under the serversecurityinterceptor #delegated_user_key key . concode_field_sep PlaceHolder placeHolder concode_field_sep Object handleInvocationResult"}
{"code": "String function ( final String arg0 ) { return bundle . getString ( arg0 ) ; }", "nl": "fetches the message belonging to the key . concode_field_sep String STYLE_NOTPARSED concode_elem_sep String UNSUPPORTED_CHARSET concode_elem_sep String A_SETLOCALGOTO concode_elem_sep String NO_SIBLING concode_elem_sep String OWN_CONTEXT_404 concode_elem_sep String ADD_HEADER concode_elem_sep String A_LOCALGOTO concode_elem_sep String COLSPAN concode_elem_sep String CUSTOMCONTEXT_404_CONTINUE concode_elem_sep ResourceBundle bundle concode_elem_sep String SPACEHACK concode_elem_sep String UNSUPPORTED_CLONING concode_elem_sep String PIPELINE_AUTODOC concode_elem_sep String INVALID_NESTED_TAG concode_elem_sep String META_CC concode_elem_sep String NO_CUSTOM_CONTEXT concode_elem_sep String NO_TAGPROCESSOR concode_elem_sep String STACK_404 concode_elem_sep String HEADER_BM_DISABLED concode_elem_sep String HTML_IMG_RETRIEVE_FAIL concode_elem_sep String A_EXTERNAL concode_elem_sep String ELEMENT_NOT_ADDED_EXC concode_elem_sep String IMG_SRC_NOTCONVERTED concode_elem_sep String HTML_IMG_USE concode_elem_sep String LINK_404 concode_elem_sep String ELEMENT_NOT_ADDED concode_elem_sep LocaleMessages myself concode_elem_sep String META_404 concode_field_sep LocaleMessages getInstance"}
{"code": "boolean function ( Object [ ] arg0 , Object [ ] arg1 ) { if ( arg0 == arg1 ) return true ; if ( arg0 == null || arg1 == null ) return false ; int loc0 = arg0 . loc0 ; if ( loc0 != arg1 . loc0 ) return false ; for ( int loc1 = 0 ; loc1 < loc0 ; loc1 ++ ) { if ( ! arg0 [ loc1 ] . equals ( arg1 [ loc1 ] ) ) return false ; } return true ; }", "nl": "compare 2 arrays only at the first level concode_field_sep boolean[] TRUE concode_elem_sep int PRIME_NUMER concode_elem_sep int SEED concode_elem_sep String[] EMPTY_STRING_ARRAY concode_elem_sep boolean[] FALSE concode_elem_sep int[] EMPTY_INT_ARRAY concode_elem_sep byte[] EMPTY_BYTE_ARRAY concode_elem_sep Object[] EMPTY_OBJECT_ARRAY concode_elem_sep Type[] EMPTY_TYPE_ARRAY concode_elem_sep Class[] EMPTY_CLASS_ARRAY concode_elem_sep boolean[] EMPTY_BOOLEAN_ARRAY concode_field_sep String[] fillArray concode_elem_sep int[] fillArray concode_elem_sep LockMode[] fillArray concode_elem_sep LockOptions[] fillArray concode_elem_sep int countNonNull concode_elem_sep void main concode_elem_sep List toList concode_elem_sep List toList concode_elem_sep Object[] typecast concode_elem_sep boolean isAllNegative concode_elem_sep String[] slice concode_elem_sep Object[] slice concode_elem_sep int[] toIntArray concode_elem_sep boolean isAllTrue concode_elem_sep int[][] to2DIntArray concode_elem_sep String[] join concode_elem_sep String[] join concode_elem_sep int[] join concode_elem_sep T[] join concode_elem_sep int indexOf concode_elem_sep boolean[] toBooleanArray concode_elem_sep String[][] to2DStringArray concode_elem_sep int getNextBatchSize concode_elem_sep Serializable[] extractNonNull concode_elem_sep String[] toStringArray concode_elem_sep String[] toStringArray concode_elem_sep String[] reverse concode_elem_sep int countTrue concode_elem_sep boolean contains concode_elem_sep boolean isAllFalse concode_elem_sep void addAll concode_elem_sep int[] getBatchSizes concode_elem_sep String toString concode_elem_sep Type[] toTypeArray concode_elem_sep int hash concode_elem_sep int hash concode_elem_sep int hash concode_elem_sep int hash"}
{"code": "Closure function ( ) { return iClosure ; }", "nl": "gets the closure . concode_field_sep boolean iDoLoop concode_elem_sep Predicate iPredicate concode_elem_sep Closure iClosure concode_elem_sep long serialVersionUID concode_field_sep Predicate getPredicate concode_elem_sep boolean isDoLoop concode_elem_sep Closure getInstance concode_elem_sep void execute"}
{"code": "Predicate function ( ) { return iPredicate ; }", "nl": "gets the predicate in use . concode_field_sep boolean iDoLoop concode_elem_sep Predicate iPredicate concode_elem_sep Closure iClosure concode_elem_sep long serialVersionUID concode_field_sep Closure getClosure concode_elem_sep boolean isDoLoop concode_elem_sep Closure getInstance concode_elem_sep void execute"}
{"code": "void function ( Schema arg0 , Schema arg1 ) { canRead ( arg0 , arg1 ) ; canRead ( arg1 , arg0 ) ; }", "nl": "validate that the schemas provided can mutually read data written by each other according to the default avro schema resolution rules . concode_field_sep PlaceHolder placeHolder concode_field_sep void canRead"}
{"code": "boolean function ( ) { return ( mainType == null && view == null ) ; }", "nl": "determines if an item is a folder . concode_field_sep String view concode_elem_sep String pluginId concode_elem_sep String name concode_elem_sep Image icon concode_elem_sep String description concode_elem_sep String id concode_elem_sep String mainType concode_elem_sep IConfigurationElement element concode_field_sep String getMainType concode_elem_sep Object createItemInstance concode_elem_sep String getName concode_elem_sep String getPluginId concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep String getId concode_elem_sep String getDescription concode_elem_sep String getView concode_elem_sep Image getIcon"}
{"code": "int function ( int arg0 , int arg1 ) { if ( arg0 < 0 ) { arg0 = - arg0 ; } if ( arg1 < 0 ) { arg1 = - arg1 ; } while ( arg1 != 0 ) { int loc0 = arg0 % arg1 ; arg0 = arg1 ; arg1 = loc0 ; } return arg0 ; }", "nl": "calculate the greatest common divisor . concode_field_sep String PROMPT concode_field_sep void main"}
{"code": "MemberRef function ( ) { return ( new MemberRef ( this . declaringClass ( ) . type ( ) , this . nameAndType ( ) ) ) ; }", "nl": "returns a memberref for the field concode_field_sep ClassEditor editor concode_elem_sep boolean isDeleted concode_elem_sep boolean isDirty concode_elem_sep String name concode_elem_sep FieldInfo fieldInfo concode_elem_sep Type type concode_elem_sep Object constantValue concode_field_sep boolean isStatic concode_elem_sep NameAndType nameAndType concode_elem_sep boolean isVolatile concode_elem_sep void setTransient concode_elem_sep void commit concode_elem_sep boolean isPrivate concode_elem_sep Type type concode_elem_sep void delete concode_elem_sep void setDirty concode_elem_sep void setFinal concode_elem_sep boolean isDirty concode_elem_sep boolean isProtected concode_elem_sep void setProtected concode_elem_sep void setVolatile concode_elem_sep boolean isPublic concode_elem_sep boolean isFinal concode_elem_sep void setPublic concode_elem_sep String fullName concode_elem_sep boolean isPackage concode_elem_sep void setStatic concode_elem_sep FieldInfo fieldInfo concode_elem_sep ClassEditor declaringClass concode_elem_sep void print concode_elem_sep String name concode_elem_sep String toString concode_elem_sep boolean isTransient concode_elem_sep void setPrivate concode_elem_sep Object constantValue"}
{"code": "char function ( ) { return zero ; }", "nl": "liefert die darstellung fuer den null-wert . concode_field_sep char zero concode_elem_sep char minus concode_elem_sep String regexp concode_elem_sep Charset charset concode_elem_sep int pointer concode_elem_sep Receiver receiver concode_elem_sep Sender sender concode_elem_sep int length concode_elem_sep BitAmount bits concode_elem_sep boolean[] buffer concode_elem_sep char plus concode_field_sep char minus concode_elem_sep String getRegExp concode_elem_sep String receive concode_elem_sep char getLastPulseOfReceiver concode_elem_sep String charform concode_elem_sep String read concode_elem_sep void clear concode_elem_sep boolean isEmpty concode_elem_sep char plus concode_elem_sep int getDC concode_elem_sep StringBuilder stringform concode_elem_sep boolean[] bitform concode_elem_sep char getLastPulseOfSender concode_elem_sep char bufferToDecimal concode_elem_sep boolean get concode_elem_sep int getLength concode_elem_sep String getCharsetRegExp concode_elem_sep BitBuffer copy concode_elem_sep void buffer concode_elem_sep boolean isFull concode_elem_sep String send"}
{"code": "Dialog function ( RefactoringStatus arg0 , Shell arg1 , String arg2 ) { return new RefactoringStatusDialog ( arg0 , arg1 , arg2 , false , true ) ; }", "nl": "creates a light-weight dialog to present a refactoringstatus tothe user . the following values are returned from the dialogs open method : org.eclipse.jface.dialogs.idialogconstants #ok_id idialogconstants #ok_id : if the user has pressed the continue button . org.eclipse.jface.dialogs.idialogconstants #cancel_id idialogconstants #cancel_id : if the user has pressed the cancel button . org.eclipse.jface.dialogs.idialogconstants #back_id idialogconstants #back_id : if the user has pressed the back button . concode_field_sep PlaceHolder placeHolder concode_field_sep Dialog createRefactoringWizardDialog concode_elem_sep Dialog createRefactoringStatusDialog concode_elem_sep Composite createRefactoringHistoryControl concode_elem_sep Composite createSortableRefactoringHistoryControl concode_elem_sep PerformChangeOperation createUIAwareChangeOperation"}
{"code": "void function ( final HttpParams arg0 , final boolean arg1 ) { Args . notNull ( arg0 , \"srini_string\" ) ; arg0 . setBooleanParameter ( CoreConnectionPNames . SO_KEEPALIVE , arg1 ) ; }", "nl": "sets value of the coreconnectionpnames #so_keepalive parameter . concode_field_sep PlaceHolder placeHolder concode_field_sep void setSoReuseaddr concode_elem_sep int getLinger concode_elem_sep void setTcpNoDelay concode_elem_sep void setConnectionTimeout concode_elem_sep void setSoTimeout concode_elem_sep boolean getSoReuseaddr concode_elem_sep boolean getTcpNoDelay concode_elem_sep void setLinger concode_elem_sep int getSocketBufferSize concode_elem_sep void setSocketBufferSize concode_elem_sep int getSoTimeout concode_elem_sep boolean isStaleCheckingEnabled concode_elem_sep void setStaleCheckingEnabled concode_elem_sep boolean getSoKeepalive concode_elem_sep int getConnectionTimeout"}
{"code": "WidgetLocator function ( String arg0 ) { WidgetLocator loc0 = get ( arg0 ) ; _values . remove ( loc0 ) ; return ( WidgetLocator ) _register . remove ( arg0 ) ; }", "nl": "removes the mapping for this key from this map if it is present . concode_field_sep Map _values concode_elem_sep Map _register concode_field_sep WidgetLocator add concode_elem_sep String getKey concode_elem_sep Set getEntries concode_elem_sep boolean containsKey concode_elem_sep WidgetLocator get concode_elem_sep boolean containsValue"}
{"code": "Request function ( Class < ? > arg0 , Throwable arg1 ) { return runner ( new ErrorReportingRunner ( arg0 , arg1 ) ) ; }", "nl": "not used within junit . clients should simply instantiate errorreportingrunner themselves concode_field_sep PlaceHolder placeHolder concode_field_sep Request filterWith concode_elem_sep Request filterWith concode_elem_sep Runner getRunner concode_elem_sep Request method concode_elem_sep Request classes concode_elem_sep Request classes concode_elem_sep Request classWithoutSuiteMethod concode_elem_sep Request sortWith concode_elem_sep Request runner concode_elem_sep Request aClass"}
{"code": "String function ( Object arg0 ) { return ( arg0 == null ? \"srini_string\" : ( arg0 instanceof String ? ( String ) arg0 : arg0 . toString ( ) ) ) ; }", "nl": "null object to empty string nullstrtoempty null = '' '' ; nullstrtoempty '' '' = '' '' ; nullstrtoempty `` aa '' = `` aa '' ; concode_field_sep PlaceHolder placeHolder concode_field_sep Long[] transformLongArray concode_elem_sep long[] transformLongArray concode_elem_sep int compare concode_elem_sep Integer[] transformIntArray concode_elem_sep int[] transformIntArray concode_elem_sep boolean isEquals"}
{"code": "boolean function ( PastryContact arg0 ) { boolean loc0 = false ; if ( cwNodes . contains ( arg0 ) ) loc0 = cwNodes . remove ( arg0 ) ; if ( ccwNodes . contains ( arg0 ) ) loc0 = ccwNodes . remove ( arg0 ) || loc0 ; if ( loc0 ) lastChanged = Simulator . getCurrentTime ( ) ; return loc0 ; }", "nl": "this method removes a given contact from the leaf set . concode_field_sep PastryNode owningNode concode_elem_sep LinkedList<PastryContact> cwNodes concode_elem_sep LinkedList<PastryContact> ccwNodes concode_elem_sep long lastChanged concode_elem_sep int maxSize concode_field_sep void cleanSet concode_elem_sep PastryContact getNumericallyClosestContact concode_elem_sep PastryContact getNumericallyClosestContact concode_elem_sep long getLastChanged concode_elem_sep void sortCcw concode_elem_sep boolean isInRange concode_elem_sep void setMaxSize concode_elem_sep boolean put concode_elem_sep int getSize concode_elem_sep Iterator<PastryContact> iterator concode_elem_sep void putAll concode_elem_sep void removeAndSubstitute concode_elem_sep boolean overlaps concode_elem_sep void reset concode_elem_sep void sortCw concode_elem_sep boolean isComplete"}
{"code": "void function ( final char arg0 ) { final abbot . swt . Robot loc0 = getAbbotRobot ( ) ; Display . getDefault ( ) . syncExec ( new Runnable ( ) { public void run ( ) { loc0 . keyPress ( ( int ) arg0 ) ; loc0 . keyRelease ( ( int ) arg0 ) ; } } ) ; }", "nl": "key click method that delegates to swt robot concode_field_sep Point pointT concode_elem_sep abbot.swt.Robot _robot concode_field_sep void doKeyDown concode_elem_sep void doKeyUp concode_elem_sep void mouseMove concode_elem_sep void mouseMove concode_elem_sep void keyUp concode_elem_sep void keyUp concode_elem_sep void mouseDown concode_elem_sep abbot.swt.Robot getAbbotRobot concode_elem_sep void mouseDoubleClick concode_elem_sep void pause concode_elem_sep boolean needsShift concode_elem_sep int[] extractKeys concode_elem_sep void mouseUp concode_elem_sep void keyClick concode_elem_sep void keyClick concode_elem_sep void keyDown concode_elem_sep void keyDown concode_elem_sep Event createClickEvent concode_elem_sep void enterText"}
{"code": "boolean function ( ) { return fEnabled ; }", "nl": "gets the enable state of the dialog field . concode_field_sep String fLabelText concode_elem_sep IDialogFieldListener fDialogFieldListener concode_elem_sep Label fLabel concode_elem_sep boolean fEnabled concode_field_sep Label getLabelControl concode_elem_sep boolean isOkToUse concode_elem_sep void refresh concode_elem_sep boolean setFocus concode_elem_sep void dialogFieldChanged concode_elem_sep void setEnabled concode_elem_sep void setDialogFieldListener concode_elem_sep Control[] doFillIntoGrid concode_elem_sep Control createEmptySpace concode_elem_sep Control createEmptySpace concode_elem_sep void setLabelText concode_elem_sep GridData gridDataForLabel concode_elem_sep void updateEnableState concode_elem_sep void postSetFocusOnDialogField concode_elem_sep void assertEnoughColumns concode_elem_sep void assertCompositeNotNull concode_elem_sep int getNumberOfControls"}
{"code": "T function ( T arg0 , String arg1 , Object ... arg2 ) { if ( arg0 == null ) { throw new IllegalArgumentException ( String . format ( arg1 , arg2 ) ) ; } if ( arg0 . length ( ) == 0 ) { throw new IllegalArgumentException ( String . format ( arg1 , arg2 ) ) ; } return arg0 ; }", "nl": "validate that the specified argument character sequence is neither null nor a length of zero no characters ; otherwise throwing an exception with the specified message . validate.notempty mystring , `` the string must not be empty '' ; concode_field_sep PlaceHolder placeHolder concode_field_sep T notNull concode_elem_sep boolean isEmpty concode_elem_sep String unescape concode_elem_sep String concat concode_elem_sep void onlyOneIsTrue concode_elem_sep void isTrue concode_elem_sep boolean onlyOneIsTrueNonThrow concode_elem_sep String hex concode_elem_sep String toString concode_elem_sep String join concode_elem_sep String join concode_elem_sep void closeQuietly concode_elem_sep String escape concode_elem_sep int indexOf"}
{"code": "void function ( Component arg0 ) { this . component = arg0 ; }", "nl": "sets the component . concode_field_sep Component component concode_elem_sep GridBagConstraints constraints concode_field_sep GridBagConstraints getConstraints concode_elem_sep void setConstraints concode_elem_sep Component getComponent"}
{"code": "EditPartFactory function ( ) { return new SchemaEditPartFactory ( ) ; }", "nl": "returns the editpartfactory that the graphicalviewer will use . concode_field_sep GraphicalViewer viewer concode_elem_sep ActionRegistry actionRegistry concode_elem_sep KeyHandler sharedKeyHandler concode_elem_sep IEditorSite editorSite concode_field_sep GraphicalViewer getViewer concode_elem_sep GraphicalViewer createViewer concode_elem_sep void createGraphicalViewer"}
{"code": "String function ( ) { return ( this . localeKey ) ; }", "nl": "return the context attribute key under which we will store the request locale . concode_field_sep String localeKey concode_field_sep void setLocaleKey concode_elem_sep boolean execute concode_elem_sep Locale getLocale"}
{"code": "void function ( ) { tabList . setFocus ( ) ; }", "nl": "grabs input focus . concode_field_sep Composite controlPanel concode_elem_sep Composite parent concode_elem_sep Menu backMenu concode_elem_sep ToolItem pauseItem concode_elem_sep Spinner timerSpinner concode_elem_sep Object[] tabBackground concode_elem_sep GraphicsTab[] tabs concode_elem_sep boolean animate concode_elem_sep ToolBar toolBar concode_elem_sep ToolItem playItem concode_elem_sep GraphicsTab tab concode_elem_sep boolean advanceGraphicsInit concode_elem_sep ResourceBundle RESOURCE_BUNDLE concode_elem_sep ToolItem dbItem concode_elem_sep Canvas canvas concode_elem_sep Vector images concode_elem_sep Listener redrawListener concode_elem_sep MenuItem customMI concode_elem_sep boolean advanceGraphics concode_elem_sep Tree tabList concode_elem_sep Color customColor concode_elem_sep int TIMER concode_elem_sep Image customImage concode_elem_sep Composite tabPanel concode_elem_sep ToolItem backItem concode_field_sep void createControlPanel concode_elem_sep Listener getRedrawListener concode_elem_sep Image createImage concode_elem_sep void startAnimationTimer concode_elem_sep GraphicsTab[] createTabs concode_elem_sep String getResourceString concode_elem_sep void paintBackground concode_elem_sep void main concode_elem_sep boolean checkAdvancedGraphics concode_elem_sep TreeItem findItemByData concode_elem_sep void createToolBar concode_elem_sep Image loadImage concode_elem_sep Image loadImage concode_elem_sep void redraw concode_elem_sep void setTab concode_elem_sep GraphicsTab getTab concode_elem_sep void createTabPanel concode_elem_sep void dispose concode_elem_sep void createCanvas concode_elem_sep void createTabList"}
{"code": "boolean function ( int arg0 ) { return ( arg0 == QuadTreeNode . NORTH || arg0 == QuadTreeNode . WEST ) ; }", "nl": "return true iff this quadrant is adjacent to the boundary of an image in the given direction . concode_field_sep PlaceHolder placeHolder concode_field_sep Quadrant reflect concode_elem_sep QuadTreeNode child"}
{"code": "ValidatorConfiguration function ( String arg0 , Object arg1 ) { properties . put ( arg0 , String . valueOf ( arg1 ) ) ; return this ; }", "nl": "add an property . concode_field_sep String configurationName concode_elem_sep Map<String,String> properties concode_field_sep String getProperty concode_elem_sep ValidatorConfiguration addAttribute concode_elem_sep String getConfigurationName concode_elem_sep int hashCode concode_elem_sep Map<String,String> getProperties concode_elem_sep String getValidatorClassName concode_elem_sep boolean equals concode_elem_sep ValidatorConfiguration clone concode_elem_sep String toString"}
{"code": "Boolean function ( Object arg0 ) { LOG . tracev ( \"srini_string\" , value ) ; return arg0 == null || arg0 . equals ( value ) ; }", "nl": "does the given identifier belong to a new instance ? concode_field_sep IdentifierValue NONE concode_elem_sep IdentifierValue UNDEFINED concode_elem_sep Logger LOG concode_elem_sep IdentifierValue NULL concode_elem_sep Serializable value concode_elem_sep IdentifierValue ANY concode_field_sep String toString concode_elem_sep String toString concode_elem_sep String toString concode_elem_sep String toString concode_elem_sep String toString concode_elem_sep Serializable getDefaultValue concode_elem_sep Serializable getDefaultValue concode_elem_sep Serializable getDefaultValue concode_elem_sep Serializable getDefaultValue concode_elem_sep Serializable getDefaultValue"}
{"code": "boolean function ( double arg0 , double arg1 ) { return ( ( arg0 > arg1 ) && ne ( arg0 , arg1 ) ) ; }", "nl": "test d1 and d2 for d1 > d2 . if d1 is equal to d2 using the current ratio , this returns false . concode_field_sep double max_ratio concode_elem_sep double min_ratio concode_elem_sep boolean off concode_field_sep boolean isElemMatch concode_elem_sep int compare concode_elem_sep boolean isSubset concode_elem_sep boolean ne concode_elem_sep boolean lt concode_elem_sep boolean gte concode_elem_sep void set_rel_diff concode_elem_sep boolean eq concode_elem_sep boolean lte concode_elem_sep int indexOf concode_elem_sep int indexOf"}
{"code": "void function ( final Chunk arg0 , final Chunk arg1 ) { arg1 . setFont ( arg0 . getFont ( ) ) ; arg1 . setAttributes ( arg0 . getAttributes ( ) ) ; arg1 . setCharacterSpacing ( arg0 . getCharacterSpacing ( ) ) ; arg1 . setHorizontalScaling ( arg0 . getHorizontalScaling ( ) ) ; arg1 . setHorizontalScaling ( arg0 . getHorizontalScaling ( ) ) ; }", "nl": "method used for copying styles from one chunk to another . could be deprecated if the content of a chunk can be overwritten . concode_field_sep FontProvider fontProvider concode_elem_sep List<String> BOLD concode_elem_sep CssUtils utils concode_field_sep boolean isBoldValue concode_elem_sep Font applyFontStyles concode_elem_sep Chunk apply concode_elem_sep FontProvider getFontProvider concode_elem_sep float getWidestWord concode_elem_sep void setFontProvider"}
{"code": "String function ( PdfReader arg0 , int arg1 , TextExtractionStrategy arg2 ) { return getTextFromPage ( arg0 , arg1 , arg2 , new HashMap < String , ContentOperator > ( ) ) ; }", "nl": "extract text from a specified page using an extraction strategy . concode_field_sep PlaceHolder placeHolder concode_field_sep placeholderType placeHolder"}
{"code": "void function ( @ ArquillianResource ( TxControlServlet . class ) URL arg0 ) { testURL ( arg0 , false , false ) ; }", "nl": "test a requestdispatcher forward that fails to commit the tx . concode_field_sep String STATUS_ACTIVE concode_elem_sep Logger log concode_field_sep void testIncludeNoCommit concode_elem_sep WebArchive statusDeployment concode_elem_sep void testIncludeCommit concode_elem_sep void testForwardCommit concode_elem_sep void testURL concode_elem_sep WebArchive controlDeployment"}
{"code": "void function ( final TagState arg0 ) { this . tagState = arg0 ; }", "nl": "set the state of the current tag concode_field_sep String text concode_elem_sep Charset charset concode_elem_sep StateController controller concode_elem_sep XMLParserMemory memory concode_elem_sep List<XMLParserListener> listeners concode_elem_sep TagState tagState concode_elem_sep ParserMonitor monitor concode_elem_sep State state concode_field_sep XMLParserMemory memory concode_elem_sep void startElement concode_elem_sep InputStreamReader detectEncoding concode_elem_sep char currentLastChar concode_elem_sep XMLParser removeListener concode_elem_sep void parse concode_elem_sep void parse concode_elem_sep void parse concode_elem_sep void parse concode_elem_sep Charset getCharset concode_elem_sep String current concode_elem_sep void endElement concode_elem_sep void flush concode_elem_sep void parseWithReader concode_elem_sep void unknownData concode_elem_sep String currentTag concode_elem_sep void setMonitor concode_elem_sep String bufferToString concode_elem_sep void setState concode_elem_sep void comment concode_elem_sep StateController selectState concode_elem_sep void text concode_elem_sep XMLParser append concode_elem_sep XMLParser append concode_elem_sep XMLParser append concode_elem_sep void callText concode_elem_sep XMLParser addListener concode_elem_sep int bufferSize"}
{"code": "Object function ( AppleServer arg0 , Object arg1 ) { if ( arg1 instanceof InputStream ) arg1 = loadKeystore ( arg0 , arg1 , false ) ; return arg1 ; }", "nl": "make sure that the provided keystore will be reusable . concode_field_sep String REVIEW_MESSAGE concode_field_sep InputStream streamKeystore concode_elem_sep void verifyKeystoreContent concode_elem_sep void verifyKeystoreContent concode_elem_sep KeyStore loadKeystore concode_elem_sep KeyStore loadKeystore concode_elem_sep KeyStore loadKeystore concode_elem_sep char[] getKeystorePasswordForSSL concode_elem_sep void validateKeystoreParameter concode_elem_sep KeystoreException wrapKeystoreException"}
{"code": "GenMatrix < C > function ( Reader arg0 ) { throw new RuntimeException ( \"srini_string\" ) ; }", "nl": "parse a matrix from a reader . concode_field_sep int blocksize concode_elem_sep GenMatrix<C> ZERO concode_elem_sep int DEFAULT_BSIZE concode_elem_sep GenMatrix<C> ONE concode_elem_sep Logger logger concode_elem_sep RingFactory<C> coFac concode_elem_sep float density concode_elem_sep int rows concode_elem_sep int cols concode_elem_sep Random random concode_elem_sep float DEFAULT_DENSITY concode_field_sep GenMatrix<C> randomUpper concode_elem_sep GenMatrix<C> randomUpper concode_elem_sep GenMatrix<C> randomLower concode_elem_sep GenMatrix<C> randomLower concode_elem_sep GenMatrixRing<C> product concode_elem_sep GenMatrix<C> fromList concode_elem_sep boolean isField concode_elem_sep boolean isCommutative concode_elem_sep java.math.BigInteger characteristic concode_elem_sep GenMatrix<C> random concode_elem_sep GenMatrix<C> random concode_elem_sep GenMatrix<C> random concode_elem_sep GenMatrix<C> random concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep GenMatrix<C> getONE concode_elem_sep GenMatrix<C> getZERO concode_elem_sep GenMatrix<C> fromInteger concode_elem_sep GenMatrix<C> fromInteger concode_elem_sep String toString concode_elem_sep boolean isAssociative concode_elem_sep GenMatrixRing<C> transpose concode_elem_sep GenMatrix<C> copy"}
{"code": "String [ ] function ( ) { return ToStringTemplateParser . MEMBER_RELATED_VARIABLE ; }", "nl": "this method is used in #parsetemplate string to determine what member specificvariables are expected in a template . concode_field_sep String OBJECT_SYSTEM_HASHCODE_VARIABLE concode_elem_sep String[] VARIABLES concode_elem_sep String[] beginning concode_elem_sep String[] OBJECT_RELAED_VARIABLE concode_elem_sep String[] body concode_elem_sep String separator concode_elem_sep Map<String,String> descriptions concode_elem_sep String OBJECT_SUPER_TOSTRING_VARIABLE concode_elem_sep String DEFAULT_TEMPLATE concode_elem_sep String[] ending concode_elem_sep String OTHER_MEMBERS_VARIABLE concode_elem_sep String OBJECT_HASHCODE_VARIABLE concode_elem_sep String[] MEMBER_RELATED_VARIABLE concode_elem_sep String MEMBER_NAME_VARIABLE concode_elem_sep String MEMBER_VALUE_VARIABLE concode_elem_sep String OBJECT_NAME_VARIABLE concode_elem_sep String[] OBJECT_AND_MEMBER_RELATED_VARIABLES concode_elem_sep String[] VARIABLE_DESCRIPTIONS concode_elem_sep String OBJECT_GET_NAME_VARIABLE concode_elem_sep String MEMBER_NAME_PARENTHESIS_VARIABLE concode_field_sep String[] getObjectAndMemberRelatedVariables concode_elem_sep String[] getBeginning concode_elem_sep String[] getEnding concode_elem_sep void parseTemplate concode_elem_sep String[] getVariables concode_elem_sep ArrayList<String> extractElements concode_elem_sep String[] getBody concode_elem_sep String[] getObjectRelatedVariables concode_elem_sep String getSeparator concode_elem_sep Map<String,String> getVariableDescriptions concode_elem_sep int firstOccuranceOf"}
{"code": "String function ( String arg0 , boolean arg1 , boolean arg2 , boolean arg3 ) { StringBuffer loc0 = new StringBuffer ( arg0 . loc1 ( ) ) ; int loc1 = arg0 . loc1 ( ) ; for ( int loc2 = 0 ; loc2 < loc1 ; loc2 ++ ) { char loc3 = arg0 . charAt ( loc2 ) ; loc0 . append ( escape ( loc3 , arg1 , arg2 , arg3 ) ) ; } return loc0 . toString ( ) ; }", "nl": "convert characters in a java string to the escaped form that must be used in . properties files . concode_field_sep char[] HEX_DIGITS concode_field_sep int getHexDigitValue concode_elem_sep String unescapeBackslashes concode_elem_sep boolean containsInvalidEscapeSequence concode_elem_sep char toHex concode_elem_sep boolean containsUnescapedBackslash concode_elem_sep String unescape concode_elem_sep boolean containsEscapedBackslashes"}
{"code": "HazelcastInstance function ( ) { HazelcastInstance loc0 = InstanceHelper . makeServer ( Constants . HAZELCAST_INSTANCE_NAME , CLUSTER_PORT ) ; LOG . trace ( \"srini_string\" , loc0 ) ; return loc0 ; }", "nl": "create a singleton hazelcastinstance server @bean . concode_field_sep String CLUSTER_HOST concode_elem_sep Logger LOG concode_elem_sep String MASTER_SERVER concode_elem_sep HazelcastInstance hazelcastInstance concode_elem_sep int CLUSTER_PORT concode_field_sep HazelcastInstance cluster concode_elem_sep HazelcastInstance cluster concode_elem_sep HazelcastInstance makeClient concode_elem_sep void preDestroy concode_elem_sep HazelcastInstance makeServer concode_elem_sep KeyValueOperations keyValueTemplate"}
{"code": "String function ( String arg0 , String arg1 ) { LanguageIdentifierBean loc0 ; try { loc0 = new LanguageIdentifierBean ( ) ; return ( arg1 . equals ( loc0 . classify ( arg0 ) ) ) ? arg0 : \"srini_string\" ; } catch ( CeonGeneralException loc1 ) { throw new IOException ( loc1 ) ; } }", "nl": "returns a text only if it is in given language concode_field_sep boolean fromContent concode_elem_sep Map<String,Map<String,Integer>> cooccurrences concode_elem_sep boolean fromAbstract concode_elem_sep List<KeywordCandidate> keywordCandidates concode_elem_sep String ILLEGAL_CHARS concode_elem_sep Logger logger concode_elem_sep int DEFAULT_KEYWORDS_NUMBER concode_elem_sep ExtractionOption extractionOption concode_elem_sep Lang lang concode_elem_sep Map<Lang,Set<String>> stopwords concode_elem_sep String content concode_field_sep void setOption concode_elem_sep boolean isNum concode_elem_sep void countCooccurrences concode_elem_sep String extractTextFromPdf concode_elem_sep List<String> getSupportedLanguages concode_elem_sep void prepareToExtraction concode_elem_sep List<String> choiceKeywords concode_elem_sep List<String> getKeywords concode_elem_sep List<String> getKeywords concode_elem_sep void countMetrics concode_elem_sep void setLang concode_elem_sep void extractKeywordCandidates concode_elem_sep List<String> getAvailableExtractionOptions"}
{"code": "void function ( ) { checkRunning ( ) ; monitor = new DefaultMonitor ( ) ; scenario = null ; scheduler = new Scheduler ( true ) ; seed = 0 ; }", "nl": "reset the simulator , so that it can be configured again for another simulation run without to restart the java virtual machine . this is especially usefull for junit tests . concode_field_sep Simulator singleton concode_elem_sep Logger log concode_elem_sep long seed concode_elem_sep Monitor monitor concode_elem_sep DefaultConfigurator defaultConfigurator concode_elem_sep long MINUTE_UNIT concode_elem_sep long SECOND_UNIT concode_elem_sep boolean running concode_elem_sep Scheduler scheduler concode_elem_sep long MICROSECOND_UNIT concode_elem_sep long MILLISECOND_UNIT concode_elem_sep boolean finishedWithoutError concode_elem_sep Scenario scenario concode_elem_sep RandomGenerator randomGen concode_elem_sep long HOUR_UNIT concode_field_sep void setRealTime concode_elem_sep void shutdownSimulation concode_elem_sep long getSeed concode_elem_sep void setFinishAt concode_elem_sep String getSimulatedRealtime concode_elem_sep void checkRunning concode_elem_sep void start concode_elem_sep void setScenario concode_elem_sep boolean isFinishedWithoutError concode_elem_sep void configure concode_elem_sep void scheduleEvent concode_elem_sep String getFormattedTime concode_elem_sep DefaultConfigurator getConfigurator concode_elem_sep void setStatusInterval concode_elem_sep long getEndTime concode_elem_sep RandomGenerator getRandom concode_elem_sep void setMonitor concode_elem_sep Scenario getScenario concode_elem_sep Monitor getMonitor concode_elem_sep void setTimeSkew concode_elem_sep Simulator getInstance concode_elem_sep long getCurrentTime concode_elem_sep Scheduler getScheduler concode_elem_sep void setSeed"}
{"code": "List < Tag > function ( final Tag arg0 , final List < Tag > arg1 ) { List < Tag > loc0 = new ArrayList < Tag > ( ) ; Tag loc1 = arg0 . getParent ( ) ; while ( loc1 != null && ! ( loc1 . getName ( ) . equals ( HTML . Tag . HTML ) ) ) { loc0 . add ( loc1 ) ; loc1 = loc1 . getParent ( ) ; } return loc0 ; }", "nl": "creates a parenttree of all parent tag objects of a given tag concode_field_sep PlaceHolder placeHolder concode_field_sep List<String> getParentTree"}
{"code": "GenVector < C > function ( int arg0 , float arg1 ) { return random ( arg0 , arg1 , random ) ; }", "nl": "random vector . concode_field_sep GenVector<C> ZERO concode_elem_sep Logger logger concode_elem_sep RingFactory<C> coFac concode_elem_sep float density concode_elem_sep int cols concode_elem_sep List<GenVector<C>> BASIS concode_elem_sep Random random concode_elem_sep float DEFAULT_DENSITY concode_field_sep GenVector<C> fromList concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep GenVector<C> getZERO concode_elem_sep GenVector<C> fromInteger concode_elem_sep GenVector<C> fromInteger concode_elem_sep String toString concode_elem_sep GenVector<C> copy concode_elem_sep GenVector<C> parse concode_elem_sep GenVector<C> parse"}
{"code": "boolean function ( String arg0 ) { for ( int loc0 = 0 ; loc0 < arg0 . length ( ) ; loc0 ++ ) { if ( charAt ( loc0 ) != arg0 . charAt ( loc0 ) ) { return false ; } } return true ; }", "nl": "does the line start with the given string ? concode_field_sep String inlineMarkupDelimiters concode_elem_sep int sectionLevel concode_elem_sep boolean erased concode_elem_sep boolean inBlock concode_elem_sep boolean listStart concode_elem_sep List<Boolean> valid concode_elem_sep char ESCAPED_CHARACTER_VALUE concode_elem_sep List<Integer> offsets concode_elem_sep List<Character> characters concode_elem_sep String text concode_elem_sep List<Boolean> escaped concode_elem_sep int listLevel concode_elem_sep int lineNo concode_elem_sep boolean allSameCharacter concode_field_sep void setListStart concode_elem_sep void erase concode_elem_sep void erase concode_elem_sep void erase concode_elem_sep boolean isListStart concode_elem_sep String getText concode_elem_sep boolean isValid concode_elem_sep int getOffset concode_elem_sep int length concode_elem_sep boolean isEmpty concode_elem_sep void eraseWithStyle concode_elem_sep boolean isAllSameCharacter concode_elem_sep void setSectionLevel concode_elem_sep void setInBlock concode_elem_sep boolean isErased concode_elem_sep int getSectionLevel concode_elem_sep int eraseEnclosure concode_elem_sep int getListLevel concode_elem_sep int getLineNo concode_elem_sep boolean isInBlock concode_elem_sep String toString concode_elem_sep char rawCharAt concode_elem_sep void setListLevel concode_elem_sep char charAt concode_elem_sep char charAt"}
{"code": "void function ( List < Document > arg0 , boolean arg1 ) { InsertManyOptions loc0 = new InsertManyOptions ( ) ; if ( ! arg1 ) { loc0 . arg1 ( false ) ; } collection . insertMany ( arg0 , loc0 ) ; }", "nl": "inserts one or more documents . this method is equivalent to a call to the bulkwrite method . the documents will be inserted in the order provided , stopping on the first failed insertion . concode_field_sep MongoClient client concode_elem_sep MongoCollection<Document> collection concode_field_sep Document find concode_elem_sep void update concode_elem_sep void close"}
{"code": "Student function ( File arg0 , JAXBContext arg1 ) { Unmarshaller loc0 = arg1 . createUnmarshaller ( ) ; Student loc1 = new Student ( ) ; Contact loc2 = ( Contact ) loc0 . unmarshal ( arg0 ) ; loc1 . setContact ( loc2 ) ; return loc1 ; }", "nl": "creates a student object using the given studentcontactfile.the studentcontactfile should be an xml file containing the marshaled form of a contact object . concode_field_sep PlaceHolder placeHolder concode_field_sep Instructor readInstructor concode_elem_sep void main concode_elem_sep void writeSession concode_elem_sep Session readSession concode_elem_sep List<Student> readStudents"}
{"code": "String function ( String arg0 , String arg1 ) { return ZKUtil . joinZNode ( getKeysZNode ( arg0 ) , arg1 ) ; }", "nl": "get key type znode . concode_field_sep String ENCRYPTION_KEY_NO_ZNODE_NAME concode_elem_sep String KEY_VERSION_ZNODE_NAME concode_elem_sep String PRINCIPAL_NAME_ZNODE_NAME concode_elem_sep String baseZNode concode_elem_sep String CREATED_TIME_ZNODE_NAME concode_elem_sep String KDC_FLAGS_ZNODE_NAME concode_elem_sep String DISABLED_ZNODE_NAME concode_elem_sep String KEYS_ZNODE_NAME concode_elem_sep String IDENTITIES_ZNODE_NAME concode_elem_sep String KEY_ZNODE_NAME concode_elem_sep String EXPIRE_TIME_ZNODE_NAME concode_elem_sep String KEY_TYPE_ZNODE_NAME concode_elem_sep String LOCKED_ZNODE_NAME concode_field_sep String getEncryptionKeyTypeZNode concode_elem_sep String getBaseZNode concode_elem_sep String getDisabledZNode concode_elem_sep String getEncryptionKeyNoZNode concode_elem_sep String getEncryptionKeyZNode concode_elem_sep String getLockedZNode concode_elem_sep String getCreatedTimeZNode concode_elem_sep String getExpireTimeZNode concode_elem_sep String getKeyVersionZNode concode_elem_sep String getKeysZNode concode_elem_sep String getIdentitiesZNode concode_elem_sep List<String> getIdentityNames concode_elem_sep String getPrincipalNameZnode concode_elem_sep String getIndentityZNode concode_elem_sep String getKdcFlagsZNode"}
{"code": "int function ( int arg0 ) { return reverseBits ( arg0 , 32 ) ; }", "nl": "reverses all 32 bits of the provided integer value . concode_field_sep PlaceHolder placeHolder concode_field_sep int gcd concode_elem_sep long gcd concode_elem_sep BigInteger gcd concode_elem_sep void main concode_elem_sep int scm concode_elem_sep long scm concode_elem_sep BigInteger scm"}
{"code": "void function ( String arg0 , String arg1 ) { getProperties ( arg0 ) . remove ( arg1 ) ; System . out . println ( arg0 + \"srini_string\" + arg1 + \"srini_string\" ) ; }", "nl": "deletes an existing entry in the appropriate properties concode_field_sep Properties dvdProperties concode_elem_sep Properties cdProperties concode_elem_sep Properties bookProperties concode_field_sep void edit concode_elem_sep Properties getProperties concode_elem_sep void create concode_elem_sep void retrieve"}
{"code": "String function ( final String arg0 ) { return readFileToString ( new File ( arg0 ) ) ; }", "nl": "reads the contents of a file to a string . concode_field_sep PlaceHolder placeHolder concode_field_sep String unEscapeURL concode_elem_sep URL toURL concode_elem_sep char[] copyOfRange concode_elem_sep boolean isSurrogatePair concode_elem_sep boolean isSurrogatePair concode_elem_sep float inchesToPoints concode_elem_sep void skip concode_elem_sep float pointsToMillimeters concode_elem_sep Set<K> getKeySet concode_elem_sep boolean isSurrogateHigh concode_elem_sep float millimetersToInches concode_elem_sep String convertFromUtf32 concode_elem_sep int convertToUtf32 concode_elem_sep int convertToUtf32 concode_elem_sep int convertToUtf32 concode_elem_sep float millimetersToPoints concode_elem_sep float inchesToMillimeters concode_elem_sep float pointsToInches concode_elem_sep String convertToHex concode_elem_sep boolean checkTrueOrFalse concode_elem_sep boolean isSurrogateLow concode_elem_sep Object[][] addToArray"}
{"code": "Criteria function ( String arg0 , String arg1 , String arg2 ) { Criteria loc0 = new Criteria ( ValueNode . toValueNode ( arg0 ) ) ; loc0 . criteriaType = RelationalOperator . fromString ( arg1 ) ; loc0 . arg2 = ValueNode . toValueNode ( arg2 ) ; return loc0 ; }", "nl": "creates a new criteria concode_field_sep List<Criteria> criteriaChain concode_elem_sep ValueNode left concode_elem_sep ValueNode right concode_elem_sep RelationalOperator criteriaType concode_field_sep Criteria lt concode_elem_sep Criteria type concode_elem_sep String prefixPath concode_elem_sep Criteria empty concode_elem_sep void checkComplete concode_elem_sep Criteria nin concode_elem_sep Criteria nin concode_elem_sep Criteria and concode_elem_sep Criteria gte concode_elem_sep Criteria where concode_elem_sep Criteria where concode_elem_sep Criteria lte concode_elem_sep Criteria all concode_elem_sep Criteria all concode_elem_sep boolean apply concode_elem_sep Criteria in concode_elem_sep Criteria in concode_elem_sep Criteria is concode_elem_sep Criteria parse concode_elem_sep Criteria eq concode_elem_sep Criteria gt concode_elem_sep Criteria matches concode_elem_sep Criteria regex concode_elem_sep Criteria contains concode_elem_sep Criteria size concode_elem_sep Criteria ne concode_elem_sep Criteria exists concode_elem_sep String toString concode_elem_sep Collection<RelationalExpressionNode> toRelationalExpressionNodes concode_elem_sep Criteria notEmpty"}
{"code": "void function ( String [ ] arg0 ) { System . out . println ( \"srini_string\" + getSpecification ( ) ) ; System . out . println ( \"srini_string\" + getImplementation ( ) ) ; }", "nl": "a simple main method that prints the version and exits concode_field_sep PlaceHolder placeHolder concode_field_sep String getSpecification concode_elem_sep String getImplementation"}
{"code": "Date function ( ) { return stmt . getFrToDt ( ) . getToDtTm ( ) . toGregorianCalendar ( ) . getTime ( ) ; }", "nl": "end date of the period for which the account statement is issued . concode_field_sep BankToCustomerStatementV02 bankToCustomerStatement concode_elem_sep Document document concode_elem_sep GroupHeader42 groupHeader concode_elem_sep AccountStatement2 stmt concode_field_sep CashAccount16 getRltdAcct concode_elem_sep List<ReportEntry2> getNtry concode_elem_sep String getAddtlStmtInf concode_elem_sep BankToCustomerStatement read concode_elem_sep PartyIdentification32 getMsgRcpt concode_elem_sep Date getCreDtTm concode_elem_sep Date getCreDtTm concode_elem_sep Pagination getMsgPgntn concode_elem_sep String getAddtlInf concode_elem_sep String getId concode_elem_sep BigDecimal getElctrncSeqNb concode_elem_sep Date getFrDt concode_elem_sep TotalTransactions2 getTxsSummry concode_elem_sep List<AccountInterest2> getIntrst concode_elem_sep CashAccount20 getAcct concode_elem_sep String getMsgId concode_elem_sep ReportingSource1Choice getRptgSrc concode_elem_sep List<AccountStatement> getStmt concode_elem_sep CopyDuplicate1Code getCpyDplctInd concode_elem_sep BigDecimal getLglSeqNb concode_elem_sep List<CashBalance3> getBal"}
{"code": "Map < String , String > function ( ) { return parasMap ; }", "nl": "get paras map concode_field_sep Map<String,String> requestProperties concode_elem_sep int readTimeout concode_elem_sep int connectTimeout concode_elem_sep Map<String,String> parasMap concode_elem_sep String url concode_field_sep Map<String,String> getRequestProperties concode_elem_sep String getUrl concode_elem_sep void setReadTimeout concode_elem_sep void setRequestProperties concode_elem_sep void setConnectTimeout concode_elem_sep void setRequestProperty concode_elem_sep int getReadTimeout concode_elem_sep String getParas concode_elem_sep void setUserAgent concode_elem_sep int getConnectTimeout concode_elem_sep void setParasMap concode_elem_sep String getRequestProperty"}
{"code": "ITypeHierarchy function ( IType arg0 ) { return getTypeHierarchy ( arg0 , null ) ; }", "nl": "returns a super type hierarchy that contains the given type . the returned hierarchy may actually be based on a subtype of the requested type . therefore , queries such as itypehierarchy #getallclasses or itypehierarchy #getrootinterfaces may return more types than the samequeries on a type hierarchy for just the given type . concode_field_sep int CACHE_SIZE concode_elem_sep Map<IType,MethodOverrideTester> fgMethodOverrideTesterCache concode_elem_sep long fLastAccess concode_elem_sep ITypeHierarchy fTypeHierarchy concode_elem_sep int fgCacheHits concode_elem_sep ArrayList<HierarchyCacheEntry> fgHierarchyCache concode_elem_sep int fgCacheMisses concode_field_sep long getLastAccess concode_elem_sep int getCacheHits concode_elem_sep boolean hasInCache concode_elem_sep void removeHierarchyEntryFromCache concode_elem_sep MethodOverrideTester getMethodOverrideTester concode_elem_sep void addTypeHierarchyToCache concode_elem_sep int getCacheMisses concode_elem_sep ITypeHierarchy findTypeHierarchyInCache concode_elem_sep void markAsAccessed concode_elem_sep void removeMethodOverrideTester concode_elem_sep void typeHierarchyChanged concode_elem_sep void dispose concode_elem_sep String toString"}
{"code": "void function ( ) { list . clear ( ) ; }", "nl": "empties the contents of the stack . concode_field_sep ArrayLongList list concode_field_sep long pop concode_elem_sep int search concode_elem_sep int size concode_elem_sep long get concode_elem_sep long push concode_elem_sep boolean empty concode_elem_sep long peek concode_elem_sep long peek"}
{"code": "String function ( ) { return RESULT ; }", "nl": "unprotected method . concode_field_sep PlaceHolder placeHolder concode_field_sep String role1 concode_elem_sep String role2"}
{"code": "void function ( float arg0 ) { width = arg0 ; }", "nl": "set the width for this box . concode_field_sep int type concode_elem_sep Box parent concode_elem_sep float height concode_elem_sep boolean DEBUG concode_elem_sep float shift concode_elem_sep Box elderParent concode_elem_sep Color foreground concode_elem_sep float width concode_elem_sep Color markForDEBUG concode_elem_sep Color background concode_elem_sep Color prevColor concode_elem_sep LinkedList<Box> children concode_elem_sep float depth concode_field_sep void add concode_elem_sep void add concode_elem_sep Box getParent concode_elem_sep void negWidth concode_elem_sep float getDepth concode_elem_sep void setElderParent concode_elem_sep void startDraw concode_elem_sep Box getElderParent concode_elem_sep float getWidth concode_elem_sep void draw concode_elem_sep void setHeight concode_elem_sep float getShift concode_elem_sep void setShift concode_elem_sep int getLastFontId concode_elem_sep float getHeight concode_elem_sep void drawDebug concode_elem_sep void drawDebug concode_elem_sep void endDraw concode_elem_sep void setParent concode_elem_sep void setDepth"}
{"code": "int function ( String arg0 , String arg1 ) { return findKeyword ( arg0 , arg1 , 0 ) ; }", "nl": "search for one word in phrase . the search is not case sensitive . this method will check that the given goal is not a substring of a longer string so , for example , `` i know '' does not contain `` no '' . the search begins at the beginning of the string . concode_field_sep PlaceHolder placeHolder concode_field_sep String getRandomResponse concode_elem_sep String getResponse concode_elem_sep String getGreeting"}
{"code": "BigInteger function ( int arg0 ) { return ONE . random ( arg0 , random ) ; }", "nl": "biginteger random . concode_field_sep java.math.BigInteger val concode_elem_sep BigInteger ONE concode_elem_sep BigInteger ZERO concode_elem_sep Random random concode_field_sep boolean isField concode_elem_sep boolean isCommutative concode_elem_sep BigInteger gcd concode_elem_sep BigInteger IPROD concode_elem_sep BigInteger sum concode_elem_sep int compareTo concode_elem_sep BigInteger IABS concode_elem_sep java.math.BigInteger characteristic concode_elem_sep BigInteger random concode_elem_sep BigInteger random concode_elem_sep int hashCode concode_elem_sep BigInteger IDIF concode_elem_sep BigInteger divide concode_elem_sep BigInteger copy concode_elem_sep BigInteger multiply concode_elem_sep BigInteger IGCD concode_elem_sep int signum concode_elem_sep BigInteger ISUM concode_elem_sep boolean isONE concode_elem_sep BigInteger inverse concode_elem_sep java.math.BigInteger getVal concode_elem_sep BigInteger INEG concode_elem_sep BigInteger valueOf concode_elem_sep BigInteger valueOf concode_elem_sep boolean isUnit concode_elem_sep BigInteger subtract concode_elem_sep BigInteger IQ concode_elem_sep BigInteger[] IQR concode_elem_sep BigInteger parse concode_elem_sep BigInteger parse concode_elem_sep BigInteger[] egcd concode_elem_sep int ISIGN concode_elem_sep BigInteger abs concode_elem_sep BigInteger IREM concode_elem_sep BigInteger[] divideAndRemainder concode_elem_sep BigInteger negate concode_elem_sep boolean equals concode_elem_sep BigInteger clone concode_elem_sep BigInteger getONE concode_elem_sep BigInteger getZERO concode_elem_sep BigInteger fromInteger concode_elem_sep BigInteger fromInteger concode_elem_sep boolean isZERO concode_elem_sep boolean isAssociative concode_elem_sep String toString concode_elem_sep int ICOMP concode_elem_sep BigInteger remainder"}
{"code": "DateTime function ( ) { return new DateTime ( getMillis ( ) , ISOChronology . getInstance ( getZone ( ) ) ) ; }", "nl": "get this object as a datetime using isochronology in the same zone . concode_field_sep PlaceHolder placeHolder concode_field_sep MutableDateTime toMutableDateTime concode_elem_sep MutableDateTime toMutableDateTime concode_elem_sep MutableDateTime toMutableDateTime concode_elem_sep Date toDate concode_elem_sep boolean isEqual concode_elem_sep boolean isEqual concode_elem_sep DateTimeZone getZone concode_elem_sep boolean isSupported concode_elem_sep int compareTo concode_elem_sep boolean isBeforeNow concode_elem_sep Instant toInstant concode_elem_sep boolean isBefore concode_elem_sep boolean isBefore concode_elem_sep boolean isEqualNow concode_elem_sep MutableDateTime toMutableDateTimeISO concode_elem_sep int hashCode concode_elem_sep int get concode_elem_sep int get concode_elem_sep boolean equals concode_elem_sep String toString concode_elem_sep String toString concode_elem_sep boolean isAfter concode_elem_sep boolean isAfter concode_elem_sep DateTime toDateTime concode_elem_sep DateTime toDateTime concode_elem_sep DateTime toDateTime concode_elem_sep boolean isAfterNow"}
{"code": "Image function ( ) { return image ; }", "nl": "return the image associated with the receiver . concode_field_sep Image image concode_elem_sep DialogImage ERROR concode_elem_sep DialogImage WARNING concode_elem_sep String printName concode_elem_sep DialogImage INFO concode_elem_sep DialogImage QUESTION concode_field_sep String toString"}
{"code": "void function ( ) { synchronized ( this ) { stop = true ; this . notify ( ) ; } }", "nl": "closes this server . concode_field_sep boolean stop concode_field_sep void processMessage concode_elem_sep void runServer concode_elem_sep void main"}
{"code": "Hessian2Input function ( InputStream arg0 ) { Hessian2Input loc0 = new Hessian2Input ( arg0 ) ; loc0 . setSerializerFactory ( _serializerFactory ) ; return loc0 ; }", "nl": "creates a new hessian 2.0 deserializer . concode_field_sep SerializerFactory _serializerFactory concode_elem_sep SerializerFactory _defaultSerializerFactory concode_elem_sep Logger log concode_elem_sep HessianFreeList<HessianInput> _freeHessianInput concode_elem_sep HessianFreeList<HessianOutput> _freeHessianOutput concode_elem_sep HessianFreeList<Hessian2Input> _freeHessian2Input concode_elem_sep HessianFreeList<Hessian2Output> _freeHessian2Output concode_field_sep void freeHessian2StreamingInput concode_elem_sep Hessian2Output createHessian2Output concode_elem_sep Hessian2StreamingOutput createHessian2StreamingOutput concode_elem_sep void freeHessian2StreamingOutput concode_elem_sep void setSerializerFactory concode_elem_sep OutputStream createHessian2DebugOutput concode_elem_sep SerializerFactory getSerializerFactory concode_elem_sep Hessian2StreamingInput createHessian2StreamingInput concode_elem_sep void freeHessian2Output concode_elem_sep HessianOutput createHessianOutput concode_elem_sep HessianInput createHessianInput concode_elem_sep void freeHessian2Input"}
{"code": "Activelock function ( ) { return new Activelock ( ) ; }", "nl": "create an instance of activelock concode_field_sep QName _SyncToken_QNAME concode_elem_sep QName _Dst_QNAME concode_elem_sep QName _SyncLevel_QNAME concode_elem_sep QName _Status_QNAME concode_elem_sep QName _Depth_QNAME concode_elem_sep QName _Responsedescription_QNAME concode_elem_sep QName _Nresults_QNAME concode_elem_sep QName _Timeout_QNAME concode_elem_sep QName _Href_QNAME concode_elem_sep QName _Src_QNAME concode_field_sep JAXBElement<String> createDst concode_elem_sep Propstat createPropstat concode_elem_sep Supportedlock createSupportedlock concode_elem_sep Propertybehavior createPropertybehavior concode_elem_sep Lockentry createLockentry concode_elem_sep Resourcetype createResourcetype concode_elem_sep Unauthenticated createUnauthenticated concode_elem_sep JAXBElement<String> createSyncToken concode_elem_sep JAXBElement<String> createStatus concode_elem_sep Link createLink concode_elem_sep SyncCollection createSyncCollection concode_elem_sep Limit createLimit concode_elem_sep Location createLocation concode_elem_sep JAXBElement<String> createSyncLevel concode_elem_sep SupportedReportSet createSupportedReportSet concode_elem_sep Lockinfo createLockinfo concode_elem_sep Getcontentlanguage createGetcontentlanguage concode_elem_sep Lockscope createLockscope concode_elem_sep Getcontenttype createGetcontenttype concode_elem_sep Owner createOwner concode_elem_sep Read createRead concode_elem_sep All createAll concode_elem_sep Lockdiscovery createLockdiscovery concode_elem_sep Exclusive createExclusive concode_elem_sep ReadAcl createReadAcl concode_elem_sep JAXBElement<String> createDepth concode_elem_sep WriteContent createWriteContent concode_elem_sep Getetag createGetetag concode_elem_sep Omit createOmit concode_elem_sep Collection createCollection concode_elem_sep Propname createPropname concode_elem_sep Error createError concode_elem_sep ReadCurrentUserPrivilegeSet createReadCurrentUserPrivilegeSet concode_elem_sep Authenticated createAuthenticated concode_elem_sep Bind createBind concode_elem_sep JAXBElement<BigInteger> createNresults concode_elem_sep JAXBElement<String> createHref concode_elem_sep Report createReport concode_elem_sep JAXBElement<String> createTimeout concode_elem_sep Keepalive createKeepalive concode_elem_sep Shared createShared concode_elem_sep Locktype createLocktype concode_elem_sep Remove createRemove concode_elem_sep Write createWrite concode_elem_sep JAXBElement<String> createResponsedescription concode_elem_sep Creationdate createCreationdate concode_elem_sep JAXBElement<String> createSrc concode_elem_sep Getcontentlength createGetcontentlength concode_elem_sep Prop createProp concode_elem_sep Displayname createDisplayname concode_elem_sep Response createResponse concode_elem_sep UnBind createUnbind concode_elem_sep SearchRequest createSearch concode_elem_sep Set createSet concode_elem_sep Propertyupdate createPropertyupdate concode_elem_sep Locktoken createLocktoken concode_elem_sep Source createSource concode_elem_sep Propfind createPropfind concode_elem_sep Self createSelf concode_elem_sep Getlastmodified createGetlastmodified concode_elem_sep SupportedReport createSupportedReport concode_elem_sep Unlock createUnlock concode_elem_sep Multistatus createMultistatus concode_elem_sep Allprop createAllprop concode_elem_sep WriteProperties createWriteProperties"}
{"code": "ILanguageNames function ( ) { return languageNames ; }", "nl": "returns the language names call-back used in this report . concode_field_sep ILanguageNames languageNames concode_elem_sep String outputEncoding concode_field_sep void setOutputEncoding concode_elem_sep void setLanguageNames concode_elem_sep IReportVisitor createVisitor"}
{"code": "HttpResponse function ( Request arg0 ) { arg0 . addHeader ( \"srini_string\" , \"srini_string\" + repository . getToken ( ) ) ; Response loc0 = arg0 . execute ( ) ; return loc0 . returnResponse ( ) ; }", "nl": "execute an authenticated request and return the response . concode_field_sep String IF_NONE_MATCH concode_elem_sep String GITHUB concode_elem_sep ObjectMapper mapper concode_elem_sep URL GITHUB_URL concode_elem_sep Repository repository concode_field_sep String getIssueEndpoint concode_elem_sep void patchIssue concode_elem_sep byte[] buildRequest concode_elem_sep Phenotype readPhenotype concode_elem_sep Repository getRepository concode_elem_sep String buildSearch concode_elem_sep InputStream getStream concode_elem_sep void openIssue concode_elem_sep URI getURI concode_elem_sep Optional<String> searchForIssue concode_elem_sep void checkCode concode_elem_sep String getRepoMethod"}
{"code": "int function ( ) { return queue . size ( ) ; }", "nl": "gets the current size of the undoqueue . concode_field_sep int MAX_QUEUE_SIZE concode_elem_sep Document doc concode_elem_sep UndoableList queue concode_elem_sep int cursor concode_field_sep void add concode_elem_sep boolean isRedoable concode_elem_sep void prefsTrim concode_elem_sep String getUndoRangeString concode_elem_sep String getRedoName concode_elem_sep void clear concode_elem_sep boolean isEmpty concode_elem_sep String getRedoRangeString concode_elem_sep void destroy concode_elem_sep void redo concode_elem_sep void undo concode_elem_sep String getUndoName concode_elem_sep void trim concode_elem_sep boolean isUndoable concode_elem_sep Undoable get concode_elem_sep void redoAll concode_elem_sep UndoableEdit getIfEdit concode_elem_sep void undoAll"}
{"code": "boolean function ( PdfName arg0 , PdfName [ ] arg1 ) { for ( int loc0 = 0 ; loc0 < arg1 . length ; loc0 ++ ) { if ( arg1 [ loc0 ] . equals ( arg0 ) ) { return true ; } } return false ; }", "nl": "checks if some value is valid for a certain key . concode_field_sep PdfName NONFULLSCREENPAGEMODE_PREFERENCES[] concode_elem_sep int pageLayoutAndMode concode_elem_sep PdfName DIRECTION_PREFERENCES[] concode_elem_sep int viewerPreferencesMask concode_elem_sep PdfName PRINTSCALING_PREFERENCES[] concode_elem_sep PdfName DUPLEX_PREFERENCES[] concode_elem_sep PdfName PAGE_BOUNDARIES[] concode_elem_sep PdfDictionary viewerPreferences concode_elem_sep PdfName[] VIEWER_PREFERENCES concode_field_sep PdfDictionary getViewerPreferences concode_elem_sep PdfViewerPreferencesImp getViewerPreferences concode_elem_sep void setViewerPreferences concode_elem_sep int getPageLayoutAndMode concode_elem_sep int getIndex concode_elem_sep void addViewerPreference concode_elem_sep void addToCatalog"}
{"code": "void function ( E arg0 ) { Handler < E > loc0 = ( Handler < E > ) handlers . get ( arg0 . getClass ( ) ) ; if ( loc0 != null ) { loc0 . onEvent ( arg0 ) ; } }", "nl": "dispatches an event depending on it 's type . concode_field_sep Map<Class<? extends Event>,Handler<? extends Event>> handlers concode_field_sep void registerHandler"}
{"code": "QuadTreeNode function ( QuadTreeNode arg0 ) { return arg0 . getNorthEast ( ) ; }", "nl": "return the child that represents this quadrant of the given node . concode_field_sep PlaceHolder placeHolder concode_field_sep Quadrant reflect concode_elem_sep boolean adjacent"}
{"code": "int function ( ) { int loc0 = red . length ( ) + white . length ( ) ; return loc0 ; }", "nl": "length of red and white parts . concode_field_sep GenPolynomial<GenPolynomial<C>> red concode_elem_sep GenPolynomial<GenPolynomial<C>> green concode_elem_sep GenPolynomial<GenPolynomial<C>> white concode_field_sep List<GenPolynomial<C>> getRedCoefficients concode_elem_sep boolean isONE concode_elem_sep ExpVector leadingExpVector concode_elem_sep Map.Entry<ExpVector,GenPolynomial<C>> leadingMonomial concode_elem_sep boolean checkInvariant concode_elem_sep ColorPolynomial<C> subtract concode_elem_sep ColorPolynomial<C> subtract concode_elem_sep boolean isDetermined concode_elem_sep GenPolynomial<GenPolynomial<C>> getPolynomial concode_elem_sep ColorPolynomial<C> sum concode_elem_sep ColorPolynomial<C> sum concode_elem_sep ColorPolynomial<C> abs concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep boolean isZERO concode_elem_sep List<GenPolynomial<C>> getGreenCoefficients concode_elem_sep String toString concode_elem_sep ColorPolynomial<C> divide concode_elem_sep GenPolynomial<GenPolynomial<C>> getEssentialPolynomial concode_elem_sep ColorPolynomial<C> multiply concode_elem_sep ColorPolynomial<C> multiply"}
{"code": "boolean function ( Collection arg0 ) { boolean loc0 = false ; Iterator loc1 = arg0 . iterator ( ) ; while ( loc1 . hasNext ( ) ) { boolean loc2 = add ( loc1 . next ( ) ) ; loc0 = loc0 || loc2 ; } return loc0 ; }", "nl": "invokes #add object for each element in the given collection . concode_field_sep Object _current concode_elem_sep int _total concode_elem_sep DefaultMapBag _parent concode_elem_sep Map _map concode_elem_sep int _mods concode_elem_sep Iterator _support concode_field_sep boolean add concode_elem_sep boolean add concode_elem_sep Object next concode_elem_sep boolean containsAll concode_elem_sep boolean containsAll concode_elem_sep void clear concode_elem_sep boolean isEmpty concode_elem_sep boolean hasNext concode_elem_sep void remove concode_elem_sep boolean remove concode_elem_sep boolean remove concode_elem_sep Map getMap concode_elem_sep int modCount concode_elem_sep boolean contains concode_elem_sep Iterator iterator concode_elem_sep boolean removeAll concode_elem_sep int size concode_elem_sep int hashCode concode_elem_sep int calcTotalSize concode_elem_sep boolean equals concode_elem_sep Object[] toArray concode_elem_sep Object[] toArray concode_elem_sep Set uniqueSet concode_elem_sep void setMap concode_elem_sep String toString concode_elem_sep int getCount concode_elem_sep List extractList concode_elem_sep boolean retainAll concode_elem_sep boolean retainAll"}
{"code": "void function ( int arg0 , int arg1 ) { }", "nl": "advance the animation . concode_field_sep GraphicsExample example concode_field_sep void createControlPanel concode_elem_sep String getText concode_elem_sep String getCategory concode_elem_sep void paint concode_elem_sep void dispose concode_elem_sep boolean isAnimated"}
{"code": "String [ ] function ( Format arg0 ) { return getCodecClasses ( null , arg0 ) ; }", "nl": "gets all codecs which can decode the specified format . concode_field_sep Registry instance concode_field_sep Codec[] getCodecs concode_elem_sep Codec[] getDecoders concode_elem_sep String[] getCodecClasses concode_elem_sep Codec[] getEncoders concode_elem_sep void unregisterCodec concode_elem_sep void putCodec concode_elem_sep Codec getEncoder concode_elem_sep String[] getDecoderClasses concode_elem_sep void init concode_elem_sep String getExtension concode_elem_sep Codec getCodec concode_elem_sep void putReader concode_elem_sep MovieReader getReader concode_elem_sep MovieReader getReader concode_elem_sep void putFileFormat concode_elem_sep Format[] getWriterFormats concode_elem_sep Format getFileFormat concode_elem_sep Format[] getReaderFormats concode_elem_sep Format[] getFileFormats concode_elem_sep String[] getWriterClasses concode_elem_sep String[] getReaderClasses concode_elem_sep Codec getDecoder concode_elem_sep MovieWriter getWriter concode_elem_sep MovieWriter getWriter concode_elem_sep ArrayList<Format> suggestOutputFormats concode_elem_sep void putWriter concode_elem_sep Registry getInstance"}
{"code": "Section function ( int arg0 ) { return sections . get ( arg0 ) ; }", "nl": "get the specified section . concode_field_sep Optional<String> fileName concode_elem_sep long serialVersionUID concode_elem_sep boolean built concode_elem_sep Set<PreprocessorRule> preprocessorRules concode_elem_sep List<Section> sections concode_elem_sep RedPenTokenizer tokenizer concode_field_sep DocumentBuilder appendSection concode_elem_sep void ensureNotBuilt concode_elem_sep DocumentBuilder addSection concode_elem_sep DocumentBuilder addSection concode_elem_sep DocumentBuilder setPreprocessorRules concode_elem_sep Section getLastSection concode_elem_sep Section getLastSection concode_elem_sep Set<PreprocessorRule> getPreprocessorRules concode_elem_sep DocumentBuilder setFileName concode_elem_sep Iterator<Section> iterator concode_elem_sep DocumentBuilder addSectionHeader concode_elem_sep int size concode_elem_sep DocumentBuilder addSentence concode_elem_sep DocumentBuilder addSentence concode_elem_sep Document build concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep DocumentBuilder builder concode_elem_sep DocumentBuilder builder concode_elem_sep String toString concode_elem_sep DocumentBuilder addParagraph concode_elem_sep DocumentBuilder addListBlock concode_elem_sep Optional<String> getFileName concode_elem_sep DocumentBuilder addListElement concode_elem_sep DocumentBuilder addListElement"}
{"code": "String function ( ASN1Primitive arg0 ) { ASN1TaggedObject loc0 = ( ASN1TaggedObject ) arg0 ; return new String ( ASN1OctetString . getInstance ( loc0 , false ) . getOctets ( ) , \"srini_string\" ) ; }", "nl": "gets a string from an asn1primitive concode_field_sep PlaceHolder placeHolder concode_field_sep String getOCSPURL concode_elem_sep String getCRLURL concode_elem_sep String getTSAURL concode_elem_sep CRL getCRL concode_elem_sep CRL getCRL concode_elem_sep ASN1Primitive getExtensionValue"}
{"code": "Chunk function ( char arg0 , Font arg1 ) { char loc0 = SpecialSymbol . getCorrespondingSymbol ( arg0 ) ; if ( loc0 == ' ' ) { return new Chunk ( String . valueOf ( arg0 ) , arg1 ) ; } Font loc1 = new Font ( FontFamily . SYMBOL , arg1 . getSize ( ) , arg1 . getStyle ( ) , arg1 . getColor ( ) ) ; String loc2 = String . valueOf ( loc0 ) ; return new Chunk ( loc2 , loc1 ) ; }", "nl": "gets a chunk with a symbol character . concode_field_sep PlaceHolder placeHolder concode_field_sep char getCorrespondingSymbol concode_elem_sep int index"}
{"code": "SummaryStatistics function ( Class arg0 ) { return ( SummaryStatistics ) arg0 . newInstance ( ) ; }", "nl": "create an instance of a summarystatistics concode_field_sep long serialVersionUID concode_field_sep double getStandardDeviation concode_elem_sep StatisticalSummary getSummary concode_elem_sep double getMax concode_elem_sep long getN concode_elem_sep void clear concode_elem_sep double getMin concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep double getVariance concode_elem_sep double getMean concode_elem_sep double getSumsq concode_elem_sep double getSum concode_elem_sep void addValue concode_elem_sep double getGeometricMean"}
{"code": "Set function ( Map arg0 , Object arg1 ) { if ( arg0 == null ) { throw new IllegalArgumentException ( \"srini_string\" ) ; } return new MapBackedSet ( arg0 , arg1 ) ; }", "nl": "factory method to create a set from a map . concode_field_sep long serialVersionUID concode_elem_sep Object dummyValue concode_elem_sep Map map concode_field_sep boolean add concode_elem_sep boolean containsAll concode_elem_sep boolean isEmpty concode_elem_sep void clear concode_elem_sep boolean remove concode_elem_sep Iterator iterator concode_elem_sep boolean contains concode_elem_sep boolean removeAll concode_elem_sep int size concode_elem_sep boolean addAll concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep Object[] toArray concode_elem_sep Object[] toArray concode_elem_sep boolean retainAll"}
{"code": "Phenotype function ( String arg0 , String arg1 ) { List < Phenotype > loc0 = getPhenotypesByField ( arg0 , arg1 , true ) ; if ( loc0 . size ( ) == 0 ) { return Phenotype . NULL ; } return loc0 . get ( 0 ) ; }", "nl": "get one single phenotype where the field given has the value given . concode_field_sep Joiner OR_QUERY_JOINER concode_elem_sep Path path concode_elem_sep SolrClient server concode_elem_sep CoreContainer cores concode_elem_sep boolean autocommit concode_elem_sep String WILDCARD_QSTRING concode_elem_sep String CORE_NAME concode_elem_sep SolrMapper mapper concode_elem_sep boolean up concode_elem_sep String FIELD_IS concode_field_sep void init concode_elem_sep Phenotype savePhenotype concode_elem_sep String addStatusFilter concode_elem_sep Phenotype getPhenotypeByIssueNumber concode_elem_sep Phenotype getPhenotype concode_elem_sep void commit concode_elem_sep boolean getAutocommit concode_elem_sep List<Phenotype> searchPhenotypes concode_elem_sep void setAutocommit concode_elem_sep List<Phenotype> getPhenotypesByStatus concode_elem_sep List<Phenotype> getPhenotypesByField concode_elem_sep String getNextId concode_elem_sep Phenotype getPhenotypeByHpoId concode_elem_sep boolean deletePhenotype concode_elem_sep Phenotype runQuery concode_elem_sep void checkUp concode_elem_sep void shutdown concode_elem_sep Phenotype getPhenotypeById"}
{"code": "void function ( ) { SimulationEvent [ ] loc0 = new SimulationEvent [ this . items . length * 2 ] ; System . arraycopy ( this . items , 0 , loc0 , 0 , this . size ) ; this . collaps = this . items . length / 4 ; this . items = loc0 ; }", "nl": "double the capacity of the internal array . concode_field_sep int size concode_elem_sep SimulationEvent[] items concode_elem_sep int collaps concode_field_sep int size concode_elem_sep boolean more concode_elem_sep void reset concode_elem_sep void insert concode_elem_sep void verify concode_elem_sep String toString concode_elem_sep void heapify concode_elem_sep void decrease concode_elem_sep SimulationEvent remove concode_elem_sep boolean remove concode_elem_sep boolean empty concode_elem_sep SimulationEvent peek"}
{"code": "GnpNetLayer function ( String arg0 ) { IPv4NetID loc0 = createNewID ( ) ; return newNetLayer ( loc0 ) ; }", "nl": "random node form group concode_field_sep double DEFAULT_DOWN_BANDWIDTH concode_elem_sep GnpSubnet subnet concode_elem_sep GnpPosition gnpPosition concode_elem_sep double DEFAULT_UP_BANDWIDTH concode_elem_sep int experimentSize concode_elem_sep double downBandwidth concode_elem_sep double upBandwidth concode_elem_sep PeerDistributionFromBitmap peerDistribution concode_elem_sep GeoLocation geoLoc concode_elem_sep Logger log concode_elem_sep Long idCounter concode_elem_sep Set<Long> usedIds concode_field_sep IPv4NetID createNewID concode_elem_sep void setDownBandwidth concode_elem_sep void setBandwidthManager concode_elem_sep void setPbaPeriod concode_elem_sep void setExperimentSize concode_elem_sep GnpNetLayer createComponent concode_elem_sep void setLatencyModel concode_elem_sep void setUpBandwidth concode_elem_sep void setBitmapPath"}
{"code": "int function ( ) { return pluginMeta . getVersion ( ) ; }", "nl": "get plugin version . concode_field_sep PreauthPluginMeta pluginMeta concode_elem_sep KrbContext context concode_field_sep void init concode_elem_sep void tryFirst concode_elem_sep boolean process concode_elem_sep String getName concode_elem_sep List<EncryptionType> getEncTypes concode_elem_sep void prepareQuestions concode_elem_sep PaDataType[] getPaTypes concode_elem_sep boolean tryAgain concode_elem_sep void destroy concode_elem_sep void setPreauthOptions concode_elem_sep PaFlags getFlags concode_elem_sep PluginRequestContext initRequestContext"}
{"code": "void function ( List < ByteBuffer > arg0 , Callback < List < ByteBuffer >> arg1 ) { try { List < ByteBuffer > loc0 = transceive ( arg0 ) ; arg1 . handleResult ( loc0 ) ; } catch ( IOException loc0 ) { arg1 . handleError ( loc0 ) ; } }", "nl": "called by requestor #request string , object , callback for two-way messages using callbacks . concode_field_sep ReentrantLock channelLock concode_field_sep void lockChannel concode_elem_sep void writeBuffers concode_elem_sep String getRemoteName concode_elem_sep boolean isConnected concode_elem_sep List<ByteBuffer> readBuffers concode_elem_sep void unlockChannel concode_elem_sep void close concode_elem_sep Protocol getRemote concode_elem_sep void setRemote"}
{"code": "IJavaElement function ( final String arg0 , final String arg1 , final boolean arg2 ) { return handleToElement ( null , arg0 , arg1 , arg2 ) ; }", "nl": "converts an input handle back to the corresponding java element . concode_field_sep String ATTRIBUTE_SELECTION concode_elem_sep String ATTRIBUTE_ELEMENT concode_elem_sep String ATTRIBUTE_NAME concode_elem_sep String ATTRIBUTE_INPUT concode_elem_sep String ATTRIBUTE_REFERENCES concode_field_sep RefactoringStatus createInputFatalStatus concode_elem_sep String resourceToHandle concode_elem_sep IResource handleToResource concode_elem_sep RefactoringStatus createInputWarningStatus concode_elem_sep String elementToHandle"}
{"code": "BigDecimal function ( int arg0 , int arg1 , Random arg2 ) { java . math . BigInteger loc0 = new java . math . BigInteger ( arg0 , arg2 ) ; if ( arg2 . nextBoolean ( ) ) { loc0 = loc0 . negate ( ) ; } int loc1 = arg2 . nextInt ( arg1 ) ; if ( arg2 . nextBoolean ( ) ) { loc1 = - loc1 ; } java . math . BigDecimal loc2 = new java . math . BigDecimal ( loc0 , loc1 , context ) ; return new BigDecimal ( loc2 , context ) ; }", "nl": "bigdecimal random . concode_field_sep java.math.BigDecimal val concode_elem_sep int DEFAULT_PRECISION concode_elem_sep BigDecimal ZERO concode_elem_sep MathContext DEFAULT_CONTEXT concode_elem_sep MathContext context concode_elem_sep BigDecimal ONE concode_elem_sep Random random concode_field_sep boolean isField concode_elem_sep boolean isCommutative concode_elem_sep BigDecimal gcd concode_elem_sep BigDecimal sum concode_elem_sep int compareTo concode_elem_sep java.math.BigInteger characteristic concode_elem_sep int hashCode concode_elem_sep BigDecimal divide concode_elem_sep BigDecimal copy concode_elem_sep BigDecimal multiply concode_elem_sep int signum concode_elem_sep boolean isONE concode_elem_sep BigDecimal inverse concode_elem_sep BigDecimal valueOf concode_elem_sep BigDecimal valueOf concode_elem_sep boolean isUnit concode_elem_sep BigDecimal subtract concode_elem_sep BigDecimal parse concode_elem_sep BigDecimal parse concode_elem_sep BigDecimal[] egcd concode_elem_sep BigDecimal abs concode_elem_sep BigDecimal[] divideAndRemainder concode_elem_sep BigDecimal negate concode_elem_sep boolean equals concode_elem_sep BigDecimal clone concode_elem_sep BigDecimal getONE concode_elem_sep BigDecimal getZERO concode_elem_sep BigDecimal fromInteger concode_elem_sep BigDecimal fromInteger concode_elem_sep boolean isZERO concode_elem_sep boolean isAssociative concode_elem_sep String toString concode_elem_sep BigDecimal remainder"}
{"code": "List function ( Enumeration arg0 ) { return IteratorUtils . toList ( new EnumerationIterator ( arg0 ) ) ; }", "nl": "creates a list based on an enumeration . as the enumeration is traversed , an arraylist of its values is created . the new list is returned . concode_field_sep PlaceHolder placeHolder concode_field_sep placeholderType placeHolder"}
{"code": "String function ( Class < ? > arg0 ) { return identifier ; }", "nl": "local identifier , generated by localvariabledeclarationstatement . concode_field_sep Class<?> type concode_elem_sep String identifier concode_field_sep Class<?> getReturnType"}
{"code": "RandomAccessSource function ( byte [ ] arg0 ) { return new ArrayRandomAccessSource ( arg0 ) ; }", "nl": "creates a randomaccesssource based on a byte array concode_field_sep boolean forceRead concode_elem_sep boolean usePlainRandomAccess concode_elem_sep boolean exclusivelyLockFile concode_field_sep RandomAccessSource createBestSource concode_elem_sep RandomAccessSource createBestSource concode_elem_sep RandomAccessSource createBestSource concode_elem_sep RandomAccessSourceFactory setExclusivelyLockFile concode_elem_sep RandomAccessSource createRanged concode_elem_sep RandomAccessSourceFactory setForceRead concode_elem_sep RandomAccessSource createByReadingToMemory concode_elem_sep RandomAccessSource createByReadingToMemory concode_elem_sep RandomAccessSourceFactory setUsePlainRandomAccess"}
{"code": "void function ( int arg0 , String arg1 ) { defaults . put ( arg0 , arg1 ) ; }", "nl": "register a default non-weighted typecode mapping concode_field_sep Map<Integer,Map<Long,String>> weighted concode_elem_sep Map<Integer,String> defaults concode_field_sep String get concode_elem_sep String get concode_elem_sep String replace"}
{"code": "void function ( Object arg0 ) { log ( Level . SEVERE , String . valueOf ( arg0 ) , null ) ; }", "nl": "log a message with error log level . concode_field_sep String name concode_elem_sep boolean classAndMethodFound concode_elem_sep Logger logger concode_elem_sep String sourceMethodName concode_elem_sep String sourceClassName concode_field_sep void debug concode_elem_sep void debug concode_elem_sep void log concode_elem_sep Logger getLogger concode_elem_sep boolean isWarnEnabled concode_elem_sep boolean isFatalEnabled concode_elem_sep void fatal concode_elem_sep void fatal concode_elem_sep void warn concode_elem_sep void warn concode_elem_sep void trace concode_elem_sep void trace concode_elem_sep boolean isInfoEnabled concode_elem_sep boolean isErrorEnabled concode_elem_sep boolean isTraceEnabled concode_elem_sep boolean isDebugEnabled concode_elem_sep void getClassAndMethod concode_elem_sep void info concode_elem_sep void info"}
{"code": "void function ( File arg0 ) { if ( arg0 . isDirectory ( ) ) { for ( File loc0 : arg0 . listFiles ( ) ) { dumbDeleteRecrusive ( loc0 ) ; } } if ( ! arg0 . delete ( ) && arg0 . exists ( ) ) { throw new IOException ( \"srini_string\" + arg0 ) ; } }", "nl": "delete a directory and its contents . warning : java apis do not let us distinguish directories from symbolic links to directories . consequently , if the directory contains symbolic links to directories , we will attempt to delete the contents of pointed-to directories . concode_field_sep byte[] cachedBuffer concode_field_sep void reliablyCopyExecutable concode_elem_sep void deleteOrThrow concode_elem_sep FileLocker lockLibsDirectory concode_elem_sep void freeCopyBuffer concode_elem_sep File createLibsDirectory concode_elem_sep File getLibsDirectory concode_elem_sep int findAbiScore concode_elem_sep String[] getSupportedAbis concode_elem_sep String[] getSupportedAbis concode_elem_sep void fallocateIfSupported concode_elem_sep void fallocate"}
{"code": "Map < String , ArrayList < String >> function ( ) { return values ; }", "nl": "getter for values concode_field_sep ASN1ObjectIdentifier O concode_elem_sep ASN1ObjectIdentifier T concode_elem_sep ASN1ObjectIdentifier SURNAME concode_elem_sep ASN1ObjectIdentifier ST concode_elem_sep ASN1ObjectIdentifier E concode_elem_sep ASN1ObjectIdentifier INITIALS concode_elem_sep int index concode_elem_sep String oid concode_elem_sep ASN1ObjectIdentifier UNIQUE_IDENTIFIER concode_elem_sep ASN1ObjectIdentifier GENERATION concode_elem_sep ASN1ObjectIdentifier EmailAddress concode_elem_sep ASN1ObjectIdentifier OU concode_elem_sep ASN1ObjectIdentifier DC concode_elem_sep Map<String,ArrayList<String>> values concode_elem_sep ASN1ObjectIdentifier C concode_elem_sep ASN1ObjectIdentifier L concode_elem_sep ASN1ObjectIdentifier GIVENNAME concode_elem_sep ASN1ObjectIdentifier UID concode_elem_sep Map<ASN1ObjectIdentifier,String> DefaultSymbols concode_elem_sep StringBuffer buf concode_elem_sep ASN1ObjectIdentifier CN concode_elem_sep ASN1ObjectIdentifier SN concode_field_sep ASN1Primitive getIssuer concode_elem_sep ASN1Primitive getSubject concode_elem_sep boolean hasMoreTokens concode_elem_sep String nextToken concode_elem_sep String getField concode_elem_sep String toString concode_elem_sep X500Name getSubjectFields concode_elem_sep List<String> getFieldArray concode_elem_sep X500Name getIssuerFields"}
{"code": "byte [ ] function ( ) { return data ; }", "nl": "gets the data . note : the array will not be cloned . concode_field_sep Hashtable<IFFChunk,IFFChunk> propertyChunks concode_elem_sep long size concode_elem_sep byte[] data concode_elem_sep long scan concode_elem_sep int id concode_elem_sep int type concode_elem_sep Vector<IFFChunk> collectionChunks concode_field_sep void setData concode_elem_sep int getID concode_elem_sep IFFChunk[] getCollectionChunks concode_elem_sep void putPropertyChunk concode_elem_sep IFFChunk getPropertyChunk concode_elem_sep long getSize concode_elem_sep Enumeration propertyChunks concode_elem_sep int getType concode_elem_sep long getScan concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep void addCollectionChunk concode_elem_sep String toString concode_elem_sep Enumeration collectionChunks"}
{"code": "boolean function ( ) { return instantiated ; }", "nl": "returns true for an instantiated non - `` factory '' splitter . clients also need to check valid . concode_field_sep boolean instantiated concode_elem_sep long serialVersionUID concode_field_sep boolean valid concode_elem_sep String condition concode_elem_sep void instantiateDummy concode_elem_sep boolean test concode_elem_sep DummyInvariant getDummyInvariant concode_elem_sep void makeDummyInvariant concode_elem_sep Splitter instantiate"}
{"code": "boolean function ( ) { return fCheckable ; }", "nl": "returns whether the control should make the refactorings checkable . concode_field_sep boolean fCheckable concode_elem_sep IProject fProject concode_elem_sep boolean fTime concode_field_sep boolean isTimeDisplayed concode_elem_sep String getCollectionLabel concode_elem_sep String getYesterdayPattern concode_elem_sep String getLastMonthPattern concode_elem_sep String getLastWeekPattern concode_elem_sep String getWeekPattern concode_elem_sep String getRefactoringPattern concode_elem_sep RefactoringHistoryContentProvider getContentProvider concode_elem_sep String getYearPattern concode_elem_sep String getProjectPattern concode_elem_sep String getWorkspaceCaption concode_elem_sep String getDayPattern concode_elem_sep RefactoringHistoryLabelProvider getLabelProvider concode_elem_sep String getThisMonthPattern concode_elem_sep String getMonthPattern concode_elem_sep String getCommentCaption concode_elem_sep String getThisWeekPattern concode_elem_sep String getTodayPattern concode_elem_sep IProject getProject"}
{"code": "double function ( TagGroup arg0 , double arg1 ) { Float loc0 = null ; if ( arg0 . containsKey ( \"srini_string\" ) ) { loc0 = parseAngle ( arg0 . getValue ( \"srini_string\" ) ) ; } if ( loc0 != null ) { return Math . toRadians ( loc0 ) ; } else { return arg1 ; } }", "nl": "parses the direction tag and returns the direction or a default value as radians concode_field_sep PlaceHolder placeHolder concode_field_sep String getValueWithFallback concode_elem_sep float parseMeasure concode_elem_sep float parseWidth concode_elem_sep float parseClearing concode_elem_sep float parseHeight"}
{"code": "void function ( ) { Assert . assertTrue ( \"srini_string\" , this . slsb . validContextInjections ( ) ) ; }", "nl": "tests that a ejb with several context and sub classes @resource deploys fine and is injected as expected concode_field_sep Logger logger concode_elem_sep SimpleSLSB slsb concode_field_sep void testInjection concode_elem_sep void testEnvEntryInjection concode_elem_sep void testOptionalEnvEntryInjection concode_elem_sep void testOptionalEnvEntryEncAvailability concode_elem_sep void beforeTest concode_elem_sep WebArchive createWebDeployment concode_elem_sep void testResourceInjectionInEJB concode_elem_sep void testURLInjection concode_elem_sep void testTimerServiceInjection concode_elem_sep void testOrbEnvironment"}
{"code": "String function ( int arg0 , String arg1 ) { if ( arg0 == 1 ) { return NumberFormat . getNumberInstance ( ) . format ( arg0 ) + \"srini_string\" + arg1 ; } else { return NumberFormat . getNumberInstance ( ) . format ( arg0 ) + \"srini_string\" + arg1 + \"srini_string\" ; } }", "nl": "return the count and the quantity label as a properly pluralized string . i.e. 5 , `` item '' == > `` 5 items '' . concode_field_sep String NEW_LINE concode_field_sep String trimMenuText concode_elem_sep String toString"}
{"code": "void function ( XMPMeta arg0 , String arg1 ) { arg0 . appendArrayItem ( XMPConst . NS_DC , CREATOR , new PropertyOptions ( PropertyOptions . ARRAY_ORDERED ) , arg1 , null ) ; }", "nl": "adds a single author . concode_field_sep String IDENTIFIER concode_elem_sep String SUBJECT concode_elem_sep String TYPE concode_elem_sep String CONTRIBUTOR concode_elem_sep String CREATOR concode_elem_sep String RELATION concode_elem_sep String SOURCE concode_elem_sep String DESCRIPTION concode_elem_sep String FORMAT concode_elem_sep String COVERAGE concode_elem_sep String LANGUAGE concode_elem_sep String DATE concode_elem_sep String RIGHTS concode_elem_sep String TITLE concode_elem_sep String PUBLISHER concode_field_sep void addDescription concode_elem_sep void addTitle concode_elem_sep void setSubject concode_elem_sep void setAuthor concode_elem_sep void addPublisher concode_elem_sep void setTitle concode_elem_sep void setDescription concode_elem_sep void addSubject concode_elem_sep void setPublisher"}
{"code": "void function ( ) { new SWTShowMenuOperation ( null ) . closeAllMenus ( ) . execute ( ) ; }", "nl": "cleanup by closing any open menus concode_field_sep Display display concode_elem_sep int DEFAULT_EXEC_WAIT_TIME concode_field_sep ControlReference<?> getFocusControl concode_elem_sep ShellReference[] getShells concode_elem_sep Color getSystemColor concode_elem_sep ShellReference getActiveShell concode_elem_sep DisplayReference getDefault concode_elem_sep boolean isIdle concode_elem_sep T execute concode_elem_sep T execute concode_elem_sep void execute concode_elem_sep void execute concode_elem_sep Display getDisplay concode_elem_sep ISWTWidgetReference<?>[] findWidgets concode_elem_sep void accept"}
{"code": "float function ( ) { return DEFAULT_CORNER_THICKNESS_DP ; }", "nl": "returns the value of the corner thickness concode_field_sep int DEFAULT_CORNER_COLOR concode_elem_sep float DEFAULT_GUIDELINE_THICKNESS_PX concode_elem_sep String DEFAULT_BACKGROUND_COLOR_ID concode_elem_sep float DEFAULT_LINE_THICKNESS_DP concode_elem_sep float DEFAULT_CORNER_THICKNESS_DP concode_elem_sep String SEMI_TRANSPARENT concode_field_sep Paint newBorderPaint concode_elem_sep Paint newGuidelinePaint concode_elem_sep Paint newCornerPaint concode_elem_sep Paint newBackgroundPaint concode_elem_sep float getLineThickness"}
{"code": "int function ( CharSequence arg0 , CharSequence arg1 ) { for ( int loc0 = 0 ; loc0 < Math . max ( arg0 . length ( ) , arg1 . length ( ) ) ; loc0 ++ ) { int loc1 = compareCharacter ( arg0 , arg1 , loc0 ) ; if ( 0 != loc1 ) { return loc1 ; } } return 0 ; }", "nl": "compares the charsequences o1 and o2 . concode_field_sep AvroCharSequenceComparator<CharSequence> INSTANCE concode_field_sep int compare concode_elem_sep int compareCharacter"}
{"code": "void function ( Exception arg0 ) { this . exception = arg0 ; this . state = FAILED ; this . callback . ifPresent ( ac -> ac . onComplete ( null , Optional . of ( arg0 ) ) ) ; synchronized ( lock ) { lock . notifyAll ( ) ; } }", "nl": "sets the exception from failed execution and executes callback if available . notifies any thread waiting for completion . concode_field_sep Exception exception concode_elem_sep int COMPLETED concode_elem_sep AtomicInteger idx concode_elem_sep int state concode_elem_sep Object lock concode_elem_sep Optional<AsyncCallback<T>> callback concode_elem_sep int FAILED concode_elem_sep int RUNNING concode_elem_sep T value concode_field_sep T getValue concode_elem_sep AsyncResult<T> startProcess concode_elem_sep AsyncResult<T> startProcess concode_elem_sep void setValue concode_elem_sep T endProcess concode_elem_sep void await concode_elem_sep boolean isCompleted"}
{"code": "WidgetReference < T > function ( T arg0 ) { return new WidgetReference < T > ( arg0 ) ; }", "nl": "create a widget reference locator for this widget . concode_field_sep T widget concode_elem_sep Map<Class<?>,Object> adapters concode_field_sep Object getAdapter concode_elem_sep T getWidget concode_elem_sep void addAdapter concode_elem_sep String toString concode_elem_sep IWidgetLocator[] findAll concode_elem_sep boolean matches"}
{"code": "void function ( ) { this . m_negativeXErrorPixel = IErrorBarPixel . ERROR_PIXEL_NONE ; this . m_negativeYErrorPixel = IErrorBarPixel . ERROR_PIXEL_NONE ; this . m_positiveXErrorPixel = IErrorBarPixel . ERROR_PIXEL_NONE ; this . m_positiveYErrorPixel = IErrorBarPixel . ERROR_PIXEL_NONE ; }", "nl": "convenience method for clearing this error bar making it available for new configuration . all errors are set to #error_pixel_none afterwards . concode_field_sep int m_negativeYErrorPixel concode_elem_sep int m_negativeXErrorPixel concode_elem_sep int m_positiveYErrorPixel concode_elem_sep int m_positiveXErrorPixel concode_elem_sep ITrace2D m_trace concode_elem_sep long serialVersionUID concode_field_sep void setTrace concode_elem_sep void setPositiveXErrorPixel concode_elem_sep int getNegativeXErrorPixel concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep int getPositiveYErrorPixel concode_elem_sep void setNegativeYErrorPixel concode_elem_sep void setPositiveYErrorPixel concode_elem_sep ITrace2D getTrace concode_elem_sep void setNegativeXErrorPixel concode_elem_sep int getPositiveXErrorPixel concode_elem_sep int getNegativeYErrorPixel"}
{"code": "Object function ( Object arg0 ) { iClosure . execute ( arg0 ) ; return arg0 ; }", "nl": "transforms the input to result by executing a closure . concode_field_sep long serialVersionUID concode_elem_sep Closure iClosure concode_field_sep Closure getClosure concode_elem_sep Transformer getInstance"}
{"code": "OSMElement function ( ) { return objectWithTags ; }", "nl": "returns the way or relation with the tags for this area concode_field_sep OSMElement objectWithTags concode_elem_sep List<MapNode> nodes concode_elem_sep PolygonWithHolesXZ polygon concode_elem_sep Collection<MapAreaSegment> areaSegments concode_elem_sep Collection<MapOverlap<?,?>> overlaps concode_elem_sep List<AreaWorldObject> representations concode_elem_sep List<List<MapNode>> holes concode_field_sep List<MapNode> getBoundaryNodes concode_elem_sep int getLayer concode_elem_sep SimplePolygonXZ getOuterPolygon concode_elem_sep AxisAlignedBoundingBoxXZ getAxisAlignedBoundingBoxXZ concode_elem_sep Collection<MapAreaSegment> getAreaSegments concode_elem_sep TagGroup getTags concode_elem_sep SimplePolygonXZ polygonFromMapNodeLoop concode_elem_sep Collection<MapOverlap<?,?>> getOverlaps concode_elem_sep AreaWorldObject getPrimaryRepresentation concode_elem_sep Collection<List<MapNode>> getHoles concode_elem_sep void addOverlap concode_elem_sep void addRepresentation concode_elem_sep String toString concode_elem_sep PolygonWithHolesXZ convertToPolygon concode_elem_sep List<AreaWorldObject> getRepresentations concode_elem_sep PolygonWithHolesXZ getPolygon"}
{"code": "Date function ( ) { if ( upcomingReleaseDate == null ) { this . upcomingReleaseDate = dependencyResolverService . findMostRelevantRelease ( new TreeSet < ReleaseEntity > ( getAllReleases ( ) ) , new Date ( ) ) . getInstallationInProductionAt ( ) ; } return upcomingReleaseDate ; }", "nl": "makes sure that the upcomingrelease is initialized concode_field_sep long serialVersionUID concode_elem_sep LinkedHashMap<Integer,ReleaseEntity> releaseMap concode_elem_sep ReleaseMgmtService releaseService concode_elem_sep ResourceDependencyResolverService dependencyResolverService concode_elem_sep Date upcomingReleaseDate concode_elem_sep Integer upcomingReleaseId concode_field_sep List<ReleaseEntity> getAllReleases concode_elem_sep LinkedHashMap<Integer,ReleaseEntity> getReleaseMap concode_elem_sep void reset concode_elem_sep Integer getUpcomingReleaseId"}
{"code": "Response . ResponseBuilder function ( AbstractElement arg0 , UriInfo arg1 , String arg2 ) { return Response . status ( CREATED ) . location ( arg1 . getRequestUriBuilder ( ) . segment ( arg2 ) . build ( ) ) . entity ( arg0 ) ; }", "nl": "this method exists solely to concentrate usage of javax.ws.rs.core.response #created java.net.uri intoone place until this jira is resolved somehow . concode_field_sep PlaceHolder placeHolder concode_field_sep void createPagingHeader concode_elem_sep InputStream pageToStream concode_elem_sep Response.ResponseBuilder pagedResponse concode_elem_sep Response.ResponseBuilder pagedResponse"}
{"code": "LinkedList < HashMap < String , MetricsAggregate >> function ( ) { return metricsHistory ; }", "nl": "this method returns the history of measured or aggregated metrics of the last ten metric-updates . concode_field_sep HashMap<BigDecimal,MetricsSubCoordinatorInfo> listOfSubCoordinators concode_elem_sep float exponentialSmoothing concode_elem_sep MetricsEntry ownMetrics concode_elem_sep Logger log concode_elem_sep String smoothingType concode_elem_sep SkyNetNodeInterface skynetNode concode_elem_sep LinkedList<HashMap<String,MetricsAggregate>> metricsHistory concode_elem_sep int historySize concode_field_sep void setOwnMetrics concode_elem_sep void setListOfSubCoordinators concode_elem_sep HashMap<BigDecimal,MetricsSubCoordinatorInfo> getListOfSubCoordinators concode_elem_sep MetricsAggregate mergeTwoAggregates concode_elem_sep void setMetricsHistory concode_elem_sep void reset concode_elem_sep MetricsEntry getOwnMetrics concode_elem_sep void addMetricsMapToMetricsHistory concode_elem_sep MetricsEntry aggregateMetrics"}
{"code": "ResultWithNofifications < R , BE > function ( TransactionPayload < R , BE > arg0 ) { return inCommittableTxWithNotifications ( context , TransactionPayload . Committing . committing ( arg0 ) ) ; }", "nl": "identical to #intx transactionpayload but also returns the notifications emitted from the transaction.the list of notifications is final and they have already been sent . the caller should not send them again . concode_field_sep R result concode_elem_sep TraversalContext<BE,E> context concode_elem_sep List<EntityAndPendingNotifications<BE,?>> sentNotifications concode_field_sep BE getSingle concode_elem_sep List<EntityAndPendingNotifications<BE,?>> getSentNotifications concode_elem_sep R getResult concode_elem_sep boolean isApplicable concode_elem_sep R inTx concode_elem_sep R inTx concode_elem_sep R inCommittableTx concode_elem_sep R inCommittableTx concode_elem_sep ResultWithNofifications<R,BE> inCommittableTxWithNotifications"}
{"code": "Quotient < C > function ( Quotient < C > arg0 ) { if ( arg0 == null || arg0 . isZERO ( ) ) { return this ; } C loc0 = num . multiply ( arg0 . den ) ; loc0 = loc0 . subtract ( den . multiply ( arg0 . num ) ) ; C loc1 = den . multiply ( arg0 . den ) ; return new Quotient < C > ( ring , loc0 , loc1 , false ) ; }", "nl": "quotient subtraction . concode_field_sep Logger logger concode_elem_sep QuotientRing<C> ring concode_elem_sep boolean debug concode_elem_sep C num concode_elem_sep C den concode_field_sep int signum concode_elem_sep boolean isONE concode_elem_sep Quotient<C> inverse concode_elem_sep boolean isUnit concode_elem_sep Quotient<C> gcd concode_elem_sep Quotient<C> sum concode_elem_sep int compareTo concode_elem_sep Quotient<C>[] egcd concode_elem_sep Quotient<C> monic concode_elem_sep Quotient<C> abs concode_elem_sep int hashCode concode_elem_sep Quotient<C> negate concode_elem_sep boolean equals concode_elem_sep Quotient<C> clone concode_elem_sep boolean isZERO concode_elem_sep String toString concode_elem_sep Quotient<C> divide concode_elem_sep Quotient<C> multiply concode_elem_sep Quotient<C> remainder"}
{"code": "boolean function ( ) { return true ; }", "nl": "method stub . returns false . concode_field_sep Reflector _parent concode_elem_sep ReflectArray _array concode_elem_sep JdkLoader _classLoader concode_elem_sep ReflectorConfiguration _config concode_field_sep Reflector parent concode_elem_sep ReflectClass forName concode_elem_sep void configuration concode_elem_sep ReflectorConfiguration configuration concode_elem_sep boolean isCollection concode_elem_sep Object nullValue concode_elem_sep Class[] toNative concode_elem_sep Class toNative concode_elem_sep ReflectClass[] toMeta concode_elem_sep ReflectArray array concode_elem_sep Object deepClone concode_elem_sep ReflectClass forClass concode_elem_sep JdkClass createClass concode_elem_sep ReflectClass forObject concode_elem_sep void setParent"}
{"code": "JPanel function ( ) { contentPanel = new JPanel ( ) ; contentPanel . setLayout ( new BorderLayout ( ) ) ; contentPanel . add ( buildEditPanel ( ) , BorderLayout . NORTH ) ; contentPanel . add ( buildSpreadsheet ( ) , BorderLayout . CENTER ) ; contentPanel . add ( buildErrorPanel ( ) , BorderLayout . SOUTH ) ; return contentPanel ; }", "nl": "methods to build visual elements concode_field_sep int ELEMENTWIDTH concode_elem_sep JPanel spreadsheet concode_elem_sep SpreadsheetCell[][] cellArray concode_elem_sep JPanel contentPanel concode_elem_sep JLabel EditLabel concode_elem_sep JTextField ErrorBox concode_elem_sep JTextField EditBox concode_elem_sep JFrame jframe concode_elem_sep int ELEMENTHEIGHT concode_elem_sep int currentCellID concode_elem_sep JPanel editPanel concode_elem_sep JPanel errorPanel concode_elem_sep JButton btExit concode_elem_sep int SPREADSHEETSIZE concode_field_sep JPanel buildSpreadsheet concode_elem_sep int getCurrentCellID concode_elem_sep void setErrorMsg concode_elem_sep JPanel buildEditPanel concode_elem_sep String getCellContents concode_elem_sep JPanel buildErrorPanel concode_elem_sep void setEditLabel concode_elem_sep void setCurrentCellID concode_elem_sep void setEditString"}
{"code": "boolean function ( Context arg0 ) { if ( this . getMethod ( ) == null && this . getMethodKey ( ) == null ) { throw new IllegalStateException ( \"srini_string\" ) ; } Method loc0 = extractMethod ( arg0 ) ; return evaluateResult ( loc0 . invoke ( this , getArguments ( arg0 ) ) ) ; }", "nl": "look up the method specified by either `` method '' or `` methodkey '' and invoke it , returning a boolean value as interpreted by evaluateresult . concode_field_sep WeakHashMap methods concode_elem_sep String methodKey concode_elem_sep Class[] DEFAULT_SIGNATURE concode_elem_sep String method concode_field_sep void setMethod concode_elem_sep String getMethodKey concode_elem_sep boolean evaluateResult concode_elem_sep Class[] getSignature concode_elem_sep Object[] getArguments concode_elem_sep String getMethod concode_elem_sep void setMethodKey concode_elem_sep Method extractMethod"}
{"code": "void function ( long arg0 ) { markAsOverriden ( \"srini_string\" ) ; this . evictionWakeUpInterval = arg0 ; }", "nl": "sets how often eviction process should be run for the cached type . concode_field_sep long evictionWakeUpInterval concode_elem_sep String cacheName concode_elem_sep Set<String> overridden concode_elem_sep int evictionMaxEntries concode_elem_sep EvictionStrategy evictionStrategy concode_elem_sep long expirationLifespan concode_elem_sep boolean isExposeStatistics concode_elem_sep long expirationMaxIdle concode_field_sep void setExposeStatistics concode_elem_sep long getExpirationLifespan concode_elem_sep void setExpirationLifespan concode_elem_sep long getEvictionWakeUpInterval concode_elem_sep EvictionStrategy getEvictionStrategy concode_elem_sep void setEvictionStrategy concode_elem_sep void setEvictionMaxEntries concode_elem_sep boolean isExposeStatistics concode_elem_sep String uc concode_elem_sep void applyTo concode_elem_sep void setCacheName concode_elem_sep void setExpirationMaxIdle concode_elem_sep long getExpirationMaxIdle concode_elem_sep String toString concode_elem_sep int getEvictionMaxEntries concode_elem_sep void validateInfinispanConfiguration concode_elem_sep String getCacheName concode_elem_sep void markAsOverriden"}
{"code": "Bag function ( Bag arg0 , Class arg1 ) { return new PredicatedBag ( arg0 , InstanceofPredicate . getInstance ( arg1 ) ) ; }", "nl": "factory method to create a typed bag . if there are any elements already in the bag being decorated , they are validated . concode_field_sep PlaceHolder placeHolder concode_field_sep placeholderType placeHolder"}
{"code": "CopyDuplicate1Code function ( ) { return stmt . getCpyDplctInd ( ) ; }", "nl": "indicates whether the document is a copy , a duplicate , or a duplicate of a copy . codu message is being sent as a copy to a party other than the account owner , for information purposes and the message is a duplicate of a message previously sent . copy message is being sent as a copy to a party other than the account owner , for information purposes dupl message is for information/confirmation purposes . it is a duplicate of a message previously sent . concode_field_sep BankToCustomerStatementV02 bankToCustomerStatement concode_elem_sep Document document concode_elem_sep GroupHeader42 groupHeader concode_elem_sep AccountStatement2 stmt concode_field_sep CashAccount16 getRltdAcct concode_elem_sep List<ReportEntry2> getNtry concode_elem_sep String getAddtlStmtInf concode_elem_sep BankToCustomerStatement read concode_elem_sep PartyIdentification32 getMsgRcpt concode_elem_sep Date getToDt concode_elem_sep Date getCreDtTm concode_elem_sep Date getCreDtTm concode_elem_sep Pagination getMsgPgntn concode_elem_sep String getAddtlInf concode_elem_sep String getId concode_elem_sep BigDecimal getElctrncSeqNb concode_elem_sep Date getFrDt concode_elem_sep TotalTransactions2 getTxsSummry concode_elem_sep List<AccountInterest2> getIntrst concode_elem_sep CashAccount20 getAcct concode_elem_sep String getMsgId concode_elem_sep ReportingSource1Choice getRptgSrc concode_elem_sep List<AccountStatement> getStmt concode_elem_sep BigDecimal getLglSeqNb concode_elem_sep List<CashBalance3> getBal"}
{"code": "RatNum function ( RatNum arg0 ) { checkRep ( ) ; return new RatNum ( this . numer * arg0 . denom + arg0 . numer * this . denom , this . denom * arg0 . denom ) ; }", "nl": "requires arg ! = null concode_field_sep int numer concode_elem_sep int denom concode_elem_sep double approx concode_field_sep boolean isNegative concode_elem_sep RatNum sub concode_elem_sep RatNum mul concode_elem_sep String debugPrint concode_elem_sep boolean isPositive concode_elem_sep int gcd concode_elem_sep int compareTo concode_elem_sep RatNum parse concode_elem_sep boolean isNaN concode_elem_sep void checkRep concode_elem_sep RatNum div concode_elem_sep RatNum negate concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep String toString concode_elem_sep String unparse concode_elem_sep double approx"}
{"code": "Object function ( ) { return value ; }", "nl": "gets the value from the map entry . concode_field_sep Object value concode_elem_sep Object key concode_field_sep Object getKey concode_elem_sep int hashCode concode_elem_sep Object setValue concode_elem_sep boolean equals concode_elem_sep String toString concode_elem_sep void setKey"}
{"code": "Exception function ( ) { return error ; }", "nl": "the exception generated at the server , or null if no such exception has occured concode_field_sep Map<String,ByteBuffer> requestCallMeta concode_elem_sep Map<String,ByteBuffer> responseCallMeta concode_elem_sep Object response concode_elem_sep List<ByteBuffer> requestPayload concode_elem_sep List<ByteBuffer> responsePayload concode_elem_sep HandshakeRequest handshakeRequest concode_elem_sep HandshakeResponse handshakeResponse concode_elem_sep Exception error concode_elem_sep Message message concode_field_sep void setResponseCallMeta concode_elem_sep List<ByteBuffer> getRequestPayload concode_elem_sep void setRequestHandshakeMeta concode_elem_sep Map<String,ByteBuffer> requestHandshakeMeta concode_elem_sep void setRequestPayload concode_elem_sep void setResponsePayload concode_elem_sep Message getMessage concode_elem_sep void setResponse concode_elem_sep void setResponseHandshakeMeta concode_elem_sep void setRequestCallMeta concode_elem_sep void setMessage concode_elem_sep void setHandshakeRequest concode_elem_sep Map<String,ByteBuffer> responseHandshakeMeta concode_elem_sep Map<String,ByteBuffer> requestCallMeta concode_elem_sep boolean isError concode_elem_sep Map<String,ByteBuffer> responseCallMeta concode_elem_sep HandshakeRequest getHandshakeRequest concode_elem_sep Object response concode_elem_sep void setError concode_elem_sep void setHandshakeResponse concode_elem_sep HandshakeResponse getHandshakeResponse concode_elem_sep List<ByteBuffer> getResponsePayload"}
{"code": "Type function ( ) { return superclass ; }", "nl": "returns a type object for the class 's superclass . concode_field_sep boolean dirty concode_elem_sep ClassInfo classInfo concode_elem_sep Type[] interfaces concode_elem_sep Type superclass concode_elem_sep EditorContext context concode_elem_sep ConstantPool constants concode_elem_sep Type type concode_elem_sep boolean DEBUG concode_field_sep void setInterface concode_elem_sep void setInterfaces concode_elem_sep boolean isStatic concode_elem_sep boolean isSuper concode_elem_sep MethodInfo[] methods concode_elem_sep void commit concode_elem_sep boolean isPrivate concode_elem_sep Type type concode_elem_sep int modifiers concode_elem_sep void setDirty concode_elem_sep void setFinal concode_elem_sep void setSuper concode_elem_sep boolean isDirty concode_elem_sep boolean isProtected concode_elem_sep int hashCode concode_elem_sep void setProtected concode_elem_sep EditorContext context concode_elem_sep boolean isPublic concode_elem_sep boolean isFinal concode_elem_sep ConstantPool constants concode_elem_sep boolean isInterface concode_elem_sep ClassInfo classInfo concode_elem_sep void setPublic concode_elem_sep Type[] interfaces concode_elem_sep void addInterface concode_elem_sep void addInterface concode_elem_sep void setStatic concode_elem_sep void setType concode_elem_sep void commitOnly concode_elem_sep boolean isAbstract concode_elem_sep void setSuperclass concode_elem_sep boolean equals concode_elem_sep String name concode_elem_sep void setAbstract concode_elem_sep String toString concode_elem_sep void visit concode_elem_sep FieldInfo[] fields concode_elem_sep void setPrivate"}
{"code": "List < List < VectorXZ >> function ( Collection < TriangleXYZ > arg0 , Material arg1 , TexCoordFunction arg2 ) { List < VectorXYZ > loc0 = new ArrayList < VectorXYZ > ( arg0 . size ( ) * 3 ) ; for ( TriangleXYZ loc1 : arg0 ) { loc0 . add ( loc1 . v1 ) ; loc0 . add ( loc1 . v2 ) ; loc0 . add ( loc1 . v3 ) ; } return texCoordLists ( loc0 , arg1 , arg2 ) ; }", "nl": "equivalent of #texcoordlists list , material , texcoordfunction for a collection of triangle objects . concode_field_sep PlaceHolder placeHolder concode_field_sep List<List<VectorXZ>> texCoordLists"}
{"code": "void function ( ) { rehash ( PrimeFinder . nextPrime ( ( int ) Math . ceil ( size ( ) / _loadFactor ) + 1 ) ) ; computeMaxSize ( capacity ( ) ) ; if ( _autoCompactionFactor != 0 ) { computeNextAutoCompactionAmount ( size ( ) ) ; } }", "nl": "compresses the hashtable to the minimum prime size as defined by primefinder that will hold all of the elements currently in the table . if you have done a lot of remove operations and plan to do a lot of queries or insertions or iteration , it is a good idea to invoke this method . doing so will accomplish two things : you 'll free memory allocated to the table but no longer needed because of the remove s. you 'll get better query/insert/iterator performance because there wo n't be any removed slots to skip over when probing for indices in the table . concode_field_sep int _size concode_elem_sep int _free concode_elem_sep float _loadFactor concode_elem_sep long serialVersionUID concode_elem_sep int _maxSize concode_elem_sep boolean _autoCompactTemporaryDisable concode_elem_sep float _autoCompactionFactor concode_elem_sep int _autoCompactRemovesRemaining concode_elem_sep float DEFAULT_LOAD_FACTOR concode_elem_sep int DEFAULT_INITIAL_CAPACITY concode_field_sep void setAutoCompactionFactor concode_elem_sep void writeExternal concode_elem_sep void trimToSize concode_elem_sep boolean isEmpty concode_elem_sep void clear concode_elem_sep void rehash concode_elem_sep float getAutoCompactionFactor concode_elem_sep void reenableAutoCompaction concode_elem_sep int capacity concode_elem_sep int size concode_elem_sep void tempDisableAutoCompaction concode_elem_sep void postInsertHook concode_elem_sep void computeMaxSize concode_elem_sep Object clone concode_elem_sep void readExternal concode_elem_sep void removeAt concode_elem_sep int setUp concode_elem_sep void computeNextAutoCompactionAmount concode_elem_sep void ensureCapacity concode_elem_sep int calculateGrownCapacity"}
{"code": "List < WPTreeNode > function ( ) { return this . children ; }", "nl": "get the list of children of the calling object pass a null parent to construct the root concode_field_sep WPTreeNode parent concode_elem_sep List<WPTreeNode> children concode_elem_sep WPTreeNode root concode_elem_sep NearbyWords nw concode_elem_sep String word concode_field_sep String printQueue concode_elem_sep String getWord concode_elem_sep String toString concode_elem_sep List<String> findPath concode_elem_sep WPTreeNode addChild concode_elem_sep List<String> buildPathToRoot"}
{"code": "IWindowService function ( ) { invalid ( ) ; return null ; }", "nl": "subclasses may override . concode_field_sep String reason concode_field_sep String getReason concode_elem_sep INativeConditionFactory getConditionFactory concode_elem_sep void invalid concode_elem_sep InvalidOSDelegate forReason concode_elem_sep String toString"}
{"code": "void function ( final float arg0 ) { this . offset = arg0 ; }", "nl": "setter for the offset . the offset is relative to the current y position . if you want to underline something , you have to choose a negative offset . concode_field_sep float offset concode_elem_sep DrawInterface drawInterface concode_field_sep void setDrawInterface concode_elem_sep boolean process concode_elem_sep DrawInterface getDrawInterface concode_elem_sep boolean isContent concode_elem_sep boolean isNestable concode_elem_sep float getOffset concode_elem_sep void draw concode_elem_sep List<Chunk> getChunks concode_elem_sep int type"}
{"code": "LIST < C > function ( C arg0 , C arg1 ) { LIST < C > loc0 = new LIST < C > ( ) ; loc0 . list . addFirst ( arg1 ) ; loc0 . list . addFirst ( arg0 ) ; return loc0 ; }", "nl": "list , 2 elements . a and b are objects . l is the list a , b . concode_field_sep LIST<?> SIL concode_elem_sep Iterator<C> iter concode_elem_sep LinkedList<C> list concode_field_sep void SFIRST concode_elem_sep LIST<C> LIST1 concode_elem_sep LIST<C> RED3 concode_elem_sep LIST<C> LIST3 concode_elem_sep LIST<C> RED4 concode_elem_sep C THIRD concode_elem_sep LIST<C> LIST5 concode_elem_sep int LENGTH concode_elem_sep LIST<C> RED2 concode_elem_sep LIST<C> LIST4 concode_elem_sep LIST<C> COMP concode_elem_sep LIST<C> INV concode_elem_sep LIST<C> COMP3 concode_elem_sep LIST<C> COMP3 concode_elem_sep int ORDER concode_elem_sep LIST<C> COMP2 concode_elem_sep int EXTENT concode_elem_sep void SRED concode_elem_sep C LELT concode_elem_sep boolean EQUAL concode_elem_sep LIST<C> LIST10 concode_elem_sep boolean isEmpty concode_elem_sep LIST<C> CCONC concode_elem_sep C FIRST concode_elem_sep LIST<C> REDUCT concode_elem_sep C FOURTH concode_elem_sep LIST<C> RED concode_elem_sep LIST<C> CINV concode_elem_sep boolean isNull concode_elem_sep String toString concode_elem_sep C SECOND concode_elem_sep long CLOCK concode_elem_sep LIST<C> CONC"}
{"code": "String function ( ) { return \"srini_string\" + ring . toString ( ) + \"srini_string\" ; }", "nl": "get the string representation as ringfactory . concode_field_sep RingFactory<C> ring concode_elem_sep boolean debug concode_elem_sep Logger logger concode_field_sep Quotient<C> random concode_elem_sep Quotient<C> random concode_elem_sep int hashCode concode_elem_sep boolean isField concode_elem_sep boolean equals concode_elem_sep Quotient<C> getONE concode_elem_sep boolean isCommutative concode_elem_sep Quotient<C> getZERO concode_elem_sep Quotient<C> fromInteger concode_elem_sep Quotient<C> fromInteger concode_elem_sep boolean isAssociative concode_elem_sep Quotient<C> parse concode_elem_sep Quotient<C> parse concode_elem_sep Quotient<C> copy concode_elem_sep java.math.BigInteger characteristic"}
{"code": "void function ( final int arg0 ) { this . m_negativeYErrorPixel = arg0 ; }", "nl": "intended for aerrorbarpolicyconfigurable only . concode_field_sep int m_negativeYErrorPixel concode_elem_sep int m_negativeXErrorPixel concode_elem_sep int m_positiveYErrorPixel concode_elem_sep int m_positiveXErrorPixel concode_elem_sep ITrace2D m_trace concode_elem_sep long serialVersionUID concode_field_sep void setTrace concode_elem_sep void setPositiveXErrorPixel concode_elem_sep int getNegativeXErrorPixel concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep int getPositiveYErrorPixel concode_elem_sep void clear concode_elem_sep void setPositiveYErrorPixel concode_elem_sep ITrace2D getTrace concode_elem_sep void setNegativeXErrorPixel concode_elem_sep int getPositiveXErrorPixel concode_elem_sep int getNegativeYErrorPixel"}
{"code": "long function ( ) { return java . lang . System . currentTimeMillis ( ) ; }", "nl": "clock . returns the current cpu clock reading in milliseconds . intervalls are system dependent . concode_field_sep LIST<?> SIL concode_elem_sep Iterator<C> iter concode_elem_sep LinkedList<C> list concode_field_sep void SFIRST concode_elem_sep LIST<C> LIST1 concode_elem_sep LIST<C> RED3 concode_elem_sep LIST<C> LIST3 concode_elem_sep LIST<C> RED4 concode_elem_sep LIST<C> LIST2 concode_elem_sep C THIRD concode_elem_sep LIST<C> LIST5 concode_elem_sep int LENGTH concode_elem_sep LIST<C> RED2 concode_elem_sep LIST<C> LIST4 concode_elem_sep LIST<C> COMP concode_elem_sep LIST<C> INV concode_elem_sep LIST<C> COMP3 concode_elem_sep LIST<C> COMP3 concode_elem_sep int ORDER concode_elem_sep LIST<C> COMP2 concode_elem_sep int EXTENT concode_elem_sep void SRED concode_elem_sep C LELT concode_elem_sep boolean EQUAL concode_elem_sep LIST<C> LIST10 concode_elem_sep boolean isEmpty concode_elem_sep LIST<C> CCONC concode_elem_sep C FIRST concode_elem_sep LIST<C> REDUCT concode_elem_sep C FOURTH concode_elem_sep LIST<C> RED concode_elem_sep LIST<C> CINV concode_elem_sep boolean isNull concode_elem_sep String toString concode_elem_sep C SECOND concode_elem_sep LIST<C> CONC"}
{"code": "File function ( ) { return file ; }", "nl": "returns entity content as a file if set using #setfile java.io.file method . concode_field_sep File file concode_elem_sep boolean gzipCompress concode_elem_sep InputStream stream concode_elem_sep byte[] binary concode_elem_sep String contentEncoding concode_elem_sep boolean chunked concode_elem_sep String text concode_elem_sep List<NameValuePair> parameters concode_elem_sep Serializable serializable concode_elem_sep ContentType contentType concode_field_sep EntityBuilder setBinary concode_elem_sep String getContentEncoding concode_elem_sep boolean isGzipCompress concode_elem_sep EntityBuilder setStream concode_elem_sep String getText concode_elem_sep void clearContent concode_elem_sep EntityBuilder setContentEncoding concode_elem_sep EntityBuilder chunked concode_elem_sep EntityBuilder setSerializable concode_elem_sep EntityBuilder setParameters concode_elem_sep EntityBuilder setParameters concode_elem_sep Serializable getSerializable concode_elem_sep EntityBuilder setFile concode_elem_sep boolean isChunked concode_elem_sep EntityBuilder gzipCompress concode_elem_sep HttpEntity build concode_elem_sep List<NameValuePair> getParameters concode_elem_sep EntityBuilder create concode_elem_sep ContentType getContentType concode_elem_sep ContentType getContentOrDefault concode_elem_sep byte[] getBinary concode_elem_sep InputStream getStream concode_elem_sep EntityBuilder setContentType concode_elem_sep EntityBuilder setText"}
{"code": "float function ( float arg0 ) { list . add ( arg0 ) ; return arg0 ; }", "nl": "pushes a value onto the top of this stack . concode_field_sep ArrayFloatList list concode_field_sep float pop concode_elem_sep int search concode_elem_sep int size concode_elem_sep float get concode_elem_sep void clear concode_elem_sep boolean empty concode_elem_sep float peek concode_elem_sep float peek"}
{"code": "boolean function ( final double arg0 ) { return ! ( Double . isInfinite ( arg0 ) || Double . isNaN ( arg0 ) ) ; }", "nl": "tests that the given double is not invalid for calculation . it must not be one of : double #nan double #negative_infinity double #positive_infinity concode_field_sep MathUtil instance concode_field_sep void assertDouble concode_elem_sep Integer increment concode_elem_sep boolean assertEqual concode_elem_sep MathUtil getInstance"}
{"code": "void function ( ) { }", "nl": "resets the references for streaming . concode_field_sep HessianRemoteResolver resolver concode_elem_sep byte[] _buffer concode_field_sep void readEnd concode_elem_sep HessianRemoteResolver getRemoteResolver concode_elem_sep int addRef concode_elem_sep String getMethod concode_elem_sep String readHeader concode_elem_sep Object readReply concode_elem_sep void setRef concode_elem_sep void startReply concode_elem_sep void startReplyBody concode_elem_sep int readCall concode_elem_sep double readDouble concode_elem_sep InputStream readInputStream concode_elem_sep Object readRemote concode_elem_sep void skipOptionalCall concode_elem_sep int readInt concode_elem_sep void close concode_elem_sep int readMapStart concode_elem_sep void init concode_elem_sep int readMethodArgLength concode_elem_sep void readListEnd concode_elem_sep boolean readToOutputStream concode_elem_sep Reader getReader concode_elem_sep String readString concode_elem_sep void startCall concode_elem_sep boolean isEnd concode_elem_sep Object readObject concode_elem_sep Object readObject concode_elem_sep void completeCall concode_elem_sep void readMapEnd concode_elem_sep long readUTCDate concode_elem_sep long readLong concode_elem_sep int readListStart concode_elem_sep int readLength concode_elem_sep void setSerializerFactory concode_elem_sep void setRemoteResolver concode_elem_sep String readMethod concode_elem_sep Object readRef concode_elem_sep void completeReply concode_elem_sep byte[] readBytes concode_elem_sep boolean readBoolean concode_elem_sep void readNull concode_elem_sep String readType concode_elem_sep org.w3c.dom.Node readNode"}
{"code": "String function ( ) { return name ; }", "nl": "get the name of this logical type . this name is set as the schema property `` logicaltype '' . concode_field_sep String LOGICAL_TYPE_PROP concode_elem_sep String name concode_elem_sep String[] INCOMPATIBLE_PROPS concode_field_sep Schema addToSchema concode_elem_sep void validate"}
{"code": "NameParts function ( String arg0 ) { return parse ( arg0 , null , null ) ; }", "nl": "parses a textual representation of a qualified name into a nameparts representation . explicitly looks for the form catalog.schema.name . concode_field_sep Identifier catalogName concode_elem_sep QualifiedNameParser INSTANCE concode_elem_sep Identifier objectName concode_elem_sep String qualifiedText concode_elem_sep Identifier schemaName concode_field_sep Identifier getSchemaName concode_elem_sep Identifier getCatalogName concode_elem_sep Identifier getObjectName concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep String toString concode_elem_sep String render concode_elem_sep String unquote"}
{"code": "Runnable function ( final Runnable arg0 ) { return new ContextRunnable ( arg0 ) ; }", "nl": "returns a runnable that will retain the stack trace information about where it originated from . concode_field_sep Field causeField concode_field_sep Executor decorate concode_elem_sep ExecutorService decorate concode_elem_sep ScheduledExecutorService decorate concode_elem_sep ListeningExecutorService decorate concode_elem_sep ListeningScheduledExecutorService decorate concode_elem_sep void handleException concode_elem_sep StackTraceElement[] getStackContext concode_elem_sep Throwable findRootCause concode_elem_sep Callable<T> makeContextCallable concode_elem_sep List<Callable<T>> makeContextWrappedCollection"}
{"code": "void function ( String arg0 ) { this . vid . addToVID ( arg0 ) ; }", "nl": "the vid address is extended . concode_field_sep short[] area concode_elem_sep CanVID vid concode_elem_sep Logger log concode_field_sep boolean betweenY concode_elem_sep void setArea concode_elem_sep boolean betweenX concode_elem_sep boolean betweenXboth concode_elem_sep void setVid concode_elem_sep void setVID concode_elem_sep boolean atX0Corner concode_elem_sep boolean atY0Corner concode_elem_sep short[] areaToShort concode_elem_sep CanVID getVid concode_elem_sep boolean atX1Corner concode_elem_sep boolean atY1Corner concode_elem_sep boolean betweenYboth concode_elem_sep String toString concode_elem_sep boolean commonCorner concode_elem_sep boolean commonCorner concode_elem_sep void setY0 concode_elem_sep int[] getArea concode_elem_sep void setX0 concode_elem_sep void setY1 concode_elem_sep void setX1"}
{"code": "boolean function ( ) { return escapeText ; }", "nl": "returns whether the body of this tag will be escaped or not . concode_field_sep Tag parent concode_elem_sep JellyContext context concode_elem_sep boolean hasTrimmed concode_elem_sep Script body concode_elem_sep boolean escapeText concode_elem_sep Boolean shouldTrim concode_field_sep Tag getParent concode_elem_sep boolean isTrim concode_elem_sep Script getBody concode_elem_sep void setBody concode_elem_sep void invokeBody concode_elem_sep String getBodyText concode_elem_sep String getBodyText concode_elem_sep void setEscapeText concode_elem_sep void setTrim concode_elem_sep Tag findAncestorWithClass concode_elem_sep Tag findAncestorWithClass concode_elem_sep Tag findAncestorWithClass concode_elem_sep Tag findAncestorWithClass concode_elem_sep Tag findAncestorWithClass concode_elem_sep Tag findAncestorWithClass concode_elem_sep void setContext concode_elem_sep void setParent concode_elem_sep JellyContext getContext concode_elem_sep void trimBody"}
{"code": "Type function ( int arg0 ) { return getOrdinalParameterDescriptor ( arg0 ) . getExpectedType ( ) ; }", "nl": "deprecated . concode_field_sep Map<String,NamedParameterDescriptor> namedDescriptorMap concode_elem_sep OrdinalParameterDescriptor[] ordinalDescriptors concode_elem_sep OrdinalParameterDescriptor[] EMPTY_ORDINALS concode_field_sep int getOrdinalParameterSourceLocation concode_elem_sep NamedParameterDescriptor getNamedParameterDescriptor concode_elem_sep Type getNamedParameterExpectedType concode_elem_sep int[] getNamedParameterSourceLocations concode_elem_sep OrdinalParameterDescriptor getOrdinalParameterDescriptor concode_elem_sep int getOrdinalParameterCount concode_elem_sep Set<String> getNamedParameterNames"}
{"code": "char function ( ) { if ( list . isEmpty ( ) ) { throw new EmptyStackException ( ) ; } return list . get ( list . size ( ) - 1 ) ; }", "nl": "looks at the top of this stack without removing it . concode_field_sep ArrayCharList list concode_field_sep char pop concode_elem_sep int search concode_elem_sep int size concode_elem_sep char get concode_elem_sep void clear concode_elem_sep char push concode_elem_sep boolean empty"}
{"code": "Map function ( ) { return settings ; }", "nl": "temporarily exposed since configuration is still around and much code still uses configuration . this allows code to configure the builder and access that to configure configuration object used from hem atm . concode_field_sep Map settings concode_elem_sep LoadedConfig aggregatedCfgXml concode_elem_sep List<ProvidedService> providedServices concode_elem_sep ConfigLoader configLoader concode_elem_sep boolean autoCloseRegistry concode_elem_sep String DEFAULT_CFG_RESOURCE_NAME concode_elem_sep List<StandardServiceInitiator> initiators concode_elem_sep BootstrapServiceRegistry bootstrapServiceRegistry concode_field_sep StandardServiceRegistryBuilder disableAutoClose concode_elem_sep List<StandardServiceInitiator> standardInitiatorList concode_elem_sep StandardServiceRegistryBuilder enableAutoClose concode_elem_sep StandardServiceRegistryBuilder applySetting concode_elem_sep void destroy concode_elem_sep StandardServiceRegistryBuilder configure concode_elem_sep StandardServiceRegistryBuilder configure concode_elem_sep StandardServiceRegistryBuilder configure concode_elem_sep StandardServiceRegistryBuilder configure concode_elem_sep StandardServiceRegistryBuilder configure concode_elem_sep StandardServiceRegistryBuilder applySettings concode_elem_sep void applyServiceContributingIntegrators concode_elem_sep StandardServiceRegistryBuilder addService concode_elem_sep StandardServiceRegistry build concode_elem_sep LoadedConfig getAggregatedCfgXml concode_elem_sep StandardServiceRegistryBuilder loadProperties concode_elem_sep StandardServiceRegistryBuilder loadProperties concode_elem_sep BootstrapServiceRegistry getBootstrapServiceRegistry concode_elem_sep void applyServiceContributors concode_elem_sep StandardServiceRegistryBuilder addInitiator"}
{"code": "int function ( ) { return ( int ) Math . round ( Math . min ( y1 , y2 ) ) ; }", "nl": "gets the topmost y-position of the line . concode_field_sep double y1 concode_elem_sep double x1 concode_elem_sep double y2 concode_elem_sep double x2 concode_elem_sep Color color concode_field_sep int getX concode_elem_sep int getHeight concode_elem_sep void grow concode_elem_sep void setColor concode_elem_sep String toString concode_elem_sep int getWidth concode_elem_sep void draw concode_elem_sep void translate concode_elem_sep void paintShape"}
{"code": "char function ( ) { return this . last ; }", "nl": "liefert das signal , mit dem die letzte ' 1 ' codiert wurde . concode_field_sep ZeroBuffer zeroBuffer concode_elem_sep int pointer concode_elem_sep char last concode_elem_sep State state concode_elem_sep boolean[] buffer concode_elem_sep AMI.Medium medium concode_field_sep State next concode_elem_sep boolean[] receive concode_elem_sep HDB3Receiver.Lookahead lookahead concode_elem_sep void puffern concode_elem_sep boolean[] flush concode_elem_sep int size concode_elem_sep boolean get concode_elem_sep void clear concode_elem_sep void reset concode_elem_sep void buffer concode_elem_sep boolean[] convertToBoolArray"}
{"code": "void function ( MessageSource arg0 ) { this . messageSource = arg0 ; }", "nl": "this method should only be used by unit tests . concode_field_sep Logger LOGGER concode_elem_sep String FLASH_ERROR_MESSAGE concode_elem_sep String VIEW_REDIRECT_PREFIX concode_elem_sep String FLASH_FEEDBACK_MESSAGE concode_elem_sep MessageSource messageSource concode_field_sep void addErrorMessage concode_elem_sep String createRedirectViewPath concode_elem_sep void addFeedbackMessage"}
{"code": "void function ( ) { if ( ! started ) { started = true ; sentMaintenance = new HashMap < Long , Long > ( ) ; sentUser = new HashMap < Long , Long > ( ) ; } }", "nl": "called to start the traffic analysis . messages that are sent prior to invoking this method are not taken into account for analysis . calling this method starts a fresh measurement . the number of the participating hosts has to be set before calling this method . concode_field_sep Logger log concode_elem_sep double numHosts concode_elem_sep boolean started concode_elem_sep Map<Long,Long> sentMaintenance concode_elem_sep Map<Long,Long> sentUser concode_field_sep void writeTraffic concode_elem_sep void stop concode_elem_sep void setNumberOfHosts concode_elem_sep void transMsgSent concode_elem_sep void messageSent concode_elem_sep void transMsgReceived"}
{"code": "void function ( final String [ ] arg0 ) { new ClassInfo ( System . out ) . execute ( arg0 ) ; }", "nl": "entry point to run this examples as a java application . concode_field_sep Analyzer analyzer concode_elem_sep PrintStream out concode_field_sep void visitCoverage concode_elem_sep void execute"}
{"code": "String [ ] function ( ) { return ToStringTemplateParser . OBJECT_AND_MEMBER_RELATED_VARIABLES ; }", "nl": "this method is used in #parsetemplate string . it returns all variables returned by #getmemberrelatedvariables and #getobjectrelatedvariables sum of sets . concode_field_sep String OBJECT_SYSTEM_HASHCODE_VARIABLE concode_elem_sep String[] VARIABLES concode_elem_sep String[] beginning concode_elem_sep String[] OBJECT_RELAED_VARIABLE concode_elem_sep String[] body concode_elem_sep String separator concode_elem_sep Map<String,String> descriptions concode_elem_sep String OBJECT_SUPER_TOSTRING_VARIABLE concode_elem_sep String DEFAULT_TEMPLATE concode_elem_sep String[] ending concode_elem_sep String OTHER_MEMBERS_VARIABLE concode_elem_sep String OBJECT_HASHCODE_VARIABLE concode_elem_sep String[] MEMBER_RELATED_VARIABLE concode_elem_sep String MEMBER_NAME_VARIABLE concode_elem_sep String MEMBER_VALUE_VARIABLE concode_elem_sep String OBJECT_NAME_VARIABLE concode_elem_sep String[] OBJECT_AND_MEMBER_RELATED_VARIABLES concode_elem_sep String[] VARIABLE_DESCRIPTIONS concode_elem_sep String OBJECT_GET_NAME_VARIABLE concode_elem_sep String MEMBER_NAME_PARENTHESIS_VARIABLE concode_field_sep String[] getBeginning concode_elem_sep String[] getEnding concode_elem_sep void parseTemplate concode_elem_sep String[] getMemberRelatedVariables concode_elem_sep String[] getVariables concode_elem_sep ArrayList<String> extractElements concode_elem_sep String[] getBody concode_elem_sep String[] getObjectRelatedVariables concode_elem_sep String getSeparator concode_elem_sep Map<String,String> getVariableDescriptions concode_elem_sep int firstOccuranceOf"}
{"code": "void function ( Graphics arg0 , int arg1 ) { this . obstacleSize = arg1 ; if ( isUp ) { arg0 . setColor ( new Color ( 212 , 129 , 78 ) ) ; arg0 . fill3DRect ( x , y , 150 , gameHeight - arg1 - 150 , true ) ; } else { arg0 . setColor ( new Color ( 212 , 129 , 78 ) ) ; arg0 . fill3DRect ( x , y , 150 , arg1 , true ) ; } }", "nl": "draws the obstacle with declared size . concode_field_sep int obstacleSize concode_elem_sep int RESET_POSITION concode_elem_sep int gameWidth concode_elem_sep int obstacleHeigth concode_elem_sep int gameHeight concode_elem_sep boolean isUp concode_elem_sep int x concode_elem_sep int y concode_elem_sep int resetPosition concode_elem_sep int MOVE concode_field_sep void move concode_elem_sep boolean colideDownX concode_elem_sep boolean crashOnObstacle concode_elem_sep void resetObstaclePosition concode_elem_sep boolean colideUpX concode_elem_sep boolean colideDown concode_elem_sep boolean colideUp"}
{"code": "long function ( Runnable arg0 ) { long loc0 = System . currentTimeMillis ( ) ; arg0 . run ( ) ; return System . currentTimeMillis ( ) - loc0 ; }", "nl": "return the length of time elapsed to run the given runnable . concode_field_sep long start concode_field_sep void reset"}
{"code": "IConnection function ( String arg0 , String arg1 , int arg2 ) { IConnection loc0 = connections . get ( key ( arg1 , arg2 ) ) ; if ( loc0 != null ) { return loc0 ; } IConnection loc1 = new Client ( storm_conf , clientChannelFactory , clientScheduleService , arg1 , arg2 , this ) ; connections . put ( key ( arg1 , arg2 ) , loc1 ) ; return loc1 ; }", "nl": "establish a connection to a remote server concode_field_sep NioClientSocketChannelFactory clientChannelFactory concode_elem_sep HashedWheelTimer clientScheduleService concode_elem_sep Map storm_conf concode_elem_sep Map<String,IConnection> connections concode_field_sep void removeClient concode_elem_sep void prepare concode_elem_sep IConnection bind concode_elem_sep void term concode_elem_sep String key"}
{"code": "HttpRoute function ( final HttpParams arg0 ) { Args . notNull ( arg0 , \"srini_string\" ) ; HttpRoute loc0 = ( HttpRoute ) arg0 . getParameter ( FORCED_ROUTE ) ; if ( ( loc0 != null ) && NO_ROUTE . equals ( loc0 ) ) { loc0 = null ; } return loc0 ; }", "nl": "obtains the connroutepnames #forced_route forced_route parameter value . #no_route will be mapped to null , to allow unsetting in a hierarchy . concode_field_sep HttpHost NO_HOST concode_elem_sep HttpRoute NO_ROUTE concode_field_sep void setLocalAddress concode_elem_sep void setDefaultProxy concode_elem_sep void setForcedRoute concode_elem_sep InetAddress getLocalAddress concode_elem_sep HttpHost getDefaultProxy"}
{"code": "int function ( ) { return ++ this . staleCounter ; }", "nl": "increments the failure counter and returns the new value . concode_field_sep long lastSeen concode_elem_sep int staleCounter concode_elem_sep KademliaOverlayContact<T> contact concode_field_sep int getStaleCounter concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep String toString concode_elem_sep long getLastSeen concode_elem_sep KademliaOverlayContact<T> getContact concode_elem_sep void seen"}
{"code": "int function ( ) { return _size ; }", "nl": "returns the current number of entries in the map . concode_field_sep int _size concode_elem_sep int[] _values concode_elem_sep int _prime concode_elem_sep int NULL concode_elem_sep Object[] _keys concode_elem_sep int[] PRIMES concode_field_sep int hashCode concode_elem_sep int get concode_elem_sep void clear concode_elem_sep void resize concode_elem_sep String toString concode_elem_sep int put concode_elem_sep int getBiggestPrime"}
{"code": "void function ( ) { }", "nl": "signifies that we are done with this classfileloader concode_field_sep File outputDir concode_elem_sep LinkedList cache concode_elem_sep ClassSource _classSource concode_elem_sep String classpath concode_elem_sep Map openZipFiles concode_elem_sep boolean DEBUG concode_elem_sep boolean USE_SYSTEM_CLASSES concode_elem_sep int CACHE_LIMIT concode_elem_sep boolean verbose concode_field_sep File outputDir concode_elem_sep void setOutputDir concode_elem_sep ClassInfo loadClassFromStream concode_elem_sep void appendClassPath concode_elem_sep ClassInfo loadClassFromFile concode_elem_sep void setVerbose concode_elem_sep ClassInfo[] loadClassesFromZipFile concode_elem_sep void prependClassPath concode_elem_sep OutputStream outputStreamFor concode_elem_sep OutputStream outputStreamFor concode_elem_sep void setClassPath concode_elem_sep String getClassPath concode_elem_sep void addToCache concode_elem_sep ClassInfo newClass concode_elem_sep ClassInfo loadClassFromRessource concode_elem_sep ClassInfo loadClass concode_elem_sep void writeEntry"}
{"code": "File function ( ) { return fileInput ; }", "nl": "gets the cluster 's tasks input file . concode_field_sep ProcessListener processListener concode_elem_sep FXMLController guiController concode_elem_sep String user concode_elem_sep File fileBiBiGridJar concode_elem_sep File fileSingularityScript concode_elem_sep ProcessBuilder processBuilder concode_elem_sep File fileInput concode_elem_sep String masterIp concode_elem_sep ObservableList<String> flavorChoices concode_elem_sep PropertiesController propertiesController concode_elem_sep String clusterId concode_field_sep void exit concode_elem_sep String getClusterId concode_elem_sep void setMasterIp concode_elem_sep void StopCluster concode_elem_sep PropertiesController getPropertiesController concode_elem_sep String getMasterIp concode_elem_sep void StartCluster concode_elem_sep void setClusterId concode_elem_sep void setInputFile concode_elem_sep void UnlockSettings concode_elem_sep void UnlockStopButton concode_elem_sep ObservableList<String> getFlavorChoices"}
{"code": "boolean function ( Object arg0 ) { GroebnerSystem < C > loc0 = null ; try { loc0 = ( GroebnerSystem < C > ) arg0 ; } catch ( ClassCastException loc1 ) { return false ; } if ( loc0 == null ) { return false ; } boolean loc2 = list . equals ( loc0 . list ) ; return loc2 ; }", "nl": "is this groebner system equal to other . concode_field_sep Logger logger concode_elem_sep boolean debug concode_elem_sep List<Condition<C>> conds concode_elem_sep List<ColoredSystem<C>> list concode_elem_sep PolynomialList<GenPolynomial<C>> cgb concode_field_sep List<GenPolynomial<GenPolynomial<C>>> getCGB concode_elem_sep boolean checkInvariant concode_elem_sep int hashCode concode_elem_sep boolean isDetermined concode_elem_sep String toString concode_elem_sep List<Condition<C>> getConditions"}
{"code": "Map < String , String > function ( String arg0 ) { HashMap < String , String > loc0 = new HashMap < String , String > ( ) ; String [ ] loc1 = arg0 . split ( \"srini_string\" ) ; for ( int loc2 = 0 ; loc2 < loc1 . length ; loc2 ++ ) { String [ ] loc3 = loc1 [ loc2 ] . split ( \"srini_string\" , 2 ) ; loc0 . put ( loc3 [ 0 ] . trim ( ) , loc3 [ 1 ] . trim ( ) ) ; } return loc0 ; }", "nl": "takes a string of `` key = value '' pairs split by \\ n and creates a hash table . concode_field_sep boolean mGeckoInfo concode_elem_sep String mLogFile concode_elem_sep int mGeckoTop concode_elem_sep int mScrollHeight concode_elem_sep Solo mSolo concode_elem_sep int mValue concode_elem_sep int mGeckoWidth concode_elem_sep int mHeight concode_elem_sep int mGeckoLeft concode_elem_sep Activity mActivity concode_elem_sep LogLevel mLogLevel concode_elem_sep int mGeckoHeight concode_elem_sep int FRAME_TIME_THRESHOLD concode_elem_sep String mRootPath concode_elem_sep int mPageHeight concode_field_sep PaintedSurface getPaintedSurface concode_elem_sep int getGeckoHeight concode_elem_sep LayerView getSurfaceView concode_elem_sep int getScrollHeight concode_elem_sep void setLogLevel concode_elem_sep void log concode_elem_sep void log concode_elem_sep void log concode_elem_sep void setupScrollHandling concode_elem_sep void setLogFile concode_elem_sep void getGeckoInfo concode_elem_sep String getFile concode_elem_sep void startCheckerboardRecording concode_elem_sep int getPageHeight concode_elem_sep int getValue concode_elem_sep float stopCheckerboardRecording concode_elem_sep int getGeckoTop concode_elem_sep int getGeckoWidth concode_elem_sep void startFrameRecording concode_elem_sep int getHeight concode_elem_sep Element findElement concode_elem_sep int getGeckoLeft concode_elem_sep int stopFrameRecording concode_elem_sep boolean isEnabled concode_elem_sep void logAllStackTraces"}
{"code": "Object function ( ) { return instance ; }", "nl": "entity instance accessor concode_field_sep Object instance concode_elem_sep String entityName concode_elem_sep SessionImplementor session concode_elem_sep EntityPersister persister concode_elem_sep Serializable id concode_field_sep AfterTransactionCompletionProcess getAfterTransactionCompletionProcess concode_elem_sep EventSource eventSource concode_elem_sep Serializable getId concode_elem_sep int compareTo concode_elem_sep void afterDeserialize concode_elem_sep Serializable[] getPropertySpaces concode_elem_sep BeforeTransactionCompletionProcess getBeforeTransactionCompletionProcess concode_elem_sep EventListenerGroup<T> listenerGroup concode_elem_sep boolean hasPostCommitEventListeners concode_elem_sep DelayedPostInsertIdentifier getDelayedId concode_elem_sep boolean needsAfterTransactionCompletion concode_elem_sep String toString concode_elem_sep String getEntityName concode_elem_sep void beforeExecutions concode_elem_sep SessionImplementor getSession concode_elem_sep EntityPersister getPersister"}
{"code": "T function ( ) { return allNodes . get ( 0 ) . key ; }", "nl": "get the heap min without extracting the key concode_field_sep Map<T,Integer> nodePosition concode_elem_sep List<Node> allNodes concode_elem_sep int weight concode_elem_sep T key concode_field_sep void add concode_elem_sep void printPositionMap concode_elem_sep void swap concode_elem_sep void updatePositionMap concode_elem_sep Integer getWeight concode_elem_sep Node extractMinNode concode_elem_sep void printHeap concode_elem_sep void main concode_elem_sep T extractMin concode_elem_sep void decrease concode_elem_sep boolean containsData concode_elem_sep boolean empty"}
{"code": "TagState function ( ) { return this . tagState ; }", "nl": "get the state of the current tag concode_field_sep String text concode_elem_sep Charset charset concode_elem_sep StateController controller concode_elem_sep XMLParserMemory memory concode_elem_sep List<XMLParserListener> listeners concode_elem_sep TagState tagState concode_elem_sep ParserMonitor monitor concode_elem_sep State state concode_field_sep XMLParserMemory memory concode_elem_sep void startElement concode_elem_sep InputStreamReader detectEncoding concode_elem_sep char currentLastChar concode_elem_sep XMLParser removeListener concode_elem_sep void parse concode_elem_sep void parse concode_elem_sep void parse concode_elem_sep void parse concode_elem_sep Charset getCharset concode_elem_sep String current concode_elem_sep void endElement concode_elem_sep void flush concode_elem_sep void parseWithReader concode_elem_sep void unknownData concode_elem_sep String currentTag concode_elem_sep void setMonitor concode_elem_sep String bufferToString concode_elem_sep void setState concode_elem_sep void comment concode_elem_sep StateController selectState concode_elem_sep void text concode_elem_sep XMLParser append concode_elem_sep XMLParser append concode_elem_sep XMLParser append concode_elem_sep void callText concode_elem_sep XMLParser addListener concode_elem_sep int bufferSize"}
{"code": "void function ( String arg0 ) { for ( ResourceEntity loc0 : getResources ( ) ) { loc0 . updateName ( arg0 ) ; } this . name = arg0 ; }", "nl": "we currently have to ensure , that the names of the resources are updated as well - therefore we have to iterate through all of them and change their name . as soon as all queries are adapted , this is not required anymore and can be removed . we execute this logic in the prepersist state because we need to ensure that we could load the resources lazy if required . concode_field_sep String ALLRESOURCESBYTYPE_QUERY concode_elem_sep Set<FavoriteResourceEntity> favorites concode_elem_sep String fcExternalKey concode_elem_sep Set<ResourceActivationEntity> resourceActivationEntities concode_elem_sep long serialVersionUID concode_elem_sep ReleaseEntity outOfServiceRelease concode_elem_sep Set<ResourceEntity> resources concode_elem_sep Set<TemplateDescriptorEntity> runtimeTemplateDescriptors concode_elem_sep long v concode_elem_sep String fcExternalLink concode_elem_sep String name concode_elem_sep Integer id concode_elem_sep ResourceTypeEntity resourceType concode_field_sep ReleaseEntity getNewestRelease concode_elem_sep void setFcExternalLink concode_elem_sep ReleaseEntity getFirstRelease concode_elem_sep String getFcExternalLink concode_elem_sep String getFcExternalKey concode_elem_sep void setResourceType concode_elem_sep void setFcExternalKey concode_elem_sep String toString concode_elem_sep int compareTo concode_elem_sep SortedSet<ReleaseEntity> getReleases concode_elem_sep boolean isAppServerContainer"}
{"code": "Region function ( ) { return fTagPosition ; }", "nl": "returns the tag position for this element . the method can return null . in this case no tag has been found for this nls element . concode_field_sep Region fTagPosition concode_elem_sep String TAG_POSTFIX concode_elem_sep AccessorClassReference fAccessorClassReference concode_elem_sep boolean fIsEclipseNLS concode_elem_sep int TAG_PREFIX_LENGTH concode_elem_sep String TAG_PREFIX concode_elem_sep int fIndex concode_elem_sep int TAG_POSTFIX_LENGTH concode_elem_sep String fValue concode_elem_sep Region fPosition concode_field_sep String getValue concode_elem_sep Region getPosition concode_elem_sep boolean isEclipseNLS concode_elem_sep boolean hasTag concode_elem_sep void setAccessorClassReference concode_elem_sep AccessorClassReference getAccessorClassReference concode_elem_sep void setValue concode_elem_sep void setTagPosition concode_elem_sep String createTagText concode_elem_sep String getTagText concode_elem_sep String toString"}
{"code": "ValidationContext function ( ) { return new ValidationContext ( ) ; }", "nl": "create an instance of validationcontext concode_field_sep QName _HistoryHeader_QNAME concode_elem_sep QName _ISDVInfo_QNAME concode_elem_sep QName _KeyValuePairList_QNAME concode_elem_sep QName _LocalizedMessage_QNAME concode_elem_sep QName _BusinessException_QNAME concode_elem_sep QName _Message_QNAME concode_elem_sep QName _CallContext_QNAME concode_elem_sep QName _ValidationException_QNAME concode_elem_sep QName _NotFoundException_QNAME concode_elem_sep QName _ValidationContext_QNAME concode_elem_sep QName _TimePeriod_QNAME concode_elem_sep QName _OpenTimePeriod_QNAME concode_elem_sep QName _LocalizedString_QNAME concode_elem_sep QName _KeyValuePair_QNAME concode_elem_sep QName _TechnicalException_QNAME concode_field_sep ISDVInfo createISDVInfo concode_elem_sep JAXBElement<ISDVInfo> createISDVInfo concode_elem_sep ValidationException createValidationException concode_elem_sep JAXBElement<ValidationException> createValidationException concode_elem_sep CallContext createCallContext concode_elem_sep JAXBElement<CallContext> createCallContext concode_elem_sep OpenTimePeriod createOpenTimePeriod concode_elem_sep JAXBElement<OpenTimePeriod> createOpenTimePeriod concode_elem_sep LocalizedMessage createLocalizedMessage concode_elem_sep JAXBElement<LocalizedMessage> createLocalizedMessage concode_elem_sep TechnicalException createTechnicalException concode_elem_sep JAXBElement<TechnicalException> createTechnicalException concode_elem_sep KeyValuePairList createKeyValuePairList concode_elem_sep JAXBElement<KeyValuePairList> createKeyValuePairList concode_elem_sep TimePeriod createTimePeriod concode_elem_sep JAXBElement<TimePeriod> createTimePeriod concode_elem_sep LocalizedString createLocalizedString concode_elem_sep JAXBElement<LocalizedString> createLocalizedString concode_elem_sep HistoryHeader createHistoryHeader concode_elem_sep JAXBElement<HistoryHeader> createHistoryHeader concode_elem_sep KeyValuePair createKeyValuePair concode_elem_sep JAXBElement<KeyValuePair> createKeyValuePair concode_elem_sep BusinessException createBusinessException concode_elem_sep JAXBElement<BusinessException> createBusinessException concode_elem_sep NotFoundException createNotFoundException concode_elem_sep JAXBElement<NotFoundException> createNotFoundException concode_elem_sep Message createMessage concode_elem_sep JAXBElement<Message> createMessage"}
{"code": "boolean function ( Block arg0 ) { if ( arg0 . y + Block . HEIGHT > y ) { if ( arg0 . x < x && arg0 . x + Block . WIDTH + 3 > x ) { arg0 . y = y - Block . HEIGHT ; return true ; } else if ( arg0 . x > x && x + 150 > arg0 . x ) { arg0 . y = y - Block . HEIGHT ; return true ; } } return false ; }", "nl": "checks if the obstacle that is down intersects with the block . concode_field_sep int obstacleSize concode_elem_sep int RESET_POSITION concode_elem_sep int gameWidth concode_elem_sep int obstacleHeigth concode_elem_sep int gameHeight concode_elem_sep boolean isUp concode_elem_sep int x concode_elem_sep int y concode_elem_sep int resetPosition concode_elem_sep int MOVE concode_field_sep void move concode_elem_sep boolean colideDownX concode_elem_sep boolean crashOnObstacle concode_elem_sep void resetObstaclePosition concode_elem_sep boolean colideUpX concode_elem_sep void draw concode_elem_sep boolean colideUp"}
{"code": "void function ( TokenProvider arg0 ) { KrbRuntime . arg0 = arg0 ; }", "nl": "set token provider . concode_field_sep TokenProvider tokenProvider concode_field_sep TokenProvider getTokenProvider"}
{"code": "int function ( ) { return RefactoringStatus . WARNING ; }", "nl": "when condition checking is performed for a refactoring then the condition check is interpreted as failed if the refactoring status severity return from the condition checking operation is equal or greater than the value returned by this method . concode_field_sep IValidationCheckResultQueryFactory fQueryFactory concode_elem_sep String ID_PLUGIN concode_field_sep void stopped concode_elem_sep boolean proceed concode_elem_sep RefactoringContribution getRefactoringContribution concode_elem_sep void internalSetQueryFactory concode_elem_sep IValidationCheckResultQuery create concode_elem_sep IUndoManager getUndoManager concode_elem_sep IRefactoringHistoryService getHistoryService concode_elem_sep IValidationCheckResultQueryFactory getQueryFactory"}
{"code": "Session function ( ) { if ( log . isDebugEnabled ( ) ) { log . debug ( \"srini_string\" ) ; } Session loc0 = getSessionFactory ( ) . getCurrentSession ( ) ; if ( ! loc0 . isOpen ( ) ) { loc0 = getSessionFactory ( ) . openSession ( ) ; } return loc0 ; }", "nl": "returns the current hibernate session . if a session was previously established during the same request the already established instance is returned otherwise a new instance is retriven from the session factory . concode_field_sep SessionFactory sessionFactory concode_elem_sep Configuration configuration concode_elem_sep Log log concode_field_sep void rollback concode_elem_sep void commit concode_elem_sep void begin concode_elem_sep SessionFactory getSessionFactory"}
{"code": "void function ( Description arg0 ) { getChildren ( ) . add ( arg0 ) ; }", "nl": "add description as a child of the receiver . concode_field_sep Annotation[] fAnnotations concode_elem_sep Description EMPTY concode_elem_sep Serializable fUniqueId concode_elem_sep Pattern METHOD_AND_CLASS_NAME_PATTERN concode_elem_sep String fDisplayName concode_elem_sep long serialVersionUID concode_elem_sep Description TEST_MECHANISM concode_elem_sep ArrayList<Description> fChildren concode_elem_sep Class<?> fTestClass concode_field_sep int testCount concode_elem_sep String getMethodName concode_elem_sep boolean isEmpty concode_elem_sep Description childlessCopy concode_elem_sep Collection<Annotation> getAnnotations concode_elem_sep String methodAndClassNamePatternGroupOrDefault concode_elem_sep ArrayList<Description> getChildren concode_elem_sep String getDisplayName concode_elem_sep boolean isTest concode_elem_sep T getAnnotation concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep Class<?> getTestClass concode_elem_sep Description createTestDescription concode_elem_sep Description createTestDescription concode_elem_sep Description createTestDescription concode_elem_sep Description createTestDescription concode_elem_sep Description createSuiteDescription concode_elem_sep Description createSuiteDescription concode_elem_sep Description createSuiteDescription concode_elem_sep boolean isSuite concode_elem_sep String toString concode_elem_sep String getClassName concode_elem_sep String formatDisplayName"}
{"code": "RGB function ( String arg0 ) { if ( arg0 . length ( ) <= 1 ) { throw new IllegalArgumentException ( usageText ) ; } if ( arg0 . charAt ( 0 ) == '#' ) { return parseHtml ( arg0 ) ; } else if ( arg0 . indexOf ( ',' ) != - 1 ) { return parseRGB ( arg0 ) ; } else { throw new IllegalArgumentException ( usageText ) ; } }", "nl": "parse a string concode_field_sep ColorConverter instance concode_elem_sep String usageText concode_field_sep RGB parseRGB concode_elem_sep RGB parseHtml concode_elem_sep int parseNumber concode_elem_sep ColorConverter getInstance concode_elem_sep Object convert"}
{"code": "double function ( ) { return numericalZero ; }", "nl": "see setnumericalzero concode_field_sep double numericalZero concode_elem_sep RealMatrixImpl decompMatrix concode_field_sep RealMatrixImpl getDecomposition concode_elem_sep void setNumericalZero concode_elem_sep double[] solve concode_elem_sep double[] solve concode_elem_sep void decompose concode_elem_sep double getDeterminant"}
{"code": "void function ( VectorXYZ arg0 ) { pos = pos . add ( arg0 ) ; lookAt = lookAt . add ( arg0 ) ; }", "nl": "moves both pos and lookat by the given vector concode_field_sep VectorXYZ pos concode_elem_sep VectorXYZ lookAt concode_elem_sep VectorXYZ up concode_field_sep void moveMapRight concode_elem_sep void setCamera concode_elem_sep void setCamera concode_elem_sep void moveForward concode_elem_sep void move concode_elem_sep void move concode_elem_sep void roll concode_elem_sep VectorXYZ getUp concode_elem_sep void yaw concode_elem_sep void moveMapUp concode_elem_sep void setPos concode_elem_sep void setPos concode_elem_sep void mapPitch concode_elem_sep VectorXYZ getRight concode_elem_sep void setLookAt concode_elem_sep void setLookAt concode_elem_sep VectorXYZ getViewDirection concode_elem_sep VectorXYZ getPos concode_elem_sep void moveRight concode_elem_sep VectorXYZ getLookAt concode_elem_sep void moveMapForward concode_elem_sep String toString concode_elem_sep void pitch concode_elem_sep void rotateY concode_elem_sep void moveUp"}
{"code": "int function ( ) { return values [ values . length - 1 ] ; }", "nl": "get the high value in the range the lookup values . concode_field_sep Label defaultTarget concode_elem_sep int[] values concode_elem_sep Label[] targets concode_field_sep Label defaultTarget concode_elem_sep int lowValue concode_elem_sep boolean hasContiguousValues concode_elem_sep int partition concode_elem_sep int[] values concode_elem_sep void uniq concode_elem_sep void setDefaultTarget concode_elem_sep String toString concode_elem_sep void sort concode_elem_sep Label[] targets concode_elem_sep void quicksort"}
{"code": "Widget function ( Matcher arg0 ) { dbComparisons = 0 ; _attempts = 0 ; return findInShellScope ( arg0 ) ; }", "nl": "find a widget , using the given matcher to determine whether a given widget in the hierarchy used by this widgetfinder is the desired one . concode_field_sep int dbComparisons concode_elem_sep int searchType concode_elem_sep SWTHierarchy hierarchy concode_elem_sep int BFS concode_elem_sep SearchScopeHelper _searchScopeHelper concode_elem_sep List _listeners concode_elem_sep ArrayList list concode_elem_sep int DFS concode_elem_sep int _attempts concode_elem_sep BasicFinder2 DEFAULT concode_field_sep Widget getParent concode_elem_sep Widget getWidgetParent concode_elem_sep Collection getRoots concode_elem_sep Widget findInShellScope concode_elem_sep Collection getWidgets concode_elem_sep void findMatches concode_elem_sep BasicFinder2 getDefault concode_elem_sep Widget findInShellScope0 concode_elem_sep void pause concode_elem_sep boolean contains concode_elem_sep void dbPrintWidgets concode_elem_sep void addExceptionListener concode_elem_sep void informExceptionListeners concode_elem_sep Widget find0 concode_elem_sep void printWidgets concode_elem_sep void dispose concode_elem_sep Hierarchy getHierarchy"}
{"code": "void function ( final String arg0 ) { if ( ! started ) { style = arg0 ; } }", "nl": "sets the `` style '' of kademlia , for example s/k/l / h. concode_field_sep Logger log concode_elem_sep String description concode_elem_sep int clusterIDLength concode_elem_sep String style concode_elem_sep boolean started concode_elem_sep String fileDescr concode_elem_sep String seed concode_elem_sep int BUFFER_CAPACITY concode_elem_sep String filePrefix concode_elem_sep String fileSuffix concode_elem_sep PrintWriter out concode_field_sep void appendClusterID concode_elem_sep void setOutputFilePrefix concode_elem_sep void stopped concode_elem_sep void start concode_elem_sep void appendNewLine concode_elem_sep void started concode_elem_sep void setDescription concode_elem_sep boolean isStarted concode_elem_sep void setOutputFileSuffix concode_elem_sep void setOutputFile concode_elem_sep void appendSeparator concode_elem_sep void setOutputFileDescr concode_elem_sep void stop concode_elem_sep void appendToFile concode_elem_sep void appendToFile concode_elem_sep void appendToFile concode_elem_sep void appendToFile concode_elem_sep void appendToFile concode_elem_sep void setSeed concode_elem_sep String getFileName"}
{"code": "void function ( Interpolator arg0 ) { synchronized ( newInterpolators ) { newInterpolators . addElement ( arg0 ) ; if ( ! isActive ( ) ) start ( ) ; } }", "nl": "dispatches an interpolator for the animation thread . this will launch the animation thread if it is not already active . concode_field_sep Vector newInterpolators concode_elem_sep int sleep concode_elem_sep EventListenerList listenerList concode_elem_sep Vector activeInterpolators concode_elem_sep Thread animationThread concode_elem_sep boolean isAnimating concode_elem_sep Object lock concode_elem_sep ChangeEvent changeEvent concode_field_sep void animateStep concode_elem_sep void setLock concode_elem_sep void removeChangeListener concode_elem_sep void stop concode_elem_sep void fireStateChanged concode_elem_sep void start concode_elem_sep void run concode_elem_sep boolean isActive concode_elem_sep boolean isSynchronous concode_elem_sep void addChangeListener"}
{"code": "UnivPowerSeries < C > function ( ) { return ZERO ; }", "nl": "get the zero element . concode_field_sep UnivPowerSeries<C> ZERO concode_elem_sep String DEFAULT_NAME concode_elem_sep int truncate concode_elem_sep String var concode_elem_sep int DEFAULT_TRUNCATE concode_elem_sep UnivPowerSeries<C> ONE concode_elem_sep RingFactory<C> coFac concode_elem_sep Random random concode_field_sep UnivPowerSeries<C> getTAN concode_elem_sep boolean isField concode_elem_sep boolean isCommutative concode_elem_sep UnivPowerSeries<C> getSIN concode_elem_sep UnivPowerSeries<C> parse concode_elem_sep UnivPowerSeries<C> parse concode_elem_sep UnivPowerSeries<C> fromPolynomial concode_elem_sep java.math.BigInteger characteristic concode_elem_sep UnivPowerSeries<C> getEXP concode_elem_sep UnivPowerSeries<C> random concode_elem_sep UnivPowerSeries<C> random concode_elem_sep UnivPowerSeries<C> random concode_elem_sep UnivPowerSeries<C> random concode_elem_sep UnivPowerSeries<C> random concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep UnivPowerSeries<C> getONE concode_elem_sep UnivPowerSeries<C> getCOS concode_elem_sep UnivPowerSeries<C> fromInteger concode_elem_sep UnivPowerSeries<C> fromInteger concode_elem_sep String toString concode_elem_sep boolean isAssociative concode_elem_sep UnivPowerSeries<C> copy concode_elem_sep UnivPowerSeries<C> fixPoint"}
{"code": "void function ( Integer arg0 ) { this . deptId = arg0 ; }", "nl": "this method was generated by mybatis generator . this method sets the value of the database column company.dept _ id concode_field_sep Integer compId concode_elem_sep Integer deptId concode_field_sep Integer getCompId concode_elem_sep void setCompId concode_elem_sep Integer getDeptId"}
{"code": "void function ( AmwAppServerNodeModel arg0 , ApplicationResolver arg1 ) { if ( arg1 != null ) { arg1 . transform ( templateExceptionHandler , arg0 ) ; } }", "nl": "adds properties of app , as and node to the map concode_field_sep ResourceEntity owner concode_elem_sep String identifier concode_elem_sep ApplicationResolver resolver concode_elem_sep List<AmwFunctionEntity> functions concode_elem_sep List<AppServerRelationProperties> consumed concode_elem_sep List<AppServerRelationProperties> provided concode_elem_sep boolean supportNesting concode_elem_sep Logger log concode_elem_sep SetMultimap<ResourceEntity,GeneratedTemplate> templatesCache concode_elem_sep BasePropertyCollector collector concode_elem_sep AMWTemplateExceptionHandler templateExceptionHandler concode_elem_sep SoftlinkGenerationPackage softlinkPPIGenerationPackage concode_elem_sep ContextEntity context concode_elem_sep Map<String,FreeMarkerProperty> properties concode_field_sep Map<String,Map<String,AmwResourceTemplateModel>> transformRelated concode_elem_sep Map<String,FreeMarkerProperty> getProperties concode_elem_sep List<AppServerRelationProperties> getProvided concode_elem_sep Map<String,Map<String,AmwResourceTemplateModel>> transformRelatedAndStop concode_elem_sep void setTemplates concode_elem_sep Map<String,Map<String,AmwResourceTemplateModel>> transformRelatedInternal concode_elem_sep Map<String,FreeMarkerProperty> collectResourceProperties concode_elem_sep ResourceEntity getOwner concode_elem_sep AmwResourceTemplateModel getPropertiesWithTemplates concode_elem_sep Map<String,FreeMarkerProperty> collectRelationProperties concode_elem_sep void addResolver concode_elem_sep AmwResourceTemplateModel transformModel concode_elem_sep AppServerRelationProperties addProvidedRelation concode_elem_sep void addRelated concode_elem_sep AppServerRelationProperties addConsumedRelation concode_elem_sep void merge concode_elem_sep void setTemplatesCache concode_elem_sep String toString concode_elem_sep List<AppServerRelationProperties> getConsumed concode_elem_sep AppServerRelationProperties addRelation"}
{"code": "Object function ( ) { if ( last == null ) { throw new IllegalStateException ( \"srini_string\" ) ; } return last . getKey ( ) ; }", "nl": "gets the current key , which is the key returned by the last call to next . concode_field_sep Iterator iterator concode_elem_sep Map.Entry last concode_elem_sep Map map concode_elem_sep boolean canRemove concode_field_sep Object next concode_elem_sep Object getValue concode_elem_sep Object setValue concode_elem_sep void reset concode_elem_sep boolean hasNext concode_elem_sep String toString concode_elem_sep void remove"}
{"code": "boolean function ( Class arg0 ) { for ( LoadMetric loc0 : enabledMetrics ) { if ( arg0 . isInstance ( loc0 ) ) { return true ; } } return false ; }", "nl": "checks whether this class is configured to be used . concode_field_sep Set<LoadMetric> enabledMetrics concode_field_sep void deploy concode_elem_sep void undeploy"}
{"code": "GenMatrix < C > function ( C arg0 ) { ArrayList < ArrayList < C >> loc0 = new ArrayList < ArrayList < C >> ( ring . rows ) ; for ( ArrayList < C > loc1 : matrix ) { ArrayList < C > loc2 = new ArrayList < C > ( ring . cols ) ; for ( C loc3 : loc1 ) { C loc4 = loc3 . multiply ( arg0 ) ; loc2 . add ( loc4 ) ; } loc0 . add ( loc2 ) ; } return new GenMatrix < C > ( ring , loc0 ) ; }", "nl": "product of this matrix with scalar . concode_field_sep List<C> val concode_elem_sep Logger logger concode_elem_sep GenMatrixRing<C> ring concode_elem_sep ArrayList<ArrayList<C>> matrix concode_elem_sep int hashValue concode_field_sep GenMatrix<C> leftLinearCombination concode_elem_sep int signum concode_elem_sep boolean isONE concode_elem_sep GenMatrix<C> inverse concode_elem_sep boolean isUnit concode_elem_sep GenMatrix<C> subtract concode_elem_sep GenMatrix<C> gcd concode_elem_sep GenMatrix<C> sum concode_elem_sep GenMatrix<C> linearCombination concode_elem_sep GenMatrix<C> linearCombination concode_elem_sep GenMatrix<C> linearCombination concode_elem_sep int compareTo concode_elem_sep GenMatrix<C>[] egcd concode_elem_sep GenMatrix<C> leftScalarMultiply concode_elem_sep GenMatrix<C> abs concode_elem_sep int hashCode concode_elem_sep GenMatrix<C> negate concode_elem_sep GenMatrix<C> multiplySimple concode_elem_sep boolean equals concode_elem_sep GenMatrix<C> clone concode_elem_sep boolean isZERO concode_elem_sep GenMatrix<C> divide concode_elem_sep String toString concode_elem_sep GenMatrix<C> transpose concode_elem_sep GenMatrix<C> multiply concode_elem_sep GenMatrix<C> remainder"}
{"code": "void function ( String arg0 , Bundle arg1 , RequestListener arg2 , final Object arg3 ) { request ( arg0 , arg1 , \"srini_string\" , arg2 , arg3 ) ; }", "nl": "make a request to the facebook graph api with the given string parameters using an http get default method . see http://developers.facebook.com/docs/api note that this method is asynchronous and the callback will be invoked in a background thread ; operations that affect the ui will need to be posted to the ui thread or an appropriate handler . this method is deprecated . see facebook and com.facebook.request for more info . concode_field_sep Facebook fb concode_field_sep void onFileNotFoundException concode_elem_sep void logout concode_elem_sep void logout concode_elem_sep void onComplete concode_elem_sep void onIOException concode_elem_sep void onMalformedURLException concode_elem_sep void onFacebookError"}
{"code": "void function ( OutputStream arg0 ) { m_outputStream = arg0 ; m_output = XMLOutput . createXMLOutput ( new OutputStreamWriter ( m_outputStream ) ) ; }", "nl": "method setoutputstream . concode_field_sep InputStream m_inputStream concode_elem_sep Exception m_scriptCompilationException concode_elem_sep Log log concode_elem_sep Jelly m_jellyEngine concode_elem_sep XMLOutput m_output concode_elem_sep Script m_script concode_elem_sep OutputStream m_outputStream concode_elem_sep boolean m_scriptCompiled concode_elem_sep String m_errorMsg concode_elem_sep JellyContext m_context concode_field_sep void setErrorMsg concode_elem_sep void setContext concode_elem_sep void compileScriptAndKeep concode_elem_sep void setVariable concode_elem_sep URL resolveURL concode_elem_sep JellyContext getContext concode_elem_sep void registerTagLibrary concode_elem_sep void registerTagLibrary concode_elem_sep boolean execute concode_elem_sep void setScript concode_elem_sep void setScript concode_elem_sep String getErrorMsg"}
{"code": "byte [ ] function ( PrivateKey arg0 , X509Certificate arg1 , AuthPack arg2 ) { byte [ ] loc0 = KrbCodec . encode ( arg2 ) ; byte [ ] loc1 ; try { loc1 = PkiUtil . getSignedData ( arg0 , arg1 , loc0 , ID_PKINIT_AUTHDATA ) ; } catch ( PkiException loc2 ) { throw new KrbException ( \"srini_string\" , loc2 ) ; } return loc1 ; }", "nl": "uses a private key to sign data in a cms signeddata structure and returns the encoded cms signeddata as bytes . ` signedauthpack ' contains a cms type contentinfo encoded according to rfc3852 . the contenttype field of the type contentinfo is id-signeddata 1.2.840.113549.1.7.2 , and the content field is a signeddata . the econtenttype field for the type signeddata is id-pkinit-authdata 1.3.6.1.5.2.3.1 , and the econtent field contains the der encoding of the type authpack . concode_field_sep String ID_PKINIT_AUTHDATA concode_field_sep byte[] getSignedKdcDhKeyInfo concode_elem_sep byte[] getSignedReplyKeyPack"}
{"code": "Transformer function ( Map arg0 ) { if ( arg0 == null ) { return ConstantTransformer . NULL_INSTANCE ; } return new MapTransformer ( arg0 ) ; }", "nl": "factory to create the transformer . if the map is null , a transformer that always returns null is returned . concode_field_sep Map iMap concode_elem_sep long serialVersionUID concode_field_sep Object transform concode_elem_sep Map getMap"}
{"code": "IntListIterator function ( int arg0 ) { return singletonIntList ( arg0 ) . listIterator ( ) ; }", "nl": "returns an unmodifiable intlistiterator containing only the specified element . concode_field_sep IntListIterator EMPTY_INT_LIST_ITERATOR concode_elem_sep IntList EMPTY_INT_LIST concode_elem_sep IntIterator EMPTY_INT_ITERATOR concode_field_sep IntListIterator getEmptyIntListIterator concode_elem_sep IntIterator unmodifiableIntIterator concode_elem_sep IntIterator singletonIntIterator concode_elem_sep IntList getEmptyIntList concode_elem_sep IntIterator getEmptyIntIterator concode_elem_sep IntList unmodifiableIntList concode_elem_sep IntListIterator unmodifiableIntListIterator concode_elem_sep IntList singletonIntList"}
{"code": "Bitmap function ( String arg0 , int arg1 , Map < String , String > arg2 ) { InputStream loc0 = getInputStreamFromUrl ( arg0 , arg1 , arg2 ) ; Bitmap loc1 = BitmapFactory . decodeStream ( loc0 ) ; closeInputStream ( loc0 ) ; return loc1 ; }", "nl": "get bitmap by imageurl concode_field_sep PlaceHolder placeHolder concode_field_sep Drawable bitmapToDrawable concode_elem_sep void closeInputStream concode_elem_sep Bitmap drawableToBitmap concode_elem_sep Bitmap byteToBitmap concode_elem_sep byte[] drawableToByte concode_elem_sep Bitmap scaleImage concode_elem_sep byte[] bitmapToByte concode_elem_sep Bitmap scaleImageTo concode_elem_sep Drawable byteToDrawable concode_elem_sep Drawable getDrawableFromUrl concode_elem_sep Drawable getDrawableFromUrl concode_elem_sep InputStream getInputStreamFromUrl concode_elem_sep InputStream getInputStreamFromUrl"}
{"code": "StandardServiceRegistryBuilder function ( ) { this . autoCloseRegistry = true ; return this ; }", "nl": "see the discussion on #disableautoclose . this method enables the auto-closing . concode_field_sep Map settings concode_elem_sep LoadedConfig aggregatedCfgXml concode_elem_sep List<ProvidedService> providedServices concode_elem_sep ConfigLoader configLoader concode_elem_sep boolean autoCloseRegistry concode_elem_sep String DEFAULT_CFG_RESOURCE_NAME concode_elem_sep List<StandardServiceInitiator> initiators concode_elem_sep BootstrapServiceRegistry bootstrapServiceRegistry concode_field_sep StandardServiceRegistryBuilder disableAutoClose concode_elem_sep List<StandardServiceInitiator> standardInitiatorList concode_elem_sep Map getSettings concode_elem_sep StandardServiceRegistryBuilder applySetting concode_elem_sep void destroy concode_elem_sep StandardServiceRegistryBuilder configure concode_elem_sep StandardServiceRegistryBuilder configure concode_elem_sep StandardServiceRegistryBuilder configure concode_elem_sep StandardServiceRegistryBuilder configure concode_elem_sep StandardServiceRegistryBuilder configure concode_elem_sep StandardServiceRegistryBuilder applySettings concode_elem_sep void applyServiceContributingIntegrators concode_elem_sep StandardServiceRegistryBuilder addService concode_elem_sep StandardServiceRegistry build concode_elem_sep LoadedConfig getAggregatedCfgXml concode_elem_sep StandardServiceRegistryBuilder loadProperties concode_elem_sep StandardServiceRegistryBuilder loadProperties concode_elem_sep BootstrapServiceRegistry getBootstrapServiceRegistry concode_elem_sep void applyServiceContributors concode_elem_sep StandardServiceRegistryBuilder addInitiator"}
{"code": "EntityManagerFactory function ( ) { return emf ; }", "nl": "gets the entity manager factory . concode_field_sep Database instance concode_elem_sep EntityManagerFactory emf concode_field_sep void initInstance concode_elem_sep T getElementById concode_elem_sep List<T> getAll concode_elem_sep T create concode_elem_sep T update concode_elem_sep void delete concode_elem_sep void closeConnection"}
{"code": "boolean function ( ) { String loc0 = entry . get ( KerberosAttribute . KRB5_ACCOUNT_DISABLED_AT ) . getString ( ) ; return Boolean . parseBoolean ( loc0 ) ; }", "nl": "get whether disabled . concode_field_sep Entry entry concode_field_sep PrincipalName getPrincipalName concode_elem_sep int getKdcFlags concode_elem_sep int getKeyVersion concode_elem_sep KerberosTime createKerberosTime concode_elem_sep List<EncryptionKey> getKeys concode_elem_sep KerberosTime getCreatedTime concode_elem_sep KerberosTime getExpireTime concode_elem_sep boolean getLocked"}
{"code": "void function ( String arg0 ) { JOptionPane . showMessageDialog ( null , \"srini_string\" + arg0 , \"srini_string\" , JOptionPane . INFORMATION_MESSAGE ) ; System . exit ( 0 ) ; }", "nl": "this method is used for when a user has clicked on the `` quit '' button on the gui . it handles exiting the game . concode_field_sep int playerNumber concode_elem_sep Rules theRules concode_elem_sep String playerName concode_elem_sep Driver theDriver concode_elem_sep Color playerColor concode_elem_sep Move theMove concode_elem_sep GameplayMediator mediator concode_elem_sep int type concode_field_sep int getNumber concode_elem_sep void setName concode_elem_sep String getName concode_elem_sep void setColor concode_elem_sep int getType concode_elem_sep boolean makeMove concode_elem_sep Color getColor concode_elem_sep String toString"}
{"code": "String function ( ) { if ( lastPathComponent == null ) { int loc0 = url . lastIndexOf ( '/' ) ; lastPathComponent = url . substring ( loc0 + 1 , url . length ( ) ) ; } return lastPathComponent ; }", "nl": "returns the url last path component . concode_field_sep String SCHEME_HTTPS concode_elem_sep String SCHEME_FILE concode_elem_sep String SCHEME_HTTP concode_elem_sep String originUrl concode_elem_sep String applicationUrl concode_elem_sep String lastPathComponent concode_elem_sep String url concode_field_sep String getApplicationUrlImpl concode_elem_sep String getUrl concode_elem_sep String getScheme concode_elem_sep String convertToRelativeUrl concode_elem_sep String getOrigin concode_elem_sep String getResourceBase concode_elem_sep String getPath concode_elem_sep String getApplicationUrl concode_elem_sep String extractOriginImpl concode_elem_sep String getUrlWithoutHash concode_elem_sep String getUrlWithoutHash"}
{"code": "RatTerm function ( int arg0 ) { return ( RatTerm ) underlying_terms . get ( arg0 ) ; }", "nl": "indexing operation . requires : 0 < = index < this.size concode_field_sep Vector underlying_terms concode_elem_sep RatTerm[] terms concode_field_sep void set concode_elem_sep int size concode_elem_sep String printDebug concode_elem_sep boolean equals concode_elem_sep void insert concode_elem_sep String toString concode_elem_sep void addElement concode_elem_sep RatTermVec copy concode_elem_sep void remove"}
{"code": "LocalizedMessage function ( ) { return new LocalizedMessage ( ) ; }", "nl": "create an instance of localizedmessage concode_field_sep QName _HistoryHeader_QNAME concode_elem_sep QName _ISDVInfo_QNAME concode_elem_sep QName _KeyValuePairList_QNAME concode_elem_sep QName _LocalizedMessage_QNAME concode_elem_sep QName _BusinessException_QNAME concode_elem_sep QName _Message_QNAME concode_elem_sep QName _CallContext_QNAME concode_elem_sep QName _ValidationException_QNAME concode_elem_sep QName _NotFoundException_QNAME concode_elem_sep QName _ValidationContext_QNAME concode_elem_sep QName _TimePeriod_QNAME concode_elem_sep QName _OpenTimePeriod_QNAME concode_elem_sep QName _LocalizedString_QNAME concode_elem_sep QName _KeyValuePair_QNAME concode_elem_sep QName _TechnicalException_QNAME concode_field_sep ISDVInfo createISDVInfo concode_elem_sep JAXBElement<ISDVInfo> createISDVInfo concode_elem_sep ValidationException createValidationException concode_elem_sep JAXBElement<ValidationException> createValidationException concode_elem_sep CallContext createCallContext concode_elem_sep JAXBElement<CallContext> createCallContext concode_elem_sep OpenTimePeriod createOpenTimePeriod concode_elem_sep JAXBElement<OpenTimePeriod> createOpenTimePeriod concode_elem_sep TechnicalException createTechnicalException concode_elem_sep JAXBElement<TechnicalException> createTechnicalException concode_elem_sep KeyValuePairList createKeyValuePairList concode_elem_sep JAXBElement<KeyValuePairList> createKeyValuePairList concode_elem_sep TimePeriod createTimePeriod concode_elem_sep JAXBElement<TimePeriod> createTimePeriod concode_elem_sep LocalizedString createLocalizedString concode_elem_sep JAXBElement<LocalizedString> createLocalizedString concode_elem_sep HistoryHeader createHistoryHeader concode_elem_sep JAXBElement<HistoryHeader> createHistoryHeader concode_elem_sep KeyValuePair createKeyValuePair concode_elem_sep JAXBElement<KeyValuePair> createKeyValuePair concode_elem_sep BusinessException createBusinessException concode_elem_sep JAXBElement<BusinessException> createBusinessException concode_elem_sep NotFoundException createNotFoundException concode_elem_sep JAXBElement<NotFoundException> createNotFoundException concode_elem_sep ValidationContext createValidationContext concode_elem_sep JAXBElement<ValidationContext> createValidationContext concode_elem_sep Message createMessage concode_elem_sep JAXBElement<Message> createMessage"}
{"code": "HtmlPipelineContext function ( final List < String > arg0 ) { this . roottags = arg0 ; return this ; }", "nl": "set the root-tags , this matters for margins . by default these are set to < body > and < div > . concode_field_sep Charset charset concode_elem_sep TagProcessorFactory tagFactory concode_elem_sep Map<String,Object> memory concode_elem_sep List<Element> ctn concode_elem_sep LinkProvider linkprovider concode_elem_sep boolean autoBookmark concode_elem_sep boolean acceptUnknown concode_elem_sep List<String> roottags concode_elem_sep String BOOKMARK_TREE concode_elem_sep String LAST_MARGIN_BOTTOM concode_elem_sep Rectangle pageSize concode_elem_sep String resourcesRootPath concode_elem_sep LinkedList<StackKeeper> queue concode_elem_sep CssAppliers cssAppliers concode_elem_sep ImageProvider imageProvider concode_field_sep ImageProvider getImageProvider concode_elem_sep HtmlPipelineContext setTagFactory concode_elem_sep StackKeeper poll concode_elem_sep HtmlPipelineContext setAcceptUnknown concode_elem_sep boolean acceptUnknown concode_elem_sep LinkProvider getLinkProvider concode_elem_sep String getResourcesRootPath concode_elem_sep CssAppliers getCssAppliers concode_elem_sep HtmlPipelineContext charSet concode_elem_sep Charset charSet concode_elem_sep void setLastMarginBottom concode_elem_sep HtmlPipelineContext setImageProvider concode_elem_sep boolean isEmpty concode_elem_sep void setResourcesRootPath concode_elem_sep HtmlPipelineContext setCssApplier concode_elem_sep Map<String,Object> getMemory concode_elem_sep StackKeeper peek concode_elem_sep boolean autoBookmark concode_elem_sep HtmlPipelineContext autoBookmark concode_elem_sep HtmlPipelineContext setLinkProvider concode_elem_sep Float getLastMarginBottom concode_elem_sep Rectangle getPageSize concode_elem_sep List<Element> currentContent concode_elem_sep TagProcessor resolveProcessor concode_elem_sep HtmlPipelineContext clone concode_elem_sep List<String> getRootTags concode_elem_sep void setCssAppliers concode_elem_sep void addFirst concode_elem_sep HtmlPipelineContext setPageSize"}
{"code": "int function ( ) { CriteriaQuery < Long > loc0 = entityManager . getCriteriaBuilder ( ) . createQuery ( Long . class ) ; loc0 . select ( entityManager . getCriteriaBuilder ( ) . count ( loc0 . from ( ReleaseEntity . class ) ) ) ; Long loc1 = entityManager . createQuery ( loc0 ) . getSingleResult ( ) ; return loc1 != null ? loc1 . intValue ( ) : 0 ; }", "nl": "counts the number of releases available . concode_field_sep EntityManager entityManager concode_elem_sep Logger log concode_field_sep List<ReleaseEntity> loadReleaseEntities concode_elem_sep ReleaseEntity getDefaultRelease concode_elem_sep boolean saveReleaseEntity concode_elem_sep ReleaseEntity getById concode_elem_sep List<ResourceEntity> getResourcesForRelease concode_elem_sep List<ReleaseEntity> loadAllReleaseEntities concode_elem_sep ReleaseEntity findByName concode_elem_sep void changeReleaseOfResource concode_elem_sep Order getDefaultOrder concode_elem_sep boolean deleteReleaseEntity"}
{"code": "void function ( final Collection < ? extends T > arg0 , final Collection < ? super T > arg1 , final Comparator < ? super T > arg2 , final int arg3 ) { final List < ? extends T > loc0 = Collections . list ( Collections . enumeration ( arg0 ) ) ; Collections . sort ( loc0 , arg2 ) ; final Iterator < ? extends T > loc1 = loc0 . iterator ( ) ; final int loc2 = arg1 . size ( ) + arg3 ; while ( loc1 . hasNext ( ) && arg1 . size ( ) < loc2 ) { arg1 . add ( loc1 . next ( ) ) ; } }", "nl": "sorts source and adds the first n entries to dest . if source contains less than n entries , all of them are added to dest . if adding an entry to dest does not increase the collection 's size , for example if dest is a set and already contained the inserted contact , an additional entry of source will be added , if available . this guarantees that n new , distinct entries are added to collection dest as long as this can be fulfilled with the contents of source , and as dest does recognise duplicate entries . consequently , this guarantee does not hold for simple lists . both collections may not be null . concode_field_sep PlaceHolder placeHolder concode_field_sep void filter concode_elem_sep void copyNSortedAndFiltered concode_elem_sep void filterMap concode_elem_sep double getQuantile concode_elem_sep void splitMap concode_elem_sep List<T> getRandomPartFrom concode_elem_sep E getRandomEntry concode_elem_sep E getRandomEntry concode_elem_sep void copyUntilFull concode_elem_sep List<Tt> transformList"}
{"code": "Map < Integer , String > function ( ) { return _taskToComponent ; }", "nl": "gets a map from task id to component id . concode_field_sep StormTopology _topology concode_elem_sep String _stormId concode_elem_sep Map<Integer,String> _taskToComponent concode_elem_sep Map<String,List<Integer>> _componentToTasks concode_elem_sep Map _stormConf concode_elem_sep Map<String,Map<String,Fields>> _componentToStreamToFields concode_field_sep int maxTopologyMessageTimeout concode_elem_sep String getComponentId concode_elem_sep Map<String,Map<String,Grouping>> getTargets concode_elem_sep Set<String> getComponentIds concode_elem_sep String getStormId concode_elem_sep Set<String> getComponentStreams concode_elem_sep String toJSONString concode_elem_sep StormTopology getRawTopology concode_elem_sep Fields getComponentOutputFields concode_elem_sep Fields getComponentOutputFields concode_elem_sep List<Integer> getComponentTasks concode_elem_sep ComponentCommon getComponentCommon concode_elem_sep Map<GlobalStreamId,Grouping> getSources"}
{"code": "SaveParticipantDescriptor function ( String arg0 ) { ensureRegistered ( ) ; return fDescriptors . get ( arg0 ) ; }", "nl": "returns the save participant descriptor for the given id or null if no such listener is registered . concode_field_sep IPostSaveListener[] EMPTY_ARRAY concode_elem_sep Map<String,SaveParticipantDescriptor> fDescriptors concode_field_sep SaveParticipantDescriptor[] getSaveParticipantDescriptors concode_elem_sep boolean hasSettingsInScope concode_elem_sep boolean isChangedRegionsRequired concode_elem_sep IPostSaveListener[] getEnabledPostSaveListeners concode_elem_sep IPostSaveListener[] getEnabledPostSaveListeners concode_elem_sep void ensureRegistered concode_elem_sep void dispose concode_elem_sep void reloadDescriptors"}
{"code": "void function ( JOGLTarget arg0 , boolean arg1 ) { }", "nl": "lets the subclass update the target after the initial #filltarget jogltarget . concode_field_sep VectorXYZ cameraPos concode_elem_sep VectorXYZ cameraUp concode_elem_sep VectorXYZ cameraLookAt concode_elem_sep boolean targetNeedsReset concode_elem_sep TerrainElevationData eleData concode_elem_sep Projection projection concode_elem_sep Camera camera concode_elem_sep Configuration config concode_elem_sep MapData map concode_elem_sep JOGLTarget target concode_field_sep void renderTo concode_elem_sep void drawBox concode_elem_sep void fillTarget concode_elem_sep void reset concode_elem_sep void setConversionResults concode_elem_sep void drawBoxAround concode_elem_sep void drawBoxAround concode_elem_sep void setConfiguration concode_elem_sep boolean canBeUsed concode_elem_sep String getDescription concode_elem_sep void drawArrow"}
{"code": "void function ( IOptionChangeEvent arg0 ) { if ( ! fListeneredDisabled ) { for ( IOptionChangeListener loc0 : fListeners ) { loc0 . attributeChanged ( arg0 ) ; } } }", "nl": "notifies all of this option change-listeners of the given event concode_field_sep List<IOptionChangeListener> fListeners concode_elem_sep boolean fListeneredDisabled concode_field_sep void removeChangeListener concode_elem_sep void initializeWithoutListenersFrom concode_elem_sep void initializeFrom concode_elem_sep void addChangeListener"}
{"code": "void function ( ) { releaseMap = null ; upcomingReleaseId = null ; upcomingReleaseDate = null ; }", "nl": "workaround for session scope concode_field_sep long serialVersionUID concode_elem_sep LinkedHashMap<Integer,ReleaseEntity> releaseMap concode_elem_sep ReleaseMgmtService releaseService concode_elem_sep ResourceDependencyResolverService dependencyResolverService concode_elem_sep Date upcomingReleaseDate concode_elem_sep Integer upcomingReleaseId concode_field_sep List<ReleaseEntity> getAllReleases concode_elem_sep Date getUpcomingReleaseDate concode_elem_sep LinkedHashMap<Integer,ReleaseEntity> getReleaseMap concode_elem_sep Integer getUpcomingReleaseId"}
{"code": "void function ( String [ ] arg0 ) { String loc0 ; TextIO . putln ( \"srini_string\" ) ; loc0 = TextIO . getln ( ) ; TextIO . putln ( ) ; TextIO . putln ( \"srini_string\" ) ; printCapitalized ( loc0 ) ; }", "nl": "sole entry point to application , as always . concode_field_sep PlaceHolder placeHolder concode_field_sep void printCapitalized"}
{"code": "Document function ( ) { return xfaForm . getDomDocument ( ) ; }", "nl": "gets document to sign concode_field_sep XfaForm xfaForm concode_elem_sep PdfStamper stamper concode_elem_sep String encoding concode_field_sep String getEncoding concode_elem_sep void createXfaForm concode_elem_sep void setDocument concode_elem_sep void setEncoding"}
{"code": "void function ( PptTopLevel arg0 ) { }", "nl": "make an instance dummyinvariant for this instance of the splitter , if possible on an appropriate slice from ppt . concode_field_sep boolean instantiated concode_elem_sep long serialVersionUID concode_field_sep boolean valid concode_elem_sep boolean instantiated concode_elem_sep String condition concode_elem_sep boolean test concode_elem_sep DummyInvariant getDummyInvariant concode_elem_sep void makeDummyInvariant concode_elem_sep Splitter instantiate"}
{"code": "boolean function ( Integer arg0 ) { return hasResourceConsumableSoftlinkType ( entityManager . find ( ResourceEntity . class , arg0 ) ) ; }", "nl": "returns true if one of the resourcetypes within tree up until root resource type has the same name as one of the comma separated values of the system property ch.puzzle.itc.mobiliar.common.util.configurationservice.configkey #consumable_softlink_resource_types concode_field_sep ReleaseLocator releaseLocator concode_elem_sep EntityManager entityManager concode_elem_sep String WS_PPI_TYPE concode_elem_sep Logger log concode_elem_sep ResourceDependencyResolverService resourceDependencyResolverService concode_elem_sep ResourceRepository resourceRepository concode_elem_sep String WS_CPI_TYPE concode_field_sep List<ResourceEntity> getResourceByGroupName concode_elem_sep ResourceEntity getResourceByNameAndReleaseWithTemplates concode_elem_sep List<ResourceEntity> getAllApplicationsWithResource concode_elem_sep List<ResourceEntity> getResourcesByGroupNameWithRelations concode_elem_sep List<String> extractResourceTypeSystemProperties concode_elem_sep List<ResourceEntity> getBatchJobProvidedResources concode_elem_sep Map<String,String> getAppToAppServerMapping concode_elem_sep boolean hasResourceProvidableSoftlinkType concode_elem_sep boolean hasResourceProvidableSoftlinkType concode_elem_sep ResourceEntity getResourceByGroupNameAndRelease concode_elem_sep boolean isTypeOrHasTypeAsSuperType concode_elem_sep ResourceEntity getResourceByNameAndReleaseWithRelations concode_elem_sep ResourceEntity getResourceWithGroupAndRelatedResources concode_elem_sep List<ResourceEntity> getResourcesByGroupNameWithAllRelationsOrderedByRelease concode_elem_sep ResourceEntity getApplicationServerForApplication concode_elem_sep List<ResourceEntity> getBatchJobConsumedResources"}
{"code": "ConverterSet function ( Converter arg0 , Converter [ ] arg1 ) { Converter [ ] loc0 = iConverters ; int loc1 = loc0 . loc1 ; for ( int loc2 = 0 ; loc2 < loc1 ; loc2 ++ ) { if ( arg0 . equals ( loc0 [ loc2 ] ) ) { return remove ( loc2 , arg1 ) ; } } if ( arg1 != null ) { arg1 [ 0 ] = null ; } return this ; }", "nl": "returns a copy of this set , with the given converter removed . if the converter was not in the set , the original set is returned . concode_field_sep Entry[] iSelectEntries concode_elem_sep Converter[] iConverters concode_elem_sep Class<?> iType concode_elem_sep Converter iConverter concode_field_sep ConverterSet add concode_elem_sep Converter select concode_elem_sep int size concode_elem_sep Converter selectSlow concode_elem_sep void copyInto"}
{"code": "void function ( ) { getMonitor ( ) . waitUntilFinished ( ) ; }", "nl": "ask the monitor to wait until the execution is finished . concode_field_sep IExecutionMonitor monitor concode_elem_sep String DEFAULT_THREAD_NAME concode_field_sep void runFinishing concode_elem_sep IExecutionMonitor getMonitor concode_elem_sep String getTestThreadName concode_elem_sep void exceptionCaught concode_elem_sep TestIdentifier getCurrentTest concode_elem_sep void runStarting concode_elem_sep void exec concode_elem_sep void runFinished"}
{"code": "Complex function ( Complex arg0 ) { if ( arg0 . isNaN ( ) ) { return Complex . NaN ; } double loc0 = arg0 . getReal ( ) ; double loc1 = arg0 . getImaginary ( ) ; return new Complex ( Math . cos ( loc0 ) * MathUtils . cosh ( loc1 ) , - Math . sin ( loc0 ) * MathUtils . sinh ( loc1 ) ) ; }", "nl": "compute the cosine for the given complex argument . concode_field_sep PlaceHolder placeHolder concode_field_sep Complex tan concode_elem_sep Complex sqrt1z concode_elem_sep Complex log concode_elem_sep Complex sinh concode_elem_sep Complex acos concode_elem_sep Complex atan concode_elem_sep Complex cosh concode_elem_sep Complex tanh concode_elem_sep Complex sqrt concode_elem_sep Complex pow concode_elem_sep Complex sin concode_elem_sep Complex asin concode_elem_sep Complex exp"}
{"code": "String function ( String arg0 ) { return arg0 . substring ( 1 , arg0 . length ( ) - 1 ) ; }", "nl": "currently the server responds with an json object wrapped in a json array . we need to strip the array . concode_field_sep String POST_VIDEO_DATA concode_elem_sep String GET_PROJECT_DATA concode_elem_sep String GET_VIDEO_DATA concode_elem_sep String host concode_elem_sep String POST_PROJECT_DATA concode_field_sep String downloadVideo concode_elem_sep VideoData downloadVideoData concode_elem_sep String uploadProjectData concode_elem_sep JSONObject uploadVideoData concode_elem_sep void uploadVideo concode_elem_sep ProjectData downloadProjectData concode_elem_sep String executeMethodWithJSONResponse"}
{"code": "String function ( File arg0 ) { return escapePath ( Objects . requireNonNull ( arg0 , \"srini_string\" ) . getAbsolutePath ( ) ) ; }", "nl": "returns escaped absolute path of given file instance . concode_field_sep PlaceHolder placeHolder concode_field_sep String escapePath"}
{"code": "T function ( String arg0 ) { return ( T ) canvas . script ( type ( \"srini_string\" ) ) . cdata ( ) . write ( arg0 , NO_ESCAPE ) . _cdata ( ) . _script ( ) ; }", "nl": "write the script tag with code content . no html escaping applied . w3c has recommended that all scripts within an xhtml document be escaped using cdata sections . concode_field_sep T canvas concode_field_sep T stylesheet concode_elem_sep T favicon concode_elem_sep T javascript concode_elem_sep T cdata"}
{"code": "void function ( ) { if ( head == null ) { return ; } ManagedEntity loc0 = head ; while ( loc0 != null ) { loc0 . $$_hibernate_getEntityEntry ( ) . setLockMode ( LockMode . NONE ) ; loc0 = loc0 . $$_hibernate_getNextManagedEntity ( ) ; } }", "nl": "down-grade locks to none for all entities in this context concode_field_sep ManagedEntity head concode_elem_sep boolean dirty concode_elem_sep ManagedEntity next concode_elem_sep IdentityHashMap<Object,ManagedEntity> nonEnhancedEntityXref concode_elem_sep Object entityInstance concode_elem_sep ManagedEntity previous concode_elem_sep ManagedEntity tail concode_elem_sep Map.Entry<Object,EntityEntry>[] reentrantSafeEntries concode_elem_sep int count concode_elem_sep Logger log concode_elem_sep EntityEntry entityEntry concode_elem_sep Object entity concode_field_sep ManagedEntity $$_hibernate_getNextManagedEntity concode_elem_sep Object getKey concode_elem_sep Map.Entry<Object,EntityEntry>[] reentrantSafeEntityEntries concode_elem_sep int getNumberOfManagedEntities concode_elem_sep void $$_hibernate_setNextManagedEntity concode_elem_sep void clear concode_elem_sep ManagedEntity $$_hibernate_getPreviousManagedEntity concode_elem_sep EntityEntry removeEntityEntry concode_elem_sep Object getEntity concode_elem_sep Object getEntity concode_elem_sep void $$_hibernate_setPreviousManagedEntity concode_elem_sep void $$_hibernate_setEntityEntry concode_elem_sep void serialize concode_elem_sep EntityEntry getValue concode_elem_sep EntityEntry getEntityEntry concode_elem_sep EntityEntry getEntityEntry concode_elem_sep EntityEntry getEntityEntry concode_elem_sep void addEntityEntry concode_elem_sep Object $$_hibernate_getEntityInstance concode_elem_sep EntityEntry $$_hibernate_getEntityEntry concode_elem_sep EntityEntry setValue concode_elem_sep boolean hasEntityEntry concode_elem_sep EntityEntryContext deserialize"}
{"code": "Object function ( UIRunnable arg0 , IUIContext arg1 ) { start ( ) ; try { Object loc0 = arg0 . runWithResult ( ) ; arg1 . wait ( TransactionCompleteCondition . forTransaction ( this ) , TRANSACTION_TIMEOUT ) ; return loc0 ; } finally { stop ( ) ; } }", "nl": "run this runnable as a transaction . concode_field_sep StackListener stackListener concode_elem_sep CommandStackTransaction UNCHECKED_TRANSACTION concode_elem_sep CommandStack stack concode_elem_sep List<Object> commands concode_elem_sep long TRANSACTION_TIMEOUT concode_elem_sep boolean started concode_field_sep boolean addEvent concode_elem_sep boolean containsUnfinishedCommmands concode_elem_sep void stop concode_elem_sep void stop concode_elem_sep CommandStackTransaction forStack concode_elem_sep boolean removeEvent concode_elem_sep void stackChanged concode_elem_sep CommandStackTransaction start concode_elem_sep CommandStackTransaction start concode_elem_sep CommandStackTransaction forActiveEditor concode_elem_sep boolean isStarted concode_elem_sep boolean isComplete concode_elem_sep boolean isComplete"}
{"code": "void function ( Buffer arg0 ) { this . offset = arg0 . offset ; this . length = arg0 . length ; this . data = copy ( arg0 . data , this . data ) ; this . header = copy ( arg0 . header , this . header ) ; }", "nl": "sets data , offset , length and header of this buffer to that buffer . note that this method creates copies of the data and header , so that these fields in that buffer can be discarded without affecting the contents of this buffer . fixme - this method does not always create a copy !! concode_field_sep Rational timeStamp concode_elem_sep long sequenceNumber concode_elem_sep EnumSet<BufferFlag> flags concode_elem_sep int NOT_SPECIFIED concode_elem_sep Object data concode_elem_sep int offset concode_elem_sep int length concode_elem_sep Format format concode_elem_sep Object header concode_elem_sep int sampleCount concode_elem_sep int track concode_elem_sep Rational sampleDuration concode_field_sep void setMetaTo concode_elem_sep void clearFlag concode_elem_sep boolean isFlag concode_elem_sep void setFlag concode_elem_sep void setFlag concode_elem_sep void clearFlags concode_elem_sep Object copy concode_elem_sep void setFlagsTo concode_elem_sep void setFlagsTo"}
{"code": "String function ( String arg0 ) { if ( arg0 == null || arg0 . isEmpty ( ) ) return EMPTY_STRING ; return regularExpproperties . getProperty ( arg0 ) ; }", "nl": "this method fetches the regular expression value of the key that you are providing . the regular expressions are stored in the regularexp.properties file . concode_field_sep String EMPTY_STRING concode_elem_sep String regularExpPropertyFileLocation concode_elem_sep Properties messagesProperties concode_elem_sep Properties regularExpproperties concode_elem_sep String messagePropertyFileLocation concode_field_sep String getMessageValue"}
{"code": "void function ( final String arg0 , final String ... arg1 ) { for ( String loc0 : arg1 ) { addProcessor ( loc0 , arg0 ) ; } }", "nl": "add one tag processor that handles multiple tags . concode_field_sep TagProcessor proc concode_elem_sep String className concode_elem_sep Map<String,FactoryObject> map concode_field_sep TagProcessor getProcessor concode_elem_sep TagProcessor getProcessor concode_elem_sep TagProcessor load concode_elem_sep TagProcessor load concode_elem_sep void removeProcessor concode_elem_sep String getClassName"}
{"code": "boolean function ( T arg0 , T arg1 ) { return arg0 == arg1 ; }", "nl": "compares object references for equality . concode_field_sep PlaceHolder placeHolder concode_field_sep int computeHashCode"}
{"code": "boolean function ( final K arg0 , final V arg1 , final boolean arg2 ) { if ( ! arg2 && kSmallest . containsKey ( arg0 ) ) { return false ; } return put ( arg0 , arg1 ) ; }", "nl": "puts the given key and value into this map according to the contract of #put object , object except that the value of an existing key mayonly be updated if allowupdate = true . concode_field_sep SortedMap<K,V> kSmallest concode_elem_sep int maxSize concode_field_sep boolean containsKey concode_elem_sep Collection<V> values concode_elem_sep void clear concode_elem_sep boolean isInRange concode_elem_sep V remove concode_elem_sep boolean containsValue concode_elem_sep K getMinKey concode_elem_sep K getMaxKey concode_elem_sep int size concode_elem_sep K firstKey concode_elem_sep void putAll concode_elem_sep void putAll concode_elem_sep void putAll concode_elem_sep void putAll concode_elem_sep void putAll concode_elem_sep V get concode_elem_sep void setAllValues concode_elem_sep K lastKey concode_elem_sep String toString concode_elem_sep Set<K> keySet"}
{"code": "void function ( Element arg0 , Iterator arg1 ) { while ( arg1 . hasNext ( ) ) { final Object loc0 = arg1 . next ( ) ; if ( loc0 instanceof Column ) { addColumn ( arg0 , ( Column ) loc0 ) ; } else if ( loc0 instanceof Formula ) { addFormula ( arg0 , ( Formula ) loc0 ) ; } } }", "nl": "adds all column or formula elements . concode_field_sep PlaceHolder placeHolder concode_field_sep Element addNativelyGeneratedId concode_elem_sep Element addColumn concode_elem_sep Element addColumn concode_elem_sep void addColumn concode_elem_sep void addColumns concode_elem_sep String getModifiedFlagPropertyName concode_elem_sep Element createEntityCommon concode_elem_sep Element addOrModifyColumn concode_elem_sep Element addProperty concode_elem_sep Element addProperty concode_elem_sep Element createEntity concode_elem_sep Element createSubclassEntity concode_elem_sep void changeNamesInColumnElement concode_elem_sep void prefixNamesInPropertyElement concode_elem_sep Element addModifiedFlagProperty concode_elem_sep void addFormula concode_elem_sep ColumnNameIterator getColumnNameIterator concode_elem_sep ColumnNameIterator getColumnNameIterator concode_elem_sep Element createJoin concode_elem_sep void addOrModifyAttribute"}
{"code": "void function ( PrintWriter arg0 , String arg1 ) { if ( arg1 != null ) { arg0 . println ( arg1 ) ; } }", "nl": "print the message for a log entry to the specified file concode_field_sep ILog sysOutLog concode_elem_sep String PRODUCT_ID concode_elem_sep PrintWriter sysOut concode_elem_sep ILog log concode_field_sep void setLog concode_elem_sep void printLogObject concode_elem_sep void removeLogListener concode_elem_sep void log concode_elem_sep void log concode_elem_sep void log concode_elem_sep void log concode_elem_sep void log concode_elem_sep void logNoHeader concode_elem_sep void logStackTrace concode_elem_sep void printLogStatus concode_elem_sep IStatus createLogStatus concode_elem_sep void printLog concode_elem_sep void close concode_elem_sep void addLogListener concode_elem_sep org.osgi.framework.Bundle getBundle"}
{"code": "Omit function ( ) { return omit ; }", "nl": "gets the value of the omit property . concode_field_sep Keepalive keepalive concode_elem_sep Omit omit concode_field_sep void setOmit concode_elem_sep void setKeepalive concode_elem_sep Keepalive getKeepalive"}
{"code": "void function ( PrintStream arg0 ) { StackTraceElement [ ] loc0 = Thread . currentThread ( ) . getStackTrace ( ) ; String loc1 = StringUtil . arrayToString ( loc0 , \"srini_string\" ) ; arg0 . println ( loc1 ) ; }", "nl": "prints out the current thread stack to the given stream . concode_field_sep ExceptionUtil instance concode_field_sep ExceptionUtil instance"}
{"code": "String function ( ) { return name ; }", "nl": "the vm name of the class . concode_field_sep String name concode_elem_sep boolean[] probes concode_elem_sep long id concode_field_sep void merge concode_elem_sep void merge concode_elem_sep boolean[] getProbes concode_elem_sep void reset concode_elem_sep long getId concode_elem_sep String toString concode_elem_sep void assertCompatibility"}
{"code": "Logger function ( ) { if ( logger == null ) { logger = Logger . getLogger ( name ) ; } return ( this . logger ) ; }", "nl": "return the native logger instance we are using . concode_field_sep String name concode_elem_sep boolean is12 concode_elem_sep Logger logger concode_elem_sep String FQCN concode_field_sep void warn concode_elem_sep void warn concode_elem_sep void trace concode_elem_sep void trace concode_elem_sep void debug concode_elem_sep void debug concode_elem_sep boolean isInfoEnabled concode_elem_sep boolean isErrorEnabled concode_elem_sep boolean isTraceEnabled concode_elem_sep boolean isWarnEnabled concode_elem_sep boolean isDebugEnabled concode_elem_sep void error concode_elem_sep void error concode_elem_sep boolean isFatalEnabled concode_elem_sep void fatal concode_elem_sep void fatal concode_elem_sep void info concode_elem_sep void info"}
{"code": "int function ( ) { return comparatorChain . size ( ) ; }", "nl": "number of comparators in the current comparatorchain . concode_field_sep BitSet orderingBits concode_elem_sep List comparatorChain concode_elem_sep boolean isLocked concode_elem_sep long serialVersionUID concode_field_sep int compare concode_elem_sep void checkLocked concode_elem_sep void setComparator concode_elem_sep void setComparator concode_elem_sep void setForwardSort concode_elem_sep int hashCode concode_elem_sep void setReverseSort concode_elem_sep boolean isLocked concode_elem_sep boolean equals concode_elem_sep void checkChainIntegrity concode_elem_sep void addComparator concode_elem_sep void addComparator"}
{"code": "Iterable < ? extends Object > function ( Object arg0 ) { if ( isArray ( arg0 ) ) return ( ( Iterable ) arg0 ) ; else throw new JsonPathException ( \"srini_string\" + arg0 != null ? arg0 . getClass ( ) . getName ( ) : \"srini_string\" ) ; }", "nl": "converts given array to an iterable concode_field_sep PlaceHolder placeHolder concode_field_sep Object getMapValue concode_elem_sep void setProperty concode_elem_sep Collection<String> getPropertyKeys concode_elem_sep int length concode_elem_sep boolean isArray concode_elem_sep Object getArrayIndex concode_elem_sep Object getArrayIndex concode_elem_sep void setArrayIndex concode_elem_sep void removeProperty concode_elem_sep boolean isMap concode_elem_sep Object unwrap"}
{"code": "BigDecimal function ( ) { return ZERO ; }", "nl": "get the zero element . concode_field_sep java.math.BigDecimal val concode_elem_sep int DEFAULT_PRECISION concode_elem_sep BigDecimal ZERO concode_elem_sep MathContext DEFAULT_CONTEXT concode_elem_sep MathContext context concode_elem_sep BigDecimal ONE concode_elem_sep Random random concode_field_sep boolean isField concode_elem_sep boolean isCommutative concode_elem_sep BigDecimal gcd concode_elem_sep BigDecimal sum concode_elem_sep int compareTo concode_elem_sep java.math.BigInteger characteristic concode_elem_sep BigDecimal random concode_elem_sep BigDecimal random concode_elem_sep BigDecimal random concode_elem_sep BigDecimal random concode_elem_sep int hashCode concode_elem_sep BigDecimal divide concode_elem_sep BigDecimal copy concode_elem_sep BigDecimal multiply concode_elem_sep int signum concode_elem_sep boolean isONE concode_elem_sep BigDecimal inverse concode_elem_sep BigDecimal valueOf concode_elem_sep BigDecimal valueOf concode_elem_sep boolean isUnit concode_elem_sep BigDecimal subtract concode_elem_sep BigDecimal parse concode_elem_sep BigDecimal parse concode_elem_sep BigDecimal[] egcd concode_elem_sep BigDecimal abs concode_elem_sep BigDecimal[] divideAndRemainder concode_elem_sep BigDecimal negate concode_elem_sep boolean equals concode_elem_sep BigDecimal clone concode_elem_sep BigDecimal getONE concode_elem_sep BigDecimal fromInteger concode_elem_sep BigDecimal fromInteger concode_elem_sep boolean isZERO concode_elem_sep boolean isAssociative concode_elem_sep String toString concode_elem_sep BigDecimal remainder"}
{"code": "String function ( ) { return name ; }", "nl": "retrieve the name of the team concode_field_sep Player[] players concode_elem_sep String name concode_field_sep int hashCode concode_elem_sep boolean isValid concode_elem_sep boolean equals concode_elem_sep void addTeamToNotPlayedLists concode_elem_sep String toString concode_elem_sep Player[] getPlayers"}
{"code": "UnivPowerSeries < C > function ( ) { return fixPoint ( new PowerSeriesMap < C > ( ) { public UnivPowerSeries < C > map ( UnivPowerSeries < C > arg0 ) { return arg0 . negate ( ) . integrate ( coFac . getONE ( ) ) . integrate ( coFac . getZERO ( ) ) ; } } ) ; }", "nl": "get the power series of the sinus function . concode_field_sep UnivPowerSeries<C> ZERO concode_elem_sep String DEFAULT_NAME concode_elem_sep int truncate concode_elem_sep String var concode_elem_sep int DEFAULT_TRUNCATE concode_elem_sep UnivPowerSeries<C> ONE concode_elem_sep RingFactory<C> coFac concode_elem_sep Random random concode_field_sep UnivPowerSeries<C> getTAN concode_elem_sep boolean isField concode_elem_sep boolean isCommutative concode_elem_sep UnivPowerSeries<C> parse concode_elem_sep UnivPowerSeries<C> parse concode_elem_sep UnivPowerSeries<C> fromPolynomial concode_elem_sep java.math.BigInteger characteristic concode_elem_sep UnivPowerSeries<C> getEXP concode_elem_sep UnivPowerSeries<C> random concode_elem_sep UnivPowerSeries<C> random concode_elem_sep UnivPowerSeries<C> random concode_elem_sep UnivPowerSeries<C> random concode_elem_sep UnivPowerSeries<C> random concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep UnivPowerSeries<C> getONE concode_elem_sep UnivPowerSeries<C> getZERO concode_elem_sep UnivPowerSeries<C> getCOS concode_elem_sep UnivPowerSeries<C> fromInteger concode_elem_sep UnivPowerSeries<C> fromInteger concode_elem_sep String toString concode_elem_sep boolean isAssociative concode_elem_sep UnivPowerSeries<C> copy concode_elem_sep UnivPowerSeries<C> fixPoint"}
{"code": "DHTObject function ( final KademliaOverlayKey arg0 ) { final KademliaIndexEntry loc0 = index . get ( arg0 ) ; if ( loc0 == null ) { return null ; } else if ( loc0 . hasExpired ( ) ) { index . remove ( arg0 ) ; return null ; } return loc0 . getValue ( ) ; }", "nl": "looks up the dhtobject associated with key in the local database . concode_field_sep Map<KademliaOverlayKey,KademliaIndexEntry> index concode_elem_sep ComponentsConfig config concode_field_sep void refreshIndex concode_elem_sep void putInitialDataItem concode_elem_sep Map<KademliaOverlayKey,DHTObject> getEntries concode_elem_sep void put concode_elem_sep Map<KademliaOverlayKey,DHTObject> getEntriesToRepublish"}
{"code": "byte [ ] function ( ) { return hash ; }", "nl": "gets the sha-1 hash of the completed piece as a byte array concode_field_sep TorrentFilePiecesState state concode_elem_sep BitSet slices concode_elem_sep BitSet loadingSlices concode_elem_sep int maxSlices concode_elem_sep int size concode_elem_sep byte[] data concode_elem_sep TimerTask[] loadingTasks concode_elem_sep int SLICE_SIZE concode_elem_sep int index concode_elem_sep byte[] hash concode_elem_sep Timer loadingTimer concode_field_sep void putSlice concode_elem_sep int getSize concode_elem_sep TorrentFilePiecesState getState concode_elem_sep int getBeginOfSlice concode_elem_sep int getIndex concode_elem_sep void clearSlices concode_elem_sep void setData concode_elem_sep int getLengthOfSlice concode_elem_sep int getNextSlice concode_elem_sep int getNextSlice concode_elem_sep void setState concode_elem_sep ByteBuffer getByteBuffer concode_elem_sep boolean isLoadingSlices"}
{"code": "void function ( ) { for ( int loc0 = 0 ; loc0 < valid . size ( ) ; loc0 ++ ) { valid . set ( loc0 , false ) ; } erased = true ; }", "nl": "erase the whole line concode_field_sep String inlineMarkupDelimiters concode_elem_sep int sectionLevel concode_elem_sep boolean erased concode_elem_sep boolean inBlock concode_elem_sep boolean listStart concode_elem_sep List<Boolean> valid concode_elem_sep char ESCAPED_CHARACTER_VALUE concode_elem_sep List<Integer> offsets concode_elem_sep List<Character> characters concode_elem_sep String text concode_elem_sep List<Boolean> escaped concode_elem_sep int listLevel concode_elem_sep int lineNo concode_elem_sep boolean allSameCharacter concode_field_sep void setListStart concode_elem_sep boolean isListStart concode_elem_sep String getText concode_elem_sep boolean isValid concode_elem_sep int getOffset concode_elem_sep int length concode_elem_sep boolean isEmpty concode_elem_sep void eraseWithStyle concode_elem_sep boolean isAllSameCharacter concode_elem_sep void setSectionLevel concode_elem_sep void setInBlock concode_elem_sep boolean isErased concode_elem_sep int getSectionLevel concode_elem_sep int eraseEnclosure concode_elem_sep int getListLevel concode_elem_sep int getLineNo concode_elem_sep boolean isInBlock concode_elem_sep String toString concode_elem_sep char rawCharAt concode_elem_sep void setListLevel concode_elem_sep char charAt concode_elem_sep char charAt concode_elem_sep boolean startsWith"}
{"code": "Rectangle function ( TabItem arg0 ) { Rectangle loc0 = MacExt . getTabItemBounds ( arg0 ) ; return loc0 ; }", "nl": "carbon concode_field_sep MacExtensions MacExt concode_field_sep Rectangle win32_getBounds concode_elem_sep Rectangle win32_getBounds concode_elem_sep MenuItem[] getItems concode_elem_sep Menu[] getMenus concode_elem_sep Menu[] getMenus concode_elem_sep boolean isMacAccessibilityDisabled concode_elem_sep boolean parentIsControl concode_elem_sep void gtk_getBounds concode_elem_sep Rectangle gtk_getBounds concode_elem_sep Rectangle gtk_getBounds concode_elem_sep boolean isSubMenu concode_elem_sep Rectangle motif_getBounds concode_elem_sep Rectangle motif_getBounds concode_elem_sep Rectangle getBounds concode_elem_sep Rectangle getBounds concode_elem_sep Rectangle getBounds concode_elem_sep Rectangle getBounds concode_elem_sep Rectangle getBounds concode_elem_sep Rectangle getBounds concode_elem_sep Rectangle getBounds concode_elem_sep Rectangle getBounds concode_elem_sep Rectangle getBounds concode_elem_sep Rectangle getBounds concode_elem_sep Rectangle getBounds concode_elem_sep Rectangle getBounds concode_elem_sep int SendMessage concode_elem_sep int SendMessage"}
{"code": "RomanNumeralGenerator function ( ) { return romanNumeralGenerator ; }", "nl": "getter for the roman number generator instance . concode_field_sep RomanNumeralGenerator romanNumeralGenerator concode_field_sep void start concode_elem_sep void main concode_elem_sep void setRomanNumeralGenerator"}
{"code": "void function ( ) { event = new StatisticGenerationEvent ( this ) ; event . writerStarted ( ) ; event . scheduleImmediatly ( ) ; receivedBytes = 0 ; sentBytes = 0 ; receivedMsg = 0 ; sentMsg = 0 ; }", "nl": "starts the analyzer which starts the statisticgernerationevent concode_field_sep long receivedBytes concode_elem_sep int sentMsg concode_elem_sep int receivedMsg concode_elem_sep StatisticGenerationEvent event concode_elem_sep long sentBytes concode_elem_sep Logger log concode_field_sep double[] getSentBytes concode_elem_sep void netMsgReceive concode_elem_sep void addReceivedMsg concode_elem_sep void stop concode_elem_sep double[] getSentMsg concode_elem_sep double[] getReceivedMsg concode_elem_sep void netMsgSend concode_elem_sep void netMsgDrop concode_elem_sep double[] getReceivedBytes concode_elem_sep void addSentMsg"}
{"code": "void function ( URL arg0 , ImageRegistry arg1 ) { this . iconBaseURL = arg0 ; this . imageRegistry = arg1 ; }", "nl": "initializes this image manager . nothing happens if this method is invoked after a previous initialization . this method is not supposed to be invoked more than once . concode_field_sep String T_LCL concode_elem_sep String T_TOOL concode_elem_sep URL iconBaseURL concode_elem_sep ImageRegistry imageRegistry concode_elem_sep String T_OBJ concode_elem_sep String T_VIEW concode_elem_sep String T_OVR concode_elem_sep boolean imagesWereLoaded concode_elem_sep String T_WIZBAN concode_field_sep ImageDescriptor add concode_elem_sep ImageDescriptor add concode_elem_sep boolean add concode_elem_sep URL makeIconFileURL concode_elem_sep void setImageDescriptors concode_elem_sep ImageDescriptor createImageDescriptor concode_elem_sep void checkImages concode_elem_sep void addImages concode_elem_sep ImageDescriptor getImageDescriptor concode_elem_sep ImageDescriptor getImageDescriptor concode_elem_sep Image getImage concode_elem_sep Image getImage"}
{"code": "int function ( IWorkingSet arg0 , IWorkingSet arg1 ) { if ( fIsOtherWorkingSetOnTop && IWorkingSetIDs . OTHERS . equals ( arg0 . getId ( ) ) ) return - 1 ; if ( fIsOtherWorkingSetOnTop && IWorkingSetIDs . OTHERS . equals ( arg1 . getId ( ) ) ) return 1 ; return fCollator . compare ( arg0 . getLabel ( ) , arg1 . getLabel ( ) ) ; }", "nl": "returns -1 if the first argument is the default working set , 1 if the second argument is the default working set and if the boolean fisotherworkingsetontop is set , to keep the default working set on top while sorting . concode_field_sep boolean fIsOtherWorkingSetOnTop concode_elem_sep Collator fCollator concode_field_sep placeholderType placeHolder"}
{"code": "void function ( int arg0 ) { int loc0 = doEval ( arg0 ) ; if ( loc0 >= start && loc0 < end ) { OutgoingRecordBatch loc1 = outgoingBatches . get ( loc0 - start ) ; loc1 . copy ( arg0 ) ; } }", "nl": "helper method to copy data based on partition concode_field_sep boolean dropAll concode_elem_sep RecordBatch incoming concode_elem_sep int DEFAULT_RECORD_BATCH_SIZE concode_elem_sep int outgoingRecordBatchSize concode_elem_sep int totalRecords concode_elem_sep org.slf4j.Logger logger concode_elem_sep int recordCount concode_elem_sep int start concode_elem_sep SelectionVector2 sv2 concode_elem_sep HashPartitionSender operator concode_elem_sep SelectionVector4 sv4 concode_elem_sep BufferAllocator allocator concode_elem_sep OperatorStats stats concode_elem_sep boolean isLast concode_elem_sep FragmentContext context concode_elem_sep int end concode_elem_sep List<OutgoingRecordBatch> outgoingBatches concode_elem_sep VectorContainer vectorContainer concode_elem_sep AccountingDataTunnel tunnel concode_elem_sep int oppositeMinorFragmentId concode_field_sep OperatorStats getStats concode_elem_sep void initializeBatch concode_elem_sep List<? extends PartitionOutgoingBatch> getOutgoingBatches concode_elem_sep Iterator<VectorWrapper<?>> iterator concode_elem_sep void setIsLast concode_elem_sep void flush concode_elem_sep int getRecordCount concode_elem_sep void resetBatch concode_elem_sep long getTotalRecords concode_elem_sep void copy concode_elem_sep int doEval concode_elem_sep void doEval concode_elem_sep WritableBatch getWritableBatch concode_elem_sep void clear concode_elem_sep void clear concode_elem_sep void doSetup concode_elem_sep void doSetup concode_elem_sep VectorWrapper<?> getValueAccessorById concode_elem_sep PartitionOutgoingBatch getOutgoingBatch concode_elem_sep BatchSchema getSchema concode_elem_sep void partitionBatch concode_elem_sep void allocateOutgoingRecordBatch concode_elem_sep SelectionVector4 getSelectionVector4 concode_elem_sep SelectionVector2 getSelectionVector2 concode_elem_sep TypedFieldId getValueVectorId concode_elem_sep void setup concode_elem_sep void flushOutgoingBatches concode_elem_sep void terminate concode_elem_sep void updateStats"}
{"code": "void function ( final LocalVariable arg0 ) { this . returnAddress = arg0 ; }", "nl": "sets the address stored in a localvariable to which this subroutine will return once it is finished . concode_field_sep Block entry concode_elem_sep Block exit concode_elem_sep ArrayList paths concode_elem_sep FlowGraph graph concode_elem_sep LocalVariable returnAddress concode_field_sep int numPaths concode_elem_sep void setExit concode_elem_sep FlowGraph graph concode_elem_sep void addPath concode_elem_sep LocalVariable returnAddress concode_elem_sep void removePathsContaining concode_elem_sep void removePath concode_elem_sep Block entry concode_elem_sep Block exit concode_elem_sep void print concode_elem_sep Block pathTarget concode_elem_sep Block pathSource concode_elem_sep Collection paths concode_elem_sep String toString concode_elem_sep void removeAllPaths concode_elem_sep void setEntry"}
{"code": "boolean function ( ) { return certification ; }", "nl": "getter to find out if the signature is a certification signature . concode_field_sep boolean certification concode_elem_sep boolean fillInAllowed concode_elem_sep boolean annotationsAllowed concode_elem_sep PdfName action concode_elem_sep PdfArray fields concode_elem_sep List<FieldLock> fieldLocks concode_field_sep List<FieldLock> getFieldLocks concode_elem_sep PdfArray getFields concode_elem_sep boolean isFillInAllowed concode_elem_sep PdfName getAction concode_elem_sep String toString concode_elem_sep boolean isAnnotationsAllowed"}
{"code": "void function ( final Cookie [ ] arg0 ) { if ( arg0 != null ) { for ( final Cookie loc0 : arg0 ) { this . addCookie ( loc0 ) ; } } }", "nl": "adds an array of cookie http cookies . cookies are added individually and in the given array order . if any of the given cookies has already expired it will not be added , but existing values will still be removed . concode_field_sep long serialVersionUID concode_elem_sep TreeSet<Cookie> cookies concode_field_sep void addCookie concode_elem_sep boolean clearExpired concode_elem_sep List<Cookie> getCookies concode_elem_sep void clear concode_elem_sep String toString"}
{"code": "void function ( Schema arg0 , Object arg1 , Encoder arg2 ) { writeString ( arg1 , arg2 ) ; }", "nl": "called to write a string . may be overridden for alternate string representations . concode_field_sep GenericData data concode_elem_sep Schema root concode_field_sep NullPointerException npe concode_elem_sep void writeWithoutConversion concode_elem_sep Iterator<? extends Object> getArrayElements concode_elem_sep void writeFixed concode_elem_sep void writeEnum concode_elem_sep Object convert concode_elem_sep void writeField concode_elem_sep int getMapSize concode_elem_sep void error concode_elem_sep void writeMap concode_elem_sep void setSchema concode_elem_sep void writeRecord concode_elem_sep void writeBytes concode_elem_sep void writeArray concode_elem_sep Iterable<Map.Entry<Object,Object>> getMapEntries concode_elem_sep int resolveUnion concode_elem_sep long getArraySize concode_elem_sep void write concode_elem_sep void write concode_elem_sep GenericData getData"}
{"code": "List < InterceptorFactory > function ( ) { return clientPostConstructInterceptors . getSortedItems ( ) ; }", "nl": "get the post-construct interceptors for client proxy instances . this method should only be called after all interceptors have been added . concode_field_sep Map<Class<?>,Object> privateData concode_elem_sep ViewInstanceFactory viewInstanceFactory concode_elem_sep Set<Method> asyncMethods concode_elem_sep ServiceName viewServiceName concode_elem_sep OrderedItemContainer<InterceptorFactory> clientPreDestroyInterceptors concode_elem_sep List<BindingConfiguration> bindingConfigurations concode_elem_sep Map<Method,Method> viewToComponentMethodMap concode_elem_sep ProxyFactory<?> proxyFactory concode_elem_sep OrderedItemContainer<InterceptorFactory> clientPostConstructInterceptors concode_elem_sep Map<Method,OrderedItemContainer<InterceptorFactory>> clientInterceptors concode_elem_sep ComponentConfiguration componentConfiguration concode_elem_sep List<DependencyConfigurator<ViewService>> dependencies concode_elem_sep Class<?> viewClass concode_elem_sep Map<Method,OrderedItemContainer<InterceptorFactory>> viewInterceptors concode_field_sep ComponentConfiguration getComponentConfiguration concode_elem_sep Class<?> getViewClass concode_elem_sep Map<Class<?>,Object> getPrivateData concode_elem_sep void addAsyncMethod concode_elem_sep List<DependencyConfigurator<ViewService>> getDependencies concode_elem_sep void addClientInterceptor concode_elem_sep void addClientInterceptor concode_elem_sep void setViewInstanceFactory concode_elem_sep Map<Method,Method> getViewToComponentMethodMap concode_elem_sep List<InterceptorFactory> getViewInterceptors concode_elem_sep List<InterceptorFactory> getClientInterceptors concode_elem_sep Set<Method> getAsyncMethods concode_elem_sep void putPrivateData concode_elem_sep ServiceName getViewServiceName concode_elem_sep ProxyFactory<?> getProxyFactory concode_elem_sep void addClientPostConstructInterceptor concode_elem_sep void addClientPreDestroyInterceptor concode_elem_sep void addViewInterceptor concode_elem_sep void addViewInterceptor concode_elem_sep List<InterceptorFactory> getClientPreDestroyInterceptors concode_elem_sep ViewInstanceFactory getViewInstanceFactory concode_elem_sep List<BindingConfiguration> getBindingConfigurations"}
{"code": "GenVector < C > function ( Reader arg0 ) { throw new RuntimeException ( \"srini_string\" ) ; }", "nl": "parse a vector from a reader . concode_field_sep GenVector<C> ZERO concode_elem_sep Logger logger concode_elem_sep RingFactory<C> coFac concode_elem_sep float density concode_elem_sep int cols concode_elem_sep List<GenVector<C>> BASIS concode_elem_sep Random random concode_elem_sep float DEFAULT_DENSITY concode_field_sep GenVector<C> random concode_elem_sep GenVector<C> random concode_elem_sep GenVector<C> random concode_elem_sep GenVector<C> random concode_elem_sep GenVector<C> fromList concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep GenVector<C> getZERO concode_elem_sep GenVector<C> fromInteger concode_elem_sep GenVector<C> fromInteger concode_elem_sep String toString concode_elem_sep GenVector<C> copy"}
{"code": "String function ( ) { return fLastError ; }", "nl": "returns the error message from the computers in this category . concode_field_sep String fId concode_elem_sep boolean fIsEnabled concode_elem_sep IConfigurationElement fElement concode_elem_sep boolean fNeedsSortingAfterFiltering concode_elem_sep boolean fIsIncluded concode_elem_sep String ICON concode_elem_sep Expression fEnablementExpression concode_elem_sep int fSortOrder concode_elem_sep String fName concode_elem_sep ImageDescriptor fImage concode_elem_sep String fLastError concode_elem_sep CompletionProposalComputerRegistry fRegistry concode_elem_sep boolean fIsSeparateCommand concode_field_sep boolean isSeparateCommand concode_elem_sep String getName concode_elem_sep void sessionEnded concode_elem_sep void setSortOrder concode_elem_sep void sessionStarted concode_elem_sep Expression getEnablementExpression concode_elem_sep void setSeparateCommand concode_elem_sep String getId concode_elem_sep ImageDescriptor getImageDescriptor concode_elem_sep void setIncluded concode_elem_sep boolean matches concode_elem_sep Bundle getBundle concode_elem_sep int getSortOrder concode_elem_sep void setEnabled concode_elem_sep void checkNotNull concode_elem_sep String getDisplayName concode_elem_sep boolean isEnabled concode_elem_sep boolean hasComputers concode_elem_sep boolean hasComputers concode_elem_sep boolean isSortingAfterFilteringNeeded concode_elem_sep boolean isIncluded concode_elem_sep List<ICompletionProposal> computeCompletionProposals concode_elem_sep List<IContextInformation> computeContextInformation"}
{"code": "String function ( ) { StringBuilder loc0 = new StringBuilder ( ) ; loc0 . append ( \"srini_string\" ) ; loc0 . append ( this . x ) ; loc0 . append ( \"srini_string\" ) ; loc0 . append ( this . y ) ; loc0 . append ( \"srini_string\" ) ; loc0 . append ( this . z ) ; loc0 . append ( \"srini_string\" ) ; return loc0 . toString ( ) ; }", "nl": "returns a string representing the projpoint in the format : projcoordinate x y z . example : projcoordinate 6241.11 5218.25 12.3 concode_field_sep DecimalFormat DECIMAL_FORMAT concode_elem_sep double x concode_elem_sep String DECIMAL_FORMAT_PATTERN concode_elem_sep double y concode_elem_sep double z concode_field_sep String toShortString concode_elem_sep boolean areZOrdinatesEqual concode_elem_sep boolean hasValidZOrdinate concode_elem_sep int hashCode concode_elem_sep int hashCode concode_elem_sep void setValue concode_elem_sep void setValue concode_elem_sep void setValue concode_elem_sep boolean areYOrdinatesEqual concode_elem_sep boolean equals concode_elem_sep boolean areXOrdinatesEqual concode_elem_sep boolean hasValidXandYOrdinates concode_elem_sep void clearZ"}
{"code": "void function ( boolean arg0 , String arg1 ) { if ( arg0 == false ) { throw new IllegalArgumentException ( arg1 ) ; } }", "nl": "validate that the argument condition is true ; otherwise throwing an exception with the specified message . this method is useful when validating according to an arbitrary boolean expression , such as validating a primitive number or using your own custom validation expression . validate.istrue i > 0.0 , `` the value must be greater than zero : % d '' , i ; for performance reasons , the long value is passed as a separate parameter and appended to the exception message only in the case of an error . concode_field_sep PlaceHolder placeHolder concode_field_sep T notNull concode_elem_sep boolean isEmpty concode_elem_sep String unescape concode_elem_sep String concat concode_elem_sep void onlyOneIsTrue concode_elem_sep boolean onlyOneIsTrueNonThrow concode_elem_sep String hex concode_elem_sep String toString concode_elem_sep String join concode_elem_sep String join concode_elem_sep void closeQuietly concode_elem_sep T notEmpty concode_elem_sep String escape concode_elem_sep int indexOf"}
{"code": "Collection function ( ) { return paths ; }", "nl": "returns the paths a collection of two-element arrays of blocks that represent the blocks that end in a call to this subroutine and the block that begin with the return address from this subroutine . concode_field_sep Block entry concode_elem_sep Block exit concode_elem_sep ArrayList paths concode_elem_sep FlowGraph graph concode_elem_sep LocalVariable returnAddress concode_field_sep void setReturnAddress concode_elem_sep int numPaths concode_elem_sep void setExit concode_elem_sep FlowGraph graph concode_elem_sep void addPath concode_elem_sep LocalVariable returnAddress concode_elem_sep void removePathsContaining concode_elem_sep void removePath concode_elem_sep Block entry concode_elem_sep Block exit concode_elem_sep void print concode_elem_sep Block pathTarget concode_elem_sep Block pathSource concode_elem_sep String toString concode_elem_sep void removeAllPaths concode_elem_sep void setEntry"}
{"code": "C function ( C arg0 , long arg1 ) { return power ( fac , arg0 , arg1 ) ; }", "nl": "power of a to the n-th . concode_field_sep boolean debug concode_elem_sep RingFactory<C> fac concode_elem_sep Logger logger concode_field_sep C modPower concode_elem_sep C modPower concode_elem_sep C positivePower concode_elem_sep C modPositivePower"}
{"code": "Integer function ( String arg0 , ResultSet arg1 ) { final Integer loc0 = columnNameToIndexCache . get ( arg0 ) ; if ( loc0 != null ) { return loc0 ; } else { final Integer loc1 = Integer . valueOf ( arg1 . findColumn ( arg0 ) ) ; columnNameToIndexCache . put ( arg0 , loc1 ) ; return loc1 ; } }", "nl": "resolve the column name/alias to its index concode_field_sep ConcurrentHashMap<String,Integer> columnNameToIndexCache concode_elem_sep float LOAD_FACTOR concode_field_sep placeholderType placeHolder"}
{"code": "long function ( Duration arg0 ) { return checkValid ( arg0 ) . getSeconds ( ) ; }", "nl": "convert a duration to the number of seconds . the result will be rounded towards 0 to the nearest second . e.g. , if the duration represents -1 nanosecond , it will be rounded to 0 . concode_field_sep long DURATION_SECONDS_MAX concode_elem_sep long DURATION_SECONDS_MIN concode_elem_sep Duration MAX_VALUE concode_elem_sep Duration MIN_VALUE concode_elem_sep Comparator<Duration> COMPARATOR concode_field_sep Duration add concode_elem_sep int compare concode_elem_sep Duration fromNanos concode_elem_sep boolean isValid concode_elem_sep boolean isValid concode_elem_sep Duration checkValid concode_elem_sep Duration subtract concode_elem_sep Duration parse concode_elem_sep Duration fromSeconds concode_elem_sep Comparator<Duration> comparator concode_elem_sep long toNanos concode_elem_sep Duration fromMillis concode_elem_sep Duration fromMicros concode_elem_sep String toString concode_elem_sep long toMillis concode_elem_sep long toMicros concode_elem_sep Duration normalizedDuration"}
{"code": "boolean function ( ) { return num . isZERO ( ) ; }", "nl": "is local zero . concode_field_sep Logger logger concode_elem_sep LocalRing<C> ring concode_elem_sep boolean debug concode_elem_sep C num concode_elem_sep int isunit concode_elem_sep C den concode_field_sep int signum concode_elem_sep boolean isONE concode_elem_sep Local<C> inverse concode_elem_sep boolean isUnit concode_elem_sep Local<C> subtract concode_elem_sep Local<C> gcd concode_elem_sep Local<C> sum concode_elem_sep int compareTo concode_elem_sep Local<C>[] egcd concode_elem_sep Local<C> abs concode_elem_sep int hashCode concode_elem_sep Local<C> negate concode_elem_sep boolean equals concode_elem_sep Local<C> clone concode_elem_sep String toString concode_elem_sep Local<C> divide concode_elem_sep Local<C> multiply concode_elem_sep Local<C> remainder"}
{"code": "int function ( ) { return mAudioResourceId ; }", "nl": "return the audio resource id of the word . concode_field_sep int mAudioResourceId concode_elem_sep String mDefaultTranslation concode_elem_sep int mImageResourceId concode_elem_sep int NO_IMAGE_PROVIDED concode_elem_sep String mMiwokTranslation concode_field_sep String getDefaultTranslation concode_elem_sep boolean hasImage concode_elem_sep int getImageResourceId concode_elem_sep String getMiwokTranslation"}
{"code": "void function ( final char arg0 ) { this . lastChar = arg0 ; }", "nl": "set the last char concode_field_sep StringBuilder currentEntity concode_elem_sep StringBuilder comment concode_elem_sep String currentTag concode_elem_sep boolean isHtml concode_elem_sep String currentAttr concode_elem_sep char lastChar concode_elem_sep String wsTag concode_elem_sep String storedString concode_elem_sep Map<String,String> attr concode_elem_sep String currentNameSpace concode_elem_sep StringBuilder baos concode_field_sep StringBuilder currentEntity concode_elem_sep Map<String,String> getAttributes concode_elem_sep void putCurrentAttrValue concode_elem_sep void currentAttr concode_elem_sep boolean hasCurrentAttribute concode_elem_sep String getNameSpace concode_elem_sep String whitespaceTag concode_elem_sep void whitespaceTag concode_elem_sep void flushNameSpace concode_elem_sep void setStoredString concode_elem_sep String getCurrentTag concode_elem_sep StringBuilder current concode_elem_sep void currentTag concode_elem_sep void resetBuffer concode_elem_sep void namespace concode_elem_sep String getStoredString concode_elem_sep StringBuilder comment"}
{"code": "Byte function ( @ NonNull Cursor arg0 , int arg1 ) { if ( arg0 . isNull ( arg1 ) ) { return null ; } return ( byte ) arg0 . getInt ( arg1 ) ; }", "nl": "gets byte value form cursor for column index . concode_field_sep PlaceHolder placeHolder concode_field_sep Long getLong concode_elem_sep Character getChar concode_elem_sep Integer getInt concode_elem_sep void bind concode_elem_sep void bind concode_elem_sep void bind concode_elem_sep void bind concode_elem_sep void bind concode_elem_sep void bind concode_elem_sep void bind concode_elem_sep void bind concode_elem_sep void bind concode_elem_sep void bind concode_elem_sep void bind concode_elem_sep void bind concode_elem_sep Short getShort concode_elem_sep byte[] getByteArray concode_elem_sep Double getDouble concode_elem_sep Boolean getBoolean concode_elem_sep Date getDate concode_elem_sep Date getDate concode_elem_sep Float getFloat concode_elem_sep String getString"}
{"code": "IStatus function ( IResource [ ] arg0 ) { IStatus loc0 = null ; for ( int loc1 = 0 ; loc1 < arg0 . length ; loc1 ++ ) { IResource loc2 = arg0 [ loc1 ] ; if ( ! loc2 . isSynchronized ( IResource . DEPTH_INFINITE ) ) { loc0 = addOutOfSync ( loc0 , loc2 ) ; } } if ( loc0 != null ) return loc0 ; return Status . OK_STATUS ; }", "nl": "checks if the given resources are in sync with the underlying file system . concode_field_sep PlaceHolder placeHolder concode_field_sep boolean isReadOnly concode_elem_sep IStatus addModified concode_elem_sep int getSelectedResourceTypes concode_elem_sep IStatus addOutOfSync concode_elem_sep boolean containsOnlyProjects concode_elem_sep Map<IFile,Long> createModificationStampMap concode_elem_sep void setReadOnly concode_elem_sep IStatus makeCommittable concode_elem_sep IStatus makeCommittable concode_elem_sep boolean containsOnlyNonProjects"}
{"code": "void function ( Object arg0 ) { if ( isLevelEnabled ( MemoryLog . LOG_LEVEL_TRACE ) ) { log ( MemoryLog . LOG_LEVEL_TRACE , arg0 , null ) ; } }", "nl": "log a message with trace log level . concode_field_sep Date date concode_elem_sep int LOG_LEVEL_DEBUG concode_elem_sep int level concode_elem_sep Throwable throwable concode_elem_sep List logEntries concode_elem_sep int LOG_LEVEL_OFF concode_elem_sep Object message concode_elem_sep int LOG_LEVEL_WARN concode_elem_sep int LOG_LEVEL_TRACE concode_elem_sep int LOG_LEVEL_ERROR concode_elem_sep int LOG_LEVEL_INFO concode_elem_sep String logName concode_elem_sep String name concode_elem_sep int LOG_LEVEL_FATAL concode_elem_sep int LOG_LEVEL_ALL concode_elem_sep int currentLogLevel concode_field_sep void debug concode_elem_sep void debug concode_elem_sep void log concode_elem_sep Object getMessage concode_elem_sep boolean isLevelEnabled concode_elem_sep boolean isWarnEnabled concode_elem_sep void error concode_elem_sep void error concode_elem_sep boolean isFatalEnabled concode_elem_sep void setLevel concode_elem_sep void fatal concode_elem_sep void fatal concode_elem_sep String getLogName concode_elem_sep int getLevel concode_elem_sep int getLevel concode_elem_sep void warn concode_elem_sep void warn concode_elem_sep boolean isInfoEnabled concode_elem_sep boolean isErrorEnabled concode_elem_sep void reset concode_elem_sep boolean isTraceEnabled concode_elem_sep Date getDate concode_elem_sep boolean isDebugEnabled concode_elem_sep Throwable getThrowable concode_elem_sep List getLogEntries concode_elem_sep void info concode_elem_sep void info"}
{"code": "Predicate [ ] function ( ) { return new Predicate [ ] { iPredicate } ; }", "nl": "gets the predicate being decorated . concode_field_sep long serialVersionUID concode_elem_sep Predicate iPredicate concode_field_sep Predicate getInstance concode_elem_sep boolean evaluate"}
{"code": "Object function ( ) { return get ( name ) ; }", "nl": "replace the deserialized instance with its associated static object required for proper serialization . concode_field_sep String TOGGLE_SPY_LABEL concode_elem_sep IRecorderSemanticEvent DISPOSE concode_elem_sep String PAUSE_LABEL concode_elem_sep IRecorderSemanticEvent RESTART concode_elem_sep IRecorderSemanticEvent TOGGLE_SPY concode_elem_sep long serialVersionUID concode_elem_sep String START_LABEL concode_elem_sep String STOP_LABEL concode_elem_sep IRecorderSemanticEvent PAUSE concode_elem_sep String name concode_elem_sep IRecorderSemanticEvent START concode_elem_sep Map types concode_elem_sep String DISPOSE_LABEL concode_elem_sep String RESTART_LABEL concode_elem_sep IRecorderSemanticEvent STOP concode_field_sep RecorderMetaEvent get concode_elem_sep String toString concode_elem_sep void accept"}
{"code": "void function ( int arg0 ) { try { Thread . sleep ( arg0 ) ; } catch ( InterruptedException loc0 ) { } }", "nl": "default implementation that simply calls thread #sleep long . concode_field_sep long timeout concode_elem_sep int interval concode_field_sep boolean isTrue concode_elem_sep void wait concode_elem_sep void wait concode_elem_sep boolean timedOut concode_elem_sep Timer withInterval concode_elem_sep void handleTimeout concode_elem_sep Timer withTimeout"}
{"code": "void function ( final NativeJSObject arg0 ) { final ContentResolver loc0 = context . getContentResolver ( ) ; final ContentValues loc1 = getContentValues ( arg0 ) ; ThreadUtils . postToBackgroundThread ( new Runnable ( ) { @ Override public void run ( ) { readingListAccessor . updateReadingListItem ( loc0 , loc1 ) ; } } ) ; }", "nl": "updates a reading list item with new meta data . concode_field_sep String LOGTAG concode_elem_sep ContentObserver contentObserver concode_elem_sep Context context concode_elem_sep OnReadingListEventListener onReadingListEventListener concode_elem_sep boolean fetchInBackground concode_elem_sep ReadingListAccessor readingListAccessor concode_elem_sep BrowserDB db concode_field_sep void handleReadingListStatusRequest concode_elem_sep void onAddedToReadingList concode_elem_sep void handleEvent concode_elem_sep void onRemovedFromReadingList concode_elem_sep void handleMessage concode_elem_sep void handleRemoveFromList concode_elem_sep void handleReaderModeFaviconRequest concode_elem_sep void uninit concode_elem_sep void disableBackgroundFetches concode_elem_sep void fetchContent concode_elem_sep void onAlreadyInReadingList concode_elem_sep ContentValues getContentValues concode_elem_sep void handleAddToList"}
{"code": "String function ( ) { return prefix ; }", "nl": "return the job prefix which is the same as the file name . concode_field_sep Logger log concode_elem_sep Path file concode_elem_sep String prefix concode_elem_sep FileChannel channel concode_elem_sep FileLock lock concode_field_sep JobPrefixFile tryFromExistingFile concode_elem_sep void release concode_elem_sep void deleteIfExists concode_elem_sep JobPrefixFile create concode_elem_sep JobPrefixFile create concode_elem_sep void delete concode_elem_sep void close concode_elem_sep void close"}
{"code": "void function ( String arg0 , char arg1 , char arg2 ) { assertEquals ( arg0 , new Character ( arg1 ) , new Character ( arg2 ) ) ; }", "nl": "asserts that two chars are equal . if they are not an assertionfailederror is thrown with the given message . concode_field_sep PlaceHolder placeHolder concode_field_sep void fail concode_elem_sep void fail concode_elem_sep void assertNull concode_elem_sep void assertNull concode_elem_sep void assertTrue concode_elem_sep void assertTrue concode_elem_sep void assertNotNull concode_elem_sep void assertNotNull concode_elem_sep void failNotSame concode_elem_sep void assertFalse concode_elem_sep void assertFalse concode_elem_sep void assertNotSame concode_elem_sep void assertNotSame concode_elem_sep String format concode_elem_sep void assertSame concode_elem_sep void assertSame concode_elem_sep void failNotEquals concode_elem_sep void failSame"}
{"code": "boolean function ( ) { return Platform . isOSX ( ) && Platform . JAVA_VERSION >= Platform . JAVA_1_4 && Platform . JAVA_VERSION <= 0x1425 ; }", "nl": "returns whether mouse buttons 2/3 are swapped when using robot . concode_field_sep boolean gotBug1Event concode_elem_sep java.util.ArrayList bugList concode_field_sep boolean fileDialogRequiresDismiss concode_elem_sep boolean hasHierarchyEventGenerationBug concode_elem_sep boolean hasKeyStrokeGenerationBug concode_elem_sep String[] bugCheck concode_elem_sep boolean hasRobotMotionBug concode_elem_sep boolean reportsIncorrectLockingKeyState concode_elem_sep boolean fileDialogMisreportsBounds concode_elem_sep boolean needsRobotVerification concode_elem_sep boolean hasMenuDisableBug concode_elem_sep boolean hasInputMethodInsteadOfKeyTyped concode_elem_sep boolean hasMissingWindowMouseMotion concode_elem_sep boolean hasEscapeGenerationBug concode_elem_sep boolean showAWTPopupMenuBlocks concode_elem_sep boolean hasChoiceLockupBug concode_elem_sep boolean hasKeyInputDelay concode_elem_sep boolean hasFrameDeiconifyBug concode_elem_sep boolean dragDropRequiresNativeEvents concode_elem_sep boolean hasTextComponentSelectionDelay concode_elem_sep boolean hasMultiClickFrameBug concode_elem_sep boolean fileDialogRequiresVisibleFrame"}
{"code": "String function ( ) { return province ; }", "nl": "this method returns the value of the database column sys_ip_area . province concode_field_sep String areaCode concode_elem_sep String IPCODE_UNKNOWN concode_elem_sep String city concode_elem_sep String province concode_elem_sep String edu concode_elem_sep String district concode_elem_sep String company concode_elem_sep Date createTime concode_elem_sep Long endIp concode_elem_sep String owner concode_elem_sep Long startIp concode_elem_sep String country concode_field_sep boolean isIp concode_elem_sep void setCountry concode_elem_sep Date getCreateTime concode_elem_sep String getCountry concode_elem_sep void setProvince concode_elem_sep long valueOfIpv4 concode_elem_sep String getEdu concode_elem_sep Long getStartIp concode_elem_sep Long getEndIp concode_elem_sep String getOwner concode_elem_sep void setStartIp concode_elem_sep void setEndIp concode_elem_sep void setOwner concode_elem_sep String getStartIpv4 concode_elem_sep String getEndIpv4 concode_elem_sep String getAreaCode concode_elem_sep String ipv4 concode_elem_sep String getDistrict concode_elem_sep void setDistrict concode_elem_sep void setCompany concode_elem_sep String getCity concode_elem_sep void setCity concode_elem_sep void setAreaCode concode_elem_sep void setCreateTime concode_elem_sep String getCompany concode_elem_sep void setEdu concode_elem_sep String toString"}
{"code": "LobCreator function ( LobCreationContext arg0 ) { return useContextualLobCreation ? new ContextualLobCreator ( arg0 ) : NonContextualLobCreator . INSTANCE ; }", "nl": "build a lobcreator using the given context concode_field_sep boolean useContextualLobCreation concode_elem_sep Object[] NO_ARGS concode_elem_sep Class[] NO_ARG_SIG concode_elem_sep CoreMessageLogger LOG concode_field_sep boolean useContextualLobCreation"}
{"code": "PackagerParams function ( ) { PackagerParams loc0 = new PackagerParams ( ) ; loc0 . dev = true ; loc0 . inlineSourceMap = false ; loc0 . minify = false ; loc0 . runModule = true ; loc0 . skip = true ; return loc0 ; }", "nl": "returns default parameters for debug builds . concode_field_sep boolean skip concode_elem_sep boolean runModule concode_elem_sep boolean minify concode_elem_sep boolean dev concode_elem_sep boolean inlineSourceMap concode_field_sep PackagerParams releaseDefaults concode_elem_sep PackagerParams getPackagerParams concode_elem_sep boolean isSkip concode_elem_sep void minify concode_elem_sep boolean isRunModule concode_elem_sep void dev concode_elem_sep boolean isInlineSourceMap concode_elem_sep boolean isDev concode_elem_sep void runModule concode_elem_sep void skip concode_elem_sep void inlineSourceMap concode_elem_sep boolean isMinify"}
{"code": "void function ( InterpreterOutput arg0 ) { outputStream . setInterpreterOutput ( arg0 ) ; }", "nl": "pass interpreteroutput to capture the repl output concode_field_sep Logger logger concode_elem_sep String scriptPath concode_elem_sep Integer rScriptInitializeNotifier concode_elem_sep Integer rRequestNotifier concode_elem_sep String rCmdPath concode_elem_sep Integer rResponseNotifier concode_elem_sep InterpreterOutput initialOutput concode_elem_sep Request rRequestObject concode_elem_sep Map<Integer,ZeppelinR> zeppelinR concode_elem_sep boolean rResponseError concode_elem_sep boolean rScriptRunning concode_elem_sep String type concode_elem_sep SparkVersion sparkVersion concode_elem_sep PipedOutputStream input concode_elem_sep String libPath concode_elem_sep int port concode_elem_sep DefaultExecutor executor concode_elem_sep boolean rScriptInitialized concode_elem_sep SparkOutputStream outputStream concode_elem_sep Object rResponseValue concode_elem_sep Object value concode_elem_sep String stmt concode_field_sep Object request concode_elem_sep void set concode_elem_sep Request getRequest concode_elem_sep String getS0 concode_elem_sep void setResponse concode_elem_sep void onScriptInitialized concode_elem_sep void onProcessComplete concode_elem_sep void waitForRScriptInitialized concode_elem_sep Object getValue concode_elem_sep void onProcessFailed concode_elem_sep Object eval concode_elem_sep String getType concode_elem_sep Object get concode_elem_sep void createRScript concode_elem_sep String getStmt concode_elem_sep void close concode_elem_sep void open concode_elem_sep ZeppelinR getZeppelinR"}
{"code": "void function ( ) { for ( Integer loc0 : FileUtils . documentIdMap . keySet ( ) ) { calculateByW1 ( loc0 ) ; } this . docRankingByW1 = Util . sortByValue ( docRankingByW1 ) ; documentNameIdMap = FileUtils . documentNameIdMap ; }", "nl": "this method calculates the score of this query with all the documents and sort the score map in the reverse order of value . concode_field_sep Map<Integer,Double> docRankingByW1 concode_elem_sep HashMap<String,Integer> documentNameIdMap concode_elem_sep Map<String,Integer> queryIndex concode_elem_sep List<String> stopWords concode_field_sep Map<String,Integer> getDocumentNameMap concode_elem_sep Map<Integer,Double> getRankingByW1 concode_elem_sep void indexQuery concode_elem_sep Map<Integer,String> getUrlMap concode_elem_sep void calculateByW1 concode_elem_sep List<String> getQueries concode_elem_sep void listStopWords"}
{"code": "double function ( ) { return randomData . nextUniform ( 0 , 2 * mu ) ; }", "nl": "gets a uniformly distributed random value with mean = mu . concode_field_sep int DIGEST_MODE concode_elem_sep BufferedReader filePointer concode_elem_sep int CONSTANT_MODE concode_elem_sep int mode concode_elem_sep double mu concode_elem_sep EmpiricalDistribution empiricalDistribution concode_elem_sep URL valuesFileURL concode_elem_sep double sigma concode_elem_sep RandomDataImpl randomData concode_elem_sep int REPLAY_MODE concode_elem_sep int EXPONENTIAL_MODE concode_elem_sep int GAUSSIAN_MODE concode_elem_sep int UNIFORM_MODE concode_field_sep EmpiricalDistribution getEmpiricalDistribution concode_elem_sep void closeReplayFile concode_elem_sep double getMu concode_elem_sep void setMode concode_elem_sep double getNext concode_elem_sep void fill concode_elem_sep double[] fill concode_elem_sep double getSigma concode_elem_sep void computeDistribution concode_elem_sep void computeDistribution concode_elem_sep void setMu concode_elem_sep void setValuesFileURL concode_elem_sep void setValuesFileURL concode_elem_sep double getNextReplay concode_elem_sep URL getValuesFileURL concode_elem_sep void setSigma concode_elem_sep void resetReplayFile concode_elem_sep double getNextGaussian concode_elem_sep int getMode concode_elem_sep double getNextDigest concode_elem_sep double getNextExponential"}
{"code": "String function ( Method arg0 ) { StringBuilder loc0 = new StringBuilder ( ) ; Formatter loc1 = new Formatter ( loc0 ) ; loc1 . format ( \"srini_string\" , get_access_flags ( arg0 ) , arg0 . getReturnType ( ) , arg0 . getName ( ) ) ; for ( Type loc2 : arg0 . getArgumentTypes ( ) ) { loc1 . format ( \"srini_string\" , loc2 ) ; } loc1 . format ( \"srini_string\" ) ; return ( loc0 . toString ( ) . replace ( \"srini_string\" , \"srini_string\" ) ) ; }", "nl": "returns a string describing a method declaration . it contains the access flags public , private , static , etc , the return type , the method name , and the types of each of its arguments . concode_field_sep boolean skip_checks concode_elem_sep Type string_array concode_field_sep void add_line_numbers concode_elem_sep void add_to_start concode_elem_sep void dump_methods concode_elem_sep String get_attribute_name concode_elem_sep String get_attribute_name concode_elem_sep String instruction_descr concode_elem_sep void setup_init_locals concode_elem_sep String get_constant_str concode_elem_sep void empty_method concode_elem_sep void dump_method_declarations concode_elem_sep boolean in_jdk concode_elem_sep boolean in_jdk concode_elem_sep String get_access_flags concode_elem_sep boolean is_clinit concode_elem_sep boolean is_clinit concode_elem_sep void checkMgen concode_elem_sep String local_var_descr concode_elem_sep boolean is_constructor concode_elem_sep boolean is_constructor concode_elem_sep boolean is_main concode_elem_sep void dump concode_elem_sep void dump concode_elem_sep void remove_local_variable_type_tables concode_elem_sep boolean is_local_variable_type_table concode_elem_sep void checkMgens"}
{"code": "void function ( @ ArquillianResource URL arg0 ) { URL loc0 = prepareUrl ( arg0 ) ; Utils . makeCallWithBasicAuthn ( loc0 , \"srini_string\" , PASSWORD3 , SC_OK ) ; }", "nl": "test that transformation from second transformer is applied on transformed name obtained from first transformer . concode_field_sep String USER3 concode_elem_sep String USER2 concode_elem_sep PropertyFileBasedDomain chainedThreeTransformers concode_elem_sep String USER1 concode_elem_sep String ELYTRON_SECURITY_TRANSFORM_TRANSFORMED concode_elem_sep String PASSWORD1 concode_elem_sep String PREDEFINED_HTTP_SERVER_MECHANISM_FACTORY concode_elem_sep String DEP_SECURITY_DOMAIN_TRANSFORM_TRANSFORMED concode_elem_sep String ELYTRON_SECURITY_TWO concode_elem_sep String PRINCIPAL_TRANSFORMER_TRANSFORM_TRANSFORMED concode_elem_sep String PASSWORD3 concode_elem_sep String ELYTRON_SECURITY_THREE concode_elem_sep String PRINCIPAL_TRANSFORMER_TWO concode_elem_sep String DEP_SECURITY_DOMAIN_TWO concode_elem_sep String ROLE concode_elem_sep String PRINCIPAL_TRANSFORMER_THREE concode_elem_sep String REGEX_TRANSFORMER_A concode_elem_sep String PASSWORD2 concode_elem_sep String REGEX_TRANSFORMED_SECOND concode_elem_sep String REGEX_TRANSFORMED_FIRST concode_elem_sep String REGEX_TRANSFORMER_B concode_elem_sep PropertyFileBasedDomain chainedTwoTransformers concode_elem_sep PropertyFileBasedDomain transformTransformed concode_elem_sep String REGEX_TRANSFORMER_C concode_elem_sep String DEP_SECURITY_DOMAIN_THREE concode_field_sep WebArchive deploymentThreeTransformersInChain concode_elem_sep void removeSingleConfiguration concode_elem_sep WebArchive deploymentTransformTransformed concode_elem_sep void setup concode_elem_sep PropertyFileBasedDomain prepareSingleConfiguration concode_elem_sep WebArchive deploymentTwoTransformersInChain concode_elem_sep WebArchive createDeployment concode_elem_sep void testTwoTransformersInChain concode_elem_sep void tearDown concode_elem_sep void testThreeTransformersInChain concode_elem_sep URL prepareUrl"}
{"code": "BufferedReader function ( String arg0 ) { BufferedReader loc0 = new BufferedReader ( new FileReader ( arg0 ) ) ; return loc0 ; }", "nl": "acquires a buffered reader usable to read the contents of a file concode_field_sep PlaceHolder placeHolder concode_field_sep void deleteFile concode_elem_sep void copyFile concode_elem_sep BufferedWriter getWriter concode_elem_sep void main concode_elem_sep boolean fileExists concode_elem_sep String replaceFilename"}
{"code": "void function ( PdfWriter arg0 , Document arg1 , float arg2 , int arg3 , Paragraph arg4 ) { }", "nl": "called when a section is written . position will hold the height at which the section will be written to . concode_field_sep PlaceHolder placeHolder concode_field_sep void onParagraph concode_elem_sep void onParagraphEnd concode_elem_sep void onOpenDocument concode_elem_sep void onSectionEnd concode_elem_sep void onEndPage concode_elem_sep void onChapter concode_elem_sep void onGenericTag concode_elem_sep void onCloseDocument concode_elem_sep void onChapterEnd concode_elem_sep void onStartPage"}
{"code": "byte [ ] function ( Phenotype arg0 ) { byte [ ] loc0 = mapper . writeValueAsBytes ( Issue . getRequestParams ( arg0 ) ) ; return loc0 ; }", "nl": "build a request body out of the phenotype given . concode_field_sep String IF_NONE_MATCH concode_elem_sep String GITHUB concode_elem_sep ObjectMapper mapper concode_elem_sep URL GITHUB_URL concode_elem_sep Repository repository concode_field_sep String getIssueEndpoint concode_elem_sep void patchIssue concode_elem_sep Phenotype readPhenotype concode_elem_sep Repository getRepository concode_elem_sep String buildSearch concode_elem_sep InputStream getStream concode_elem_sep void openIssue concode_elem_sep HttpResponse execute concode_elem_sep URI getURI concode_elem_sep Optional<String> searchForIssue concode_elem_sep void checkCode concode_elem_sep String getRepoMethod"}
{"code": "long function ( ) { return Math . max ( timeToLiveForContacts , timeBetweenRootPings ) ; }", "nl": "time to live for a contact before it is considered offline concode_field_sep int numberOfReplicates concode_elem_sep long timeToLiveForContacts concode_elem_sep int numberOfPingTries concode_elem_sep long timeBetweenRootPings concode_elem_sep long timeBetweenReplicationChecks concode_elem_sep int numberOfReplicationTries concode_elem_sep int minimumNumberOfReplicates concode_field_sep int getNumberOfPingTries concode_elem_sep int getNumberOfReplicationTries concode_elem_sep void setNumberOfPingTries concode_elem_sep int getNumberOfReplicates concode_elem_sep long getTimeBetweenReplicationChecks concode_elem_sep void setTimeBetweenRootPings concode_elem_sep void setMinimumNumberOfReplicates concode_elem_sep void setNumberOfReplicates concode_elem_sep int getMinimumNumberOfReplicates concode_elem_sep void setTimeToLiveForContacts concode_elem_sep void setTimeBetweenReplicationChecks concode_elem_sep long getTimeBetweenRootPings concode_elem_sep void setNumberOfReplicationTries"}
{"code": "Map < String , String > function ( ) { return Collections . unmodifiableMap ( variantMap ) ; }", "nl": "returns an index about where in the cache different variants for a given resource are stored . this maps `` variant keys '' to `` cache keys '' , where the variant key is derived from the varying request headers , and the cache key is the location in the ch.boye.httpclientandroidlib.client.cache.httpcachestorage where thatparticular variant is stored . the first variant returned is used as the `` parent '' entry to hold this index of the other variants . concode_field_sep Date date concode_elem_sep Map<String,String> variantMap concode_elem_sep StatusLine statusLine concode_elem_sep HeaderGroup responseHeaders concode_elem_sep Resource resource concode_elem_sep Date requestDate concode_elem_sep long serialVersionUID concode_elem_sep Date responseDate concode_field_sep Resource getResource concode_elem_sep Header[] getHeaders concode_elem_sep Header getFirstHeader concode_elem_sep Header[] getAllHeaders concode_elem_sep String getReasonPhrase concode_elem_sep ProtocolVersion getProtocolVersion concode_elem_sep Date getResponseDate concode_elem_sep boolean hasVariants concode_elem_sep Date parseDate concode_elem_sep int getStatusCode concode_elem_sep StatusLine getStatusLine concode_elem_sep Date getDate concode_elem_sep String toString concode_elem_sep Date getRequestDate"}
{"code": "Collection < IDocumentSet > function ( ) { return Collections . unmodifiableCollection ( resources . values ( ) ) ; }", "nl": "returns all document sets that were declared in the xml config file . concode_field_sep Map<String,IDocumentSet> resources concode_elem_sep Map<IDocumentSet,Boolean> resourcesOfSetPublished concode_elem_sep int resourceOffset concode_elem_sep DocumentSpace inst concode_elem_sep MultiSet<Integer> publishedRanks concode_field_sep void setUseRanks concode_elem_sep void setResourceSet concode_elem_sep IDocumentSet getResourceSet concode_elem_sep void activateMyPublishedKeys concode_elem_sep int getKeyForLookup concode_elem_sep DocumentSpace getInstance concode_elem_sep Set<Integer> getSomeKeysForPublish concode_elem_sep void deactivateMyPublishedKeys concode_elem_sep void recalculateIfResourcesOfSetPublished"}
{"code": "int function ( ) { if ( aliasSpecificLockModes == null ) { return 0 ; } return aliasSpecificLockModes . size ( ) ; }", "nl": "get the number of aliases that have specific lock modes defined . concode_field_sep Map<String,LockMode> aliasSpecificLockModes concode_elem_sep int NO_WAIT concode_elem_sep LockOptions NONE concode_elem_sep boolean scope concode_elem_sep int SKIP_LOCKED concode_elem_sep LockOptions READ concode_elem_sep LockOptions UPGRADE concode_elem_sep LockMode lockMode concode_elem_sep int timeout concode_elem_sep int WAIT_FOREVER concode_field_sep LockMode getLockMode concode_elem_sep LockOptions makeCopy concode_elem_sep LockMode getEffectiveLockMode concode_elem_sep LockOptions setLockMode concode_elem_sep Iterator getAliasLockIterator concode_elem_sep LockOptions setAliasSpecificLockMode concode_elem_sep LockMode getAliasSpecificLockMode concode_elem_sep LockOptions setTimeOut concode_elem_sep LockMode findGreatestLockMode concode_elem_sep boolean hasAliasSpecificLockModes concode_elem_sep int getTimeOut concode_elem_sep LockOptions copy concode_elem_sep LockOptions setScope concode_elem_sep boolean getScope"}
{"code": "boolean function ( ) { return fc . isFullCompression ( ) ; }", "nl": "gets the 1.5 compression status . concode_field_sep PdfCopyFormsImp fc concode_field_sep void setOutlines concode_elem_sep void setViewerPreferences concode_elem_sep void copyDocumentFields concode_elem_sep void addJavaScript concode_elem_sep void addViewerPreference concode_elem_sep void addDocument concode_elem_sep void addDocument concode_elem_sep void addDocument concode_elem_sep PdfWriter getWriter concode_elem_sep void setEncryption concode_elem_sep void setEncryption concode_elem_sep void setEncryption concode_elem_sep void setEncryption concode_elem_sep void setFullCompression concode_elem_sep void close concode_elem_sep void open"}
{"code": "void function ( QueryCondition < ? > arg0 ) { conditions . add ( arg0 ) ; }", "nl": "this method adds a further condition to the set of conditions of this clause . concode_field_sep int solvingLevel concode_elem_sep int searchedElements concode_elem_sep Vector<QueryCondition<?>> conditions concode_elem_sep SkyNetNodeInfo solvingPeer concode_elem_sep Vector<SkyNetNodeInfo> matches concode_elem_sep HashMap<BigDecimal,QueryReplyingPeer> replyingPeers concode_field_sep SkyNetNodeInfo getSolvingPeer concode_elem_sep void addReplyingPeer concode_elem_sep long getSize concode_elem_sep QueryCondition<?> getCondition concode_elem_sep void decrementSearchedElements concode_elem_sep int getSolvingLevel concode_elem_sep void addMatch concode_elem_sep int getNumberOfConditions concode_elem_sep Vector<SkyNetNodeInfo> getMatches concode_elem_sep HashMap<BigDecimal,QueryReplyingPeer> getReplyingPeers concode_elem_sep int getSearchedElements concode_elem_sep String toString"}
{"code": "String function ( ) { return \"srini_string\" ; }", "nl": "answer the feedback information for the product 's preference page concode_field_sep IProduct product concode_elem_sep String INDENT concode_field_sep IProduct getProduct concode_elem_sep void printPlatformInfo concode_elem_sep String getInstallationLocation concode_elem_sep void printInfo concode_elem_sep void printPrefPageInfo concode_elem_sep String getPrefPageInfo concode_elem_sep void printProductInfo concode_elem_sep void printSupportInfo concode_elem_sep String getAuthorNames concode_elem_sep IStatus getLastStatus concode_elem_sep int getCurrentYear"}
{"code": "void function ( CallContext arg0 ) { this . callContext = arg0 ; }", "nl": "sets the value of the callcontext property . concode_field_sep CallContext callContext concode_elem_sep UpdateRequest update concode_elem_sep String fcOwner concode_field_sep CallContext getCallContext concode_elem_sep void setUpdate concode_elem_sep UpdateRequest getUpdate concode_elem_sep String getFcOwner concode_elem_sep void setFcOwner"}
{"code": "CacheDataDescriptionImpl function ( Collection arg0 ) { return new CacheDataDescriptionImpl ( arg0 . isMutable ( ) , arg0 . getOwner ( ) . isVersioned ( ) , arg0 . getOwner ( ) . isVersioned ( ) ? ( ( VersionType ) arg0 . getOwner ( ) . getVersion ( ) . getType ( ) ) . getComparator ( ) : null ) ; }", "nl": "builds a cachedatadescriptionimpl from the mapping model of a collection concode_field_sep boolean versioned concode_elem_sep boolean mutable concode_elem_sep Comparator versionComparator concode_field_sep boolean isMutable concode_elem_sep boolean isVersioned concode_elem_sep Comparator getVersionComparator"}
{"code": "void function ( int arg0 ) { _index = arg0 ; }", "nl": "set this widget 's index relative to it 's parent . concode_field_sep long serialVersionUID concode_elem_sep HashMap _map concode_elem_sep int UNASSIGNED concode_elem_sep int _index concode_elem_sep WidgetLocator _parentInfo concode_elem_sep Class _cls concode_elem_sep String _nameOrLabel concode_elem_sep IWidgetMatcher _matcher concode_field_sep int getIndex concode_elem_sep void setData concode_elem_sep WidgetLocator getParentInfo concode_elem_sep String getNameOrLabel concode_elem_sep IWidgetLocator[] findAll concode_elem_sep boolean matches concode_elem_sep Map getDataMap concode_elem_sep void setParentInfo concode_elem_sep Class getTargetClass concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep String toString concode_elem_sep String getTargetClassName concode_elem_sep String getData"}
{"code": "void function ( VarInfo [ ] arg0 ) { for ( int loc0 = 0 ; loc0 < arg0 . length ; loc0 ++ ) { if ( inv . ppt . var_infos [ loc0 ] != arg0 [ loc0 ] ) discardString += \"srini_string\" + inv . ppt . var_infos [ loc0 ] + \"srini_string\" + arg0 [ loc0 ] ; } }", "nl": "adds an equality string to the discardstring for each variable in in vis which is different from the leader concode_field_sep Invariant inv concode_elem_sep String discardFormat concode_elem_sep String discardString concode_elem_sep DiscardCode discardCode concode_elem_sep String className concode_field_sep String discardFormat concode_elem_sep String discardString concode_elem_sep void add_implied concode_elem_sep DiscardCode discardCode concode_elem_sep String format concode_elem_sep String className"}
{"code": "int function ( ) { return maxSize ; }", "nl": "returns the maximum sum of the sizes of the entries in this cache . concode_field_sep int evictionCount concode_elem_sep int putCount concode_elem_sep int hitCount concode_elem_sep int size concode_elem_sep int maxSize concode_elem_sep LinkedHashMap<String,Bitmap> map concode_elem_sep int missCount concode_field_sep int evictionCount concode_elem_sep void set concode_elem_sep void trimToSize concode_elem_sep void evictAll concode_elem_sep int hitCount concode_elem_sep int putCount concode_elem_sep int size concode_elem_sep Bitmap get concode_elem_sep void clear concode_elem_sep int missCount"}
{"code": "void function ( ) { LOGGER . info ( \"srini_string\" ) ; for ( Potion loc0 : topShelf ) { loc0 . drink ( ) ; } LOGGER . info ( \"srini_string\" ) ; for ( Potion loc0 : bottomShelf ) { loc0 . drink ( ) ; } }", "nl": "enumerate potions concode_field_sep List<Potion> topShelf concode_elem_sep List<Potion> bottomShelf concode_elem_sep Logger LOGGER concode_field_sep List<Potion> getBottomShelf concode_elem_sep List<Potion> getTopShelf concode_elem_sep void fillShelves"}
{"code": "Residue < C > function ( ) { GenPolynomial < C > loc0 = ring . ideal . inverse ( val ) ; return new Residue < C > ( ring , loc0 , 1 ) ; }", "nl": "residue inverse . concode_field_sep GenPolynomial<C> val concode_elem_sep ResidueRing<C> ring concode_elem_sep int isunit concode_field_sep int signum concode_elem_sep boolean isONE concode_elem_sep boolean isUnit concode_elem_sep Residue<C> subtract concode_elem_sep Residue<C> gcd concode_elem_sep Residue<C> sum concode_elem_sep int compareTo concode_elem_sep Residue<C>[] egcd concode_elem_sep boolean isConstant concode_elem_sep Residue<C> monic concode_elem_sep Residue<C> abs concode_elem_sep int hashCode concode_elem_sep Residue<C> negate concode_elem_sep boolean equals concode_elem_sep Residue<C> clone concode_elem_sep boolean isZERO concode_elem_sep String toString concode_elem_sep Residue<C> divide concode_elem_sep Residue<C> multiply concode_elem_sep Residue<C> remainder"}
{"code": "void function ( SelectionKey arg0 , int arg1 ) { pendingCommands . add ( new ChangeKeyOpsCommand ( arg0 , arg1 ) ) ; selector . wakeup ( ) ; }", "nl": "queues the change of operations request of a channel , which will change the interested operations of the channel sometime in future . this is a non-blocking method and does not guarantee that the operations have changed when this method returns . concode_field_sep int interestedOps concode_elem_sep Logger LOGGER concode_elem_sep Selector selector concode_elem_sep ExecutorService reactorMain concode_elem_sep Queue<Runnable> pendingCommands concode_elem_sep Dispatcher dispatcher concode_elem_sep SelectionKey key concode_field_sep void dispatchReadEvent concode_elem_sep void stop concode_elem_sep void eventLoop concode_elem_sep NioReactor registerChannel concode_elem_sep void start concode_elem_sep void onChannelWritable concode_elem_sep void onChannelReadable concode_elem_sep void processKey concode_elem_sep void run concode_elem_sep void processPendingCommands concode_elem_sep String toString concode_elem_sep void onChannelAcceptable"}
{"code": "boolean function ( ) { return size == 0 ; }", "nl": "tests if the dictionary is empty . concode_field_sep int size concode_elem_sep BinaryTreeNode root concode_field_sep void insertHelper concode_elem_sep BinaryTreeNode findHelper concode_elem_sep int size concode_elem_sep void testFind concode_elem_sep void testRemove concode_elem_sep Entry find concode_elem_sep void makeEmpty concode_elem_sep Entry insert concode_elem_sep BinaryTreeNode findSmallest concode_elem_sep void main concode_elem_sep String toString concode_elem_sep Entry remove"}
{"code": "String function ( ) { return RefactoringUIMessages . RefactoringHistoryControlConfiguration_refactoring_pattern ; }", "nl": "returns the message format pattern to use for refactorings . arguments : 0 : formatted date 0 : description of refactoring concode_field_sep boolean fCheckable concode_elem_sep IProject fProject concode_elem_sep boolean fTime concode_field_sep boolean isTimeDisplayed concode_elem_sep String getCollectionLabel concode_elem_sep String getYesterdayPattern concode_elem_sep String getLastMonthPattern concode_elem_sep String getLastWeekPattern concode_elem_sep String getWeekPattern concode_elem_sep boolean isCheckableViewer concode_elem_sep RefactoringHistoryContentProvider getContentProvider concode_elem_sep String getYearPattern concode_elem_sep String getProjectPattern concode_elem_sep String getWorkspaceCaption concode_elem_sep String getDayPattern concode_elem_sep RefactoringHistoryLabelProvider getLabelProvider concode_elem_sep String getThisMonthPattern concode_elem_sep String getMonthPattern concode_elem_sep String getCommentCaption concode_elem_sep String getThisWeekPattern concode_elem_sep String getTodayPattern concode_elem_sep IProject getProject"}
{"code": "ICreateTargetQueries function ( ) { return fDelegate ; }", "nl": "returns the delegate queries . concode_field_sep CreateTargetExecutionLog fLog concode_elem_sep ICreateTargetQueries fDelegate concode_field_sep ICreateTargetQuery createNewPackageQuery concode_elem_sep CreateTargetExecutionLog getCreateTargetExecutionLog"}
{"code": "AxisAlignedBoundingBoxXZ function ( ) { if ( fileBoundary != null ) { return fileBoundary ; } else { return dataBoundary ; } }", "nl": "returns a boundary based on the bounds in the input file if available , otherwise returns the same as #getdataboundary concode_field_sep AxisAlignedBoundingBoxXZ fileBoundary concode_elem_sep AxisAlignedBoundingBoxXZ dataBoundary concode_elem_sep List<MapWaySegment> mapWaySegments concode_elem_sep List<MapArea> mapAreas concode_elem_sep List<MapNode> mapNodes concode_field_sep VectorXZ getCenter concode_elem_sep AxisAlignedBoundingBoxXZ getDataBoundary concode_elem_sep Iterable<MapElement> getMapElements concode_elem_sep Collection<MapWaySegment> getMapWaySegments concode_elem_sep void calculateDataBoundary concode_elem_sep Iterable<WorldObject> getWorldObjects concode_elem_sep Iterable<T> getWorldObjects concode_elem_sep Collection<MapArea> getMapAreas concode_elem_sep Collection<MapNode> getMapNodes"}
{"code": "float function ( ) { return roll ; }", "nl": "get the current roll of the device in degrees . concode_field_sep float[] magData concode_elem_sep float[] accelData concode_elem_sep Sensor magnetometer concode_elem_sep float roll concode_elem_sep float yaw concode_elem_sep Sensor accelerometer concode_elem_sep Context context concode_elem_sep SensorManagerFactory instance concode_elem_sep SensorManager sensorManager concode_elem_sep float pitch concode_elem_sep float compassBearing concode_elem_sep float FILTER_ALPHA concode_elem_sep Object lock concode_elem_sep GPSTracker locationTracker concode_field_sep Location getLocation concode_elem_sep void onSensorChanged concode_elem_sep void onPause concode_elem_sep Intent getBatteryMonitor concode_elem_sep float getBatteryLevelPercent concode_elem_sep void registerListeners concode_elem_sep int getSatelliteCount concode_elem_sep void onAccuracyChanged concode_elem_sep float[] lowPassFilter concode_elem_sep void onDestroy concode_elem_sep int getBatteryStatus concode_elem_sep double getLongitude concode_elem_sep void recalculateAccelerometer concode_elem_sep double getAltitude concode_elem_sep double getLatitude concode_elem_sep float getCompassBearing concode_elem_sep double getBearing concode_elem_sep void clearGPSCache concode_elem_sep void onResume concode_elem_sep void initSensor concode_elem_sep float getYaw concode_elem_sep boolean isBatteryCharging concode_elem_sep float getPitch concode_elem_sep void initLocationTracker concode_elem_sep int getBatteryLevel concode_elem_sep List<GpsSatellite> getSatellites concode_elem_sep double getSpeed concode_elem_sep SensorManagerFactory getInstance concode_elem_sep SensorManagerFactory getInstance concode_elem_sep void recalculateMagnetometer"}
{"code": "List < ApplicationPredecessorRelation > function ( ) { if ( applicationPredecessors == null ) { applicationPredecessors = new ArrayList < ApplicationPredecessorRelation > ( ) ; } return this . applicationPredecessors ; }", "nl": "gets the value of the applicationpredecessors property . this accessor method returns a reference to the live list , not a snapshot . therefore any modification you make to the returned list will be present inside the jaxb object . this is why there is not a set method for the applicationpredecessors property . for example , to add a new item , do as follows : getapplicationpredecessors . add newitem ; objects of the following type s are allowed in the list applicationpredecessorrelation concode_field_sep List<ApplicationPredecessorRelation> applicationPredecessors concode_elem_sep List<ApplicationID> removedApplications concode_elem_sep List<Application> applications concode_field_sep List<Application> getApplications concode_elem_sep List<ApplicationID> getRemovedApplications"}
{"code": "Residue < C > function ( Residue < C > arg0 ) { return multiply ( arg0 . inverse ( ) ) ; }", "nl": "residue division . concode_field_sep C val concode_elem_sep ResidueRing<C> ring concode_elem_sep boolean debug concode_elem_sep int isunit concode_elem_sep Logger logger concode_field_sep int signum concode_elem_sep boolean isONE concode_elem_sep Residue<C> inverse concode_elem_sep boolean isUnit concode_elem_sep Residue<C> subtract concode_elem_sep Residue<C> gcd concode_elem_sep Residue<C> sum concode_elem_sep int compareTo concode_elem_sep Residue<C>[] egcd concode_elem_sep Residue<C> abs concode_elem_sep int hashCode concode_elem_sep Residue<C> negate concode_elem_sep boolean equals concode_elem_sep Residue<C> clone concode_elem_sep boolean isZERO concode_elem_sep String toString concode_elem_sep Residue<C> multiply concode_elem_sep Residue<C> remainder"}
{"code": "List < String > function ( ) { return validatorErrorMessage ; }", "nl": "gets the validator error message . concode_field_sep String inputInfo concode_elem_sep String outputMessage concode_elem_sep List<String> validatorErrorMessage concode_field_sep String getInputInfo concode_elem_sep void setValidatorErrorMessage concode_elem_sep String getOutputMessage concode_elem_sep void setInputInfo concode_elem_sep void setOutputMessage"}
{"code": "void function ( final String arg0 , final String arg1 ) { final boolean loc0 = ! arg0 . equals ( arg1 ) ; if ( loc0 ) throw WSLogger . ROOT_LOGGER . multipleSecurityDomainsDetected ( arg0 , arg1 ) ; }", "nl": "this method ensures both passed domains contain the same value . concode_field_sep PlaceHolder placeHolder concode_field_sep String getDomain concode_elem_sep List<EJBEndpoint> getEjbEndpoints concode_elem_sep String getTransportGuarantee concode_elem_sep String getSecurityDomain concode_elem_sep String getAuthMethod concode_elem_sep SecurityRolesMetaData getSecurityRoles concode_elem_sep boolean isSecureWsdlAccess concode_elem_sep EJBSecurityMetaData getEjbSecurityMetaData concode_elem_sep String getRealmName"}
{"code": "void function ( char arg0 [ ] ) { ensureSpace ( arg0 . length ) ; for ( int loc0 = 0 ; loc0 < arg0 . length ; loc0 ++ ) write ( arg0 [ loc0 ] ) ; }", "nl": "writes one byte per char concode_field_sep int pos concode_elem_sep byte buf[] concode_field_sep void writeInt concode_elem_sep void writeByte concode_elem_sep byte[] getBuffer concode_elem_sep void writeFloat concode_elem_sep void writeChar concode_elem_sep void writeLong concode_elem_sep void writeBytes concode_elem_sep int size concode_elem_sep byte[] toByteArray concode_elem_sep void writeUTF concode_elem_sep void reset concode_elem_sep void writeStringZ concode_elem_sep void writeShort concode_elem_sep void writeChars concode_elem_sep void write concode_elem_sep void write concode_elem_sep void write concode_elem_sep void ensureSpace concode_elem_sep void writeBoolean concode_elem_sep void writeDouble"}
{"code": "void function ( List < VectorXZ > arg0 ) { if ( ! arg0 . get ( 0 ) . equals ( arg0 . get ( arg0 . size ( ) - 1 ) ) ) { throw new IllegalArgumentException ( \"srini_string\" + \"srini_string\" + arg0 ) ; } }", "nl": "checks that the first and last vertex of the vertex list are equal . concode_field_sep List<VectorXZ> vertexLoop concode_field_sep List<VectorXZ> getVertexCollection concode_elem_sep VectorXZ getCenter concode_elem_sep boolean intersects concode_elem_sep boolean intersects concode_elem_sep boolean intersects concode_elem_sep double getOutlineLength concode_elem_sep SimplePolygonXZ asSimplePolygon concode_elem_sep PolygonXZ reverse concode_elem_sep VectorXZ getVertex concode_elem_sep List<VectorXZ> intersectionPositions concode_elem_sep boolean isEquivalentTo concode_elem_sep List<VectorXZ> getVertexLoop concode_elem_sep LineSegmentXZ getClosestSegment concode_elem_sep int size concode_elem_sep Collection<LineSegmentXZ> intersectionSegments concode_elem_sep TriangleXZ asTriangleXZ concode_elem_sep boolean isSelfIntersecting concode_elem_sep boolean isSelfIntersecting concode_elem_sep PolygonXYZ xyz concode_elem_sep List<VectorXZ> getVertices concode_elem_sep VectorXZ getVertexAfter concode_elem_sep boolean isSimple concode_elem_sep String toString concode_elem_sep VectorXZ getVertexBefore concode_elem_sep List<LineSegmentXZ> getSegments"}
{"code": "String function ( ) { StringBuffer loc0 = new StringBuffer ( ) ; loc0 . append ( coFac . getClass ( ) . getSimpleName ( ) ) ; loc0 . append ( \"srini_string\" + rows + \"srini_string\" + cols + \"srini_string\" ) ; return loc0 . toString ( ) ; }", "nl": "tostring method . concode_field_sep int blocksize concode_elem_sep GenMatrix<C> ZERO concode_elem_sep int DEFAULT_BSIZE concode_elem_sep GenMatrix<C> ONE concode_elem_sep Logger logger concode_elem_sep RingFactory<C> coFac concode_elem_sep float density concode_elem_sep int rows concode_elem_sep int cols concode_elem_sep Random random concode_elem_sep float DEFAULT_DENSITY concode_field_sep GenMatrix<C> randomUpper concode_elem_sep GenMatrix<C> randomUpper concode_elem_sep GenMatrix<C> randomLower concode_elem_sep GenMatrix<C> randomLower concode_elem_sep GenMatrixRing<C> product concode_elem_sep GenMatrix<C> fromList concode_elem_sep boolean isField concode_elem_sep boolean isCommutative concode_elem_sep GenMatrix<C> parse concode_elem_sep GenMatrix<C> parse concode_elem_sep java.math.BigInteger characteristic concode_elem_sep GenMatrix<C> random concode_elem_sep GenMatrix<C> random concode_elem_sep GenMatrix<C> random concode_elem_sep GenMatrix<C> random concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep GenMatrix<C> getONE concode_elem_sep GenMatrix<C> getZERO concode_elem_sep GenMatrix<C> fromInteger concode_elem_sep GenMatrix<C> fromInteger concode_elem_sep boolean isAssociative concode_elem_sep GenMatrixRing<C> transpose concode_elem_sep GenMatrix<C> copy"}
{"code": "int function ( ) { Object loc0 = getValue ( ) ; return ( getKey ( ) == null ? 0 : getKey ( ) . hashCode ( ) ) ^ ( loc0 == null ? 0 : loc0 . hashCode ( ) ) ; }", "nl": "gets a hashcode compatible with the equals method . implemented per api documentation of java.util.map.entry #hashcode concode_field_sep long serialVersionUID concode_elem_sep Map map concode_elem_sep Object key concode_field_sep Object getKey concode_elem_sep Object getValue concode_elem_sep Object setValue concode_elem_sep boolean equals concode_elem_sep String toString"}
{"code": "Object function ( ) { return value ; }", "nl": "gets the value from the pair . concode_field_sep Object value concode_elem_sep Object key concode_field_sep Object getKey concode_elem_sep String toString"}
{"code": "boolean function ( UserTransaction arg0 ) { return isCommitted ( getStatus ( arg0 ) ) ; }", "nl": "does the status code obtained from the given usertransaction indicate a commit ? concode_field_sep PlaceHolder placeHolder concode_field_sep boolean isRollback concode_elem_sep boolean isRollback concode_elem_sep boolean isRollback concode_elem_sep boolean isMarkedForRollback concode_elem_sep int getStatus concode_elem_sep int getStatus concode_elem_sep boolean isActive concode_elem_sep boolean isActive concode_elem_sep boolean isActive"}
{"code": "int function ( ) { return stok . ttype ; }", "nl": "returns the type of the current token . concode_field_sep Reader reader concode_elem_sep Error err concode_elem_sep StreamTokenizer stok concode_field_sep void set_error_handler concode_elem_sep void quoteChar concode_elem_sep boolean isQString concode_elem_sep void need concode_elem_sep String nextToken concode_elem_sep void tok_error concode_elem_sep void commentChar concode_elem_sep boolean isWord concode_elem_sep String token"}
{"code": "String [ ] function ( ) { return new String [ ] { org . eclipse . jface . text . rules . DefaultPartitioner . CONTENT_TYPES_CATEGORY } ; }", "nl": "returns the names of the document position categories used by the document partitioners created by this object to manage their partition information . if the partitioners do n't use document position categories , the returned result is null . concode_field_sep JavaCommentScanner fMultilineCommentScanner concode_elem_sep JavaCommentScanner fSinglelineCommentScanner concode_elem_sep JavaDocScanner fJavaDocScanner concode_elem_sep PreferenceListener fPreferenceListener concode_elem_sep JavaCodeScanner fCodeScanner concode_elem_sep IPreferenceStore fPreferenceStore concode_elem_sep SingleTokenJavaScanner fStringScanner concode_elem_sep String[] LEGAL_CONTENT_TYPES concode_elem_sep JavaColorManager fColorManager concode_elem_sep Preferences fCorePreferenceStore concode_field_sep RuleBasedScanner getJavaDocScanner concode_elem_sep RuleBasedScanner getSinglelineCommentScanner concode_elem_sep IDocumentPartitioner createDocumentPartitioner concode_elem_sep RuleBasedScanner getStringScanner concode_elem_sep IPreferenceStore getPreferenceStore concode_elem_sep RuleBasedScanner getCodeScanner concode_elem_sep void setupJavaDocumentPartitioner concode_elem_sep void setupJavaDocumentPartitioner concode_elem_sep RuleBasedScanner getMultilineCommentScanner concode_elem_sep void adaptToPreferenceChange concode_elem_sep IPartitionTokenScanner getPartitionScanner concode_elem_sep void propertyChange concode_elem_sep void propertyChange concode_elem_sep void dispose concode_elem_sep boolean affectsBehavior concode_elem_sep IColorManager getColorManager concode_elem_sep Preferences getCorePreferenceStore"}
{"code": "VectorXYZ function ( VectorXYZ arg0 ) { double loc0 = this . y * arg0 . loc2 - this . z * arg0 . loc1 ; double loc1 = this . z * arg0 . loc0 - this . x * arg0 . loc2 ; double loc2 = this . x * arg0 . loc1 - this . y * arg0 . loc0 ; double loc3 = sqrt ( loc0 * loc0 + loc1 * loc1 + loc2 * loc2 ) ; return new VectorXYZ ( loc0 / loc3 , loc1 / loc3 , loc2 / loc3 ) ; }", "nl": "same result as calling #normalize after #cross vectorxyz , but avoids creating a temporary vector concode_field_sep VectorXYZ NULL_VECTOR concode_elem_sep double x concode_elem_sep double y concode_elem_sep VectorXYZ X_UNIT concode_elem_sep double z concode_elem_sep VectorXYZ Z_UNIT concode_elem_sep VectorXYZ Y_UNIT concode_field_sep VectorXZ xz concode_elem_sep VectorXYZ mult concode_elem_sep AxisAlignedBoundingBoxXZ getAxisAlignedBoundingBoxXZ concode_elem_sep double dot concode_elem_sep double distanceToXZ concode_elem_sep double distanceToXZ concode_elem_sep int hashCode concode_elem_sep VectorXYZ normalize concode_elem_sep VectorXYZ xyz concode_elem_sep VectorXYZ rotateX concode_elem_sep VectorXYZ rotateY concode_elem_sep VectorXYZ rotateZ concode_elem_sep VectorXYZ add concode_elem_sep VectorXYZ add concode_elem_sep VectorXYZ add concode_elem_sep double angleTo concode_elem_sep double lengthSquared concode_elem_sep VectorXYZ invert concode_elem_sep double distanceToSquared concode_elem_sep List<VectorXYZ> addYList concode_elem_sep VectorXYZ subtract concode_elem_sep VectorXYZ subtract concode_elem_sep double length concode_elem_sep VectorXYZ cross concode_elem_sep double distanceTo concode_elem_sep double getX concode_elem_sep double getY concode_elem_sep double getZ concode_elem_sep VectorXYZ addY concode_elem_sep boolean equals concode_elem_sep VectorXYZ x concode_elem_sep VectorXYZ y concode_elem_sep String toString concode_elem_sep VectorXYZ z concode_elem_sep VectorXYZ rotateVec concode_elem_sep VectorXYZ rotateVec"}
{"code": "String function ( String arg0 ) { if ( arg0 == null ) { return this . sender . flush ( ) ; } else { boolean [ ] loc0 = loc0 ( arg0 ) ; return this . sender . send ( loc0 ) ; } }", "nl": "codiert die zu sendende eingabe in eine signalfolge . concode_field_sep char zero concode_elem_sep char minus concode_elem_sep String regexp concode_elem_sep Charset charset concode_elem_sep int pointer concode_elem_sep Receiver receiver concode_elem_sep Sender sender concode_elem_sep int length concode_elem_sep BitAmount bits concode_elem_sep boolean[] buffer concode_elem_sep char plus concode_field_sep char minus concode_elem_sep String getRegExp concode_elem_sep String receive concode_elem_sep char getLastPulseOfReceiver concode_elem_sep String charform concode_elem_sep String read concode_elem_sep void clear concode_elem_sep boolean isEmpty concode_elem_sep char plus concode_elem_sep int getDC concode_elem_sep char zero concode_elem_sep StringBuilder stringform concode_elem_sep boolean[] bitform concode_elem_sep char getLastPulseOfSender concode_elem_sep char bufferToDecimal concode_elem_sep boolean get concode_elem_sep int getLength concode_elem_sep String getCharsetRegExp concode_elem_sep BitBuffer copy concode_elem_sep void buffer concode_elem_sep boolean isFull"}
{"code": "DrillConfig function ( ) { return config ; }", "nl": "get the drillconfig used for the zookeeper instance . concode_field_sep org.slf4j.Logger logger concode_elem_sep File testDir concode_elem_sep String zkUrl concode_elem_sep MiniZooKeeperCluster zkCluster concode_elem_sep DrillConfig config concode_field_sep void startZookeeper concode_elem_sep void stopZookeeper"}
{"code": "long function ( ) { return mLastEventTime ; }", "nl": "returns the time of the last event related to the gesture . concode_field_sep String LOGTAG concode_elem_sep Stack<PointerInfo> sPointerInfoFreeList concode_elem_sep LinkedList<PointerInfo> mPointerInfo concode_elem_sep PointF mPrevious concode_elem_sep PointF mCurrent concode_elem_sep int mId concode_elem_sep SimpleScaleGestureListener mListener concode_elem_sep long mLastEventTime concode_elem_sep boolean mScaleResult concode_field_sep PointF getPrevious concode_elem_sep void onTouchStart concode_elem_sep float getCurrentSpan concode_elem_sep void onScaleEnd concode_elem_sep void sendScaleGesture concode_elem_sep boolean onScale concode_elem_sep void onTouchEvent concode_elem_sep int getActionIndex concode_elem_sep PointerInfo pointerInfoForEventIndex concode_elem_sep float getFocusX concode_elem_sep void onTouchMove concode_elem_sep float getFocusY concode_elem_sep int getId concode_elem_sep float getPreviousSpan concode_elem_sep boolean onScaleBegin concode_elem_sep void populate concode_elem_sep int getPointersDown concode_elem_sep void recycle concode_elem_sep PointerInfo create concode_elem_sep String toString concode_elem_sep void onTouchEnd concode_elem_sep PointF getCurrent concode_elem_sep boolean isInProgress"}
{"code": "void function ( ShakedownTestEntity arg0 ) { ShakedownTestEntity loc0 = shakedownTestService . updateShakedownInfo ( arg0 . getId ( ) , arg0 . getTestResult ( ) , shakedownTest_state . success ) ; log . info ( \"srini_string\" + loc0 . getId ( ) + \"srini_string\" ) ; }", "nl": "handles a successful execution concode_field_sep Logger log concode_elem_sep ShakedownTestService shakedownTestService concode_field_sep void handleUnsuccessfulShakedownTest concode_elem_sep void handleUnsuccessfulShakedownTest"}
{"code": "Instructor function ( File arg0 , JAXBContext arg1 ) { Unmarshaller loc0 = arg1 . createUnmarshaller ( ) ; Instructor loc1 = new Instructor ( ) ; loc1 . setContact ( ( Contact ) loc0 . unmarshal ( arg0 ) ) ; return loc1 ; }", "nl": "creates an instructor object using the given instructorcontactfile.the instructorcontactfile should be an xml file containing the marshaled form of a contact object . concode_field_sep PlaceHolder placeHolder concode_field_sep void main concode_elem_sep void writeSession concode_elem_sep Session readSession concode_elem_sep Student readStudent concode_elem_sep List<Student> readStudents"}
{"code": "String function ( ) { return name ; }", "nl": "name for this key concode_field_sep Date created concode_elem_sep String name concode_elem_sep String key concode_elem_sep Date created concode_field_sep Builder toBuilder concode_elem_sep Builder created concode_elem_sep Builder fromKey concode_elem_sep Date getCreated concode_elem_sep int compareTo concode_elem_sep Key build concode_elem_sep int hashCode concode_elem_sep String get concode_elem_sep boolean equals concode_elem_sep Builder builder concode_elem_sep Builder name concode_elem_sep String toString concode_elem_sep Builder key"}
{"code": "boolean function ( double arg0 , double arg1 , UnivariateRealFunction arg2 ) { return ( arg2 . value ( arg0 ) * arg2 . value ( arg1 ) < 0 ) ; }", "nl": "returns true iff the function takes opposite signs at the endpoints . concode_field_sep double functionValueAccuracy concode_elem_sep boolean resultComputed concode_elem_sep double defaultFunctionValueAccuracy concode_elem_sep UnivariateRealFunction f concode_elem_sep double relativeAccuracy concode_elem_sep double absoluteAccuracy concode_elem_sep double result concode_elem_sep int iterationCount concode_elem_sep int defaultMaximalIterationCount concode_elem_sep int maximalIterationCount concode_elem_sep double defaultAbsoluteAccuracy concode_elem_sep double defaultRelativeAccuracy concode_elem_sep long serialVersionUID concode_field_sep double getFunctionValueAccuracy concode_elem_sep void setAbsoluteAccuracy concode_elem_sep void verifySequence concode_elem_sep boolean isSequence concode_elem_sep void setResult concode_elem_sep void setRelativeAccuracy concode_elem_sep void resetFunctionValueAccuracy concode_elem_sep int getMaximalIterationCount concode_elem_sep void resetRelativeAccuracy concode_elem_sep double getAbsoluteAccuracy concode_elem_sep int getIterationCount concode_elem_sep void resetAbsoluteAccuracy concode_elem_sep void verifyInterval concode_elem_sep double getResult concode_elem_sep void setMaximalIterationCount concode_elem_sep void resetMaximalIterationCount concode_elem_sep void clearResult concode_elem_sep void verifyBracketing concode_elem_sep double getRelativeAccuracy concode_elem_sep void setFunctionValueAccuracy"}
{"code": "boolean function ( CanArea arg0 ) { if ( arg0 . getArea ( ) [ 0 ] == area [ 1 ] ) return true ; else return false ; }", "nl": "checks if the actual area has a common x1 corner with the betweenarea concode_field_sep short[] area concode_elem_sep CanVID vid concode_elem_sep Logger log concode_field_sep boolean betweenY concode_elem_sep void setArea concode_elem_sep boolean betweenX concode_elem_sep boolean betweenXboth concode_elem_sep void addToVid concode_elem_sep void setVid concode_elem_sep void setVID concode_elem_sep boolean atX0Corner concode_elem_sep boolean atY0Corner concode_elem_sep short[] areaToShort concode_elem_sep CanVID getVid concode_elem_sep boolean atY1Corner concode_elem_sep boolean betweenYboth concode_elem_sep String toString concode_elem_sep boolean commonCorner concode_elem_sep boolean commonCorner concode_elem_sep void setY0 concode_elem_sep int[] getArea concode_elem_sep void setX0 concode_elem_sep void setY1 concode_elem_sep void setX1"}
{"code": "ObserverEqValue function ( Method arg0 , Object arg1 ) { return new ObserverEqValue ( arg0 , arg1 ) ; }", "nl": "create an observereqvalue from its basic parts used when reading from a serialized file . concode_field_sep long serialVersionUID concode_elem_sep Method observer concode_elem_sep Object value concode_field_sep String get_observer_str concode_elem_sep int hashCode concode_elem_sep String toCodeStringPreStatement concode_elem_sep boolean equals concode_elem_sep String toString concode_elem_sep String toCodeString concode_elem_sep boolean evalExceptionMeansFailure concode_elem_sep Object writeReplace concode_elem_sep boolean evaluate concode_elem_sep int getArity concode_elem_sep String toCommentString"}
{"code": "String function ( ) { return this . m_label ; }", "nl": "returns the label string . concode_field_sep String m_label concode_elem_sep boolean m_isMajorTick concode_elem_sep double m_value concode_field_sep double getValue concode_elem_sep boolean isMajorTick concode_elem_sep void setMajorTick concode_elem_sep void setValue concode_elem_sep void setLabel concode_elem_sep String toString"}
{"code": "boolean function ( ) { return ( getLogger ( ) . isLoggable ( Level . FINEST ) ) ; }", "nl": "is trace logging currently enabled ? concode_field_sep String name concode_elem_sep Logger logger concode_field_sep void debug concode_elem_sep void debug concode_elem_sep void log concode_elem_sep Logger getLogger concode_elem_sep boolean isWarnEnabled concode_elem_sep void error concode_elem_sep void error concode_elem_sep boolean isFatalEnabled concode_elem_sep void fatal concode_elem_sep void fatal concode_elem_sep void warn concode_elem_sep void warn concode_elem_sep void trace concode_elem_sep void trace concode_elem_sep boolean isInfoEnabled concode_elem_sep boolean isErrorEnabled concode_elem_sep boolean isDebugEnabled concode_elem_sep void info concode_elem_sep void info"}
{"code": "void function ( ) { try { sb . append ( ' ' ) ; } catch ( NullPointerException loc0 ) { } }", "nl": "appends a column separator to the output file . concode_field_sep int initialBufferCapacity concode_elem_sep Logger log concode_elem_sep boolean started concode_elem_sep Writer out concode_elem_sep StringBuilder sb concode_field_sep void stopped concode_elem_sep void stop concode_elem_sep void appendToFile concode_elem_sep void appendToFile concode_elem_sep void appendToFile concode_elem_sep void appendToFile concode_elem_sep void appendToFile concode_elem_sep void start concode_elem_sep void appendNewLine concode_elem_sep void started concode_elem_sep boolean isStarted concode_elem_sep void setOutputFile"}
{"code": "Builder function ( ) { return new Builder ( ) ; }", "nl": "creates builder to build userwithroles . concode_field_sep String password concode_elem_sep Set<String> roles concode_elem_sep String name concode_elem_sep Set<String> roles concode_field_sep String getPassword concode_elem_sep String getName concode_elem_sep UserWithRoles build concode_elem_sep Builder withPassword concode_elem_sep Builder clearRoles concode_elem_sep Builder withRoles concode_elem_sep Builder withRoles concode_elem_sep Builder withName concode_elem_sep Set<String> getRoles"}
{"code": "CollectionFactory function ( ObjectContainer arg0 ) { if ( isClient ( arg0 ) ) { throw new UnsupportedOperationException ( \"srini_string\" ) ; } return new CollectionFactory ( arg0 ) ; }", "nl": "returns a collection factory for an objectcontainer concode_field_sep ObjectContainer _objectContainer concode_field_sep Set<E> newBigSet concode_elem_sep boolean isClient"}
{"code": "void function ( char arg0 ) { pointer ++ ; buffer . insert ( pointer , arg0 ) ; }", "nl": "puffert das erhaltene signal . concode_field_sep ZeroBuffer zeroBuffer concode_elem_sep int pointer concode_elem_sep char last concode_elem_sep State state concode_elem_sep AMI.Medium medium concode_elem_sep StringBuilder buffer concode_elem_sep int dc concode_field_sep State next concode_elem_sep CharSequence read concode_elem_sep String flush concode_elem_sep char getLastPulse concode_elem_sep void clear concode_elem_sep String send concode_elem_sep int getDC"}
{"code": "void function ( ) { query ( \"srini_string\" ) ; }", "nl": "set autocommit 1 ; concode_field_sep android.database.mysql.natives.Connector __connector concode_elem_sep String DEFAULT_PORT concode_elem_sep String encoding concode_elem_sep HashMap<String,String> config concode_field_sep void rollback concode_elem_sep void disconnect concode_elem_sep void startTransaction concode_elem_sep String getLastError concode_elem_sep ArrayList<String> fetchCol concode_elem_sep void query concode_elem_sep void commit concode_elem_sep void disableAutocommit concode_elem_sep String fetchOne concode_elem_sep boolean hasMoreRows concode_elem_sep ArrayList<ArrayList<String>> fetchAllArray concode_elem_sep ArrayList<String> fetchRowArray concode_elem_sep int lastInsertId concode_elem_sep ArrayList<HashMap<String,String>> fetchAllHash concode_elem_sep ArrayList<String> fields concode_elem_sep HashMap<String,String> fetchRowHash concode_elem_sep String escape concode_elem_sep void connect concode_elem_sep void forceFreeResult"}
{"code": "HashCodeBuilder function ( boolean [ ] arg0 ) { if ( arg0 == null ) { iTotal = iTotal * iConstant ; } else { for ( boolean loc0 : arg0 ) { append ( loc0 ) ; } } return this ; }", "nl": "append a hashcode for a boolean array . concode_field_sep int iConstant concode_elem_sep int iTotal concode_field_sep HashCodeBuilder appendSuper concode_elem_sep int toHashCode"}
{"code": "Closure function ( ) { return iTrueClosure ; }", "nl": "gets the closure called when true . concode_field_sep Predicate iPredicate concode_elem_sep Closure iFalseClosure concode_elem_sep long serialVersionUID concode_elem_sep Closure iTrueClosure concode_field_sep Predicate getPredicate concode_elem_sep Closure getInstance concode_elem_sep void execute concode_elem_sep Closure getFalseClosure"}
{"code": "EventSequenceCommandFactory function ( ) { return new EventSequenceCommandFactory ( getSequence ( ) ) ; }", "nl": "override to inject . concode_field_sep ISemanticEvent[] _selection concode_elem_sep IEventSequenceCommandFactory _commandFactory concode_elem_sep ISemanticEvent[] EMPTY_SELECTION concode_elem_sep List _listeners concode_elem_sep IEventSequence _sequence concode_elem_sep ActionProvider _actionProvider concode_field_sep List getListeners concode_elem_sep void select concode_elem_sep void sessionStarted concode_elem_sep IAction[] getActions concode_elem_sep void clickDelete concode_elem_sep IEventSequence remove concode_elem_sep ICommandStack getCommandStack concode_elem_sep ISemanticEvent[] getEvents concode_elem_sep boolean canUndo concode_elem_sep SequenceCommandLabelProvider createSequenceLabelProvider concode_elem_sep IEventSequence removeAll concode_elem_sep IEventSequence removeAll concode_elem_sep void undo concode_elem_sep void addListener concode_elem_sep IEventGroup group concode_elem_sep IEventSequence add concode_elem_sep IEventSequence add concode_elem_sep void sessionEnded concode_elem_sep boolean isEmpty concode_elem_sep boolean hasSelection concode_elem_sep ActionProvider getActionProvider concode_elem_sep void removeListener concode_elem_sep IEventSequenceCommandFactory getCommandFactory concode_elem_sep ActionProvider createActionProvider concode_elem_sep ISemanticEvent[] getSelection concode_elem_sep void setSelection concode_elem_sep IEventSequence addAll concode_elem_sep IEventSequence getSequence concode_elem_sep void exec concode_elem_sep void changed"}
{"code": "Map < String , JsonNode > function ( ) { return Collections . unmodifiableMap ( props ) ; }", "nl": "return the defined properties as an unmodifieable map . concode_field_sep Map<String,JsonNode> props concode_elem_sep Set<String> reserved concode_elem_sep Null NULL_VALUE concode_field_sep JsonNode getJsonProp concode_elem_sep void writeProps concode_elem_sep Map<String,String> getProps concode_elem_sep Map<String,JsonNode> jsonProps concode_elem_sep Map<String,Object> getObjectProps concode_elem_sep void addProp concode_elem_sep void addProp concode_elem_sep void addProp concode_elem_sep String getProp concode_elem_sep Object getObjectProp"}
{"code": "void function ( int arg0 ) { this . size = arg0 ; }", "nl": "returns the size of this document set . concode_field_sep boolean configured concode_elem_sep Distribution reorderIntvlDist concode_elem_sep boolean useRanks concode_elem_sep double zipfExp concode_elem_sep long meanReorderIntvl concode_elem_sep RandomGenerator rand concode_elem_sep String name concode_elem_sep ZipfDistribution dist concode_elem_sep int startRank concode_elem_sep Logger log concode_elem_sep List<Integer> keyPopularity concode_elem_sep int size concode_field_sep void setName concode_elem_sep String getName concode_elem_sep int getKeyForPublish concode_elem_sep void checkConfigure concode_elem_sep void setMeanReorderIntvl concode_elem_sep void setZipfExp concode_elem_sep void configure concode_elem_sep int getSize concode_elem_sep boolean containsResourcesOf concode_elem_sep Distribution getReorderDistribution concode_elem_sep void doReorder concode_elem_sep int getKeyForLookup concode_elem_sep void setBeginRank"}
{"code": "IHoverInfo function ( int arg0 , int arg1 ) { return new AbsolutePointHoverInfo ( arg0 , arg1 ) ; }", "nl": "create an absolute hover info instance . concode_field_sep PlaceHolder placeHolder concode_field_sep IHoverInfo getRelativeToCenter concode_elem_sep IHoverInfo getRelative"}
{"code": "HawtPlugin function ( ) { return new HawtPlugin ( \"srini_string\" , \"srini_string\" , \"srini_string\" , new String [ ] { \"srini_string\" } ) ; }", "nl": "loading an example plugin concode_field_sep ServletContext servletContext concode_field_sep void init concode_elem_sep PluginService pluginService concode_elem_sep ConfigFacade configFacade concode_elem_sep void main"}
{"code": "double function ( double arg0 ) { try { ExponentialDistributionImpl loc0 = new ExponentialDistributionImpl ( arg0 ) ; return loc0 . inverseCumulativeProbability ( Simulator . getRandom ( ) . nextDouble ( ) ) ; } catch ( MathException loc0 ) { loc0 . printStackTrace ( ) ; return 0 ; } }", "nl": "returns a random value exponentially distributed with mu = _ mu . concode_field_sep double mu concode_elem_sep ExponentialDistributionImpl distr concode_field_sep void writeBackToXML concode_elem_sep String toString"}
{"code": "PdfWriter function ( ) { return fc ; }", "nl": "gets the underlying pdfwriter . concode_field_sep PdfCopyFieldsImp fc concode_field_sep void setOutlines concode_elem_sep void setViewerPreferences concode_elem_sep void addJavaScript concode_elem_sep void addViewerPreference concode_elem_sep void addDocument concode_elem_sep void addDocument concode_elem_sep void addDocument concode_elem_sep boolean isFullCompression concode_elem_sep void setEncryption concode_elem_sep void setEncryption concode_elem_sep void setEncryption concode_elem_sep void setEncryption concode_elem_sep void setFullCompression concode_elem_sep void close concode_elem_sep void open"}
{"code": "String function ( String arg0 ) { final Identifier loc0 = normalizeIdentifierQuoting ( arg0 ) ; if ( loc0 == null ) { return null ; } return loc0 . render ( database ( ) . getDialect ( ) ) ; }", "nl": "normalizes the quoting of identifiers . this form returns a string rather than an identifier to better work with the legacy code in org.hibernate.mapping concode_field_sep Database database concode_field_sep Identifier normalizeIdentifierQuoting concode_elem_sep Identifier normalizeIdentifierQuoting concode_elem_sep Database database concode_elem_sep Identifier determineLogicalName concode_elem_sep MetadataBuildingContext getBuildingContext concode_elem_sep String toDatabaseIdentifierText"}
{"code": "String function ( byte [ ] arg0 ) { int loc0 = arg0 . length * 2 ; char [ ] loc1 = new char [ loc0 ] ; for ( int loc2 = 0 ; loc2 < arg0 . length ; loc2 ++ ) { int loc3 = arg0 [ loc2 ] & 0xFF ; loc1 [ loc2 * 2 ] = HEX_CHARS [ loc3 >>> 4 ] ; loc1 [ loc2 * 2 + 1 ] = HEX_CHARS [ loc3 & 0x0F ] ; } return new String ( loc1 ) ; }", "nl": "convert bytes into format as : 02020080 concode_field_sep char[] HEX_CHARS concode_elem_sep String HEX_CHARS_STR concode_field_sep byte[] hex2bytesFriendly concode_elem_sep String bytesToHexFriendly concode_elem_sep byte[] hex2bytes"}
{"code": "Builder function ( ) { rotationDegrees = 0 ; rotationPivotX = 0 ; rotationPivotY = 0 ; hasRotationPivot = false ; return this ; }", "nl": "clear the rotation transformation , if any . concode_field_sep boolean centerInside concode_elem_sep float rotationPivotY concode_elem_sep float rotationPivotX concode_elem_sep int resourceId concode_elem_sep int targetHeight concode_elem_sep boolean hasRotationPivot concode_elem_sep List<Transformation> transformations concode_elem_sep float rotationDegrees concode_elem_sep Uri uri concode_elem_sep int targetWidth concode_elem_sep boolean centerCrop concode_field_sep Builder centerInside concode_elem_sep Builder rotate concode_elem_sep Builder rotate concode_elem_sep Builder clearCenterCrop concode_elem_sep String getName concode_elem_sep boolean needsTransformation concode_elem_sep Builder setUri concode_elem_sep boolean hasCustomTransformations concode_elem_sep boolean hasImage concode_elem_sep boolean needsMatrixTransform concode_elem_sep boolean hasSize concode_elem_sep boolean hasSize concode_elem_sep Builder transform concode_elem_sep Builder clearCenterInside concode_elem_sep Request build concode_elem_sep Builder clearResize concode_elem_sep Builder buildUpon concode_elem_sep Builder resize concode_elem_sep Builder setResourceId concode_elem_sep Builder centerCrop"}
{"code": "void function ( ApplicationID arg0 ) { this . predecessorApplication = arg0 ; }", "nl": "sets the value of the predecessorapplication property . concode_field_sep ApplicationID predecessorApplication concode_elem_sep ApplicationID newApplication concode_field_sep ApplicationID getNewApplication concode_elem_sep ApplicationID getPredecessorApplication concode_elem_sep void setNewApplication"}
{"code": "void function ( ) { this . nInlined ++ ; }", "nl": "notes that a method was inlined concode_field_sep String configName concode_elem_sep int nLiveMethods concode_elem_sep Map morphicity concode_elem_sep int nNoPreexist concode_elem_sep int nLiveClasses concode_elem_sep int nInlined concode_field_sep void noteNoPreexist concode_elem_sep void printSummary concode_elem_sep void noteMorphicity concode_elem_sep void setConfigName concode_elem_sep void noteLiveMethods concode_elem_sep void noteLiveClasses"}
{"code": "FluentIterable < T > function ( Function < ? super E , T > arg0 ) { List < T > loc0 = new ArrayList < > ( ) ; Iterator < E > loc1 = loc1 ( ) ; while ( loc1 . hasNext ( ) ) { loc0 . add ( arg0 . apply ( loc1 . next ( ) ) ) ; } return from ( loc0 ) ; }", "nl": "transforms this fluentiterable into a new one containing objects of the type t. concode_field_sep Iterable<E> iterable concode_field_sep FluentIterable<E> filter concode_elem_sep Iterator<E> iterator concode_elem_sep Optional<E> last concode_elem_sep FluentIterable<E> last concode_elem_sep Spliterator<E> spliterator concode_elem_sep void forEach concode_elem_sep int getRemainingElementsCount concode_elem_sep FluentIterable<E> from concode_elem_sep List<E> toList concode_elem_sep FluentIterable<E> fromCopyOf concode_elem_sep Optional<E> first concode_elem_sep FluentIterable<E> first concode_elem_sep List<E> asList"}
{"code": "FloatList function ( FloatList arg0 ) { if ( null == arg0 ) { throw new NullPointerException ( ) ; } return UnmodifiableFloatList . wrap ( arg0 ) ; }", "nl": "returns an unmodifiable version of the given non-null floatlist . concode_field_sep FloatIterator EMPTY_FLOAT_ITERATOR concode_elem_sep FloatListIterator EMPTY_FLOAT_LIST_ITERATOR concode_elem_sep FloatList EMPTY_FLOAT_LIST concode_field_sep FloatListIterator getEmptyFloatListIterator concode_elem_sep FloatList getEmptyFloatList concode_elem_sep FloatIterator singletonFloatIterator concode_elem_sep FloatList singletonFloatList concode_elem_sep FloatListIterator unmodifiableFloatListIterator concode_elem_sep FloatIterator getEmptyFloatIterator concode_elem_sep FloatListIterator singletonFloatListIterator concode_elem_sep FloatIterator unmodifiableFloatIterator"}
{"code": "void function ( final String [ ] arg0 ) { final CustomerDao loc0 = new InMemoryCustomerDao ( ) ; performOperationsUsing ( loc0 ) ; final DataSource loc1 = createDataSource ( ) ; createSchema ( loc1 ) ; final CustomerDao loc2 = new DbCustomerDao ( loc1 ) ; performOperationsUsing ( loc2 ) ; deleteSchema ( loc1 ) ; }", "nl": "program entry point . concode_field_sep String DB_URL concode_elem_sep Logger log concode_field_sep void deleteSchema concode_elem_sep void addCustomers concode_elem_sep DataSource createDataSource concode_elem_sep void createSchema concode_elem_sep void performOperationsUsing concode_elem_sep List<Customer> generateSampleCustomers"}
{"code": "Quotient < C > function ( java . math . BigInteger arg0 ) { return new Quotient < C > ( this , ring . fromInteger ( arg0 ) ) ; }", "nl": "get a quotient element from a biginteger value . concode_field_sep RingFactory<C> ring concode_elem_sep boolean debug concode_elem_sep Logger logger concode_field_sep Quotient<C> random concode_elem_sep Quotient<C> random concode_elem_sep int hashCode concode_elem_sep boolean isField concode_elem_sep boolean equals concode_elem_sep Quotient<C> getONE concode_elem_sep boolean isCommutative concode_elem_sep Quotient<C> getZERO concode_elem_sep boolean isAssociative concode_elem_sep String toString concode_elem_sep Quotient<C> parse concode_elem_sep Quotient<C> parse concode_elem_sep Quotient<C> copy concode_elem_sep java.math.BigInteger characteristic"}
{"code": "void function ( int arg0 ) { _numClicks = arg0 ; }", "nl": "set the number of clicks associated with this event . concode_field_sep long serialVersionUID concode_elem_sep int _button concode_elem_sep int _numClicks concode_elem_sep IWidgetIdentifier hierarchyInfo concode_elem_sep boolean _checked concode_elem_sep String _cls concode_elem_sep String cls concode_elem_sep String _toString concode_elem_sep int button concode_elem_sep IWidgetIdentifier _hierarchyInfo concode_elem_sep int _index concode_elem_sep boolean _requiresLocationInfo concode_elem_sep int x concode_elem_sep int _x concode_elem_sep int y concode_elem_sep int _y concode_elem_sep String toString concode_field_sep void setY concode_elem_sep void setX concode_elem_sep int getIndex concode_elem_sep IWidgetIdentifier getHierarchyInfo concode_elem_sep int getClicks concode_elem_sep boolean isContext concode_elem_sep void accept concode_elem_sep String getItemClass concode_elem_sep int getButton concode_elem_sep void setRequiresLocationInfo concode_elem_sep int getX concode_elem_sep int getY concode_elem_sep boolean requiresLocationInfo concode_elem_sep int hashCode concode_elem_sep void setIndex concode_elem_sep boolean equals concode_elem_sep void setChecked concode_elem_sep String toString concode_elem_sep void setHierarchyInfo concode_elem_sep boolean getChecked"}
{"code": "int function ( ) { return _map . hashCode ( ) ; }", "nl": "returns the hash code of the underlying map . concode_field_sep Object _current concode_elem_sep int _total concode_elem_sep DefaultMapBag _parent concode_elem_sep Map _map concode_elem_sep int _mods concode_elem_sep Iterator _support concode_field_sep boolean add concode_elem_sep boolean add concode_elem_sep Object next concode_elem_sep boolean containsAll concode_elem_sep boolean containsAll concode_elem_sep void clear concode_elem_sep boolean isEmpty concode_elem_sep boolean hasNext concode_elem_sep void remove concode_elem_sep boolean remove concode_elem_sep boolean remove concode_elem_sep Map getMap concode_elem_sep int modCount concode_elem_sep boolean contains concode_elem_sep Iterator iterator concode_elem_sep boolean removeAll concode_elem_sep int size concode_elem_sep boolean addAll concode_elem_sep int calcTotalSize concode_elem_sep boolean equals concode_elem_sep Object[] toArray concode_elem_sep Object[] toArray concode_elem_sep Set uniqueSet concode_elem_sep void setMap concode_elem_sep String toString concode_elem_sep int getCount concode_elem_sep List extractList concode_elem_sep boolean retainAll concode_elem_sep boolean retainAll"}
{"code": "void function ( Object arg0 ) { getListIterator ( ) . set ( arg0 ) ; }", "nl": "invokes the underlying listiterator #set object method . concode_field_sep ListIterator iterator concode_field_sep void add concode_elem_sep Object next concode_elem_sep Object previous concode_elem_sep boolean hasPrevious concode_elem_sep boolean hasNext concode_elem_sep ListIterator getListIterator concode_elem_sep int nextIndex concode_elem_sep int previousIndex concode_elem_sep void remove concode_elem_sep void setListIterator"}
{"code": "GenVector < C > function ( int arg0 ) { return random ( arg0 , density , random ) ; }", "nl": "random vector . concode_field_sep GenVector<C> ZERO concode_elem_sep Logger logger concode_elem_sep RingFactory<C> coFac concode_elem_sep float density concode_elem_sep int cols concode_elem_sep List<GenVector<C>> BASIS concode_elem_sep Random random concode_elem_sep float DEFAULT_DENSITY concode_field_sep GenVector<C> fromList concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep GenVector<C> getZERO concode_elem_sep GenVector<C> fromInteger concode_elem_sep GenVector<C> fromInteger concode_elem_sep String toString concode_elem_sep GenVector<C> copy concode_elem_sep GenVector<C> parse concode_elem_sep GenVector<C> parse"}
{"code": "void function ( JobConf arg0 , Class < ? extends AvroReducer > arg1 ) { arg0 . set ( COMBINER , arg1 . getName ( ) ) ; arg0 . setCombinerClass ( HadoopCombiner . class ) ; }", "nl": "configure a job 's combiner implementation . concode_field_sep String COMBINER concode_elem_sep String MAP_OUTPUT_SCHEMA concode_elem_sep String INPUT_SCHEMA concode_elem_sep String MAPPER concode_elem_sep String TEXT_PREFIX concode_elem_sep String CONF_DATA_MODEL concode_elem_sep String BINARY_PREFIX concode_elem_sep String OUTPUT_SCHEMA concode_elem_sep String INPUT_IS_REFLECT concode_elem_sep String MAP_OUTPUT_IS_REFLECT concode_elem_sep String REDUCER concode_elem_sep String OUTPUT_CODEC concode_field_sep void configureAvroShuffle concode_elem_sep GenericData createDataModel concode_elem_sep Schema getOutputSchema concode_elem_sep void setInputSequenceFile concode_elem_sep void configureAvroInput concode_elem_sep void setDataModelClass concode_elem_sep void setInputSchema concode_elem_sep void setInputReflect concode_elem_sep void setOutputSchema concode_elem_sep void configureAvroOutput concode_elem_sep Class<? extends GenericData> getDataModelClass concode_elem_sep void setMapOutputSchema concode_elem_sep GenericData newDataModelInstance concode_elem_sep Schema getInputSchema concode_elem_sep void setMapperClass concode_elem_sep void setReducerClass concode_elem_sep Schema getMapOutputSchema concode_elem_sep void setReflect concode_elem_sep GenericData createInputDataModel concode_elem_sep void setMapOutputReflect concode_elem_sep void setOutputCodec concode_elem_sep GenericData createMapOutputDataModel concode_elem_sep void setOutputMeta concode_elem_sep void setOutputMeta concode_elem_sep void setOutputMeta"}
{"code": "void function ( EntityKey arg0 ) { subselectsByEntityKey . remove ( arg0 ) ; }", "nl": "after evicting or deleting an entity , we do n't need to know the query that was used to load it anymore do n't call this after loading the entity , since we might still need to load its collections concode_field_sep Map<String,LinkedHashMap<CollectionEntry,PersistentCollection>> batchLoadableCollections concode_elem_sep Logger LOG concode_elem_sep Map<String,LinkedHashSet<EntityKey>> batchLoadableEntityKeys concode_elem_sep PersistenceContext context concode_elem_sep Map<EntityKey,SubselectFetch> subselectsByEntityKey concode_field_sep SubselectFetch getSubselect concode_elem_sep void removeBatchLoadableCollection concode_elem_sep Serializable[] getCollectionBatch concode_elem_sep void addBatchLoadableEntityKey concode_elem_sep void clear concode_elem_sep void addSubselect concode_elem_sep void removeBatchLoadableEntityKey concode_elem_sep Serializable[] getEntityBatch concode_elem_sep void addBatchLoadableCollection concode_elem_sep boolean isCached concode_elem_sep boolean isCached"}
{"code": "WidgetStateMap function ( Display arg0 ) { WidgetStateMap loc0 = new WidgetStateMap ( ) ; WidgetCollector loc1 = new WidgetCollector ( arg0 ) ; Widget [ ] loc2 = loc1 . getWidgets ( ) ; for ( int loc3 = 0 ; loc3 < loc2 . length ; loc3 ++ ) { loc0 . put ( loc2 [ loc3 ] ) ; } return loc0 ; }", "nl": "create a widget state map from this display . concode_field_sep Map _map concode_field_sep IWidgetState get concode_elem_sep IWidgetState put concode_elem_sep IWidgetState put"}
{"code": "boolean function ( final Object arg0 ) { return ( arg0 != null ) && ( arg0 instanceof LocalVariable ) && ( ( ( LocalVariable ) arg0 ) . index == index ) ; }", "nl": "check if an object is equal to this variable . a stricter comparison than comparing indices will break hashtable lookups since a variable could have a name assigned to it after its first use . concode_field_sep String name concode_elem_sep int index concode_elem_sep Type type concode_field_sep int hashCode concode_elem_sep String name concode_elem_sep int index concode_elem_sep String toString concode_elem_sep Type type"}
{"code": "void function ( int arg0 , int arg1 ) { Event loc0 = new Event ( ) ; loc0 . type = SWT . MouseMove ; loc0 . arg0 = arg0 ; loc0 . arg1 = arg1 ; new SWTPushEventOperation ( loc0 ) . execute ( ) ; }", "nl": "dispatch a mousemove event that moves the mouse to this x , y coordinate . concode_field_sep Point pointT concode_elem_sep abbot.swt.Robot _robot concode_field_sep void robotKeyClick concode_elem_sep void doKeyDown concode_elem_sep void doKeyUp concode_elem_sep void keyUp concode_elem_sep void keyUp concode_elem_sep void mouseDown concode_elem_sep abbot.swt.Robot getAbbotRobot concode_elem_sep void mouseDoubleClick concode_elem_sep void pause concode_elem_sep boolean needsShift concode_elem_sep int[] extractKeys concode_elem_sep void mouseUp concode_elem_sep void keyClick concode_elem_sep void keyClick concode_elem_sep void keyDown concode_elem_sep void keyDown concode_elem_sep Event createClickEvent concode_elem_sep void enterText"}
{"code": "boolean function ( Map < String , String > arg0 , String arg1 , String arg2 ) { if ( arg0 == null || StringUtils . isEmpty ( arg1 ) || StringUtils . isEmpty ( arg2 ) ) { return false ; } arg0 . put ( arg1 , arg2 ) ; return true ; }", "nl": "add key-value pair to map , both key and value need not null or empty concode_field_sep String DEFAULT_KEY_AND_VALUE_PAIR_SEPARATOR concode_elem_sep String DEFAULT_KEY_AND_VALUE_SEPARATOR concode_field_sep K getKeyByValue concode_elem_sep boolean putMapNotNullKeyAndValue concode_elem_sep Map<String,String> parseKeyAndValueToMap concode_elem_sep Map<String,String> parseKeyAndValueToMap concode_elem_sep Map<String,String> parseKeyAndValueToMap concode_elem_sep String toJson concode_elem_sep boolean putMapNotNullKey concode_elem_sep boolean isEmpty concode_elem_sep boolean putMapNotEmptyKey"}
{"code": "void function ( boolean arg0 ) { this . isDefault = arg0 ; }", "nl": "set the label default status . concode_field_sep boolean isDefault concode_elem_sep String color concode_elem_sep String name concode_elem_sep int id concode_elem_sep String url concode_field_sep void setName concode_elem_sep String getUrl concode_elem_sep boolean isDefault concode_elem_sep String getName concode_elem_sep void setColor concode_elem_sep void setId concode_elem_sep String getColor concode_elem_sep int getId concode_elem_sep void setUrl"}
{"code": "int function ( Calendar arg0 , int arg1 ) { if ( arg1 == 0 ) return - 1 ; int loc0 = ( arg0 . get ( Calendar . DAY_OF_WEEK ) + 5 ) % 7 ; int loc1 , loc2 ; for ( loc2 = 0 ; loc2 < 7 ; loc2 ++ ) { loc1 = ( loc0 + loc2 ) % 7 ; if ( ( arg1 & ( 1 << loc1 ) ) > 0 ) { break ; } } return loc2 ; }", "nl": "returns number of days from today until next alarmclock concode_field_sep int column_alert concode_elem_sep int column_id concode_elem_sep ContentObserver mContentObserver concode_elem_sep int column_vibrate concode_elem_sep boolean vibrate concode_elem_sep String message concode_elem_sep int daysOfWeek concode_elem_sep Uri ALARM_URI concode_elem_sep int column_message concode_elem_sep int minute concode_elem_sep int column_hour concode_elem_sep int hour concode_elem_sep int column_minutes concode_elem_sep int column_daysofweek concode_elem_sep ContentResolver mContentResolver concode_elem_sep int id concode_elem_sep String audio concode_elem_sep Calendar nearestAlarmDate concode_field_sep Calendar getNearestAlarmDate concode_elem_sep Uri getRecordUri concode_elem_sep Record getAlarmById concode_elem_sep Intent startNightClock concode_elem_sep int hashCode concode_elem_sep Calendar calculateNextAlarm concode_elem_sep boolean equals concode_elem_sep Intent changeAlarmSettings concode_elem_sep Intent changeAlarmSettings concode_elem_sep void finalize concode_elem_sep Record getNearestEnabledAlarm concode_elem_sep Record getNearestEnabledAlarm"}
{"code": "boolean function ( PastryContact arg0 ) { return entries . add ( arg0 ) ; }", "nl": "insert a new entry into the routeset . this method does not check whether this routeset is the right one to add the contact . this should be checked prior to the insertion by the routing table . concode_field_sep LinkedHashSet<PastryContact> entries concode_elem_sep RequestRouteSetOperation reqOp concode_elem_sep RouteSet OWNER_SET concode_field_sep boolean removeEntry concode_elem_sep int getSize concode_elem_sep boolean contains concode_elem_sep Iterator<PastryContact> iterator concode_elem_sep RouteSet getNewInstance concode_elem_sep String toString concode_elem_sep boolean isUpdating concode_elem_sep void startUpdateOperation"}
{"code": "boolean function ( ) { if ( entryNum == 0 ) { return true ; } else { return false ; } }", "nl": "tests if the dictionary is empty . concode_field_sep int entryNum concode_elem_sep List[] hashArray concode_field_sep int numCollisions concode_elem_sep int findBuckets concode_elem_sep int size concode_elem_sep Entry find concode_elem_sep void makeEmpty concode_elem_sep Entry insert concode_elem_sep void main concode_elem_sep int compFunction concode_elem_sep int findPrimes concode_elem_sep Entry remove"}
{"code": "Set < String > function ( ) { return roles ; }", "nl": "set of roles to be assigned to the user . concode_field_sep String password concode_elem_sep Set<String> roles concode_elem_sep String name concode_elem_sep Set<String> roles concode_field_sep String getPassword concode_elem_sep String getName concode_elem_sep UserWithRoles build concode_elem_sep Builder builder concode_elem_sep Builder withPassword concode_elem_sep Builder clearRoles concode_elem_sep Builder withRoles concode_elem_sep Builder withRoles concode_elem_sep Builder withName"}
{"code": "String function ( String arg0 ) { return new String ( decode ( arg0 . getBytes ( ) ) ) ; }", "nl": "decode the given string . concode_field_sep byte INVALID concode_elem_sep byte EQUAL concode_elem_sep byte[] ascii concode_elem_sep byte WHITESPACE concode_elem_sep byte[] base64 concode_field_sep byte[] encode concode_elem_sep byte[] encode concode_elem_sep String encode"}
{"code": "void function ( java . util . Calendar arg0 ) { this . signDate = arg0 ; }", "nl": "sets the signature date . concode_field_sep XpathConstructor xpathConstructor concode_elem_sep Certificate signCertificate concode_elem_sep PdfStamper stamper concode_elem_sep String mimeType concode_elem_sep String description concode_elem_sep PdfStamperImp writer concode_elem_sep XmlLocator xmlLocator concode_elem_sep Calendar signDate concode_field_sep java.util.Calendar getSignDate concode_elem_sep XmlLocator getXmlLocator concode_elem_sep String getMimeType concode_elem_sep void setMimeType concode_elem_sep void setStamper concode_elem_sep void setDescription concode_elem_sep PdfStamper getStamper concode_elem_sep String getDescription concode_elem_sep void setCertificate concode_elem_sep Certificate getCertificate concode_elem_sep XpathConstructor getXpathConstructor concode_elem_sep PdfStamperImp getWriter concode_elem_sep void setXmlLocator concode_elem_sep void setXpathConstructor concode_elem_sep void close"}
{"code": "Propertyupdate function ( ) { return new Propertyupdate ( ) ; }", "nl": "create an instance of propertyupdate concode_field_sep QName _SyncToken_QNAME concode_elem_sep QName _Dst_QNAME concode_elem_sep QName _SyncLevel_QNAME concode_elem_sep QName _Status_QNAME concode_elem_sep QName _Depth_QNAME concode_elem_sep QName _Responsedescription_QNAME concode_elem_sep QName _Nresults_QNAME concode_elem_sep QName _Timeout_QNAME concode_elem_sep QName _Href_QNAME concode_elem_sep QName _Src_QNAME concode_field_sep JAXBElement<String> createDst concode_elem_sep Propstat createPropstat concode_elem_sep Supportedlock createSupportedlock concode_elem_sep Propertybehavior createPropertybehavior concode_elem_sep Lockentry createLockentry concode_elem_sep Resourcetype createResourcetype concode_elem_sep Unauthenticated createUnauthenticated concode_elem_sep JAXBElement<String> createSyncToken concode_elem_sep JAXBElement<String> createStatus concode_elem_sep Link createLink concode_elem_sep SyncCollection createSyncCollection concode_elem_sep Limit createLimit concode_elem_sep Location createLocation concode_elem_sep JAXBElement<String> createSyncLevel concode_elem_sep SupportedReportSet createSupportedReportSet concode_elem_sep Lockinfo createLockinfo concode_elem_sep Getcontentlanguage createGetcontentlanguage concode_elem_sep Lockscope createLockscope concode_elem_sep Getcontenttype createGetcontenttype concode_elem_sep Owner createOwner concode_elem_sep Read createRead concode_elem_sep All createAll concode_elem_sep Lockdiscovery createLockdiscovery concode_elem_sep Exclusive createExclusive concode_elem_sep ReadAcl createReadAcl concode_elem_sep JAXBElement<String> createDepth concode_elem_sep WriteContent createWriteContent concode_elem_sep Getetag createGetetag concode_elem_sep Omit createOmit concode_elem_sep Collection createCollection concode_elem_sep Propname createPropname concode_elem_sep Error createError concode_elem_sep ReadCurrentUserPrivilegeSet createReadCurrentUserPrivilegeSet concode_elem_sep Authenticated createAuthenticated concode_elem_sep Bind createBind concode_elem_sep JAXBElement<BigInteger> createNresults concode_elem_sep JAXBElement<String> createHref concode_elem_sep Report createReport concode_elem_sep JAXBElement<String> createTimeout concode_elem_sep Keepalive createKeepalive concode_elem_sep Shared createShared concode_elem_sep Locktype createLocktype concode_elem_sep Remove createRemove concode_elem_sep Write createWrite concode_elem_sep JAXBElement<String> createResponsedescription concode_elem_sep Creationdate createCreationdate concode_elem_sep JAXBElement<String> createSrc concode_elem_sep Activelock createActivelock concode_elem_sep Getcontentlength createGetcontentlength concode_elem_sep Prop createProp concode_elem_sep Displayname createDisplayname concode_elem_sep Response createResponse concode_elem_sep UnBind createUnbind concode_elem_sep SearchRequest createSearch concode_elem_sep Set createSet concode_elem_sep Locktoken createLocktoken concode_elem_sep Source createSource concode_elem_sep Propfind createPropfind concode_elem_sep Self createSelf concode_elem_sep Getlastmodified createGetlastmodified concode_elem_sep SupportedReport createSupportedReport concode_elem_sep Unlock createUnlock concode_elem_sep Multistatus createMultistatus concode_elem_sep Allprop createAllprop concode_elem_sep WriteProperties createWriteProperties"}
{"code": "int function ( ) { return writePosition - readPosition ; }", "nl": "returns the number of bytes available for reading from the current position . concode_field_sep int markPosition concode_elem_sep ParsableByteArray buffer concode_elem_sep int readPosition concode_elem_sep int writePosition concode_elem_sep int capacity concode_field_sep int drainToOutput concode_elem_sep void read concode_elem_sep boolean readAllowingEndOfInput concode_elem_sep boolean ensureLoaded concode_elem_sep void returnToMark concode_elem_sep void reset concode_elem_sep ParsableByteArray getParsableByteArray concode_elem_sep void skip concode_elem_sep boolean readInternal concode_elem_sep void mark"}
{"code": "void function ( PropertyChangeListener arg0 ) { propertyChangeSupport . addPropertyChangeListener ( arg0 ) ; }", "nl": "removes a previously registered listener . concode_field_sep SequentialDispatcher dispatcher concode_elem_sep int state concode_elem_sep PropertyChangeSupport propertyChangeSupport concode_elem_sep EventListenerList listenerList concode_elem_sep int targetState concode_field_sep void removeStateListener concode_elem_sep void doRealized concode_elem_sep void doPrefetching concode_elem_sep void fireStateChanged concode_elem_sep void fireStateChanged concode_elem_sep int getTargetState concode_elem_sep void prefetch concode_elem_sep void deallocate concode_elem_sep void start concode_elem_sep void run concode_elem_sep boolean isActive concode_elem_sep void setTargetState concode_elem_sep void addChangeListener concode_elem_sep void doUnrealized concode_elem_sep void doRealizing concode_elem_sep void removeChangeListener concode_elem_sep void doClosed concode_elem_sep int getState concode_elem_sep void stop concode_elem_sep void doPrefetched concode_elem_sep void doStarted concode_elem_sep void addStateListener concode_elem_sep void addPropertyChangeListener concode_elem_sep void close concode_elem_sep void realize"}
{"code": "AssetQuery function ( AssetDomPosition arg0 ) { this . assetDomPosition = arg0 ; return this ; }", "nl": "filters the desired asset s on their assetdomposition . if no dom position is provided , all assets required in the current page will be returned . concode_field_sep HttpServletRequest request concode_elem_sep Logger LOG concode_elem_sep AssetDomPosition assetDomPosition concode_elem_sep Context context concode_field_sep Set<Alert> alerts concode_elem_sep Set<Asset> getFilteredAssets concode_elem_sep Set<Asset> perform concode_elem_sep Set<AssetStorageUnit> collectAssetStorageUnits"}
{"code": "void function ( ) { if ( ! authzEnabled ) { return ; } authorize ( HiveOperationType . SHOWDATABASES , Collections . < HivePrivilegeObject > emptyList ( ) , Collections . < HivePrivilegeObject > emptyList ( ) , \"srini_string\" ) ; }", "nl": "check authorization for `` show databases '' command . a hiveaccesscontrolexception is thrownfor illegal access . concode_field_sep HiveAuthorizer authorizerV2 concode_elem_sep org.slf4j.Logger logger concode_elem_sep boolean authzEnabled concode_field_sep void authorizeReadTable concode_elem_sep void authorizeShowTables concode_elem_sep void authorize"}
{"code": "Announcement function ( Jerry arg0 ) { String loc0 = arg0 . $ ( Constants . ANNOUNCEMENT_DATE ) . text ( ) ; Date loc1 = parseDate ( loc0 ) ; String loc2 = arg0 . $ ( Constants . ANNOUNCEMENT_TITLE ) . text ( ) ; String loc3 = arg0 . $ ( Constants . ANNOUNCEMENT_BODY ) . html ( ) ; return new Announcement ( loc3 , loc2 , loc1 ) ; }", "nl": "parses the jerry object to an announcement object concode_field_sep SimpleDateFormat DATE_FORMAT concode_field_sep Date parseDate concode_elem_sep List<Announcement> getAnnouncements concode_elem_sep List<Announcement> parseAnnouncements"}
{"code": "String function ( ) { if ( mAllEvents . isEmpty ( ) ) { return ( mNullEvent . toString ( ) ) ; } else { return mAllEvents . get ( mAllEvents . size ( ) - 1 ) . toString ( ) ; } }", "nl": "what is the most recent thing that happened to this particular auction ? concode_field_sep EventStatus mNullEvent concode_elem_sep String mTitle concode_elem_sep String mIdentifier concode_elem_sep Integer mEntryId concode_elem_sep List<EventStatus> mAllEvents concode_field_sep void setLastStatus concode_elem_sep String getAllStatuses concode_elem_sep void save concode_elem_sep int getStatusCount"}
{"code": "AdvancedCache function ( AdvancedCache arg0 , Flag arg1 ) { return arg0 . withFlags ( Flag . SKIP_CACHE_LOAD , Flag . SKIP_REMOTE_LOOKUP , arg1 ) ; }", "nl": "transform a given cache into a cache that ignores return values for operations returning previous values , i.e. advancedcache #put object , object , adding an extra flag . concode_field_sep PlaceHolder placeHolder concode_field_sep AdvancedCache asyncWriteCache concode_elem_sep boolean isClustered concode_elem_sep AdvancedCache localCache concode_elem_sep AdvancedCache failSilentWriteCache concode_elem_sep AdvancedCache failSilentWriteCache concode_elem_sep boolean isSynchronousCache concode_elem_sep T withinTx concode_elem_sep T withinTx concode_elem_sep boolean isInvalidationCache concode_elem_sep AdvancedCache failSilentReadCache concode_elem_sep void broadcastEvictAll"}
{"code": "List < GenPolynomial < GenPolynomial < C >>> function ( ) { List < GenPolynomial < GenPolynomial < C >>> loc0 = new ArrayList < GenPolynomial < GenPolynomial < C >>> ( ) ; for ( ColorPolynomial < C > loc1 : list ) { loc0 . add ( loc1 . getPolynomial ( ) ) ; } return loc0 ; }", "nl": "get list of full polynomials . concode_field_sep Condition<C> condition concode_elem_sep boolean debug concode_elem_sep Logger logger concode_elem_sep List<ColorPolynomial<C>> list concode_elem_sep OrderedCPairlist<C> pairlist concode_field_sep List<GenPolynomial<C>> getRedCoefficients concode_elem_sep List<GenPolynomial<C>> getConditionNonZero concode_elem_sep boolean checkInvariant concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep ColoredSystem<C> clone concode_elem_sep boolean isDetermined concode_elem_sep List<GenPolynomial<C>> getGreenCoefficients concode_elem_sep String toString concode_elem_sep ColoredSystem<C> reDetermine concode_elem_sep List<GenPolynomial<C>> getConditionZero concode_elem_sep List<GenPolynomial<GenPolynomial<C>>> getEssentialPolynomialList"}
{"code": "void function ( RPCContext arg0 ) { }", "nl": "called on the server during the rpc handshake concode_field_sep PlaceHolder placeHolder concode_field_sep void serverSendResponse concode_elem_sep void clientStartConnect concode_elem_sep void clientFinishConnect concode_elem_sep void clientSendRequest concode_elem_sep void serverReceiveRequest concode_elem_sep void clientReceiveResponse"}
{"code": "XMLParser function ( ) { return setState ( singleQuoted ) ; }", "nl": "set parser state to singlequotedattrvaluestate . concode_field_sep State closeStarComment concode_elem_sep State selfClosing concode_elem_sep State tagAttributes concode_elem_sep State unquoted concode_elem_sep State unknown concode_elem_sep State inTag concode_elem_sep State cdata concode_elem_sep State previousState concode_elem_sep State doctype concode_elem_sep State tagEncountered concode_elem_sep State singleQuoted concode_elem_sep XMLParser parser concode_elem_sep State xml concode_elem_sep State specialChar concode_elem_sep State doubleQuoted concode_elem_sep State closingTag concode_elem_sep State comment concode_elem_sep State attrValue concode_elem_sep State starComment concode_elem_sep State currentState concode_elem_sep State closeComment concode_elem_sep State processingInstruction concode_field_sep XMLParser closeStarComment concode_elem_sep XMLParser selfClosing concode_elem_sep XMLParser tagAttributes concode_elem_sep XMLParser unquotedAttr concode_elem_sep XMLParser attributeValue concode_elem_sep XMLParser doubleQuotedAttr concode_elem_sep XMLParser previousState concode_elem_sep XMLParser unknown concode_elem_sep XMLParser inTag concode_elem_sep XMLParser cdata concode_elem_sep XMLParser doctype concode_elem_sep XMLParser tagEncountered concode_elem_sep XMLParser specialChar concode_elem_sep XMLParser setState concode_elem_sep XMLParser closingTag concode_elem_sep XMLParser comment concode_elem_sep XMLParser starComment concode_elem_sep XMLParser processingInstructions concode_elem_sep XMLParser closeComment"}
{"code": "boolean function ( Action < ? , ? > arg0 , Object arg1 ) { return this . action == arg0 && arg1 != null && entityType . isAssignableFrom ( arg1 . getClass ( ) ) ; }", "nl": "checks whether given object is of interest to this interest instance . concode_field_sep Class<E> entityType concode_elem_sep Action<C,E> action concode_field_sep Interest<C,E> having concode_elem_sep Builder<T> in concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep Class<E> getEntityType concode_elem_sep Action<C,E> getAction concode_elem_sep String toString concode_elem_sep Interest<C,E> being"}
{"code": "Board function ( ) { Board loc0 = new Board ( ) ; for ( int loc1 = 0 ; loc1 < DIMENSION ; loc1 ++ ) { for ( int loc2 = 0 ; loc2 < DIMENSION ; loc2 ++ ) { loc0 . grid [ loc1 ] [ loc2 ] = this . getContent ( loc1 , loc2 ) ; } } loc0 . whiteChips = whiteChips ; loc0 . blackChips = blackChips ; return loc0 ; }", "nl": "clone clones the current game board into a new object concode_field_sep int EMPTY concode_elem_sep int blackChips concode_elem_sep int[][] grid concode_elem_sep int whiteChips concode_elem_sep int DIMENSION concode_elem_sep int WHITE concode_elem_sep int BLACK concode_field_sep void setContent concode_elem_sep int getContent concode_elem_sep String toString concode_elem_sep int numberOfChips concode_elem_sep int numberOfChips concode_elem_sep int[][] currentBoard"}
{"code": "void function ( IUISemanticEvent arg0 ) { System . out . println ( \"srini_string\" + arg0 ) ; }", "nl": "a describer used for stateful event descrptions concode_field_sep PlaceHolder placeHolder concode_field_sep void notifyStart concode_elem_sep void notifyDispose concode_elem_sep void notifyDisplayNotFound concode_elem_sep void notifyPause concode_elem_sep void notifyAssertionHookAdded concode_elem_sep void notifyControllerStart concode_elem_sep void notifyWrite concode_elem_sep void notifyTrace concode_elem_sep void notifySpyModeToggle concode_elem_sep void notifyStop concode_elem_sep void notifyError concode_elem_sep void notifyRestart"}
{"code": "void function ( double arg0 ) { this . mu = arg0 ; }", "nl": "setter for property mu . concode_field_sep int DIGEST_MODE concode_elem_sep BufferedReader filePointer concode_elem_sep int CONSTANT_MODE concode_elem_sep int mode concode_elem_sep double mu concode_elem_sep EmpiricalDistribution empiricalDistribution concode_elem_sep URL valuesFileURL concode_elem_sep double sigma concode_elem_sep RandomDataImpl randomData concode_elem_sep int REPLAY_MODE concode_elem_sep int EXPONENTIAL_MODE concode_elem_sep int GAUSSIAN_MODE concode_elem_sep int UNIFORM_MODE concode_field_sep EmpiricalDistribution getEmpiricalDistribution concode_elem_sep double getNextUniform concode_elem_sep void closeReplayFile concode_elem_sep double getMu concode_elem_sep void setMode concode_elem_sep double getNext concode_elem_sep void fill concode_elem_sep double[] fill concode_elem_sep double getSigma concode_elem_sep void computeDistribution concode_elem_sep void computeDistribution concode_elem_sep void setValuesFileURL concode_elem_sep void setValuesFileURL concode_elem_sep double getNextReplay concode_elem_sep URL getValuesFileURL concode_elem_sep void setSigma concode_elem_sep void resetReplayFile concode_elem_sep double getNextGaussian concode_elem_sep int getMode concode_elem_sep double getNextDigest concode_elem_sep double getNextExponential"}
{"code": "void function ( T arg0 ) { }", "nl": "called on the event dispatching thread not on the worker thread after the construct method has returned without throwing an error . the default implementation does nothing . subclasses may override this method to perform done actions on the event dispatch thread . concode_field_sep Throwable error concode_elem_sep T value concode_field_sep Throwable getError concode_elem_sep T getValue concode_elem_sep void setError concode_elem_sep void setValue concode_elem_sep void start concode_elem_sep void run concode_elem_sep void finished concode_elem_sep T construct concode_elem_sep void failed"}
{"code": "String function ( String arg0 , String arg1 ) { return new StringBuffer ( arg0 ) . append ( SLASH_STRING ) . append ( arg1 ) . toString ( ) ; }", "nl": "just sticks all the strings together with ' / ' contract : user must ensure that each param is not empty . concode_field_sep String DOT concode_elem_sep String SLASH_STRING concode_elem_sep char DOT_CHAR concode_elem_sep char SLASH_CHAR concode_field_sep void safeJoin concode_elem_sep void assertNotEmpty concode_elem_sep boolean isEmpty concode_elem_sep boolean isEmpty concode_elem_sep boolean isEmpty concode_elem_sep boolean isEmpty concode_elem_sep boolean isEmpty concode_elem_sep boolean isEmpty concode_elem_sep boolean isEmpty concode_elem_sep String dotAppend concode_elem_sep String dotAppend"}
{"code": "void function ( XMPMeta arg0 , String arg1 ) { arg0 . setProperty ( XMPConst . NS_PDFA_ID , PdfAProperties . CONFORMANCE , arg1 ) ; }", "nl": "adds the conformance . concode_field_sep String CONFORMANCE concode_elem_sep String PART concode_field_sep void setPart"}
{"code": "long function ( ) { return executionAvgTime ; }", "nl": "the avg time to execute this query concode_field_sep long executionMaxTime concode_elem_sep String[] ITEM_DESCRIPTIONS concode_elem_sep long cacheHitCount concode_elem_sep String query concode_elem_sep String TABULAR_TYPE_NAME concode_elem_sep long cachePutCount concode_elem_sep CompositeType COMPOSITE_TYPE concode_elem_sep long cacheMissCount concode_elem_sep String[] INDEX_NAMES concode_elem_sep long executionAvgTime concode_elem_sep long executionMinTime concode_elem_sep String COMPOSITE_TYPE_NAME concode_elem_sep OpenType[] ITEM_TYPES concode_elem_sep long executionCount concode_elem_sep String[] ITEM_NAMES concode_elem_sep String COMPOSITE_TYPE_DESCRIPTION concode_elem_sep long executionRowCount concode_elem_sep TabularType TABULAR_TYPE concode_elem_sep String TABULAR_TYPE_DESCRIPTION concode_field_sep void add concode_elem_sep long getCachePutCount concode_elem_sep TabularData newTabularDataInstance concode_elem_sep long getExecutionCount concode_elem_sep long getCacheMissCount concode_elem_sep long getExecutionRowCount concode_elem_sep long getCacheHitCount concode_elem_sep long getExecutionMinTime concode_elem_sep QueryStats[] fromTabularData concode_elem_sep String toString concode_elem_sep CompositeData toCompositeData concode_elem_sep String getQuery concode_elem_sep long getExecutionMaxTime"}
{"code": "void function ( ) { Subpath loc0 = getLastSubpath ( ) ; loc0 . setClosed ( true ) ; Point2D loc1 = loc0 . getStartPoint ( ) ; moveTo ( ( float ) loc1 . getX ( ) , ( float ) loc1 . getY ( ) ) ; }", "nl": "closes the current subpath . concode_field_sep List<Subpath> subpaths concode_elem_sep String START_PATH_ERR_MSG concode_elem_sep Point2D currentPoint concode_field_sep Point2D getCurrentPoint concode_elem_sep void curveTo concode_elem_sep void curveTo concode_elem_sep boolean isEmpty concode_elem_sep Subpath getLastSubpath concode_elem_sep List<Subpath> getSubpaths concode_elem_sep void lineTo concode_elem_sep void addSubpath concode_elem_sep void addSubpaths concode_elem_sep List<Integer> replaceCloseWithLine concode_elem_sep void closeAllSubpaths concode_elem_sep void rectangle concode_elem_sep void curveFromTo concode_elem_sep void moveTo"}
{"code": "int function ( int arg0 [ ] , int arg1 ) { if ( arg1 == 0 ) { return arg0 [ 0 ] ; } else if ( arg1 == 1 ) { return Math . max ( arg0 [ 0 ] , arg0 [ 1 ] ) ; } return Math . max ( this . maxSum ( arg0 , arg1 - 2 ) + arg0 [ arg1 ] , this . maxSum ( arg0 , arg1 - 1 ) ) ; }", "nl": "recursive slow solution . concode_field_sep PlaceHolder placeHolder concode_field_sep void main"}
{"code": "boolean function ( Object arg0 ) { if ( ! ( arg0 instanceof Local ) ) { return false ; } Local < C > loc0 = null ; try { loc0 = ( Local < C > ) arg0 ; } catch ( ClassCastException loc1 ) { } if ( loc0 == null ) { return false ; } return ( 0 == compareTo ( loc0 ) ) ; }", "nl": "comparison with any other object . concode_field_sep Logger logger concode_elem_sep LocalRing<C> ring concode_elem_sep boolean debug concode_elem_sep GenPolynomial<C> num concode_elem_sep int isunit concode_elem_sep GenPolynomial<C> den concode_field_sep int signum concode_elem_sep boolean isONE concode_elem_sep Local<C> inverse concode_elem_sep boolean isUnit concode_elem_sep Local<C> subtract concode_elem_sep GenPolynomial<C> gcd concode_elem_sep Local<C> gcd concode_elem_sep Local<C> sum concode_elem_sep int compareTo concode_elem_sep Local<C>[] egcd concode_elem_sep Local<C> monic concode_elem_sep Local<C> abs concode_elem_sep int hashCode concode_elem_sep Local<C> negate concode_elem_sep GenPolynomial<C> lcm concode_elem_sep Local<C> clone concode_elem_sep boolean isZERO concode_elem_sep String toString concode_elem_sep Local<C> divide concode_elem_sep Local<C> multiply concode_elem_sep Local<C> remainder"}
{"code": "void function ( ) { Assert . assertTrue ( root . hasChild ( CHILD1 , \"srini_string\" ) ) ; }", "nl": "test tag #haschild string , string . concode_field_sep Tag childsChild concode_elem_sep String CHILD2 concode_elem_sep Tag child1NoChildren concode_elem_sep String CHILD1 concode_elem_sep Tag root concode_elem_sep String CHILDS_CHILD concode_elem_sep String ROOTSTR concode_elem_sep Tag child2WithChild concode_field_sep void getChildRecursive concode_elem_sep void hasChildRecursive concode_elem_sep void hasChildren concode_elem_sep void getChild concode_elem_sep void setUp concode_elem_sep void hasParent"}
{"code": "Date function ( ) { return _start ; }", "nl": "gets the start date of this event concode_field_sep Date _end concode_elem_sep Date _start concode_elem_sep String _title concode_elem_sep String _id concode_elem_sep String _description concode_field_sep String getTitle concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep String getId concode_elem_sep String toString concode_elem_sep String getDescription concode_elem_sep Date getEnd"}
{"code": "void function ( int arg0 ) { if ( ! eventPool . containsKey ( arg0 ) ) { throw new EventDoesNotExistException ( arg0 + \"srini_string\" ) ; } if ( arg0 == currentlyRunningSyncEvent ) { currentlyRunningSyncEvent = - 1 ; } eventPool . get ( arg0 ) . stop ( ) ; eventPool . remove ( arg0 ) ; }", "nl": "stops event . concode_field_sep Random rand concode_elem_sep int currentlyRunningSyncEvent concode_elem_sep int MIN_ID concode_elem_sep int MAX_RUNNING_EVENTS concode_elem_sep int MAX_EVENT_TIME concode_elem_sep Map<Integer,Event> eventPool concode_elem_sep int MAX_ID concode_field_sep void completedEventHandler concode_elem_sep void start concode_elem_sep int generateId concode_elem_sep int create concode_elem_sep int createEvent concode_elem_sep Map<Integer,Event> getEventPool concode_elem_sep int numOfCurrentlyRunningSyncEvent concode_elem_sep int createAsync concode_elem_sep void statusOfAllEvents concode_elem_sep void shutdown concode_elem_sep void status"}
{"code": "void function ( QuotaUsedBytes arg0 ) { this . quotaUsedBytes = arg0 ; }", "nl": "sets the value of the quotausedbytes property . concode_field_sep Owner owner concode_elem_sep PrincipalURL principalURL concode_elem_sep Creationdate creationdate concode_elem_sep Getlastmodified getlastmodified concode_elem_sep Getcontentlanguage getcontentlanguage concode_elem_sep Getetag getetag concode_elem_sep Getcontentlength getcontentlength concode_elem_sep SupportedReportSet supportedReportSet concode_elem_sep Acl acl concode_elem_sep PrincipalCollectionSet principalCollectionSet concode_elem_sep Resourcetype resourcetype concode_elem_sep List<Element> any concode_elem_sep QuotaUsedBytes quotaUsedBytes concode_elem_sep Lockdiscovery lockdiscovery concode_elem_sep QuotaAvailableBytes quotaAvailableBytes concode_elem_sep Getcontenttype getcontenttype concode_elem_sep Displayname displayname concode_elem_sep Supportedlock supportedlock concode_elem_sep Group group concode_field_sep PrincipalCollectionSet getPrincipalCollectionSet concode_elem_sep Creationdate getCreationdate concode_elem_sep void setCreationdate concode_elem_sep void setQuotaAvailableBytes concode_elem_sep Getcontentlength getGetcontentlength concode_elem_sep Displayname getDisplayname concode_elem_sep void setGetcontenttype concode_elem_sep void setAcl concode_elem_sep Owner getOwner concode_elem_sep Getlastmodified getGetlastmodified concode_elem_sep Supportedlock getSupportedlock concode_elem_sep void setLockdiscovery concode_elem_sep void setOwner concode_elem_sep SupportedReportSet getSupportedReportSet concode_elem_sep void setSupportedReportSet concode_elem_sep void setSupportedlock concode_elem_sep void setPrincipalCollectionSet concode_elem_sep QuotaUsedBytes getQuotaUsedBytes concode_elem_sep Acl getAcl concode_elem_sep void setPrincipalURL concode_elem_sep PrincipalURL getPrincipalURL concode_elem_sep void setGetetag concode_elem_sep Resourcetype getResourcetype concode_elem_sep Getcontentlanguage getGetcontentlanguage concode_elem_sep void setResourcetype concode_elem_sep Getetag getGetetag concode_elem_sep void setGroup concode_elem_sep Getcontenttype getGetcontenttype concode_elem_sep Group getGroup concode_elem_sep void setGetcontentlanguage concode_elem_sep Lockdiscovery getLockdiscovery concode_elem_sep void setGetlastmodified concode_elem_sep QuotaAvailableBytes getQuotaAvailableBytes concode_elem_sep void setDisplayname concode_elem_sep void setGetcontentlength concode_elem_sep List<Element> getAny"}
{"code": "List < ByteBuffer > function ( List < ByteBuffer > arg0 ) { return respond ( arg0 , null ) ; }", "nl": "called by a server to deserialize a request , compute and serialize a response or error . concode_field_sep Map<MD5,Protocol> protocols concode_elem_sep Logger LOG concode_elem_sep GenericDatumReader<Map<String,ByteBuffer>> META_READER concode_elem_sep List<RPCPlugin> rpcMetaPlugins concode_elem_sep Schema META concode_elem_sep ThreadLocal<Protocol> REMOTE concode_elem_sep SpecificDatumWriter<HandshakeResponse> handshakeWriter concode_elem_sep SpecificDatumReader<HandshakeRequest> handshakeReader concode_elem_sep MD5 localHash concode_elem_sep Protocol local concode_elem_sep GenericDatumWriter<Map<String,ByteBuffer>> META_WRITER concode_field_sep Protocol handshake concode_elem_sep Object readRequest concode_elem_sep Protocol getLocal concode_elem_sep void writeResponse concode_elem_sep void addRPCPlugin concode_elem_sep Protocol getRemote concode_elem_sep void writeError"}
{"code": "Class < ? > function ( String arg0 ) { try { return Class . forName ( arg0 ) ; } catch ( ClassNotFoundException loc0 ) { Thread loc1 = Thread . currentThread ( ) ; ClassLoader loc2 = loc1 . getContextClassLoader ( ) ; return Class . forName ( arg0 , false , loc2 ) ; } }", "nl": "get a java class from its name . concode_field_sep PlaceHolder placeHolder concode_field_sep ClassLoader getDefaultClassLoader concode_elem_sep boolean isPresent concode_elem_sep Object getNewInstance"}
{"code": "void function ( ) { for ( final String loc0 : definition . getParameterNames ( ) ) { if ( parameters . get ( loc0 ) == null ) { throw new HibernateException ( \"srini_string\" + getName ( ) + \"srini_string\" + loc0 + \"srini_string\" ) ; } } }", "nl": "perform validation of the filter state . this is used to verify the state of the filter after its enablement and before its use . concode_field_sep String MARKER concode_elem_sep Map<String,Object> parameters concode_elem_sep String filterName concode_elem_sep FilterDefinition definition concode_field_sep Filter setParameterList concode_elem_sep Filter setParameterList concode_elem_sep String getName concode_elem_sep Map<String,?> getParameters concode_elem_sep Filter setParameter concode_elem_sep void afterDeserialize concode_elem_sep FilterDefinition getFilterDefinition concode_elem_sep Object getParameter"}
{"code": "List function ( ) { return UnmodifiableList . decorate ( iteratorChain ) ; }", "nl": "get the list of iterators unmodifiable concode_field_sep Iterator lastUsedIterator concode_elem_sep boolean isLocked concode_elem_sep Iterator currentIterator concode_elem_sep List iteratorChain concode_elem_sep int currentIteratorIndex concode_field_sep Object next concode_elem_sep void checkLocked concode_elem_sep int size concode_elem_sep void addIterator concode_elem_sep boolean isLocked concode_elem_sep void lockChain concode_elem_sep boolean hasNext concode_elem_sep void setIterator concode_elem_sep void updateCurrentIterator concode_elem_sep void remove"}
{"code": "void function ( ) { pointer = - 1 ; }", "nl": "leert den puffer . concode_field_sep ZeroBuffer zeroBuffer concode_elem_sep int pointer concode_elem_sep char last concode_elem_sep State state concode_elem_sep AMI.Medium medium concode_elem_sep StringBuilder buffer concode_elem_sep int dc concode_field_sep State next concode_elem_sep CharSequence read concode_elem_sep String flush concode_elem_sep char getLastPulse concode_elem_sep void buffer concode_elem_sep String send concode_elem_sep int getDC"}
{"code": "Image function ( String arg0 ) { return getImage ( \"srini_string\" , arg0 ) ; }", "nl": "returns an image stored in the file at the specified path concode_field_sep HashMap m_ClassImageMap concode_field_sep void clearImages concode_elem_sep ImageIcon getIcon concode_elem_sep ImageIcon getIcon concode_elem_sep ImageIcon getIcon concode_elem_sep ImageIcon getIcon"}
{"code": "void function ( float [ ] arg0 , float [ ] arg1 ) { float loc0 = max ( 0f , min ( 1f , arg0 [ 0 ] ) ) ; float loc1 = max ( 0f , min ( 1f , arg0 [ 1 ] ) ) ; float loc2 = max ( 0f , min ( 1f , arg0 [ 2 ] ) ) ; float loc3 = 0.3f * loc0 + 0.6f * loc1 + 0.1f * loc2 ; float loc4 = loc0 - loc3 ; float loc5 = loc2 - loc3 ; float loc6 = ( loc5 / 2f ) ; float loc7 = ( loc4 / 1.6f ) ; arg1 [ 0 ] = loc3 ; arg1 [ 1 ] = loc6 ; arg1 [ 2 ] = loc7 ; }", "nl": "rgb in the range 0,1 to ycc in the range y = 0,1 , cb =[ -0.5,0.5 , cr =[ -0.5,0.5 concode_field_sep int bits concode_elem_sep String name concode_elem_sep int mask concode_field_sep int getBits concode_elem_sep void RGBtoYUV concode_elem_sep void RGBtoYIQ concode_elem_sep void YUVtoRGB concode_elem_sep String toString concode_elem_sep String toString concode_elem_sep int compareTo concode_elem_sep void YCCtoRGB concode_elem_sep void YCCtoRGB concode_elem_sep int YCCtoRGB concode_elem_sep void YIQtoRGB"}
{"code": "Map < K , V > function ( Parcel arg0 , ClassLoader arg1 ) { if ( arg0 == null ) { return null ; } int loc0 = arg0 . readInt ( ) ; if ( loc0 == - 1 ) { return null ; } Map < K , V > loc1 = new HashMap < K , V > ( ) ; for ( int loc2 = 0 ; loc2 < loc0 ; loc2 ++ ) { loc1 . put ( ( K ) arg0 . readParcelable ( arg1 ) , ( V ) arg0 . readParcelable ( arg1 ) ) ; } return loc1 ; }", "nl": "read a hashmap from a parcel , class of key and value can parcelable both concode_field_sep PlaceHolder placeHolder concode_field_sep void writeHashMap concode_elem_sep Map<String,String> readHashMapStringAndString concode_elem_sep void writeHashMapStringAndString concode_elem_sep Map<String,V> readHashMapStringKey concode_elem_sep boolean readBoolean concode_elem_sep void writeHashMapStringKey concode_elem_sep void writeBoolean"}
{"code": "void function ( String [ ] arg0 ) { LDAPServerSetupTask loc0 = new LDAPServerSetupTask ( ) ; loc0 . setup ( null , null ) ; loc0 . tearDown ( null , null ) ; }", "nl": "to test the behavior outside of the as i.e. org.jboss.as.naming.initialcontext is not used . concode_field_sep URL webAppURL concode_elem_sep LdapServer ldapServer concode_elem_sep boolean removeBouncyCastle concode_elem_sep ManagementClient mgmtClient concode_elem_sep DirectoryService directoryService concode_elem_sep Logger LOGGER concode_field_sep void testLdap concode_elem_sep void setup concode_elem_sep void testDir concode_elem_sep void tearDown concode_elem_sep WebArchive deployment"}
{"code": "ECPublicKeySpec function ( String arg0 ) { try { return publicKeySpecFromOpenSSH ( ByteSource . wrap ( arg0 . getBytes ( Charsets . UTF_8 ) ) ) ; } catch ( IOException loc0 ) { throw propagate ( loc0 ) ; } }", "nl": "executes org.jclouds.crypto.pems #publickeyspecfromopenssh com.google.common.io.inputsupplier on thestring which was openssh base64 encoded id_rsa . pub concode_field_sep Map<String,ECParameterSpec> CURVES concode_elem_sep String NISTP384 concode_elem_sep Map<Integer,String> CURVE_SIZES concode_elem_sep String ECDSA_SHA2_PREFIX concode_elem_sep ECParameterSpec nistp521 concode_elem_sep String NISTP521 concode_elem_sep ECParameterSpec nistp384 concode_elem_sep String NISTP256 concode_elem_sep ECParameterSpec nistp256 concode_field_sep byte[] keyBlob concode_elem_sep String getCurveName concode_elem_sep String encodeAsOpenSSH concode_elem_sep byte[] readLengthFirst concode_elem_sep String fingerprintPublicKey concode_elem_sep byte[] encodeECPoint concode_elem_sep String hexColonDelimited concode_elem_sep String fingerprint concode_elem_sep ECPoint decodeECPoint concode_elem_sep int getCurveSize concode_elem_sep void writeLengthFirst concode_elem_sep byte[] removeLeadingZeroes"}
{"code": "FloatList function ( float arg0 ) { FloatList loc0 = new ArrayFloatList ( 1 ) ; loc0 . add ( arg0 ) ; return UnmodifiableFloatList . wrap ( loc0 ) ; }", "nl": "returns an unmodifiable floatlist containing only the specified element . concode_field_sep FloatIterator EMPTY_FLOAT_ITERATOR concode_elem_sep FloatListIterator EMPTY_FLOAT_LIST_ITERATOR concode_elem_sep FloatList EMPTY_FLOAT_LIST concode_field_sep FloatListIterator getEmptyFloatListIterator concode_elem_sep FloatList getEmptyFloatList concode_elem_sep FloatIterator singletonFloatIterator concode_elem_sep FloatListIterator unmodifiableFloatListIterator concode_elem_sep FloatIterator getEmptyFloatIterator concode_elem_sep FloatListIterator singletonFloatListIterator concode_elem_sep FloatList unmodifiableFloatList concode_elem_sep FloatIterator unmodifiableFloatIterator"}
{"code": "boolean function ( final String [ ] arg0 ) { return isToken ( fLastToken , arg0 ) ; }", "nl": "checks the last token against the given tags ? concode_field_sep LinkedList<Integer> fSentenceBreaks concode_elem_sep String fDelimiter concode_elem_sep int WHITE_SPACE_TOKEN concode_elem_sep int fOffset concode_elem_sep int fNext concode_elem_sep int fPredecessor concode_elem_sep int fPrevious concode_elem_sep boolean fStartsSentence concode_elem_sep String fLastToken concode_elem_sep String fContent concode_elem_sep boolean fIsIgnoringSingleLetters concode_elem_sep int fSuccessor concode_elem_sep BreakIterator fWordIterator concode_field_sep String next concode_elem_sep int getBegin concode_elem_sep boolean isSingleLetter concode_elem_sep boolean hasNext concode_elem_sep boolean isWhitespace concode_elem_sep int nextSentence concode_elem_sep void skipTokens concode_elem_sep int getEnd concode_elem_sep void remove concode_elem_sep boolean isUrlToken concode_elem_sep void setIgnoreSingleLetters concode_elem_sep String nextToken concode_elem_sep boolean isAlphaNumeric concode_elem_sep void nextBreak concode_elem_sep boolean startsSentence"}
{"code": "long function ( Timestamp arg0 ) { return Timestamps . toMillis ( arg0 ) ; }", "nl": "convert a timestamp to the number of milliseconds elapsed from the epoch . the result will be rounded down to the nearest millisecond . e.g. , if the timestamp represents `` 1969-12-31t23:59:59 .999999999 z '' , it will be rounded to -1 millisecond . concode_field_sep BigInteger NANOS_PER_SECOND_BIG_INTEGER concode_elem_sep long DURATION_SECONDS_MAX concode_elem_sep long DURATION_SECONDS_MIN concode_elem_sep long TIMESTAMP_SECONDS_MAX concode_elem_sep long NANOS_PER_SECOND concode_elem_sep long TIMESTAMP_SECONDS_MIN concode_field_sep Timestamp add concode_elem_sep Duration add concode_elem_sep Duration distance concode_elem_sep Duration createDurationFromMicros concode_elem_sep Timestamp subtract concode_elem_sep Duration subtract concode_elem_sep Timestamp createTimestampFromMillis concode_elem_sep BigInteger toBigInteger concode_elem_sep BigInteger toBigInteger concode_elem_sep Duration createDurationFromNanos concode_elem_sep Timestamp createTimestampFromMicros concode_elem_sep Duration createDurationFromMillis concode_elem_sep Duration createDurationFromBigInteger concode_elem_sep Duration parseDuration concode_elem_sep long toNanos concode_elem_sep long toNanos concode_elem_sep Timestamp getEpoch concode_elem_sep Timestamp parseTimestamp concode_elem_sep String toString concode_elem_sep String toString concode_elem_sep Duration divide concode_elem_sep Duration divide concode_elem_sep long divide concode_elem_sep Timestamp createTimestampFromNanos concode_elem_sep Timestamp getCurrentTime concode_elem_sep Duration multiply concode_elem_sep Duration multiply concode_elem_sep long toMicros concode_elem_sep long toMicros concode_elem_sep Duration remainder concode_elem_sep Duration normalizedDuration"}
{"code": "void function ( String arg0 ) { this . outputMessage = arg0 ; }", "nl": "sets the output message . concode_field_sep String inputInfo concode_elem_sep String outputMessage concode_elem_sep List<String> validatorErrorMessage concode_field_sep List<String> getValidatorErrorMessage concode_elem_sep String getInputInfo concode_elem_sep void setValidatorErrorMessage concode_elem_sep String getOutputMessage concode_elem_sep void setInputInfo"}
{"code": "void function ( RatTerm arg0 , int arg1 ) { underlying_terms . setElementAt ( arg0 , arg1 ) ; terms = ( RatTerm [ ] ) underlying_terms . toArray ( new RatTerm [ ] { } ) ; }", "nl": "replacement operation . requires : t ! = null & & 0 e.g. given a rattermvec v = t2 , t3 , t4 , the statement `` v.set t5 , 1 ; '' will make v_post = t2 , t5 , t4 . concode_field_sep Vector underlying_terms concode_elem_sep RatTerm[] terms concode_field_sep int size concode_elem_sep String printDebug concode_elem_sep boolean equals concode_elem_sep RatTerm get concode_elem_sep void insert concode_elem_sep String toString concode_elem_sep void addElement concode_elem_sep RatTermVec copy concode_elem_sep void remove"}
{"code": "CatalogFactory function ( ) { CatalogFactory loc0 = null ; ClassLoader loc1 = getClassLoader ( ) ; synchronized ( factories ) { loc0 = ( CatalogFactory ) factories . get ( loc1 ) ; if ( loc0 == null ) { loc0 = new CatalogFactoryBase ( ) ; factories . put ( loc1 , loc0 ) ; } } return loc0 ; }", "nl": "return the singleton catalogfactory instancefor the relevant classloader . for applications that use a thread context class loader such as web applications running inside a servet container , this will return a separate instance for each application , even if this class is loaded from a shared parent class loader . concode_field_sep Log log concode_elem_sep String DELIMITER concode_elem_sep Map factories concode_field_sep void addCatalog concode_elem_sep Command getCommand concode_elem_sep void clear concode_elem_sep void setCatalog concode_elem_sep ClassLoader getClassLoader concode_elem_sep Iterator getNames concode_elem_sep Catalog getCatalog concode_elem_sep Catalog getCatalog"}
{"code": "void function ( ) { Set loc0 = ViewInterfaces . getPotentialViewInterfaces ( TestGroovyMessageListener . class ) ; Assert . assertEquals ( \"srini_string\" , 1 , loc0 . size ( ) ) ; Assert . assertEquals ( \"srini_string\" , MessageListener . class , loc0 . iterator ( ) . next ( ) ) ; }", "nl": "tests that the viewinterfaces #getpotentialviewinterfaces class returns the correctimplementation class for groovy class implementing messagelistener interface . concode_field_sep PlaceHolder placeHolder concode_field_sep void testJavaClass"}
{"code": "void function ( DialectResolver arg0 ) { resolvers . add ( 0 , arg0 ) ; }", "nl": "add a resolver at the beginning of the underlying resolver list . the resolver added by this method is at higher priority than any other existing resolvers . concode_field_sep CoreMessageLogger LOG concode_elem_sep List<DialectResolver> resolvers concode_field_sep void addResolver concode_elem_sep Dialect resolveDialect"}
{"code": "String [ ] function ( AssociationType arg0 , String arg1 , int arg2 , OuterJoinLoadable arg3 , Mapping arg4 ) { return getAliasedLHSColumnNames ( arg0 , arg1 , arg2 , 0 , arg3 , arg4 ) ; }", "nl": "get the qualified prefixed by alias names of the columns of the owning entity which are to be used in the join concode_field_sep PlaceHolder placeHolder concode_field_sep String[] getRHSColumnNames concode_elem_sep String getLHSTableName concode_elem_sep String[] getLHSColumnNames concode_elem_sep String[] getLHSColumnNames concode_elem_sep String[] toColumns"}
{"code": "Element function ( ) { if ( element == null ) { element = createElement ( ) ; element . setClassName ( cssClassName ) ; hookListeners ( ) ; } return element ; }", "nl": "will construct underlying dom element if it is not already constructed . concode_field_sep List<LazyEventListenerAttacher<?>> listenerAttachers concode_elem_sep String cssClassName concode_elem_sep ManagesEventListeners listenerManager concode_elem_sep Element element concode_field_sep boolean isCreated concode_elem_sep void addClassName concode_elem_sep void addClickListener concode_elem_sep void hookListeners concode_elem_sep void addMouseOverListener concode_elem_sep Element createElement concode_elem_sep String getClassName concode_elem_sep void manageEventListener concode_elem_sep void setClassName"}
{"code": "void function ( int arg0 , ExecutionOutcome arg1 ) { if ( arg0 < 0 || arg0 >= theList . size ( ) ) throw new IllegalArgumentException ( \"srini_string\" + arg0 ) ; if ( arg1 == null ) throw new IllegalArgumentException ( \"srini_string\" ) ; theList . set ( arg0 , arg1 ) ; }", "nl": "set the i-th slot to the given outcome . concode_field_sep Sequence owner concode_elem_sep List<ExecutionOutcome> theList concode_field_sep int size concode_elem_sep ExecutionOutcome get"}
{"code": "Tag function ( String arg0 , final Map < String , String > arg1 , final String arg2 ) { if ( parseHtml ) { arg0 = arg0 . toLowerCase ( ) ; } Tag loc0 = new Tag ( arg0 , arg1 , arg2 ) ; return loc0 ; }", "nl": "creates a new tag object from the given parameters . concode_field_sep ThreadLocal<WorkerContextImpl> context concode_elem_sep boolean parseHtml concode_elem_sep Pipeline<?> rootpPipe concode_field_sep void closeLocalWC concode_elem_sep void init concode_elem_sep void endElement concode_elem_sep void startElement concode_elem_sep WorkerContext getLocalWC concode_elem_sep boolean ignoreCdata concode_elem_sep void comment concode_elem_sep void text concode_elem_sep WorkerContextImpl initialValue concode_elem_sep void unknownText concode_elem_sep void close concode_elem_sep Tag getCurrentTag"}
{"code": "Connection function ( ConnectionInfo arg0 ) { Connection loc0 = cache . get ( arg0 ) ; if ( loc0 == null ) { loc0 = delegate . getConnection ( arg0 ) ; cache . put ( arg0 , loc0 ) ; } return new NonClosableConnection ( loc0 ) ; }", "nl": "creates a org.apache.drill.jdbc.nonclosableconnection connection and caches it.the returned org.apache.drill.jdbc.nonclosableconnection connection does not support java.sql.connection #close . consumer must call #close to close the cached connections . concode_field_sep ConnectionFactory delegate concode_elem_sep Logger logger concode_elem_sep Map<ConnectionInfo,Connection> cache concode_field_sep void closeConnections"}
{"code": "Iterator < String > function ( ) { return this ; }", "nl": "returns a line-by-line interator for this file . concode_field_sep String lineSep concode_elem_sep Pattern entry_stop_re concode_elem_sep String first_line concode_elem_sep BufferedReader reader concode_elem_sep Pattern include_re concode_elem_sep Pattern comment_re concode_elem_sep String body concode_elem_sep String filename concode_elem_sep Stack<ReaderInfo> readers concode_elem_sep String pushback_line concode_elem_sep long line_number concode_elem_sep Pattern entry_start_re concode_elem_sep boolean short_entry concode_field_sep String next concode_elem_sep String get_filename concode_elem_sep void set_entry_start_stop concode_elem_sep void set_entry_start_stop concode_elem_sep void putback concode_elem_sep Entry get_entry concode_elem_sep boolean hasNext concode_elem_sep void main concode_elem_sep String get_description concode_elem_sep String readLine concode_elem_sep void remove concode_elem_sep String get_next_line concode_elem_sep long get_line_number"}
{"code": "void function ( ) { final RainbowFish loc0 = new RainbowFish ( \"srini_string\" , 1 , 2 , 3 ) ; assertEquals ( \"srini_string\" , loc0 . getName ( ) ) ; assertEquals ( 1 , loc0 . getAge ( ) ) ; assertEquals ( 2 , loc0 . getLengthMeters ( ) ) ; assertEquals ( 3 , loc0 . getWeightTons ( ) ) ; }", "nl": "verify if the getters of a rainbowfish return the expected values concode_field_sep PlaceHolder placeHolder concode_field_sep placeholderType placeHolder"}
{"code": "PlayerNum function ( ) { return number ; }", "nl": "returns the current player 's number concode_field_sep PlayerNum number concode_elem_sep boolean inCheck concode_elem_sep boolean playing concode_elem_sep boolean human concode_field_sep void setInCheck concode_elem_sep boolean inCheck concode_elem_sep boolean playing concode_elem_sep boolean human concode_elem_sep void removePlayer"}
{"code": "int function ( ) { return flag ; }", "nl": "returns java flag concode_field_sep char character concode_elem_sep int flag concode_elem_sep List<RegexFlag> regexFlags concode_elem_sep Map<Character,RegexFlag> characterToRegexFlagMap concode_elem_sep boolean supported concode_field_sep int compare concode_elem_sep void registerRegexFlag concode_elem_sep String regexFlagsToString concode_elem_sep char getCharacter concode_elem_sep boolean isSupported concode_elem_sep int stringToRegexFlags"}
{"code": "Product < C > function ( long arg0 ) { return fromInteger ( new java . math . BigInteger ( \"srini_string\" + arg0 ) ) ; }", "nl": "get a product element from a long value . concode_field_sep int nCopies concode_elem_sep RingFactory<C> ring concode_elem_sep List<RingFactory<C>> ringList concode_elem_sep Logger logger concode_elem_sep Random random concode_field_sep void addFactory concode_elem_sep boolean containsFactory concode_elem_sep boolean isField concode_elem_sep int length concode_elem_sep boolean isCommutative concode_elem_sep Product<C> parse concode_elem_sep Product<C> parse concode_elem_sep RingFactory<C> getFactory concode_elem_sep java.math.BigInteger characteristic concode_elem_sep Product<C> random concode_elem_sep Product<C> random concode_elem_sep Product<C> random concode_elem_sep Product<C> random concode_elem_sep Product<C> getAtomic concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep Product<C> getONE concode_elem_sep Product<C> getZERO concode_elem_sep boolean isAssociative concode_elem_sep String toString concode_elem_sep Product<C> copy"}
{"code": "String function ( final File arg0 ) { byte [ ] loc0 = new byte [ ( int ) arg0 . length ( ) ] ; FileInputStream loc1 = new FileInputStream ( arg0 ) ; loc1 . read ( loc0 ) ; return new String ( loc0 ) ; }", "nl": "reads the contents of a file to a string . concode_field_sep PlaceHolder placeHolder concode_field_sep String unEscapeURL concode_elem_sep URL toURL concode_elem_sep char[] copyOfRange concode_elem_sep boolean isSurrogatePair concode_elem_sep boolean isSurrogatePair concode_elem_sep float inchesToPoints concode_elem_sep void skip concode_elem_sep float pointsToMillimeters concode_elem_sep Set<K> getKeySet concode_elem_sep boolean isSurrogateHigh concode_elem_sep float millimetersToInches concode_elem_sep String convertFromUtf32 concode_elem_sep int convertToUtf32 concode_elem_sep int convertToUtf32 concode_elem_sep int convertToUtf32 concode_elem_sep float millimetersToPoints concode_elem_sep float inchesToMillimeters concode_elem_sep float pointsToInches concode_elem_sep String convertToHex concode_elem_sep boolean checkTrueOrFalse concode_elem_sep boolean isSurrogateLow concode_elem_sep Object[][] addToArray"}
{"code": "String function ( ConfigKey arg0 ) { return arg0 . getDefaultValue ( ) ; }", "nl": "return the default value for a given configkey concode_field_sep boolean secretValue concode_elem_sep String envName concode_elem_sep String defaultValue concode_elem_sep String value concode_field_sep String getPropertyValue concode_elem_sep String getProperty concode_elem_sep String getProperty concode_elem_sep Integer getPropertyAsInt concode_elem_sep Integer getPropertyAsInt concode_elem_sep Boolean getPropertyAsBoolean concode_elem_sep Boolean getPropertyAsBoolean"}
{"code": "void function ( ) { assertEquals ( 84 , WebColors . getRGBColor ( RGB_PERCENT ) . getGreen ( ) ) ; }", "nl": "test method for com.itextpdf.text.html.webcolors #getrgbcolor java.lang.string . concode_field_sep String RGB_PERCENT concode_elem_sep String RGB_OUT_OF_RANGE concode_elem_sep String RGB_MISSING_COLOR_VALUES concode_field_sep String dumpColor concode_elem_sep void testGetRGBColorInPercentBlue concode_elem_sep void testGetRGBColorValueOutOfRange concode_elem_sep void testGetRGBColorChannelsMissingBlue concode_elem_sep void moreColorTest concode_elem_sep void testGetRGBColorInPercentRed concode_elem_sep void testGetRGBColorInPercentAlpha concode_elem_sep void goodColorTests concode_elem_sep void testGetRGBColorChannelsMissingRed concode_elem_sep void testGetRGBColorChannelsMissingGreen concode_elem_sep void badColorTests concode_elem_sep void testGetRGBColorNegativeValue"}
{"code": "String [ ] function ( final int arg0 ) { return OPERATOR_METRICS [ arg0 ] ; }", "nl": "given an operator type , this method returns an array of metric names indexable by metric id . concode_field_sep String[][] OPERATOR_METRICS concode_field_sep void register"}
{"code": "Set function ( ) { return map . keySet ( ) ; }", "nl": "invokes the underlying map #keyset method . concode_field_sep Map map concode_field_sep Set entrySet concode_elem_sep boolean containsKey concode_elem_sep Collection values concode_elem_sep void clear concode_elem_sep boolean isEmpty concode_elem_sep boolean containsValue concode_elem_sep Object put concode_elem_sep Object remove concode_elem_sep int size concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep Object get concode_elem_sep void putAll"}
{"code": "boolean function ( GeographicPoint arg0 ) { return false ; }", "nl": "add a node corresponding to an intersection at a geographic point if the location is already in the graph or null , this method does not change the graph . concode_field_sep PlaceHolder placeHolder concode_field_sep int getNumEdges concode_elem_sep Set<GeographicPoint> getVertices concode_elem_sep List<GeographicPoint> dijkstra concode_elem_sep List<GeographicPoint> dijkstra concode_elem_sep List<GeographicPoint> aStarSearch concode_elem_sep List<GeographicPoint> aStarSearch concode_elem_sep void main concode_elem_sep int getNumVertices concode_elem_sep void addEdge concode_elem_sep List<GeographicPoint> bfs concode_elem_sep List<GeographicPoint> bfs"}
{"code": "void function ( UserIdentity arg0 ) { final DrillUserPrincipal loc0 = ( DrillUserPrincipal ) arg0 . getUserPrincipal ( ) ; try { loc0 . close ( ) ; } catch ( final Exception loc1 ) { logger . error ( \"srini_string\" , loc1 ) ; } }", "nl": "this gets called whenever a session is invalidated because of user logout or timed out . concode_field_sep DrillbitContext drillbitContext concode_elem_sep org.slf4j.Logger logger concode_elem_sep IdentityService identityService concode_field_sep IdentityService getIdentityService concode_elem_sep DrillClient createDrillClient concode_elem_sep void setIdentityService concode_elem_sep boolean validate"}
{"code": "Object function ( ) { return value ; }", "nl": "gets the entry value . concode_field_sep boolean modifiable concode_elem_sep Object value concode_elem_sep Object key concode_field_sep Object getKey concode_elem_sep int hashCode concode_elem_sep Object setValue concode_elem_sep boolean equals"}
{"code": "void function ( final DeploymentUnit arg0 ) { if ( arg0 . getParent ( ) != null ) { arg0 . getParent ( ) . putAttachment ( ATTACHMENT_KEY , true ) ; } else { arg0 . putAttachment ( ATTACHMENT_KEY , true ) ; } }", "nl": "mark the deployment as a cdi one . concode_field_sep AttachmentKey<Boolean> ATTACHMENT_KEY concode_field_sep boolean cdiAnnotationsPresent"}
{"code": "String function ( ) { return contentEncoding ; }", "nl": "returns content encoding of the entity , if set . concode_field_sep File file concode_elem_sep boolean gzipCompress concode_elem_sep InputStream stream concode_elem_sep byte[] binary concode_elem_sep String contentEncoding concode_elem_sep boolean chunked concode_elem_sep String text concode_elem_sep List<NameValuePair> parameters concode_elem_sep Serializable serializable concode_elem_sep ContentType contentType concode_field_sep EntityBuilder setBinary concode_elem_sep boolean isGzipCompress concode_elem_sep EntityBuilder setStream concode_elem_sep String getText concode_elem_sep void clearContent concode_elem_sep EntityBuilder setContentEncoding concode_elem_sep EntityBuilder chunked concode_elem_sep EntityBuilder setSerializable concode_elem_sep File getFile concode_elem_sep EntityBuilder setParameters concode_elem_sep EntityBuilder setParameters concode_elem_sep Serializable getSerializable concode_elem_sep EntityBuilder setFile concode_elem_sep boolean isChunked concode_elem_sep EntityBuilder gzipCompress concode_elem_sep HttpEntity build concode_elem_sep List<NameValuePair> getParameters concode_elem_sep EntityBuilder create concode_elem_sep ContentType getContentType concode_elem_sep ContentType getContentOrDefault concode_elem_sep byte[] getBinary concode_elem_sep InputStream getStream concode_elem_sep EntityBuilder setContentType concode_elem_sep EntityBuilder setText"}
{"code": "boolean function ( File arg0 ) { currentFile = arg0 ; String loc0 = process0 ( arg0 ) ; currentFile = null ; if ( loc0 == null ) return false ; FileWriter loc1 = new FileWriter ( arg0 ) ; try { loc1 . write ( loc0 ) ; } finally { loc1 . close ( ) ; } return true ; }", "nl": "preprocess the specified file . if no changes were necessary , the the file is not modified . concode_field_sep boolean found concode_elem_sep Pattern pattern concode_elem_sep File currentFile concode_elem_sep String replacement concode_elem_sep List<LineProcessor> lineProcessors concode_field_sep void startProcess concode_elem_sep String process0 concode_elem_sep void endProcess concode_elem_sep File getCurrentFile concode_elem_sep void reset concode_elem_sep void reset concode_elem_sep void reset concode_elem_sep void reset concode_elem_sep boolean processAll concode_elem_sep String processLine concode_elem_sep boolean processIfExists"}
{"code": "boolean function ( VarInfo arg0 , VarInfo arg1 ) { return comparable ( arg0 . comparability , arg1 . comparability ) ; }", "nl": "returns whether two variables are comparable . concode_field_sep Logger debug concode_elem_sep int IMPLICIT concode_elem_sep int NONE concode_field_sep VarComparability makeComparabilitySameIndices concode_elem_sep VarComparability makeAlias concode_elem_sep VarComparability makeAlias concode_elem_sep VarComparability indexType concode_elem_sep VarComparability string_length_type concode_elem_sep boolean equality_set_ok concode_elem_sep boolean alwaysComparable concode_elem_sep VarComparability parse concode_elem_sep VarComparability elementType"}
{"code": "int function ( ) { return size ; }", "nl": "returns the sum of the sizes of the entries in this cache . concode_field_sep int evictionCount concode_elem_sep int putCount concode_elem_sep int hitCount concode_elem_sep int size concode_elem_sep int maxSize concode_elem_sep LinkedHashMap<String,Bitmap> map concode_elem_sep int missCount concode_field_sep int evictionCount concode_elem_sep void set concode_elem_sep void trimToSize concode_elem_sep void evictAll concode_elem_sep int hitCount concode_elem_sep int putCount concode_elem_sep Bitmap get concode_elem_sep void clear concode_elem_sep int maxSize concode_elem_sep int missCount"}
{"code": "Test function ( ) { TestSuite loc0 = new TestSuite ( \"srini_string\" ) ; loc0 . addTest ( TestTreeSetGreedy . loc0 ( ) ) ; loc0 . addTest ( TestRingBufferArrayFast . loc0 ( ) ) ; return loc0 ; }", "nl": "returns the junit test suite for this package . concode_field_sep PlaceHolder placeHolder concode_field_sep placeholderType placeHolder"}
{"code": "TaskManager function ( String arg0 ) { TaskManager loc0 = new TaskManager ( ) ; if ( arg0 == null ) return loc0 ; for ( Task loc1 : tasks ) { if ( arg0 . equalsIgnoreCase ( loc1 . arg0 ) ) loc0 . add ( loc1 ) ; } return loc0 ; }", "nl": "create a new taskmanger with only those tasks in milestone concode_field_sep String lineSep concode_elem_sep Date assigned_date concode_elem_sep String notes concode_elem_sep String milestone concode_elem_sep OutputFormat format concode_elem_sep String comment_re concode_elem_sep List<Task> tasks concode_elem_sep String include_re concode_elem_sep String description concode_elem_sep Float completed concode_elem_sep String usage_string concode_elem_sep Float duration concode_elem_sep boolean verbose concode_elem_sep String filename concode_elem_sep String task concode_elem_sep String milestone concode_elem_sep long line_number concode_elem_sep boolean completed concode_elem_sep String responsible concode_elem_sep String responsible concode_elem_sep boolean open concode_field_sep String all_vals concode_elem_sep void add concode_elem_sep String toString_milestone_html concode_elem_sep String toString_milestone_html concode_elem_sep TaskManager completed_only concode_elem_sep String toString_short_ascii concode_elem_sep String toString_short_ascii concode_elem_sep String toString_short_html concode_elem_sep String toString_short_html concode_elem_sep TaskManager responsible_match concode_elem_sep TaskManager open_only concode_elem_sep void main concode_elem_sep String short_str"}
{"code": "void function ( ) { System . out . println ( \"srini_string\" ) ; Student loc0 = new Student ( ) ; loc0 . setName ( \"srini_string\" ) ; loc0 . setId ( \"srini_string\" ) ; Student loc1 = new Student ( ) ; loc1 . setName ( \"srini_string\" ) ; loc1 . setId ( \"srini_string\" ) ; assertEquals ( loc0 , loc1 ) ; }", "nl": "test of equals method , of class student . concode_field_sep PlaceHolder placeHolder concode_field_sep void gendervalueTest concode_elem_sep void nameTest concode_elem_sep void namevalueTest concode_elem_sep void testsameiddifferentnameEquals concode_elem_sep void nameStudentTest concode_elem_sep void gradeTest concode_elem_sep void idvalueTest concode_elem_sep void testToString concode_elem_sep void genderTest concode_elem_sep void idTest concode_elem_sep void testsamenamedifferentidEquals concode_elem_sep void gradevalueTest concode_elem_sep void testdifferentiddifferentnameEquals"}
{"code": "String [ ] function ( ) { return values ; }", "nl": "returns the contents of the text widgets in the dialog in a string array . concode_field_sep ResourceBundle resAddressBook concode_elem_sep Shell shell concode_elem_sep String[] values concode_elem_sep String[] labels concode_field_sep String[] getLabels concode_elem_sep String getTitle concode_elem_sep void createTextWidgets concode_elem_sep void setValues concode_elem_sep void createControlButtons concode_elem_sep void setTitle concode_elem_sep void addTextListener concode_elem_sep void setLabels concode_elem_sep String[] open"}
{"code": "int function ( ) { return this . max ; }", "nl": "gets the maximum number of allowed persistent connections . concode_field_sep int leased concode_elem_sep int max concode_elem_sep int pending concode_elem_sep int available concode_field_sep String toString concode_elem_sep int getPending concode_elem_sep int getAvailable concode_elem_sep int getLeased"}
{"code": "boolean function ( ) { return element != null ; }", "nl": "returns true if the element has already been created . concode_field_sep List<LazyEventListenerAttacher<?>> listenerAttachers concode_elem_sep String cssClassName concode_elem_sep ManagesEventListeners listenerManager concode_elem_sep Element element concode_field_sep void addClassName concode_elem_sep void addClickListener concode_elem_sep Element getElement concode_elem_sep void hookListeners concode_elem_sep void addMouseOverListener concode_elem_sep Element createElement concode_elem_sep String getClassName concode_elem_sep void manageEventListener concode_elem_sep void setClassName"}
{"code": "void function ( ) { assertThat ( map . containsKey ( \"srini_string\" ) , is ( true ) ) ; assertThat ( map . containsKey ( null ) , is ( true ) ) ; assertThat ( map . containsKey ( \"srini_string\" ) , is ( false ) ) ; }", "nl": "test method for com.flatironschool.javacs.mylinearmap #containskey java.lang.object . concode_field_sep Map<String,Integer> map concode_field_sep void testContainsValue concode_elem_sep void testClear concode_elem_sep void testKeySet concode_elem_sep void testGet concode_elem_sep void testIsEmpty concode_elem_sep void testRemove concode_elem_sep void testSize concode_elem_sep void setUp concode_elem_sep void testPut concode_elem_sep void testPutAll concode_elem_sep void testValues"}
{"code": "String function ( String arg0 ) { return ZKUtil . joinZNode ( getIndentityZNode ( arg0 ) , KDC_FLAGS_ZNODE_NAME ) ; }", "nl": "get kdc flags znode . concode_field_sep String ENCRYPTION_KEY_NO_ZNODE_NAME concode_elem_sep String KEY_VERSION_ZNODE_NAME concode_elem_sep String PRINCIPAL_NAME_ZNODE_NAME concode_elem_sep String baseZNode concode_elem_sep String CREATED_TIME_ZNODE_NAME concode_elem_sep String KDC_FLAGS_ZNODE_NAME concode_elem_sep String DISABLED_ZNODE_NAME concode_elem_sep String KEYS_ZNODE_NAME concode_elem_sep String IDENTITIES_ZNODE_NAME concode_elem_sep String KEY_ZNODE_NAME concode_elem_sep String EXPIRE_TIME_ZNODE_NAME concode_elem_sep String KEY_TYPE_ZNODE_NAME concode_elem_sep String LOCKED_ZNODE_NAME concode_field_sep String getEncryptionKeyTypeZNode concode_elem_sep String getBaseZNode concode_elem_sep String getDisabledZNode concode_elem_sep String getKeyTypeZNode concode_elem_sep String getEncryptionKeyNoZNode concode_elem_sep String getEncryptionKeyZNode concode_elem_sep String getLockedZNode concode_elem_sep String getCreatedTimeZNode concode_elem_sep String getExpireTimeZNode concode_elem_sep String getKeyVersionZNode concode_elem_sep String getKeysZNode concode_elem_sep String getIdentitiesZNode concode_elem_sep List<String> getIdentityNames concode_elem_sep String getPrincipalNameZnode concode_elem_sep String getIndentityZNode"}
{"code": "int function ( ) { return fConditionCheckingFailedSeverity ; }", "nl": "returns the condition checking failed severity used by this operation . concode_field_sep Change fChange concode_elem_sep int fConditionCheckingFailedSeverity concode_elem_sep CheckConditionsOperation fCheckConditionOperation concode_elem_sep Refactoring fRefactoring concode_field_sep RefactoringStatus getConditionCheckingStatus concode_elem_sep Change getChange concode_elem_sep void run concode_elem_sep int getConditionCheckingStyle"}
{"code": "GenMatrix < C > function ( int arg0 , Random arg1 ) { return arg1 ( arg0 , density , arg1 ) ; }", "nl": "random matrix . concode_field_sep int blocksize concode_elem_sep GenMatrix<C> ZERO concode_elem_sep int DEFAULT_BSIZE concode_elem_sep GenMatrix<C> ONE concode_elem_sep Logger logger concode_elem_sep RingFactory<C> coFac concode_elem_sep float density concode_elem_sep int rows concode_elem_sep int cols concode_elem_sep Random random concode_elem_sep float DEFAULT_DENSITY concode_field_sep GenMatrix<C> randomUpper concode_elem_sep GenMatrix<C> randomUpper concode_elem_sep GenMatrix<C> randomLower concode_elem_sep GenMatrix<C> randomLower concode_elem_sep GenMatrixRing<C> product concode_elem_sep GenMatrix<C> fromList concode_elem_sep boolean isField concode_elem_sep boolean isCommutative concode_elem_sep GenMatrix<C> parse concode_elem_sep GenMatrix<C> parse concode_elem_sep java.math.BigInteger characteristic concode_elem_sep GenMatrix<C> random concode_elem_sep GenMatrix<C> random concode_elem_sep GenMatrix<C> random concode_elem_sep GenMatrix<C> random concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep GenMatrix<C> getONE concode_elem_sep GenMatrix<C> getZERO concode_elem_sep GenMatrix<C> fromInteger concode_elem_sep GenMatrix<C> fromInteger concode_elem_sep String toString concode_elem_sep boolean isAssociative concode_elem_sep GenMatrixRing<C> transpose concode_elem_sep GenMatrix<C> copy"}
{"code": "double function ( double arg0 ) { double loc0 = 16807.0 * arg0 + 1 ; arg0 = loc0 - ( 2147483647.0 * Math . floor ( loc0 / 2147483647.0 ) ) ; return arg0 ; }", "nl": "random number generator used by the orignal bh benchmark . concode_field_sep int nbody concode_elem_sep boolean printMsgs concode_elem_sep int nsteps concode_elem_sep double TSTOP concode_elem_sep boolean printResults concode_elem_sep double DTIME concode_field_sep void usage concode_elem_sep void main concode_elem_sep void parseCmdLine concode_elem_sep double xRand"}
{"code": "List < Event > function ( String arg0 ) { List < Event > loc0 = new ArrayList < Event > ( ) ; JSONEvent [ ] loc1 = new Gson ( ) . fromJson ( arg0 , JSONEvent [ ] . class ) ; for ( JSONEvent loc2 : loc1 ) { loc0 . add ( new Event ( loc2 . getId ( ) , loc2 . getTitle ( ) , loc2 . getDescription ( ) , loc2 . getStart ( ) , loc2 . getEnd ( ) ) ) ; } return loc0 ; }", "nl": "parses a jerry page and returns the events found in the json of this page concode_field_sep String url concode_field_sep List<Event> getEvents concode_elem_sep List<Event> getEvents concode_elem_sep List<Event> getEvents concode_elem_sep List<Event> getEvents concode_elem_sep String getURL concode_elem_sep EventSource[] getSources"}
{"code": "int function ( ) { return ( int ) Math . round ( y - yGrow ) ; }", "nl": "gets the topmost y-position of the bounding box . concode_field_sep JLabel label concode_elem_sep double xGrow concode_elem_sep double yGrow concode_elem_sep double x concode_elem_sep double y concode_elem_sep Color color concode_field_sep int getX concode_elem_sep int getHeight concode_elem_sep void grow concode_elem_sep void setColor concode_elem_sep String toString concode_elem_sep int getWidth concode_elem_sep void draw concode_elem_sep void translate concode_elem_sep void paintShape"}
{"code": "Builder function ( ) { return new Builder ( ) ; }", "nl": "creates builder to build path . concode_field_sep String path concode_elem_sep Path EMPTY concode_elem_sep String relativeTo concode_field_sep Builder withPath concode_elem_sep Path build concode_elem_sep String getPath concode_elem_sep String asString concode_elem_sep String getRelativeTo concode_elem_sep Builder withRelativeTo"}
{"code": "void function ( ) { try { iConstructor = iClassToInstantiate . getConstructor ( iParamTypes ) ; } catch ( NoSuchMethodException loc0 ) { throw new IllegalArgumentException ( \"srini_string\" ) ; } }", "nl": "find the constructor for the class specified . concode_field_sep Object[] iArgs concode_elem_sep Constructor iConstructor concode_elem_sep Class iClassToInstantiate concode_elem_sep long serialVersionUID concode_elem_sep Class[] iParamTypes concode_field_sep Object create concode_elem_sep Factory getInstance"}
{"code": "List < VectorXZ > function ( ) { return vertexLoop ; }", "nl": "returns the polygon 's vertices . first and last vertex are equal . concode_field_sep List<VectorXZ> vertexLoop concode_field_sep List<VectorXZ> getVertexCollection concode_elem_sep VectorXZ getCenter concode_elem_sep boolean intersects concode_elem_sep boolean intersects concode_elem_sep boolean intersects concode_elem_sep double getOutlineLength concode_elem_sep SimplePolygonXZ asSimplePolygon concode_elem_sep PolygonXZ reverse concode_elem_sep VectorXZ getVertex concode_elem_sep List<VectorXZ> intersectionPositions concode_elem_sep boolean isEquivalentTo concode_elem_sep LineSegmentXZ getClosestSegment concode_elem_sep int size concode_elem_sep Collection<LineSegmentXZ> intersectionSegments concode_elem_sep TriangleXZ asTriangleXZ concode_elem_sep boolean isSelfIntersecting concode_elem_sep boolean isSelfIntersecting concode_elem_sep PolygonXYZ xyz concode_elem_sep void assertLoopProperty concode_elem_sep List<VectorXZ> getVertices concode_elem_sep VectorXZ getVertexAfter concode_elem_sep boolean isSimple concode_elem_sep String toString concode_elem_sep VectorXZ getVertexBefore concode_elem_sep List<LineSegmentXZ> getSegments"}
{"code": "TabularData function ( ) { return new TabularDataSupport ( TABULAR_TYPE ) ; }", "nl": "creates a new tabulardata concode_field_sep long executionMaxTime concode_elem_sep String[] ITEM_DESCRIPTIONS concode_elem_sep long cacheHitCount concode_elem_sep String query concode_elem_sep String TABULAR_TYPE_NAME concode_elem_sep long cachePutCount concode_elem_sep CompositeType COMPOSITE_TYPE concode_elem_sep long cacheMissCount concode_elem_sep String[] INDEX_NAMES concode_elem_sep long executionAvgTime concode_elem_sep long executionMinTime concode_elem_sep String COMPOSITE_TYPE_NAME concode_elem_sep OpenType[] ITEM_TYPES concode_elem_sep long executionCount concode_elem_sep String[] ITEM_NAMES concode_elem_sep String COMPOSITE_TYPE_DESCRIPTION concode_elem_sep long executionRowCount concode_elem_sep TabularType TABULAR_TYPE concode_elem_sep String TABULAR_TYPE_DESCRIPTION concode_field_sep void add concode_elem_sep long getCachePutCount concode_elem_sep long getExecutionCount concode_elem_sep long getExecutionAvgTime concode_elem_sep long getCacheMissCount concode_elem_sep long getExecutionRowCount concode_elem_sep long getCacheHitCount concode_elem_sep long getExecutionMinTime concode_elem_sep QueryStats[] fromTabularData concode_elem_sep String toString concode_elem_sep CompositeData toCompositeData concode_elem_sep String getQuery concode_elem_sep long getExecutionMaxTime"}
{"code": "void function ( String arg0 ) { this . comment = arg0 ; this . guesstimatedBufferSize += arg0 . length ( ) ; }", "nl": "sets the comment for the select statement . concode_field_sep LockOptions lockOptions concode_elem_sep int guesstimatedBufferSize concode_elem_sep StringBuilder whereClause concode_elem_sep Dialect dialect concode_elem_sep StringBuilder selectClause concode_elem_sep String outerJoinsAfterWhere concode_elem_sep String outerJoinsAfterFrom concode_elem_sep StringBuilder fromClause concode_elem_sep String comment concode_elem_sep StringBuilder orderByClause concode_field_sep void appendFromClauseFragment concode_elem_sep void appendFromClauseFragment concode_elem_sep void setOuterJoins concode_elem_sep void setLockOptions concode_elem_sep void appendOrderByFragment concode_elem_sep String toStatementString concode_elem_sep boolean isNotEmpty concode_elem_sep boolean isNotEmpty concode_elem_sep String cleanRestrictions concode_elem_sep void appendSelectClauseFragment concode_elem_sep void setLockMode concode_elem_sep void appendRestrictions"}
{"code": "void function ( BaseContentEntry < ? > arg0 , String arg1 ) { arg0 . addLink ( SitesLink . Rel . PARENT , ILink . Type . ATOM , arg1 ) ; }", "nl": "sets the parent link of the given entry to the given id concode_field_sep boolean forward concode_elem_sep Logger LOGGER concode_field_sep Comparator<BaseContentEntry<?>> getUpdatedComparator concode_elem_sep void setContent concode_elem_sep Comparator<BaseContentEntry<?>> getTitleComparator concode_elem_sep int compare concode_elem_sep int compare concode_elem_sep String getXhtmlContent concode_elem_sep Comparator<BaseContentEntry<?>> getReverseUpdatedComparator concode_elem_sep void setParent concode_elem_sep String getParentId"}
{"code": "void function ( List < PdfPCell > arg0 ) { if ( arg0 != null ) { Collections . reverse ( arg0 ) ; rows . add ( arg0 ) ; arg0 = null ; } }", "nl": "adds a new row to the table . concode_field_sep Map<String,String> styles concode_elem_sep List<List<PdfPCell>> rows concode_elem_sep float[] colWidths concode_field_sep PdfPTable createTable concode_elem_sep boolean process concode_elem_sep void setColWidths concode_elem_sep boolean isContent concode_elem_sep boolean isNestable concode_elem_sep List<Chunk> getChunks concode_elem_sep int type"}
{"code": "File function ( ) { return tempPropertiesFile ; }", "nl": "gets the temporary properties file . concode_field_sep File customPropertiesFile concode_elem_sep Properties properties concode_elem_sep File tempPropertiesFile concode_field_sep void ImportProperties concode_elem_sep File getCustomPropertiesFile concode_elem_sep File WritePropertiesFile concode_elem_sep String get concode_elem_sep void put"}
{"code": "Set function ( ) { return cached ; }", "nl": "returns the cached . concode_field_sep FooComponent[] components concode_elem_sep List fees concode_elem_sep List bazez concode_elem_sep List subs concode_elem_sep FooProxy foo concode_elem_sep Collection bag concode_elem_sep Date[] timeArray concode_elem_sep FooProxy[] fooArray concode_elem_sep Collection byteBag concode_elem_sep Collection idFooBag concode_elem_sep List topComponents concode_elem_sep Map fooComponentToFoo concode_elem_sep Map glarchToFoo concode_elem_sep Set cached concode_elem_sep List customs concode_elem_sep String[] stringArray concode_elem_sep String text concode_elem_sep Map topGlarchez concode_elem_sep NestingComponent collectionComponent concode_elem_sep Map fooToGlarch concode_elem_sep Map cachedMap concode_elem_sep SortedSet sortablez concode_elem_sep Set cascadingBars concode_elem_sep Set fooSet concode_elem_sep List manyToAny concode_elem_sep Baz superBaz concode_elem_sep SortedSet stringSet concode_elem_sep int count concode_elem_sep Map anyToAny concode_elem_sep Map stringGlarchMap concode_elem_sep Set topFoos concode_elem_sep int[] intArray concode_elem_sep Map stringDateMap concode_elem_sep String code concode_elem_sep List moreParts concode_elem_sep List stringList concode_elem_sep String name concode_elem_sep List parts concode_elem_sep Collection fooBag concode_field_sep Map getStringGlarchMap concode_elem_sep List getManyToAny concode_elem_sep void setTimeArray concode_elem_sep String getName concode_elem_sep void setFoo concode_elem_sep SortedSet getSortablez concode_elem_sep void setStringArray concode_elem_sep int compareTo concode_elem_sep void setFooSet concode_elem_sep FooProxy getFoo concode_elem_sep void setCustoms concode_elem_sep FooComponent[] getComponents concode_elem_sep NestingComponent getCollectionComponent concode_elem_sep String getCode concode_elem_sep int getCount concode_elem_sep void setParts concode_elem_sep void setCount concode_elem_sep Map getTopGlarchez concode_elem_sep void setComponents concode_elem_sep Date[] getTimeArray concode_elem_sep String getText concode_elem_sep void setCode concode_elem_sep void setCascadingBars concode_elem_sep void setCollectionComponent concode_elem_sep void setDefaults concode_elem_sep Collection getFooBag concode_elem_sep FooProxy[] getFooArray concode_elem_sep Map getFooToGlarch concode_elem_sep void setMoreParts concode_elem_sep Collection getIdFooBag concode_elem_sep Map getStringDateMap concode_elem_sep void setStringSet concode_elem_sep String[] getStringArray concode_elem_sep void setIntArray concode_elem_sep List getStringList concode_elem_sep Map getAnyToAny concode_elem_sep void setName concode_elem_sep void setFooComponentToFoo concode_elem_sep void setBag concode_elem_sep Map getGlarchToFoo concode_elem_sep Set getFooSet concode_elem_sep void setGlarchToFoo concode_elem_sep void setFooBag concode_elem_sep void setStringList concode_elem_sep void setCachedMap concode_elem_sep Map getCachedMap concode_elem_sep Collection getByteBag concode_elem_sep Set getCascadingBars concode_elem_sep void setTopGlarchez concode_elem_sep void setTopComponents concode_elem_sep Collection getBag concode_elem_sep List getFees concode_elem_sep void setSortablez concode_elem_sep List getParts concode_elem_sep void setManyToAny concode_elem_sep void setFooArray concode_elem_sep List getCustoms concode_elem_sep Map getFooComponentToFoo concode_elem_sep void setFees concode_elem_sep void setCached concode_elem_sep void setTopFoos concode_elem_sep void setFooToGlarch concode_elem_sep List getBazez concode_elem_sep List getTopComponents concode_elem_sep void setBazez concode_elem_sep void setStringDateMap concode_elem_sep void setByteBag concode_elem_sep void setAnyToAny concode_elem_sep Set getTopFoos concode_elem_sep List getMoreParts concode_elem_sep SortedSet getStringSet concode_elem_sep int[] getIntArray concode_elem_sep void setStringGlarchMap concode_elem_sep void setIdFooBag concode_elem_sep void setText"}
{"code": "boolean function ( ) { return ( getLogger ( ) . isLoggable ( Level . SEVERE ) ) ; }", "nl": "is fatal logging currently enabled ? concode_field_sep String name concode_elem_sep Logger logger concode_field_sep void debug concode_elem_sep void debug concode_elem_sep void log concode_elem_sep Logger getLogger concode_elem_sep boolean isWarnEnabled concode_elem_sep void error concode_elem_sep void error concode_elem_sep void fatal concode_elem_sep void fatal concode_elem_sep void warn concode_elem_sep void warn concode_elem_sep void trace concode_elem_sep void trace concode_elem_sep boolean isInfoEnabled concode_elem_sep boolean isErrorEnabled concode_elem_sep boolean isTraceEnabled concode_elem_sep boolean isDebugEnabled concode_elem_sep void info concode_elem_sep void info"}
{"code": "Comparator function ( Comparator arg0 , Comparator arg1 ) { return chainedComparator ( new Comparator [ ] { arg0 , arg1 } ) ; }", "nl": "gets a comparator that compares using two comparator s . the second comparator is used if the first comparator returns equal . concode_field_sep Comparator NATURAL_COMPARATOR concode_field_sep Comparator transformedComparator concode_elem_sep Object min concode_elem_sep Comparator reversedComparator concode_elem_sep Object max concode_elem_sep Comparator naturalComparator concode_elem_sep Comparator booleanComparator concode_elem_sep Comparator nullHighComparator concode_elem_sep Comparator nullLowComparator"}
{"code": "void function ( Object arg0 , Throwable arg1 ) { if ( isLevelEnabled ( MemoryLog . LOG_LEVEL_DEBUG ) ) { log ( MemoryLog . LOG_LEVEL_DEBUG , arg0 , arg1 ) ; } }", "nl": "log an error with debug log level . concode_field_sep Date date concode_elem_sep int LOG_LEVEL_DEBUG concode_elem_sep int level concode_elem_sep Throwable throwable concode_elem_sep List logEntries concode_elem_sep int LOG_LEVEL_OFF concode_elem_sep Object message concode_elem_sep int LOG_LEVEL_WARN concode_elem_sep int LOG_LEVEL_TRACE concode_elem_sep int LOG_LEVEL_ERROR concode_elem_sep int LOG_LEVEL_INFO concode_elem_sep String logName concode_elem_sep String name concode_elem_sep int LOG_LEVEL_FATAL concode_elem_sep int LOG_LEVEL_ALL concode_elem_sep int currentLogLevel concode_field_sep void log concode_elem_sep Object getMessage concode_elem_sep boolean isLevelEnabled concode_elem_sep boolean isWarnEnabled concode_elem_sep void error concode_elem_sep void error concode_elem_sep boolean isFatalEnabled concode_elem_sep void setLevel concode_elem_sep void fatal concode_elem_sep void fatal concode_elem_sep String getLogName concode_elem_sep int getLevel concode_elem_sep int getLevel concode_elem_sep void warn concode_elem_sep void warn concode_elem_sep void trace concode_elem_sep void trace concode_elem_sep boolean isInfoEnabled concode_elem_sep boolean isErrorEnabled concode_elem_sep void reset concode_elem_sep boolean isTraceEnabled concode_elem_sep Date getDate concode_elem_sep boolean isDebugEnabled concode_elem_sep Throwable getThrowable concode_elem_sep List getLogEntries concode_elem_sep void info concode_elem_sep void info"}
{"code": "Locktype function ( ) { return new Locktype ( ) ; }", "nl": "create an instance of locktype concode_field_sep QName _SyncToken_QNAME concode_elem_sep QName _Dst_QNAME concode_elem_sep QName _SyncLevel_QNAME concode_elem_sep QName _Status_QNAME concode_elem_sep QName _Depth_QNAME concode_elem_sep QName _Responsedescription_QNAME concode_elem_sep QName _Nresults_QNAME concode_elem_sep QName _Timeout_QNAME concode_elem_sep QName _Href_QNAME concode_elem_sep QName _Src_QNAME concode_field_sep JAXBElement<String> createDst concode_elem_sep Propstat createPropstat concode_elem_sep Supportedlock createSupportedlock concode_elem_sep Propertybehavior createPropertybehavior concode_elem_sep Lockentry createLockentry concode_elem_sep Resourcetype createResourcetype concode_elem_sep Unauthenticated createUnauthenticated concode_elem_sep JAXBElement<String> createSyncToken concode_elem_sep JAXBElement<String> createStatus concode_elem_sep Link createLink concode_elem_sep SyncCollection createSyncCollection concode_elem_sep Limit createLimit concode_elem_sep Location createLocation concode_elem_sep JAXBElement<String> createSyncLevel concode_elem_sep SupportedReportSet createSupportedReportSet concode_elem_sep Lockinfo createLockinfo concode_elem_sep Getcontentlanguage createGetcontentlanguage concode_elem_sep Lockscope createLockscope concode_elem_sep Getcontenttype createGetcontenttype concode_elem_sep Owner createOwner concode_elem_sep Read createRead concode_elem_sep All createAll concode_elem_sep Lockdiscovery createLockdiscovery concode_elem_sep Exclusive createExclusive concode_elem_sep ReadAcl createReadAcl concode_elem_sep JAXBElement<String> createDepth concode_elem_sep WriteContent createWriteContent concode_elem_sep Getetag createGetetag concode_elem_sep Omit createOmit concode_elem_sep Collection createCollection concode_elem_sep Propname createPropname concode_elem_sep Error createError concode_elem_sep ReadCurrentUserPrivilegeSet createReadCurrentUserPrivilegeSet concode_elem_sep Authenticated createAuthenticated concode_elem_sep Bind createBind concode_elem_sep JAXBElement<BigInteger> createNresults concode_elem_sep JAXBElement<String> createHref concode_elem_sep Report createReport concode_elem_sep JAXBElement<String> createTimeout concode_elem_sep Keepalive createKeepalive concode_elem_sep Shared createShared concode_elem_sep Remove createRemove concode_elem_sep Write createWrite concode_elem_sep JAXBElement<String> createResponsedescription concode_elem_sep Creationdate createCreationdate concode_elem_sep JAXBElement<String> createSrc concode_elem_sep Activelock createActivelock concode_elem_sep Getcontentlength createGetcontentlength concode_elem_sep Prop createProp concode_elem_sep Displayname createDisplayname concode_elem_sep Response createResponse concode_elem_sep UnBind createUnbind concode_elem_sep SearchRequest createSearch concode_elem_sep Set createSet concode_elem_sep Propertyupdate createPropertyupdate concode_elem_sep Locktoken createLocktoken concode_elem_sep Source createSource concode_elem_sep Propfind createPropfind concode_elem_sep Self createSelf concode_elem_sep Getlastmodified createGetlastmodified concode_elem_sep SupportedReport createSupportedReport concode_elem_sep Unlock createUnlock concode_elem_sep Multistatus createMultistatus concode_elem_sep Allprop createAllprop concode_elem_sep WriteProperties createWriteProperties"}
{"code": "int function ( ) { return frames_ . size ( ) > 0 && ( ( ANIMFrame ) frames_ . get ( frames_ . size ( ) - 1 ) ) . getInterleave ( ) == 1 ? 1 : 2 ; }", "nl": "returns the interleave of frames in this movie track . this is 2 for double buffered animations , and 1 one for animations without double buffering . concode_field_sep int xPosition concode_elem_sep boolean isPlayWrapupFrames concode_elem_sep int CMP_VERTICAL concode_elem_sep int yPosition concode_elem_sep int MODE_INDEXED_COLORS concode_elem_sep int MSK_HAS_MASK concode_elem_sep int MSK_HAS_TRANSPARENT_COLOR concode_elem_sep int pageHeight concode_elem_sep int pageWidth concode_elem_sep Vector frames_ concode_elem_sep int transparentColor concode_elem_sep Hashtable properties concode_elem_sep int height concode_elem_sep long totalDuration concode_elem_sep int MODE_HAM8 concode_elem_sep int masking concode_elem_sep int MODE_HAM6 concode_elem_sep int MSK_NONE concode_elem_sep int MSK_LASSO concode_elem_sep int MODE_EHB concode_elem_sep boolean isSwapSpeakers concode_elem_sep int nbPlanes concode_elem_sep int nbPalettes concode_elem_sep int MODE_DIRECT_COLORS concode_elem_sep int xAspect concode_elem_sep Vector audioClips_ concode_elem_sep PropertyChangeSupport listeners concode_elem_sep int screenMode concode_elem_sep int jiffies concode_elem_sep int CMP_BYTE_RUN_1 concode_elem_sep int yAspect concode_elem_sep int CMP_NONE concode_elem_sep int width concode_elem_sep ArrayList<ColorCycle> colorCycles concode_elem_sep int compression concode_field_sep int getNbPlanes concode_elem_sep int getCompression concode_elem_sep void setYPosition concode_elem_sep List<ColorCycle> getColorCycles concode_elem_sep int getColorCyclesCount concode_elem_sep int getFrameCount concode_elem_sep AudioClip getAudioClip concode_elem_sep void setTransparentColor concode_elem_sep int getNbPalettes concode_elem_sep int getXAspect concode_elem_sep void setPageHeight concode_elem_sep int getTransparentColor concode_elem_sep int getJiffies concode_elem_sep int getMasking concode_elem_sep void firePropertyChange concode_elem_sep void removePropertyChangeListener concode_elem_sep void setHeight concode_elem_sep void setXAspect concode_elem_sep void setScreenMode concode_elem_sep void setCompression concode_elem_sep void setSwapSpeakers concode_elem_sep void setProperty concode_elem_sep void addFrame concode_elem_sep int getAudioClipCount concode_elem_sep void setXPosition concode_elem_sep int getYPosition concode_elem_sep boolean isPlayWrapupFrames concode_elem_sep ANIMFrame getFrame concode_elem_sep int getWidth concode_elem_sep boolean isSwapSpeakers concode_elem_sep void addColorCycle concode_elem_sep void setPageWidth concode_elem_sep int getPageHeight concode_elem_sep long getFrameDuration concode_elem_sep int getHeight concode_elem_sep void addAudioClip concode_elem_sep int getDeltaOperation concode_elem_sep void addPropertyChangeListener concode_elem_sep Object getProperty concode_elem_sep int getXPosition concode_elem_sep void setMasking concode_elem_sep int getPageWidth concode_elem_sep int getYAspect concode_elem_sep void setYAspect concode_elem_sep void setWidth concode_elem_sep void setNbPlanes concode_elem_sep void setPlayWrapupFrames concode_elem_sep long getTotalDuration concode_elem_sep int getScreenMode concode_elem_sep void setJiffies"}
{"code": "String function ( ) { StringBuilder loc0 = new StringBuilder ( ) ; try { appendTo ( loc0 ) ; } catch ( IOException loc1 ) { throw new RuntimeException ( loc1 ) ; } return loc0 . toString ( ) ; }", "nl": "returns the string of xml corresponding to this xmlelement . concode_field_sep List<Pair<Object,ChildType>> children concode_elem_sep Map<String,String> attributes concode_elem_sep String elementType concode_field_sep XmlElement addXml concode_elem_sep XmlElement setAttribute concode_elem_sep XmlElement addText concode_elem_sep boolean equals concode_elem_sep void appendTo concode_elem_sep XmlElement addElement"}
{"code": "int function ( int arg0 ) { int loc0 ; int loc1 = arg0 % 3 ; if ( loc1 == 0 ) { loc0 = 4 * arg0 / 3 ; } else { loc0 = 4 * ( ( arg0 / 3 ) + 1 ) ; } return loc0 ; }", "nl": "compute the base64 encoded size for a stream whose size is specified in the incoming parameter concode_field_sep byte[] decodingTable concode_elem_sep byte[] encodingTable concode_field_sep void encode concode_elem_sep byte[] encode concode_elem_sep byte[] discardNonBase64Bytes concode_elem_sep byte[] decode concode_elem_sep byte[] decode concode_elem_sep String decode concode_elem_sep String decode concode_elem_sep boolean isValidBase64Byte concode_elem_sep String discardNonBase64Chars"}
{"code": "Iterator < HighlightEntry > function ( final double arg0 , final double arg1 , final double arg2 ) { return new HighlightIterator ( arg0 , arg1 , arg2 ) ; }", "nl": "returns an iterator that returns aggregated values based on the delta finds the max value within each delta . concode_field_sep Entry<Double,Integer> next concode_elem_sep Integer HIGHLIGHT_CRITICAL concode_elem_sep Iterator<Entry<Double,Integer>> subMapIterator concode_elem_sep Integer HIGHLIGHT_VALIDATION concode_elem_sep Integer HIGHLIGHT_INFO concode_elem_sep Double xValue concode_elem_sep Integer HIGHLIGHT_NONE concode_elem_sep double delta concode_elem_sep Integer yValue concode_elem_sep TreeMap<Double,Integer> values concode_elem_sep Integer HIGHLIGHT_WARNING concode_field_sep HighlightEntry next concode_elem_sep Double getKey concode_elem_sep Integer getValue concode_elem_sep int severityToHighlight concode_elem_sep int size concode_elem_sep Integer setValue concode_elem_sep void clear concode_elem_sep double getMaxX concode_elem_sep void addData concode_elem_sep HighlightModel create concode_elem_sep boolean hasNext concode_elem_sep void remove"}
{"code": "AuditCriterion function ( String arg0 , MatchMode arg1 ) { return new IlikeAuditExpression ( propertyNameGetter , arg1 . toMatchString ( arg0 ) ) ; }", "nl": "apply an `` ilike '' constraint concode_field_sep PropertyNameGetter propertyNameGetter concode_field_sep AuditCriterion hasNotChanged concode_elem_sep AuditCriterion lt concode_elem_sep AuditProjection distinct concode_elem_sep AuditCriterion leProperty concode_elem_sep AggregatedAuditExpression maximize concode_elem_sep AuditProjection min concode_elem_sep AuditCriterion hasChanged concode_elem_sep AuditCriterion gtProperty concode_elem_sep AuditProjection function concode_elem_sep AuditCriterion neProperty concode_elem_sep AuditCriterion ltProperty concode_elem_sep AuditCriterion ge concode_elem_sep AuditCriterion between concode_elem_sep Triple<String,String,Boolean> getData concode_elem_sep AuditCriterion isNotNull concode_elem_sep AggregatedAuditExpression minimize concode_elem_sep AuditCriterion like concode_elem_sep AuditCriterion like concode_elem_sep AuditCriterion in concode_elem_sep AuditCriterion in concode_elem_sep AuditProjection max concode_elem_sep AuditCriterion geProperty concode_elem_sep AuditProjection count concode_elem_sep AuditCriterion eq concode_elem_sep AuditCriterion gt concode_elem_sep AuditOrder asc concode_elem_sep AuditProjection countDistinct concode_elem_sep AuditCriterion ne concode_elem_sep AuditCriterion isNull concode_elem_sep AuditCriterion eqProperty concode_elem_sep AuditCriterion le concode_elem_sep AuditOrder desc"}
{"code": "void function ( String arg0 ) { if ( arg0 != null ) { runSystemCall ( arg0 ) ; log . info ( arg0 + \"srini_string\" ) ; } else { throw new ScriptExecutionException ( \"srini_string\" , REASON . NOTAVAILABLE ) ; } }", "nl": "tries to execute the script with the given script path . concode_field_sep Logger log concode_field_sep List<File> getScriptFiles concode_elem_sep void runSystemCall concode_elem_sep void getAndExecuteScriptFromGeneratedConfig concode_elem_sep String makeScriptExecutableAndGetAbsolutePath concode_elem_sep List<File> findScripts"}
{"code": "void function ( Throwable arg0 , String arg1 ) { JavaPlugin . log ( new Status ( IStatus . ERROR , JavaPlugin . getPluginId ( ) , IJavaStatusConstants . INTERNAL_ERROR , arg1 , arg0 ) ) ; }", "nl": "logs the given exception using the platform 's logging mechanism . the exception is logged as an error with the error code javastatusconstants.internal _ error . concode_field_sep ExceptionHandler fgInstance concode_field_sep void displayMessageDialog concode_elem_sep void perform concode_elem_sep void perform concode_elem_sep void perform concode_elem_sep void handle concode_elem_sep void handle concode_elem_sep void handle concode_elem_sep void handle concode_elem_sep void handle"}
{"code": "void function ( String arg0 , String arg1 , String arg2 , String arg3 ) { mail ( arg0 , arg1 , arg2 , arg3 , null ) ; }", "nl": "format a message to the given user with the given subject and message body , including a cc list . concode_field_sep String[] HTTP concode_field_sep String encodeForMail concode_elem_sep void open concode_elem_sep void open"}
{"code": "AST function ( AST arg0 , int arg1 ) { AST loc0 = arg0 . getFirstChild ( ) ; while ( loc0 != null && loc0 . getType ( ) != arg1 ) { loc0 = loc0 . getNextSibling ( ) ; } return loc0 ; }", "nl": "finds the first node of the specified type in the chain of children . concode_field_sep FilterPredicate predicate concode_elem_sep List collectedNodes concode_field_sep AST getLastSibling concode_elem_sep AST findPreviousSibling concode_elem_sep String getPathText concode_elem_sep void getPathText concode_elem_sep String getTokenTypeName concode_elem_sep boolean isSubtreeChild concode_elem_sep String getDebugString concode_elem_sep List getCollectedNodes concode_elem_sep Integer extractIntegerValue concode_elem_sep AST create concode_elem_sep AST createParent concode_elem_sep String getConstantName concode_elem_sep boolean exclude concode_elem_sep boolean exclude concode_elem_sep AST createBinarySubtree concode_elem_sep boolean include concode_elem_sep Map generateTokenNameCache concode_elem_sep void appendSibling concode_elem_sep ASTArray createAstArray concode_elem_sep AST createTree concode_elem_sep void insertChild concode_elem_sep List collectChildren concode_elem_sep AST getLastChild concode_elem_sep void makeSiblingOfParent concode_elem_sep void visit concode_elem_sep boolean hasExactlyOneChild concode_elem_sep AST insertSibling concode_elem_sep List collect concode_elem_sep AST createSibling"}
{"code": "void function ( @ ArquillianResource ( TxControlServlet . class ) URL arg0 ) { testURL ( arg0 , false , true ) ; }", "nl": "test a requestdispatcher forward with tx commit . concode_field_sep String STATUS_ACTIVE concode_elem_sep Logger log concode_field_sep void testIncludeNoCommit concode_elem_sep void testForwardNoCommit concode_elem_sep WebArchive statusDeployment concode_elem_sep void testIncludeCommit concode_elem_sep void testURL concode_elem_sep WebArchive controlDeployment"}
{"code": "boolean function ( ) { next = computeNext ( ) ; return next != null ; }", "nl": "precomputes and saves the next element of the iterable . null is considered as end of data . concode_field_sep E next concode_elem_sep Iterator<E> fromIterator concode_field_sep E next concode_elem_sep E computeNext"}
{"code": "GenPolynomial < GenPolynomial < C >> function ( ) { GenPolynomial < GenPolynomial < C >> loc0 = green . sum ( red ) . sum ( white ) ; int loc1 = green . length ( ) + red . length ( ) + white . length ( ) ; int loc2 = loc0 . length ( ) ; if ( loc2 != loc1 ) { throw new RuntimeException ( \"srini_string\" + loc1 + \"srini_string\" + loc2 ) ; } return loc0 ; }", "nl": "get full polynomial . concode_field_sep GenPolynomial<GenPolynomial<C>> red concode_elem_sep GenPolynomial<GenPolynomial<C>> green concode_elem_sep GenPolynomial<GenPolynomial<C>> white concode_field_sep List<GenPolynomial<C>> getRedCoefficients concode_elem_sep boolean isONE concode_elem_sep ExpVector leadingExpVector concode_elem_sep Map.Entry<ExpVector,GenPolynomial<C>> leadingMonomial concode_elem_sep boolean checkInvariant concode_elem_sep ColorPolynomial<C> subtract concode_elem_sep ColorPolynomial<C> subtract concode_elem_sep int length concode_elem_sep boolean isDetermined concode_elem_sep ColorPolynomial<C> sum concode_elem_sep ColorPolynomial<C> sum concode_elem_sep ColorPolynomial<C> abs concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep boolean isZERO concode_elem_sep List<GenPolynomial<C>> getGreenCoefficients concode_elem_sep String toString concode_elem_sep ColorPolynomial<C> divide concode_elem_sep GenPolynomial<GenPolynomial<C>> getEssentialPolynomial concode_elem_sep ColorPolynomial<C> multiply concode_elem_sep ColorPolynomial<C> multiply"}
{"code": "void function ( byte [ ] arg0 , boolean arg1 , int arg2 ) { for ( int loc0 = 0 ; loc0 < arg2 ; loc0 ++ ) System . out . print ( \"srini_string\" ) ; System . out . print ( \"srini_string\" ) ; for ( int loc0 = 0 ; loc0 < arg0 . length ; loc0 ++ ) { System . out . print ( arg1 ? ( char ) arg0 [ loc0 ] : ( int ) arg0 [ loc0 ] + \"srini_string\" ) ; } System . out . println ( ) ; }", "nl": "helper method that prints out a byte string as a series of integer or ascii characters . concode_field_sep PlaceHolder placeHolder concode_field_sep void print concode_elem_sep void print concode_elem_sep void printMap concode_elem_sep void printList concode_elem_sep void printInteger"}
{"code": "String function ( final Element arg0 ) { return getElementContent ( arg0 , null ) ; }", "nl": "get the content of the given element . concode_field_sep PlaceHolder placeHolder concode_field_sep Element getUniqueChild concode_elem_sep boolean getOptionalChildBooleanContent concode_elem_sep Iterator getChildrenByTagName concode_elem_sep Element getOptionalChild concode_elem_sep Element getOptionalChild concode_elem_sep String getUniqueChildContent concode_elem_sep String getOptionalChildContent"}
{"code": "SchemaPlus function ( final String arg0 ) { return schemaTreeProvider . createRootSchema ( arg0 , this ) ; }", "nl": "return root schema with schema owner as the given user . concode_field_sep UserSession session concode_elem_sep OptionManager queryOptions concode_elem_sep ContextInformation contextInformation concode_elem_sep PlannerSettings plannerSettings concode_elem_sep SchemaTreeProvider schemaTreeProvider concode_elem_sep QueryContextInformation queryContextInfo concode_elem_sep BufferManager bufferManager concode_elem_sep ViewExpansionContext viewExpansionContext concode_elem_sep BufferAllocator allocator concode_elem_sep org.slf4j.Logger logger concode_elem_sep DrillbitContext drillbitContext concode_elem_sep ExecutionControls executionControls concode_elem_sep DrillOperatorTable table concode_elem_sep boolean closed concode_field_sep ContextInformation getContextInformation concode_elem_sep DrillbitEndpoint getCurrentEndpoint concode_elem_sep DrillBuf getManagedBuffer concode_elem_sep String getQueryUserName concode_elem_sep OptionValue getOption concode_elem_sep LogicalPlanPersistence getLpPersistence concode_elem_sep DrillOperatorTable getDrillOperatorTable concode_elem_sep DrillConfig getConfig concode_elem_sep FunctionImplementationRegistry getFunctionRegistry concode_elem_sep BufferAllocator getAllocator concode_elem_sep boolean isUserAuthenticationEnabled concode_elem_sep ExecutionControls getExecutionControls concode_elem_sep boolean isImpersonationEnabled concode_elem_sep StoragePluginRegistry getStorage concode_elem_sep PartitionExplorer getPartitionExplorer concode_elem_sep Collection<DrillbitEndpoint> getActiveEndpoints concode_elem_sep ViewExpansionContext getViewExpansionContext concode_elem_sep OptionManager getOptions concode_elem_sep UserSession getSession concode_elem_sep SchemaPlus getNewDefaultSchema concode_elem_sep QueryContextInformation getQueryContextInfo concode_elem_sep void close concode_elem_sep PlannerSettings getPlannerSettings"}
{"code": "void function ( final String arg0 ) { if ( config == null ) { config = new FileConfig ( arg0 ) ; log . info ( \"srini_string\" + arg0 + \"srini_string\" ) ; } }", "nl": "sets the global config object that contains kademlia-wide constants . this method has an effect only if a config object has never been set before . concode_field_sep KademliaSetup singleton concode_elem_sep WorkloadGenerator workloadGen concode_elem_sep Logger log concode_elem_sep AbstractNodeFactory nodeFactory concode_elem_sep KademliaMonitor monitor concode_elem_sep Config config concode_field_sep WorkloadGenerator getWorkloadGenerator concode_elem_sep void setMonitor concode_elem_sep void setNodeFactory concode_elem_sep void setWorkload concode_elem_sep KademliaMonitor getMonitor concode_elem_sep AbstractNodeFactory getNodeFactory concode_elem_sep KademliaSetup getInstance concode_elem_sep Config getConfig concode_elem_sep void setConfig"}
{"code": "void function ( Host arg0 ) { rttToMonitors . remove ( arg0 ) ; }", "nl": "remove them measured rtt from host to monitor concode_field_sep int MONITOR concode_elem_sep AverageAccumulator avgPingAttemptsPerNode concode_elem_sep long serialVersionUID concode_elem_sep double latitude concode_elem_sep String city concode_elem_sep String isp concode_elem_sep boolean locatable concode_elem_sep boolean useCountryNames concode_elem_sep int type concode_elem_sep String countryCode concode_elem_sep GnpPosition coordinateRef concode_elem_sep HostMap mapRef concode_elem_sep int HOST concode_elem_sep String area concode_elem_sep int ipAddress concode_elem_sep HashMap<Host,List<Double>> rttToMonitors concode_elem_sep CumulateRTTStrategy currentStrategy concode_elem_sep HashMap<Host,Double> cumulatedRTTs concode_elem_sep int isNotLocatable concode_elem_sep int regionNotFound concode_elem_sep double longitude concode_elem_sep int ccNotFound concode_elem_sep String region concode_elem_sep int cityNotFound concode_elem_sep String countryName concode_field_sep boolean issetUseCountryNames concode_elem_sep void setUseCountryNames concode_elem_sep void setPositionReference concode_elem_sep int getIpAddress concode_elem_sep int getHostType concode_elem_sep void setLocation concode_elem_sep int hashCode concode_elem_sep String getISP concode_elem_sep String getCountryName concode_elem_sep Set<Host> getMeasuredMonitors concode_elem_sep boolean isLocatable concode_elem_sep String getCity concode_elem_sep String getCountryCode concode_elem_sep void printLocatorStats concode_elem_sep void addRtt concode_elem_sep double getLongitude concode_elem_sep double getLatitude concode_elem_sep void setHostType concode_elem_sep double getAvgPingAttemptsPerNode concode_elem_sep Double cumulate concode_elem_sep void setRtt concode_elem_sep double getRtt concode_elem_sep String getRegion concode_elem_sep boolean equals concode_elem_sep void setRTTCumulationStrategy concode_elem_sep void cumulateRTTsCond concode_elem_sep String toString concode_elem_sep String getArea concode_elem_sep GnpPosition getGnpPositionReference"}
{"code": "void function ( final V arg0 ) { for ( final K loc0 : kSmallest . keySet ( ) ) { kSmallest . put ( loc0 , arg0 ) ; } }", "nl": "sets the value associated with all existing keys to newvalue . concode_field_sep SortedMap<K,V> kSmallest concode_elem_sep int k concode_field_sep boolean containsKey concode_elem_sep Collection<V> values concode_elem_sep void clear concode_elem_sep boolean isInRange concode_elem_sep boolean put concode_elem_sep boolean put concode_elem_sep boolean put concode_elem_sep V remove concode_elem_sep boolean containsValue concode_elem_sep K getMinKey concode_elem_sep K getMaxKey concode_elem_sep int size concode_elem_sep K firstKey concode_elem_sep void putAll concode_elem_sep void putAll concode_elem_sep void putAll concode_elem_sep void putAll concode_elem_sep void putAll concode_elem_sep V get concode_elem_sep K lastKey concode_elem_sep String toString concode_elem_sep Set<K> keySet"}
{"code": "void function ( String arg0 , String arg1 ) { ImageDescriptor loc0 = ImageDescriptor . getMissingImageDescriptor ( ) ; try { loc0 = ImageDescriptor . createFromURL ( makeIconFileURL ( arg1 ) ) ; } catch ( MalformedURLException loc1 ) { DebugPlugin . log ( loc1 ) ; } imageRegistry . put ( arg0 , loc0 ) ; imageDescriptors . put ( arg0 , loc0 ) ; }", "nl": "declare an image in the registry table . concode_field_sep String IMG_OBJ_JSP concode_elem_sep String OBJECT concode_elem_sep ImageRegistry imageRegistry concode_elem_sep String IMG_OBJ_TOMCAT concode_elem_sep URL ICON_BASE_URL concode_elem_sep HashMap imageDescriptors concode_field_sep URL makeIconFileURL concode_elem_sep void declareImages concode_elem_sep ImageRegistry getImageRegistry concode_elem_sep ImageRegistry initializeImageRegistry concode_elem_sep ImageDescriptor getImageDescriptor concode_elem_sep Image getImage"}
{"code": "void function ( AST arg0 , PrintWriter arg1 ) { ArrayList < AST > loc0 = new ArrayList < AST > ( ) ; showAst ( loc0 , arg1 , arg0 ) ; arg1 . flush ( ) ; }", "nl": "prints the ast in ` ascii art ' tree form to the specified print writer . concode_field_sep boolean showClassNames concode_elem_sep Map tokenTypeNameCache concode_field_sep String showAsString concode_elem_sep String nodeToString concode_elem_sep void showNode concode_elem_sep String escapeMultibyteChars concode_elem_sep String getTokenTypeName concode_elem_sep boolean isShowClassNames concode_elem_sep void appendEscapedMultibyteChars"}
{"code": "Class < ? > function ( Type arg0 ) { if ( arg0 instanceof Class ) { return ( Class ) arg0 ; } else if ( arg0 instanceof ParameterizedType ) { ParameterizedType loc0 = ( ParameterizedType ) arg0 ; return toClass ( loc0 . getRawType ( ) ) ; } else { throw PojoLogger . ROOT_LOGGER . unknownType ( arg0 ) ; } }", "nl": "turn type into class . concode_field_sep String[] NO_PARAMS_TYPES concode_field_sep Object convertValue concode_elem_sep Method findMethod concode_elem_sep boolean equals concode_elem_sep boolean simpleCheck concode_elem_sep String[] getTypes concode_elem_sep Method locateMethod"}
{"code": "void function ( VectorContainer arg0 ) { Preconditions . checkArgument ( this . wrappers . size ( ) == arg0 . wrappers . size ( ) ) ; for ( int loc0 = 0 ; loc0 < this . wrappers . size ( ) ; ++ loc0 ) { this . wrappers . get ( loc0 ) . transfer ( arg0 . wrappers . get ( loc0 ) ) ; } }", "nl": "transfer vectors from this to containerout concode_field_sep BatchSchema schema concode_elem_sep boolean schemaChanged concode_elem_sep OperatorContext oContext concode_elem_sep List<VectorWrapper<?>> wrappers concode_elem_sep int recordCount concode_field_sep boolean allocateNewSafe concode_elem_sep void addHyperList concode_elem_sep void addHyperList concode_elem_sep void replace concode_elem_sep void setRecordCount concode_elem_sep boolean hasSchema concode_elem_sep void buildSchema concode_elem_sep void remove concode_elem_sep void cloneAndTransfer concode_elem_sep Iterator<VectorWrapper<?>> iterator concode_elem_sep int getRecordCount concode_elem_sep OperatorContext getOperatorContext concode_elem_sep VectorContainer canonicalize concode_elem_sep boolean isSchemaChanged concode_elem_sep TypedFieldId add concode_elem_sep void add concode_elem_sep void add concode_elem_sep T addOrGet concode_elem_sep T addOrGet concode_elem_sep T addOrGet concode_elem_sep void zeroVectors concode_elem_sep void allocateNew concode_elem_sep VectorWrapper<?> getValueAccessorById concode_elem_sep VectorWrapper<?> getValueAccessorById concode_elem_sep void clear concode_elem_sep int getNumberOfColumns concode_elem_sep BatchSchema getSchema concode_elem_sep SelectionVector4 getSelectionVector4 concode_elem_sep SelectionVector2 getSelectionVector2 concode_elem_sep void addCollection concode_elem_sep TypedFieldId getValueVectorId concode_elem_sep String toString concode_elem_sep void transferIn concode_elem_sep VectorContainer getTransferClone concode_elem_sep VectorContainer getTransferClone"}
{"code": "BatchCQLStatementTupleMapper function ( CQLStatementBuilder ... arg0 ) { return newBatchStatementBuilder ( BatchStatement . Type . UNLOGGED , arg0 ) ; }", "nl": "creates a new com.datastax.driver.core.batchstatement.type #unlogged batch statement for the specified cql statement builders . concode_field_sep PlaceHolder placeHolder concode_field_sep CqlMapper.DefaultCqlMapper all concode_elem_sep CQLStatementTupleMapper async concode_elem_sep ContextQuery named concode_elem_sep ContextQuery namedByField concode_elem_sep BatchCQLStatementTupleMapper newBatchStatementBuilder concode_elem_sep BatchCQLStatementTupleMapper counterBatch concode_elem_sep FieldSelector field concode_elem_sep BatchCQLStatementTupleMapper loggedBatch concode_elem_sep BoundCQLStatementMapperBuilder boundQuery concode_elem_sep BoundCQLStatementMapperBuilder boundQuery concode_elem_sep FieldSelector[] fields concode_elem_sep SimpleCQLStatementMapperBuilder simpleQuery concode_elem_sep SimpleCQLStatementMapperBuilder simpleQuery"}
{"code": "int function ( ) { return typeIndex ; }", "nl": "get the index into the constant pool of the type descriptor of the variable . concode_field_sep int typeIndex concode_elem_sep int nameIndex concode_elem_sep int length concode_elem_sep int index concode_elem_sep int startPC concode_field_sep int nameIndex concode_elem_sep int length concode_elem_sep Object clone concode_elem_sep int index concode_elem_sep String toString concode_elem_sep int startPC"}
{"code": "String function ( ) { return location ; }", "nl": "returns the location . concode_field_sep String city concode_elem_sep List orders concode_elem_sep String name concode_elem_sep String location concode_field_sep Order createOrder concode_elem_sep void setName concode_elem_sep String getName concode_elem_sep void removeOrder concode_elem_sep void setCity concode_elem_sep void setLocation concode_elem_sep void addOrder concode_elem_sep String toString concode_elem_sep List getOrders concode_elem_sep String getCity"}
{"code": "Map < String , Object > function ( String arg0 ) { Map < String , Object > loc0 = ( HashMap ) items . get ( arg0 ) ; return loc0 ; }", "nl": "get the contents of a section given the section name . concode_field_sep File krb5conf concode_elem_sep Map<String,Object> items concode_field_sep String insertEntries concode_elem_sep void printEntry concode_elem_sep void load concode_elem_sep void insertSections concode_elem_sep void dump concode_elem_sep List<String> getSections concode_elem_sep void printSection"}
{"code": "void function ( ) { assertEquals ( 127 , WebColors . getRGBColor ( RGB_MISSING_COLOR_VALUES ) . getRed ( ) ) ; }", "nl": "test method for com.itextpdf.text.html.webcolors #getrgbcolor java.lang.string . concode_field_sep String RGB_PERCENT concode_elem_sep String RGB_OUT_OF_RANGE concode_elem_sep String RGB_MISSING_COLOR_VALUES concode_field_sep String dumpColor concode_elem_sep void testGetRGBColorInPercentBlue concode_elem_sep void testGetRGBColorValueOutOfRange concode_elem_sep void testGetRGBColorChannelsMissingBlue concode_elem_sep void moreColorTest concode_elem_sep void testGetRGBColorInPercentRed concode_elem_sep void testGetRGBColorInPercentAlpha concode_elem_sep void testGetRGBColorInPercentGreen concode_elem_sep void goodColorTests concode_elem_sep void testGetRGBColorChannelsMissingGreen concode_elem_sep void badColorTests concode_elem_sep void testGetRGBColorNegativeValue"}
{"code": "int function ( DiscardCode arg0 ) { Integer loc0 = new Integer ( this . enumValue ) ; Integer loc1 = new Integer ( arg0 . enumValue ) ; return loc0 . compareTo ( loc1 ) ; }", "nl": "the enumeration members in assorted order : / / not_discarded , obvious , bad_sample , bad_confidence , unused , not_enough_samples , non_canonical_var , implied_post_condition , only_constant_vars , derived_param , unmodified_var , control_check , exact , var filter concode_field_sep DiscardCode not_enough_samples concode_elem_sep DiscardCode filtered concode_elem_sep DiscardCode obvious concode_elem_sep DiscardCode implied_post_condition concode_elem_sep DiscardCode derived_param concode_elem_sep long serialVersionUID concode_elem_sep DiscardCode only_constant_vars concode_elem_sep int enumValue concode_elem_sep DiscardCode non_canonical_var concode_elem_sep DiscardCode unmodified_var concode_elem_sep DiscardCode bad_sample concode_elem_sep DiscardCode bad_confidence concode_elem_sep DiscardCode control_check concode_elem_sep DiscardCode exact concode_elem_sep DiscardCode var_filtered concode_field_sep Object readResolve concode_elem_sep DiscardCode findCode concode_elem_sep String toString"}
{"code": "Timestamp function ( long arg0 ) { return Timestamps . fromMicros ( arg0 ) ; }", "nl": "create a timestamp from the number of microseconds elapsed from the epoch . concode_field_sep BigInteger NANOS_PER_SECOND_BIG_INTEGER concode_elem_sep long DURATION_SECONDS_MAX concode_elem_sep long DURATION_SECONDS_MIN concode_elem_sep long TIMESTAMP_SECONDS_MAX concode_elem_sep long NANOS_PER_SECOND concode_elem_sep long TIMESTAMP_SECONDS_MIN concode_field_sep Timestamp add concode_elem_sep Duration add concode_elem_sep Duration distance concode_elem_sep Duration createDurationFromMicros concode_elem_sep Timestamp subtract concode_elem_sep Duration subtract concode_elem_sep Timestamp createTimestampFromMillis concode_elem_sep BigInteger toBigInteger concode_elem_sep BigInteger toBigInteger concode_elem_sep Duration createDurationFromNanos concode_elem_sep Duration createDurationFromMillis concode_elem_sep Duration createDurationFromBigInteger concode_elem_sep Duration parseDuration concode_elem_sep long toNanos concode_elem_sep long toNanos concode_elem_sep Timestamp getEpoch concode_elem_sep Timestamp parseTimestamp concode_elem_sep String toString concode_elem_sep String toString concode_elem_sep long toMillis concode_elem_sep long toMillis concode_elem_sep Duration divide concode_elem_sep Duration divide concode_elem_sep long divide concode_elem_sep Timestamp createTimestampFromNanos concode_elem_sep Timestamp getCurrentTime concode_elem_sep Duration multiply concode_elem_sep Duration multiply concode_elem_sep long toMicros concode_elem_sep long toMicros concode_elem_sep Duration remainder concode_elem_sep Duration normalizedDuration"}
{"code": "void function ( CollectionKey arg0 ) { if ( ! hasRegisteredLoadingCollectionEntries ( ) ) { return ; } xrefLoadingCollectionEntries . remove ( arg0 ) ; }", "nl": "the inverse of #registerloadingcollectionxref . here , we are done processing the said collection entry , so we remove it from the load context . the idea here is that other loading collections can now reference said collection directly from the persistencecontext because ithas completed its load cycle . implementation note : package protected , as this is meant solely for use by collectionloadcontext to be able to locate collectionsbeing loaded by other collectionloadcontext s / resultset s. concode_field_sep Map<CollectionKey,LoadingCollectionEntry> xrefLoadingCollectionEntries concode_elem_sep CoreMessageLogger LOG concode_elem_sep Map<ResultSet,EntityLoadContext> entityLoadContexts concode_elem_sep PersistenceContext persistenceContext concode_elem_sep Map<ResultSet,CollectionLoadContext> collectionLoadContexts concode_field_sep EntityLoadContext getEntityLoadContext concode_elem_sep Map getLoadingCollectionXRefs concode_elem_sep boolean hasRegisteredLoadingCollectionEntries concode_elem_sep CollectionLoadContext getCollectionLoadContext concode_elem_sep PersistenceContext getPersistenceContext concode_elem_sep void cleanup concode_elem_sep void cleanup concode_elem_sep void registerLoadingCollectionXRef concode_elem_sep void cleanupCollectionXRefs concode_elem_sep boolean hasLoadingCollectionEntries concode_elem_sep SessionImplementor getSession concode_elem_sep PersistentCollection locateLoadingCollection concode_elem_sep LoadingCollectionEntry locateLoadingCollectionEntry"}
{"code": "void function ( ) { query ( \"srini_string\" ) ; }", "nl": "commit ; concode_field_sep android.database.mysql.natives.Connector __connector concode_elem_sep String DEFAULT_PORT concode_elem_sep String encoding concode_elem_sep HashMap<String,String> config concode_field_sep void rollback concode_elem_sep void disconnect concode_elem_sep void startTransaction concode_elem_sep String getLastError concode_elem_sep ArrayList<String> fetchCol concode_elem_sep void query concode_elem_sep void disableAutocommit concode_elem_sep String fetchOne concode_elem_sep boolean hasMoreRows concode_elem_sep ArrayList<ArrayList<String>> fetchAllArray concode_elem_sep void enableAutocommit concode_elem_sep ArrayList<String> fetchRowArray concode_elem_sep int lastInsertId concode_elem_sep ArrayList<HashMap<String,String>> fetchAllHash concode_elem_sep ArrayList<String> fields concode_elem_sep HashMap<String,String> fetchRowHash concode_elem_sep String escape concode_elem_sep void connect concode_elem_sep void forceFreeResult"}
{"code": "boolean function ( CommandResult arg0 ) { return arg0 . feedbackToUser . equals ( ExitCommand . MESSAGE_EXIT_ACKNOWEDGEMENT ) ; }", "nl": "returns true of the result given is the result of an exit command concode_field_sep TextArea outputConsole concode_elem_sep Logic logic concode_elem_sep TextField commandInput concode_elem_sep Stoppable mainApp concode_field_sep void setMainApp concode_elem_sep void clearOutputConsole concode_elem_sep void displayResult concode_elem_sep void clearCommandInput concode_elem_sep void onCommand concode_elem_sep void display concode_elem_sep void display concode_elem_sep void exitApp concode_elem_sep void displayWelcomeMessage concode_elem_sep void setLogic"}
{"code": "Rectangle function ( Widget arg0 ) { return getBounds ( arg0 , true ) ; }", "nl": "finds the display-space rectangle that bounds the given widget 's client area . concode_field_sep String copyright concode_field_sep Point getLocation concode_elem_sep Point getLocation concode_elem_sep Rectangle toDisplay"}
{"code": "String function ( ) { if ( originUrl == null ) { originUrl = extractOriginImpl ( url ) ; } return originUrl ; }", "nl": "returns the protocol , domain and port of the url . the origin does not typically include a trailing slash . concode_field_sep String SCHEME_HTTPS concode_elem_sep String SCHEME_FILE concode_elem_sep String SCHEME_HTTP concode_elem_sep String originUrl concode_elem_sep String applicationUrl concode_elem_sep String lastPathComponent concode_elem_sep String url concode_field_sep String getApplicationUrlImpl concode_elem_sep String getLastPathComponent concode_elem_sep String getUrl concode_elem_sep String getScheme concode_elem_sep String convertToRelativeUrl concode_elem_sep String getResourceBase concode_elem_sep String getPath concode_elem_sep String getApplicationUrl concode_elem_sep String extractOriginImpl concode_elem_sep String getUrlWithoutHash concode_elem_sep String getUrlWithoutHash"}
{"code": "int function ( ) { return id ; }", "nl": "gets the id for this request . concode_field_sep String LOGTAG concode_elem_sep AtomicInteger currentId concode_elem_sep String data concode_elem_sep int id concode_elem_sep String name concode_field_sep void onResponse concode_elem_sep String getName concode_elem_sep void onError concode_elem_sep String getData"}
{"code": "ModInteger function ( ) { return new ModInteger ( ring , val . negate ( ) ) ; }", "nl": "modinteger negative . concode_field_sep java.math.BigInteger val concode_elem_sep ModIntegerRing ring concode_field_sep ModInteger MIREM concode_elem_sep java.math.BigInteger getSymmetricVal concode_elem_sep int MISIGN concode_elem_sep ModInteger gcd concode_elem_sep ModInteger sum concode_elem_sep int compareTo concode_elem_sep ModInteger MINEG concode_elem_sep ModInteger MISUM concode_elem_sep int hashCode concode_elem_sep ModInteger MIDIF concode_elem_sep ModInteger divide concode_elem_sep ModInteger multiply concode_elem_sep int signum concode_elem_sep boolean isONE concode_elem_sep ModInteger inverse concode_elem_sep int MICOMP concode_elem_sep java.math.BigInteger getVal concode_elem_sep boolean isUnit concode_elem_sep ModInteger subtract concode_elem_sep ModInteger MIABS concode_elem_sep ModInteger MIINV concode_elem_sep ModInteger[] egcd concode_elem_sep java.math.BigInteger getModul concode_elem_sep ModInteger abs concode_elem_sep ModInteger MIQ concode_elem_sep boolean equals concode_elem_sep ModInteger clone concode_elem_sep boolean isZERO concode_elem_sep String toString concode_elem_sep ModInteger MIPROD concode_elem_sep ModInteger remainder"}
{"code": "byte [ ] function ( ) { byte [ ] loc0 = new byte [ getActualSize ( ) ] ; System . arraycopy ( buffer , 0 , loc0 , 0 , getActualSize ( ) ) ; return loc0 ; }", "nl": "returns buffer as byte array concode_field_sep int BUFFER_DEFAULT_LENGTH concode_elem_sep int actualSize concode_elem_sep byte[] buffer concode_elem_sep int position concode_field_sep void writeInt concode_elem_sep void writeLong concode_elem_sep int getPosition concode_elem_sep int getActualSize concode_elem_sep void ensureLength concode_elem_sep void write concode_elem_sep void write concode_elem_sep void write concode_elem_sep int writeString concode_elem_sep void setPosition concode_elem_sep void writeIntAt concode_elem_sep void writeDouble"}
{"code": "OperationCallback < TResult > function ( ) { return Operations . EMPTY_CALLBACK ; }", "nl": "returns an empty operationcallback , type-safe . concode_field_sep OperationCallback EMPTY_CALLBACK concode_field_sep void calledOperationSucceeded concode_elem_sep int scheduleEmptyOperation concode_elem_sep void calledOperationFailed concode_elem_sep Operation<TResult> createEmptyOperation concode_elem_sep Operation<TResult> createEmptyOperationResult"}
{"code": "void function ( String arg0 , Object arg1 ) { if ( Tracer . isDebugging ( ) ) printLog ( sysOut , arg0 , arg1 ) ; IStatus loc0 = createLogStatus ( arg0 , arg1 , \"srini_string\" ) ; try { log . log ( loc0 ) ; } catch ( Throwable loc1 ) { } }", "nl": "log the specified message and object concode_field_sep ILog sysOutLog concode_elem_sep PrintWriter sysOut concode_elem_sep ILog log concode_field_sep void setLog concode_elem_sep void printLogObject concode_elem_sep void removeLogListener concode_elem_sep void logNoHeader concode_elem_sep void logStackTrace concode_elem_sep void printLogStatus concode_elem_sep IStatus createLogStatus concode_elem_sep void printLogMessage concode_elem_sep void printLog concode_elem_sep void close concode_elem_sep void addLogListener concode_elem_sep org.osgi.framework.Bundle getBundle"}
{"code": "T function ( ReturningWork < T > arg0 , Connection arg1 ) { return arg0 . execute ( arg1 ) ; }", "nl": "execute the discrete work encapsulated by a returningwork instanceusing the supplied connection , returning the result of returningwork #execute java.sql.connection concode_field_sep PlaceHolder placeHolder concode_field_sep T executeWork"}
{"code": "PreviewNode function ( ) { return fParent ; }", "nl": "returns the change element 's parent . concode_field_sep int PARTLY_ACTIVE concode_elem_sep int[][] ACTIVATION_TABLE concode_elem_sep int INACTIVE concode_elem_sep PreviewNode[] EMPTY_CHILDREN concode_elem_sep int ACTIVE concode_elem_sep PreviewNode fParent concode_field_sep void feedInput concode_elem_sep void setEnabled concode_elem_sep PreviewNode[] getChildren concode_elem_sep boolean hasOneGroupCategory concode_elem_sep String getText concode_elem_sep boolean hasDerived concode_elem_sep ChangePreviewViewerDescriptor getChangePreviewViewerDescriptor concode_elem_sep void setEnabledShallow concode_elem_sep int getActive concode_elem_sep void initialize concode_elem_sep ImageDescriptor getImageDescriptor"}
{"code": "boolean function ( ) { return mandatory || Double . POSITIVE_INFINITY == affinity ; }", "nl": "is this endpoint required to be in fragment endpoint assignment list ? concode_field_sep DrillbitEndpoint endpoint concode_elem_sep double affinity concode_elem_sep org.slf4j.Logger logger concode_elem_sep boolean mandatory concode_elem_sep int maxWidth concode_field_sep int hashCode concode_elem_sep boolean equals concode_elem_sep DrillbitEndpoint getEndpoint concode_elem_sep String toString concode_elem_sep void setAssignmentRequired concode_elem_sep void setMaxWidth concode_elem_sep void addAffinity concode_elem_sep double getAffinity concode_elem_sep int getMaxWidth"}
{"code": "Db4oDatabase function ( Transaction arg0 ) { if ( i_uuid > 0 ) { Db4oDatabase loc0 = query ( arg0 , true ) ; if ( loc0 != null ) { return loc0 ; } } return query ( arg0 , false ) ; }", "nl": "find a db4odatabase with the same signature as this one concode_field_sep int STATIC_ID concode_elem_sep int i_id concode_elem_sep Db4oDatabase STATIC_IDENTITY concode_elem_sep String CREATIONTIME_FIELD concode_elem_sep ObjectContainerBase i_stream concode_elem_sep byte[] i_signature concode_elem_sep long i_uuid concode_field_sep int bind concode_elem_sep boolean isOlderThan concode_elem_sep int storeAndGetId concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep long getCreationTime concode_elem_sep byte[] getSignature concode_elem_sep int getID concode_elem_sep String toString concode_elem_sep Db4oDatabase generate"}
{"code": "SimpleBoard function ( ) { SimpleBoard loc0 = new SimpleBoard ( ) ; for ( int loc1 = 0 ; loc1 < 8 ; loc1 ++ ) { for ( int loc2 = 0 ; loc2 < 8 ; loc2 ++ ) { double loc3 = Math . random ( ) * 12 ; int loc4 = ( int ) loc3 ; loc0 . setElementAt ( loc2 , loc1 , loc4 ) ; } } return loc0 ; }", "nl": "generates a random 8 x 8 simpleboard . concode_field_sep PlaceHolder placeHolder concode_field_sep void main concode_elem_sep void initTable"}
{"code": "void function ( DiscoverClasses arg0 ) { this . discovery = arg0 ; }", "nl": "sets the fully configured discoverclasses instance to be used to lookup services concode_field_sep ClassLoader classLoader concode_elem_sep DiscoverClasses discovery concode_elem_sep boolean useContextClassLoader concode_elem_sep Log log concode_field_sep boolean getUseContextClassLoader concode_elem_sep DiscoverClasses getDiscoverClasses concode_elem_sep TagLibrary loadClass concode_elem_sep ClassLoader getClassLoader concode_elem_sep TagLibrary newInstance concode_elem_sep TagLibrary resolveTagLibrary concode_elem_sep void setClassLoader concode_elem_sep void setUseContextClassLoader"}
{"code": "void function ( ) { if ( _display == null ) setDisplay ( Display . getDefault ( ) ) ; }", "nl": "cache the current display if it has not already been cached by the #launchapp method or a prior call to this method . concode_field_sep IUIContext _ui concode_elem_sep Display _display concode_elem_sep Shell _rootShell concode_field_sep IUIContext getUI concode_elem_sep IUIContext createUI concode_elem_sep void setDisplay concode_elem_sep void update concode_elem_sep Shell getRootShell concode_elem_sep void cacheRootShell concode_elem_sep void setRootShell concode_elem_sep Display getDisplay"}
{"code": "void function ( long arg0 ) { this . timeToLiveForContacts = arg0 ; }", "nl": "time to live for a contact before it is considered offline concode_field_sep int numberOfReplicates concode_elem_sep long timeToLiveForContacts concode_elem_sep int numberOfPingTries concode_elem_sep long timeBetweenRootPings concode_elem_sep long timeBetweenReplicationChecks concode_elem_sep int numberOfReplicationTries concode_elem_sep int minimumNumberOfReplicates concode_field_sep int getNumberOfPingTries concode_elem_sep int getNumberOfReplicationTries concode_elem_sep void setNumberOfPingTries concode_elem_sep int getNumberOfReplicates concode_elem_sep long getTimeBetweenReplicationChecks concode_elem_sep void setTimeBetweenRootPings concode_elem_sep void setMinimumNumberOfReplicates concode_elem_sep long getTimeToLiveForContacts concode_elem_sep void setNumberOfReplicates concode_elem_sep int getMinimumNumberOfReplicates concode_elem_sep void setTimeBetweenReplicationChecks concode_elem_sep long getTimeBetweenRootPings concode_elem_sep void setNumberOfReplicationTries"}
{"code": "void function ( String arg0 ) { if ( arg0 == null || arg0 . length ( ) == 0 ) { throw new XMPException ( \"srini_string\" , XMPError . BADPARAM ) ; } }", "nl": "asserts that a schema namespace is set . concode_field_sep PlaceHolder placeHolder concode_field_sep void assertPrefix concode_elem_sep void assertSpecificLang concode_elem_sep void assertPropName concode_elem_sep void assertNotNull concode_elem_sep void assertArrayName concode_elem_sep void assertStructName concode_elem_sep void assertImplementation"}
{"code": "int function ( ) { return mCount ; }", "nl": "return number of elements concode_field_sep int mCount concode_elem_sep Object[] mNodes concode_elem_sep Comparator mCmp concode_field_sep int parent concode_elem_sep int compare concode_elem_sep boolean erase concode_elem_sep Object extract concode_elem_sep int left concode_elem_sep List getSorted concode_elem_sep void clear concode_elem_sep void insert concode_elem_sep int right concode_elem_sep List getUnsorted concode_elem_sep Object extractElementAt concode_elem_sep Object peek"}
{"code": "boolean function ( long arg0 ) { return ( ( blockStart >= arg0 + SYNC_SIZE ) || ( blockStart >= in . length ( ) ) ) ; }", "nl": "return true if past the next synchronization point after a position . concode_field_sep byte[] MAGIC concode_elem_sep String CODEC concode_elem_sep Schema schema concode_elem_sep long blockCount concode_elem_sep int SYNC_SIZE concode_elem_sep String SYNC concode_elem_sep DataFileReader.SeekableInputStream in concode_elem_sep DatumReader<D> reader concode_elem_sep long count concode_elem_sep byte[] sync concode_elem_sep String SCHEMA concode_elem_sep Map<String,byte[]> meta concode_elem_sep D peek concode_elem_sep long blockStart concode_elem_sep byte VERSION concode_elem_sep byte[] syncBuffer concode_elem_sep String COUNT concode_elem_sep long FOOTER_BLOCK concode_elem_sep BinaryDecoder vin concode_elem_sep String NULL_CODEC concode_elem_sep int SYNC_INTERVAL concode_field_sep D next concode_elem_sep D next concode_elem_sep long tell concode_elem_sep String getMetaString concode_elem_sep long getMetaLong concode_elem_sep boolean hasNext concode_elem_sep void seek concode_elem_sep void sync concode_elem_sep void remove concode_elem_sep Schema getSchema concode_elem_sep Iterator<D> iterator concode_elem_sep byte[] getMeta concode_elem_sep void skipSync concode_elem_sep void close"}
{"code": "int function ( ) { return end ; }", "nl": "returns the end index . concode_field_sep int start concode_elem_sep int end concode_elem_sep char[] buffer concode_field_sep int getStart concode_elem_sep char[] getBuffer concode_elem_sep void setStart concode_elem_sep void adjust concode_elem_sep boolean hasMore concode_elem_sep int getLength concode_elem_sep void setEnd"}
{"code": "void function ( String arg0 ) { addons = new JSONObject ( arg0 ) ; needsWrite = true ; }", "nl": "update the cached set of add-ons . throws on invalid input . concode_field_sep String appLocale concode_elem_sep boolean telemetryEnabled concode_elem_sep long profileCreationTime concode_elem_sep boolean blocklistEnabled concode_elem_sep int FORMAT_VERSION concode_elem_sep String distribution concode_elem_sep boolean needsWrite concode_elem_sep String LOG_TAG concode_elem_sep File file concode_elem_sep String osLocale concode_elem_sep String CACHE_FILE concode_elem_sep boolean isAcceptLangUserSet concode_elem_sep boolean initialized concode_elem_sep JSONObject addons concode_field_sep void setProfileCreationTime concode_elem_sep String getDistributionString concode_elem_sep void updateJSONForAddon concode_elem_sep void updateJSONForAddon concode_elem_sep void removeAddon concode_elem_sep void completeInitialization concode_elem_sep boolean restoreUnlessInitialized concode_elem_sep void writeToFile concode_elem_sep boolean updateLocales concode_elem_sep void beginInitialization concode_elem_sep JSONObject toJSON concode_elem_sep long getProfileCreationTime concode_elem_sep JSONObject getAddonsJSON concode_elem_sep void setOSLocale concode_elem_sep boolean fromJSON concode_elem_sep boolean isAcceptLangUserSet concode_elem_sep void setTelemetryEnabled concode_elem_sep void setBlocklistEnabled concode_elem_sep String getOSLocale concode_elem_sep boolean isBlocklistEnabled concode_elem_sep void ensureInitialized concode_elem_sep String getAppLocale concode_elem_sep JSONObject readFromFile concode_elem_sep void setAcceptLangUserSet concode_elem_sep void setDistributionString concode_elem_sep boolean isTelemetryEnabled concode_elem_sep void setAppLocale"}
{"code": "ByRef < T > function ( TransactionLocal < T > arg0 ) { final ByRef < T > loc0 = ( ByRef < T > ) _locals . get ( arg0 ) ; if ( null != loc0 ) return loc0 ; final ByRef < T > loc1 = ByRef . newInstance ( arg0 . initialValueFor ( this ) ) ; _locals . put ( arg0 , loc1 ) ; return loc1 ; }", "nl": "retrieves the value of a transaction local variables . if this is the first time the variable is accessed transactionlocal #initialvaluefor transaction will provide the initial value . concode_field_sep ObjectContainerBase _container concode_elem_sep Transaction _systemTransaction concode_elem_sep Map<TransactionLocal<?>,Object> _locals concode_elem_sep Tree _delete concode_elem_sep List4 _transactionListeners concode_elem_sep ObjectContainer _objectContainer concode_elem_sep ReferenceSystem _referenceSystem concode_field_sep void slotFreePointerOnCommit concode_elem_sep void slotFreePointerOnCommit concode_elem_sep ObjectContainerBase container concode_elem_sep void commitTransactionListeners concode_elem_sep void commit concode_elem_sep void checkSynchronization concode_elem_sep void writeUpdateAdjustIndexes concode_elem_sep void addNewReference concode_elem_sep boolean delete concode_elem_sep void clearAll concode_elem_sep ObjectContainer objectContainer concode_elem_sep void deactivate concode_elem_sep void slotFreeOnRollback concode_elem_sep void removeReference concode_elem_sep void produceUpdateSlotChange concode_elem_sep boolean isDeleted concode_elem_sep void slotDelete concode_elem_sep void commitReferenceSystem concode_elem_sep void rollbackReferenceSystem concode_elem_sep boolean supportsVirtualFields concode_elem_sep Context context concode_elem_sep void close concode_elem_sep Transaction systemTransaction concode_elem_sep void rollback concode_elem_sep void processDeletes concode_elem_sep void addTransactionListener concode_elem_sep void setPointer concode_elem_sep void setPointer concode_elem_sep void dontDelete concode_elem_sep ObjectReference referenceForId concode_elem_sep void clear concode_elem_sep void slotFreeOnRollbackCommitSetPointer concode_elem_sep void slotFreePointerOnRollback concode_elem_sep void traverseDelete concode_elem_sep void discardReferenceSystem concode_elem_sep void slotFreeOnCommit concode_elem_sep void rollBackTransactionListeners concode_elem_sep Reflector reflector concode_elem_sep Transaction parentTransaction concode_elem_sep void removeObjectFromReferenceSystem concode_elem_sep void setOutSideRepresentation concode_elem_sep ObjectReference referenceForObject concode_elem_sep boolean isSystemTransaction concode_elem_sep String toString concode_elem_sep Object wrap concode_elem_sep ReferenceSystem referenceSystem concode_elem_sep Object objectForIdFromCache"}
{"code": "void function ( ) { if ( imagesWereLoaded ) return ; addImages ( ) ; imagesWereLoaded = true ; }", "nl": "checks if the images are loaded in the cache . the variable imageswereloaded is used to ensure that they wo n't be loaded more then once . concode_field_sep String T_LCL concode_elem_sep String T_TOOL concode_elem_sep URL iconBaseURL concode_elem_sep ImageRegistry imageRegistry concode_elem_sep String T_OBJ concode_elem_sep String T_VIEW concode_elem_sep String T_OVR concode_elem_sep boolean imagesWereLoaded concode_elem_sep String T_WIZBAN concode_field_sep ImageDescriptor add concode_elem_sep ImageDescriptor add concode_elem_sep boolean add concode_elem_sep URL makeIconFileURL concode_elem_sep void setImageDescriptors concode_elem_sep ImageDescriptor createImageDescriptor concode_elem_sep void initialize concode_elem_sep void addImages concode_elem_sep ImageDescriptor getImageDescriptor concode_elem_sep ImageDescriptor getImageDescriptor concode_elem_sep Image getImage concode_elem_sep Image getImage"}
{"code": "int function ( DateTimeField arg0 ) { if ( arg0 == null ) { throw new IllegalArgumentException ( \"srini_string\" ) ; } return arg0 . get ( getMillis ( ) ) ; }", "nl": "get the value of one of the fields of a datetime . this could be used to get a field using a different chronology . for example : instant dt = new instant ; int gjyear = dt.get chronology.getcoptic . year ; concode_field_sep PlaceHolder placeHolder concode_field_sep MutableDateTime toMutableDateTime concode_elem_sep MutableDateTime toMutableDateTime concode_elem_sep MutableDateTime toMutableDateTime concode_elem_sep Date toDate concode_elem_sep boolean isEqual concode_elem_sep boolean isEqual concode_elem_sep DateTimeZone getZone concode_elem_sep boolean isSupported concode_elem_sep int compareTo concode_elem_sep boolean isBeforeNow concode_elem_sep Instant toInstant concode_elem_sep boolean isBefore concode_elem_sep boolean isBefore concode_elem_sep boolean isEqualNow concode_elem_sep MutableDateTime toMutableDateTimeISO concode_elem_sep DateTime toDateTimeISO concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep String toString concode_elem_sep String toString concode_elem_sep boolean isAfter concode_elem_sep boolean isAfter concode_elem_sep DateTime toDateTime concode_elem_sep DateTime toDateTime concode_elem_sep DateTime toDateTime concode_elem_sep boolean isAfterNow"}
{"code": "String function ( ) { return fTrace ; }", "nl": "returns the failure stack trace . concode_field_sep String fExpected concode_elem_sep Result FAILURE concode_elem_sep String fActual concode_elem_sep Result UNDEFINED concode_elem_sep Result ERROR concode_elem_sep Result IGNORED concode_elem_sep String fName concode_elem_sep ProgressState NOT_STARTED concode_elem_sep ProgressState STOPPED concode_elem_sep Result OK concode_elem_sep String fTrace concode_elem_sep ProgressState COMPLETED concode_elem_sep ProgressState RUNNING concode_field_sep Result getTestResult concode_elem_sep String getActual concode_elem_sep String getExpected concode_elem_sep ProgressState getProgressState concode_elem_sep ITestElementContainer getParentContainer concode_elem_sep String toString concode_elem_sep String toString concode_elem_sep ITestRunSession getTestRunSession concode_elem_sep FailureTrace getFailureTrace concode_elem_sep double getElapsedTimeInSeconds"}
{"code": "void function ( ) { LOG . trace ( \"srini_string\" ) ; queryPlanCache . clear ( ) ; parameterMetadataCache . clear ( ) ; }", "nl": "clean up queryplancache when sessionfactory is closed concode_field_sep SessionFactoryImplementor factory concode_elem_sep Set<DynamicFilterKey> filterKeys concode_elem_sep String query concode_elem_sep String filterName concode_elem_sep Map<String,Integer> parameterMetadata concode_elem_sep int DEFAULT_PARAMETER_METADATA_MAX_COUNT concode_elem_sep int DEFAULT_QUERY_PLAN_MAX_COUNT concode_elem_sep BoundedConcurrentHashMap queryPlanCache concode_elem_sep NativeQueryInterpreter nativeQueryInterpreterService concode_elem_sep Set<String> filterNames concode_elem_sep BoundedConcurrentHashMap<String,ParameterMetadata> parameterMetadataCache concode_elem_sep int hashCode concode_elem_sep CoreMessageLogger LOG concode_elem_sep boolean shallow concode_elem_sep String collectionRole concode_field_sep HQLQueryPlan getHQLQueryPlan concode_elem_sep int hashCode concode_elem_sep int hashCode concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep boolean equals concode_elem_sep boolean equals concode_elem_sep FilterQueryPlan getFilterQueryPlan concode_elem_sep ParameterMetadata getSQLParameterMetadata concode_elem_sep NativeSQLQueryPlan getNativeSQLQueryPlan"}
{"code": "ValidationErrorDTO function ( MethodArgumentNotValidException arg0 , Locale arg1 ) { BindingResult loc0 = arg0 . getBindingResult ( ) ; List < FieldError > loc1 = loc0 . getFieldErrors ( ) ; LOGGER . error ( \"srini_string\" , loc1 . size ( ) ) ; return constructValidationErrors ( loc1 , arg1 ) ; }", "nl": "processes an error that occurs when the validation of an object fails . concode_field_sep String ERROR_CODE_TODO_ENTRY_NOT_FOUND concode_elem_sep Logger LOGGER concode_elem_sep MessageSource messageSource concode_field_sep ErrorDTO handleTodoEntryNotFound concode_elem_sep DefaultMessageSourceResolvable createSingleErrorMessageRequest concode_elem_sep String getValidationErrorMessage concode_elem_sep ValidationErrorDTO constructValidationErrors"}
{"code": "void function ( final ILanguageNames arg0 ) { this . languageNames = arg0 ; }", "nl": "sets the implementation for language name display . java language names are defined by default . concode_field_sep String footerText concode_elem_sep Resources resources concode_elem_sep ElementIndex index concode_elem_sep Locale locale concode_elem_sep ILanguageNames languageNames concode_elem_sep String outputEncoding concode_elem_sep SessionsPage sessionsPage concode_elem_sep Table table concode_field_sep void setOutputEncoding concode_elem_sep Table createTable concode_elem_sep IReportVisitor createVisitor concode_elem_sep ILanguageNames getLanguageNames concode_elem_sep IIndexUpdate getIndexUpdate concode_elem_sep String getFooterText concode_elem_sep Resources getResources concode_elem_sep Table getTable concode_elem_sep ILinkable getSessionsPage concode_elem_sep String getOutputEncoding concode_elem_sep void setFooterText concode_elem_sep Locale getLocale concode_elem_sep void setLocale concode_elem_sep void addMissedTotalColumns"}
{"code": "Object function ( Object arg0 ) { return null ; }", "nl": "children should override this . the default implementation returns null . concode_field_sep IPropertyDescriptor[] EMPTY_ARRAY concode_elem_sep PropertyChangeSupport pcsDelegate concode_elem_sep long serialVersionUID concode_field_sep void firePropertyChange concode_elem_sep void setPropertyValue concode_elem_sep Object getEditableValue concode_elem_sep IPropertyDescriptor[] getPropertyDescriptors concode_elem_sep void resetPropertyValue concode_elem_sep void addPropertyChangeListener concode_elem_sep boolean isPropertySet concode_elem_sep void removePropertyChangeListener concode_elem_sep void readObject"}
{"code": "int function ( ) { if ( allowUdp ( ) ) { int loc0 = getKdcUdpPort ( ) ; if ( loc0 < 1 ) { throw new KrbException ( \"srini_string\" ) ; } return loc0 ; } return - 1 ; }", "nl": "check kdc udp setting and see if any bad . concode_field_sep KdcConfig kdcConfig concode_elem_sep BackendConfig backendConfig concode_elem_sep KOptions startupOptions concode_field_sep int getKdcTcpPort concode_elem_sep int getKdcPort concode_elem_sep String getKdcRealm concode_elem_sep int checkGetKdcTcpPort concode_elem_sep int getKdcUdpPort concode_elem_sep boolean allowTcp concode_elem_sep boolean allowUdp concode_elem_sep KdcConfig getKdcConfig concode_elem_sep String getKdcHost concode_elem_sep BackendConfig getBackendConfig"}
{"code": "void function ( String arg0 , Map < String , String > arg1 ) { this . adjustFontSize ( arg1 ) ; chain . add ( new TagAttributes ( arg0 , arg1 ) ) ; }", "nl": "adds a tag and its corresponding properties to the chain . concode_field_sep List<TagAttributes> chain concode_elem_sep String tag concode_elem_sep Map<String,String> attrs concode_field_sep String getProperty concode_elem_sep boolean hasProperty concode_elem_sep void removeChain concode_elem_sep void adjustFontSize"}
{"code": "QueryContextInformation function ( final String arg0 ) { final long loc0 = System . currentTimeMillis ( ) ; final int loc1 = DateUtility . getIndex ( System . getProperty ( \"srini_string\" ) ) ; return QueryContextInformation . newBuilder ( ) . setDefaultSchemaName ( arg0 ) . setQueryStartTime ( loc0 ) . setTimeZone ( loc1 ) . build ( ) ; }", "nl": "create querycontextinformation with given defaultschemaname . rest of the members of the querycontextinformation is derived from the current state of the process . concode_field_sep PlaceHolder placeHolder concode_field_sep String getFileNameForQueryFragment concode_elem_sep String getDrillVersion"}
{"code": "AlgebraicNumber < C > function ( String arg0 ) { throw new RuntimeException ( \"srini_string\" ) ; }", "nl": "parse algebraicnumber from string . concode_field_sep GenPolynomialRing<C> ring concode_elem_sep int isField concode_elem_sep GenPolynomial<C> modul concode_field_sep boolean isField concode_elem_sep boolean isCommutative concode_elem_sep AlgebraicNumber<C> interpolate concode_elem_sep java.math.BigInteger characteristic concode_elem_sep AlgebraicNumber<C> random concode_elem_sep AlgebraicNumber<C> random concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep AlgebraicNumber<C> getONE concode_elem_sep AlgebraicNumber<C> getZERO concode_elem_sep AlgebraicNumber<C> fromInteger concode_elem_sep AlgebraicNumber<C> fromInteger concode_elem_sep boolean isAssociative concode_elem_sep String toString concode_elem_sep AlgebraicNumber<C> copy concode_elem_sep AlgebraicNumber<C> chineseRemainder"}
{"code": "org . eclipse . jdt . internal . corext . refactoring . changes . CompilationUnitChange function ( ) { CompilationUnitChange loc0 = createChange ( true ) ; if ( loc0 == null ) return null ; return new org . eclipse . jdt . internal . corext . refactoring . changes . CompilationUnitChange ( loc0 ) ; }", "nl": "creates a compilation unit change based on the events recorded by this compilation unit rewrite . do not remove , used in a product . concode_field_sep ImportRewrite fImportRewrite concode_elem_sep ImportRemover fImportRemover concode_elem_sep WorkingCopyOwner fOwner concode_elem_sep ASTRewrite fRewrite concode_elem_sep boolean fStatementsRecovery concode_elem_sep List<TextEditGroup> fTextEditGroups concode_elem_sep ICompilationUnit fCu concode_elem_sep IDocument fRememberContent concode_elem_sep CompilationUnit fRoot concode_elem_sep boolean fResolveBindings concode_elem_sep boolean fBindingsRecovery concode_field_sep void clearASTRewrite concode_elem_sep ASTRewrite getASTRewrite concode_elem_sep void rememberContent concode_elem_sep AST getAST concode_elem_sep void setBindingRecovery concode_elem_sep void setStatementsRecovery concode_elem_sep ImportRemover getImportRemover concode_elem_sep void clearASTAndImportRewrites concode_elem_sep CompilationUnitChange attachChange concode_elem_sep CategorizedTextEditGroup createCategorizedGroupDescription concode_elem_sep TextEditGroup createGroupDescription concode_elem_sep void setResolveBindings concode_elem_sep ImportRewrite getImportRewrite concode_elem_sep ICompilationUnit getCu concode_elem_sep void clearImportRewrites concode_elem_sep void clearGroupDescriptionEdits concode_elem_sep CompilationUnit getRoot concode_elem_sep boolean isEmptyEdit"}
{"code": "void function ( SimpleName arg0 ) { clear ( ) ; fNode = arg0 ; }", "nl": "update this token with the given ast node . note : allowed to be used by semantichighlightingreconciler only . concode_field_sep boolean fIsRootResolved concode_elem_sep IBinding fBinding concode_elem_sep Expression fLiteral concode_elem_sep SimpleName fNode concode_elem_sep CompilationUnit fRoot concode_elem_sep boolean fIsBindingResolved concode_field_sep Expression getLiteral concode_elem_sep IBinding getBinding concode_elem_sep void clear concode_elem_sep SimpleName getNode concode_elem_sep CompilationUnit getRoot"}
{"code": "boolean function ( ) { return pointer == - 1 ; }", "nl": "testet , ob der puffer leer ist . concode_field_sep char zero concode_elem_sep char minus concode_elem_sep String regexp concode_elem_sep Charset charset concode_elem_sep int pointer concode_elem_sep Receiver receiver concode_elem_sep Sender sender concode_elem_sep int length concode_elem_sep BitAmount bits concode_elem_sep boolean[] buffer concode_elem_sep char plus concode_field_sep char minus concode_elem_sep String getRegExp concode_elem_sep String receive concode_elem_sep char getLastPulseOfReceiver concode_elem_sep String charform concode_elem_sep String read concode_elem_sep void clear concode_elem_sep char plus concode_elem_sep int getDC concode_elem_sep char zero concode_elem_sep StringBuilder stringform concode_elem_sep boolean[] bitform concode_elem_sep char getLastPulseOfSender concode_elem_sep char bufferToDecimal concode_elem_sep boolean get concode_elem_sep int getLength concode_elem_sep String getCharsetRegExp concode_elem_sep BitBuffer copy concode_elem_sep void buffer concode_elem_sep boolean isFull concode_elem_sep String send"}
{"code": "IJavaElement function ( IEditorInput arg0 ) { Assert . isNotNull ( arg0 ) ; IJavaElement loc0 = JavaUI . getWorkingCopyManager ( ) . getWorkingCopy ( arg0 ) ; if ( loc0 != null ) return loc0 ; return arg0 . getAdapter ( IJavaElement . class ) ; }", "nl": "note : this is an inlined version of javaui #geteditorinputjavaelement ieditorinput , which is not available in 3.1 . concode_field_sep PlaceHolder placeHolder concode_field_sep IOpenable getJavaInput concode_elem_sep void selectInEditor concode_elem_sep IEditorPart getActiveEditor"}
{"code": "String function ( ) { return refClassName ; }", "nl": "this widget 's class name . concode_field_sep WidgetReference windowReference concode_elem_sep String refClassName concode_elem_sep String title concode_elem_sep String invokerID concode_elem_sep String windowID concode_elem_sep String id concode_elem_sep WidgetReference invokerReference concode_elem_sep WidgetFinder finder concode_elem_sep String name concode_elem_sep String text concode_elem_sep WidgetReference parentReference concode_elem_sep int index concode_elem_sep String parentID concode_elem_sep Point point concode_elem_sep String tag concode_field_sep String getName concode_elem_sep String getInvokerID concode_elem_sep int getIndex concode_elem_sep WidgetReference getWindowReference concode_elem_sep String getText concode_elem_sep String getID concode_elem_sep String getTag concode_elem_sep boolean isAssignableFrom concode_elem_sep String getTitle concode_elem_sep Point getInvocationLocation concode_elem_sep WidgetReference getParentReference concode_elem_sep String toString concode_elem_sep WidgetReference getInvokerReference concode_elem_sep String getParentID concode_elem_sep String getWindowID"}
{"code": "List < ValidationError > function ( Document arg0 ) { List < Document > loc0 = new ArrayList < > ( ) ; loc0 . add ( arg0 ) ; Map < Document , List < ValidationError >> loc1 = validate ( loc0 ) ; return loc1 . get ( arg0 ) ; }", "nl": "validate the input document collection . note that this method call is not thread safe . redpen instances need to be crated for each thread . concode_field_sep String VERSION concode_elem_sep SentenceExtractor sentenceExtractor concode_elem_sep Configuration configuration concode_elem_sep List<Validator> validators concode_elem_sep Logger LOG concode_field_sep void runSectionValidators concode_elem_sep Configuration getConfiguration concode_elem_sep void initializeValidators concode_elem_sep void runDocumentValidators concode_elem_sep int hashCode concode_elem_sep void runSentenceValidators concode_elem_sep boolean equals concode_elem_sep void applyPreprocessorRules concode_elem_sep void applyPreprocessorRules concode_elem_sep String toString concode_elem_sep Document parse concode_elem_sep Document parse concode_elem_sep List<Document> parse concode_elem_sep List<Validator> getValidators"}
{"code": "T function ( ServiceRegistry arg0 , ServiceName arg1 ) { ServiceController < T > loc0 = findService ( arg0 , arg1 ) ; return ( ( loc0 != null ) && ( loc0 . getState ( ) == State . UP ) ) ? loc0 . getValue ( ) : null ; }", "nl": "returns the value of the specified service , if the service exists and is started . concode_field_sep Map<State,Map<Mode,Mode>> modeToggle concode_field_sep T getValue concode_elem_sep ServiceController<T> findService concode_elem_sep void stop concode_elem_sep void start concode_elem_sep ServiceController<T> getService concode_elem_sep void remove concode_elem_sep void transition"}
{"code": "T function ( Iterable < T > arg0 , Function < T , Double > arg1 ) { T loc0 = null ; Double loc1 = null ; for ( T loc2 : arg0 ) { if ( loc0 == null || arg1 . apply ( loc2 ) > loc1 ) { loc0 = loc2 ; loc1 = arg1 . apply ( loc2 ) ; } } return loc0 ; }", "nl": "from an iterable of objects , this returns the one with the highest associated value of a function f concode_field_sep PlaceHolder placeHolder concode_field_sep T min"}
{"code": "Point function ( Component arg0 ) { return where != null ? new Point ( where ) : new Point ( arg0 . getWidth ( ) / 2 , arg0 . getHeight ( ) / 2 ) ; }", "nl": "convert the abstract location into a concrete one . returns a point relative to the given component . concode_field_sep Point where concode_elem_sep String CENTER concode_field_sep boolean isValue concode_elem_sep String badFormat concode_elem_sep boolean equals concode_elem_sep String toString concode_elem_sep boolean isIndex concode_elem_sep String parseValue concode_elem_sep ComponentLocation parse concode_elem_sep int parseIndex concode_elem_sep Rectangle getBounds concode_elem_sep String encodeIndex concode_elem_sep String encodeValue"}
{"code": "String function ( ) { return toParseableString ( ) ; }", "nl": "same as toparseablestring . concode_field_sep Sequence sequence concode_elem_sep CoverageAtom frontierBranch concode_elem_sep Set<VariableInfo> values concode_elem_sep Set<String> branch_compares concode_elem_sep Variable value concode_elem_sep long serialVersionUID concode_elem_sep long serialVersionUID concode_field_sep void add_branch_compare concode_elem_sep String print concode_elem_sep String toParseableString concode_elem_sep DFResultsOneSeq parse"}
{"code": "void function ( ) { _bin . close ( ) ; }", "nl": "closes the bindecorator and the underlying bin . concode_field_sep Bin _bin concode_field_sep int read concode_elem_sep long length concode_elem_sep int syncRead concode_elem_sep void sync concode_elem_sep void write"}
{"code": "boolean function ( ) { return ( this . useContextClassLoader ) ; }", "nl": "return the `` use context class loader '' flag . if set to true , digester will attempt to instantiate new command and chain instances from the context class loader . concode_field_sep boolean useContextClassLoader concode_elem_sep RuleSet ruleSet concode_elem_sep Digester digester concode_field_sep Digester getDigester concode_elem_sep void setRuleSet concode_elem_sep RuleSet getRuleSet concode_elem_sep void parse concode_elem_sep void parse concode_elem_sep void setUseContextClassLoader"}
{"code": "void function ( ) { running = false ; tStart = 0 ; tFinish = 0 ; tAccum = 0 ; }", "nl": "stops timing , if currently running ; resets accumulated time to 0 . concode_field_sep boolean running concode_elem_sep long tAccum concode_elem_sep long tFinish concode_elem_sep long tStart concode_field_sep long elapsed concode_elem_sep long stop concode_elem_sep void start"}
{"code": "void function ( ActivationPurpose arg0 ) { if ( _activator != null ) { _activator . activate ( arg0 ) ; } }", "nl": "activate basic implementation . concode_field_sep int _size concode_elem_sep V[] _values concode_elem_sep Activator _activator concode_elem_sep long serialVersionUID concode_elem_sep K[] _keys concode_field_sep V defaultValue concode_elem_sep Collection<V> values concode_elem_sep V replace concode_elem_sep void insert concode_elem_sep V valueAt concode_elem_sep V delete concode_elem_sep boolean containsValue concode_elem_sep V put concode_elem_sep V remove concode_elem_sep void bind concode_elem_sep int hashCode concode_elem_sep V get concode_elem_sep V putInternal concode_elem_sep void putAll concode_elem_sep K defaultKeyValue concode_elem_sep Set<K> keySet concode_elem_sep int indexOf concode_elem_sep V[] allocateValueStorage concode_elem_sep K keyAt concode_elem_sep K[] allocateKeyStorage concode_elem_sep Set<Map.Entry<K,V>> entrySet concode_elem_sep boolean containsKey concode_elem_sep void clear concode_elem_sep boolean isEmpty concode_elem_sep int size concode_elem_sep int indexOfKey concode_elem_sep boolean equals concode_elem_sep ArrayMap4<K,V> clone concode_elem_sep void ensureCapacity concode_elem_sep boolean containsKeyImpl concode_elem_sep void initializeBackingArray"}
{"code": "Buffer function ( Buffer arg0 , Class arg1 ) { return new PredicatedBuffer ( arg0 , InstanceofPredicate . getInstance ( arg1 ) ) ; }", "nl": "factory method to create a typed list . if there are any elements already in the buffer being decorated , they are validated . concode_field_sep PlaceHolder placeHolder concode_field_sep placeholderType placeHolder"}
{"code": "void function ( String arg0 , String arg1 ) { if ( arg0 == null ) throw new IllegalArgumentException ( \"srini_string\" ) ; getDataMap ( ) . put ( arg0 , arg1 ) ; }", "nl": "returns the programmer defined property of the receiver with the specified name , or null if it has not been set . data mappings allow programmers to associate arbitrary key-value pairs with locator instances . concode_field_sep long serialVersionUID concode_elem_sep int UNASSIGNED concode_elem_sep String nameOrLabel concode_elem_sep int index concode_elem_sep WidgetLocator ancestorInfo concode_elem_sep WidgetLocator parentInfo concode_elem_sep HashMap<String,String> map concode_elem_sep ClassReference classRef concode_field_sep void setAncestorInfo concode_elem_sep Object getAdapter concode_elem_sep int getIndex concode_elem_sep void copyDataTo concode_elem_sep WidgetLocator getParentInfo concode_elem_sep String getWidgetLocatorStringName concode_elem_sep String getNameOrLabel concode_elem_sep WidgetLocator getAncestorInfo concode_elem_sep com.windowtester.runtime.locator.IWidgetLocator[] findAll concode_elem_sep boolean matches concode_elem_sep Map<String,String> getDataMap concode_elem_sep void accept concode_elem_sep void setParentInfo concode_elem_sep Class<?> getTargetClass concode_elem_sep void setIndex concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep ClassReference getTargetClassRef concode_elem_sep String getTargetClassName concode_elem_sep String toString concode_elem_sep String getData"}
{"code": "int function ( ) { if ( code != null ) { return code . maxLocals ( ) ; } return 0 ; }", "nl": "get the maximum number of locals used in the method . concode_field_sep ClassInfo classInfo concode_elem_sep Code code concode_elem_sep int name concode_elem_sep boolean DEBUG concode_elem_sep int modifiers concode_elem_sep int type concode_elem_sep Exceptions exceptions concode_elem_sep Attribute[] attrs concode_field_sep Catch[] exceptionHandlers concode_elem_sep LineNumberDebugInfo[] lineNumbers concode_elem_sep byte[] code concode_elem_sep int codeLength concode_elem_sep int typeIndex concode_elem_sep void setLineNumbers concode_elem_sep void setCode concode_elem_sep void setLocals concode_elem_sep void setTypeIndex concode_elem_sep void setModifiers concode_elem_sep int modifiers concode_elem_sep int maxStack concode_elem_sep ClassInfo declaringClass concode_elem_sep int[] exceptionTypes concode_elem_sep void setExceptionHandlers concode_elem_sep int nameIndex concode_elem_sep void setNameIndex concode_elem_sep void setMaxLocals concode_elem_sep Object clone concode_elem_sep void setMaxStack concode_elem_sep String toString concode_elem_sep void write concode_elem_sep LocalDebugInfo[] locals"}
{"code": "Object function ( String arg0 ) { return data . get ( arg0 ) ; }", "nl": "returns value of specified field if exists , or null otherwise concode_field_sep Map<String,Object> data concode_elem_sep String ID_KEY concode_elem_sep List<String> fields concode_field_sep boolean isFieldsOrderImportant concode_elem_sep boolean containsField concode_elem_sep void clear concode_elem_sep ObjectId getId concode_elem_sep Object put concode_elem_sep void remove concode_elem_sep boolean equalObjects concode_elem_sep int size concode_elem_sep Object registerField concode_elem_sep int hashCode concode_elem_sep void putAll concode_elem_sep void putAll concode_elem_sep boolean equals concode_elem_sep String toString concode_elem_sep List<String> fields concode_elem_sep BSONObject append"}
{"code": "void function ( OutputStream arg0 ) { writer . writeTo ( arg0 ) ; }", "nl": "write all rows added to the named output stream . concode_field_sep Schema schema concode_elem_sep int[] arrayWidths concode_elem_sep String SCHEMA_KEY concode_elem_sep GenericData model concode_elem_sep ColumnFileWriter writer concode_field_sep void writeValue concode_elem_sep long sizeEstimate concode_elem_sep void write concode_elem_sep int write"}
{"code": "AuditCriterion function ( T arg0 ) { return new SimpleAuditExpression ( propertyNameGetter , arg0 , \"srini_string\" ) ; }", "nl": "apply a `` like '' constraint concode_field_sep PropertyNameGetter propertyNameGetter concode_field_sep AuditCriterion hasNotChanged concode_elem_sep AuditCriterion lt concode_elem_sep AuditProjection distinct concode_elem_sep AuditCriterion leProperty concode_elem_sep AggregatedAuditExpression maximize concode_elem_sep AuditProjection min concode_elem_sep AuditCriterion hasChanged concode_elem_sep AuditCriterion gtProperty concode_elem_sep AuditProjection function concode_elem_sep AuditCriterion neProperty concode_elem_sep AuditCriterion ltProperty concode_elem_sep AuditCriterion ge concode_elem_sep AuditCriterion between concode_elem_sep Triple<String,String,Boolean> getData concode_elem_sep AuditCriterion isNotNull concode_elem_sep AggregatedAuditExpression minimize concode_elem_sep AuditCriterion in concode_elem_sep AuditCriterion in concode_elem_sep AuditProjection max concode_elem_sep AuditCriterion geProperty concode_elem_sep AuditProjection count concode_elem_sep AuditCriterion eq concode_elem_sep AuditCriterion gt concode_elem_sep AuditOrder asc concode_elem_sep AuditProjection countDistinct concode_elem_sep AuditCriterion ne concode_elem_sep AuditCriterion isNull concode_elem_sep AuditCriterion eqProperty concode_elem_sep AuditCriterion le concode_elem_sep AuditCriterion ilike concode_elem_sep AuditCriterion ilike concode_elem_sep AuditOrder desc"}
{"code": "void function ( final StackKeeper arg0 ) { this . queue . addFirst ( arg0 ) ; }", "nl": "add a stackkeeper to the top of the stack list . concode_field_sep Charset charset concode_elem_sep TagProcessorFactory tagFactory concode_elem_sep Map<String,Object> memory concode_elem_sep List<Element> ctn concode_elem_sep LinkProvider linkprovider concode_elem_sep boolean autoBookmark concode_elem_sep boolean acceptUnknown concode_elem_sep List<String> roottags concode_elem_sep String BOOKMARK_TREE concode_elem_sep String LAST_MARGIN_BOTTOM concode_elem_sep Rectangle pageSize concode_elem_sep String resourcesRootPath concode_elem_sep LinkedList<StackKeeper> queue concode_elem_sep CssAppliers cssAppliers concode_elem_sep ImageProvider imageProvider concode_field_sep ImageProvider getImageProvider concode_elem_sep HtmlPipelineContext setTagFactory concode_elem_sep StackKeeper poll concode_elem_sep HtmlPipelineContext setAcceptUnknown concode_elem_sep boolean acceptUnknown concode_elem_sep LinkProvider getLinkProvider concode_elem_sep String getResourcesRootPath concode_elem_sep CssAppliers getCssAppliers concode_elem_sep HtmlPipelineContext charSet concode_elem_sep Charset charSet concode_elem_sep void setLastMarginBottom concode_elem_sep HtmlPipelineContext setImageProvider concode_elem_sep boolean isEmpty concode_elem_sep void setResourcesRootPath concode_elem_sep HtmlPipelineContext setCssApplier concode_elem_sep Map<String,Object> getMemory concode_elem_sep StackKeeper peek concode_elem_sep boolean autoBookmark concode_elem_sep HtmlPipelineContext autoBookmark concode_elem_sep HtmlPipelineContext setLinkProvider concode_elem_sep Float getLastMarginBottom concode_elem_sep Rectangle getPageSize concode_elem_sep List<Element> currentContent concode_elem_sep TagProcessor resolveProcessor concode_elem_sep HtmlPipelineContext clone concode_elem_sep List<String> getRootTags concode_elem_sep void setCssAppliers concode_elem_sep HtmlPipelineContext setRootTags concode_elem_sep HtmlPipelineContext setPageSize"}
{"code": "void function ( ) { if ( lastUsedIterator == null ) { throw new IllegalStateException ( \"srini_string\" ) ; } lastUsedIterator . remove ( ) ; lastUsedIterator = null ; }", "nl": "removes from the underlying collection the last element returned . this method calls remove on the underlying iterator and it may throw an unsupportedoperationexception if the underlying iterator does not support this method . concode_field_sep Iterator lastUsedIterator concode_elem_sep Object root concode_elem_sep Transformer transformer concode_elem_sep boolean hasNext concode_elem_sep Iterator currentIterator concode_elem_sep ArrayStack stack concode_elem_sep Object currentValue concode_field_sep Object next concode_elem_sep void findNextByIterator concode_elem_sep boolean hasNext concode_elem_sep void findNext concode_elem_sep void updateCurrentIterator"}
{"code": "void function ( ITestRunSession arg0 ) { }", "nl": "a test run session has been launched . the test tree is not available yet . important : the implementor of this method must not keep a reference to the session element after #sessionfinished itestrunsession has finished . concode_field_sep PlaceHolder placeHolder concode_field_sep void testCaseStarted concode_elem_sep void sessionFinished concode_elem_sep void testCaseFinished concode_elem_sep void sessionStarted"}
{"code": "TriangleXZ function ( ) { return makeRotationSense ( true ) ; }", "nl": "returns this triangle if it is counterclockwise , or the reversed triangle if it is clockwise . concode_field_sep VectorXZ v1 concode_elem_sep VectorXZ v2 concode_elem_sep VectorXZ v3 concode_field_sep VectorXZ getCenter concode_elem_sep boolean contains concode_elem_sep TriangleXZ makeCounterclockwise concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep TriangleXYZ xyz concode_elem_sep List<VectorXZ> getVertices concode_elem_sep boolean isClockwise concode_elem_sep String toString concode_elem_sep TriangleXZ makeRotationSense concode_elem_sep TriangleXZ reverse concode_elem_sep double getArea"}
{"code": "Phenotype function ( Phenotype arg0 ) { String loc0 = \"srini_string\" ; checkArgument ( arg0 . getId ( ) . isPresent ( ) , loc0 ) ; checkArgument ( arg0 . getIssueNumber ( ) . isPresent ( ) , loc0 ) ; db . savePhenotype ( arg0 ) ; github . patchIssue ( arg0 ) ; return arg0 ; }", "nl": "persist the phenotype given and return it - does not create it . concode_field_sep GithubAPIFactory factory concode_elem_sep GithubAPI github concode_elem_sep boolean up concode_elem_sep DatabaseService db concode_field_sep void init concode_elem_sep List<Phenotype> search concode_elem_sep PhenotypeCreation createRequest concode_elem_sep void syncPhenotype concode_elem_sep Phenotype checkInDb concode_elem_sep void syncPhenotypes concode_elem_sep Phenotype checkInGithub concode_elem_sep void shutdown concode_elem_sep Phenotype getPhenotypeById"}
{"code": "String function ( ) { if ( last != null ) { return \"srini_string\" + getKey ( ) + \"srini_string\" + getValue ( ) + \"srini_string\" ; } else { return \"srini_string\" ; } }", "nl": "gets the iterator as a string . concode_field_sep Iterator iterator concode_elem_sep Map.Entry last concode_elem_sep Map map concode_elem_sep boolean canRemove concode_field_sep Object next concode_elem_sep Object getKey concode_elem_sep Object getValue concode_elem_sep Object setValue concode_elem_sep void reset concode_elem_sep boolean hasNext concode_elem_sep void remove"}
{"code": "String function ( BaseContentEntry < ? > arg0 ) { Link loc0 = arg0 . getLink ( SitesLink . Rel . PARENT , ILink . Type . ATOM ) ; if ( loc0 == null ) { return null ; } return loc0 . getHref ( ) ; }", "nl": "returns the id given by the given entry 's parent link , or null if it has no parent link . concode_field_sep boolean forward concode_elem_sep Logger LOGGER concode_field_sep Comparator<BaseContentEntry<?>> getUpdatedComparator concode_elem_sep void setContent concode_elem_sep Comparator<BaseContentEntry<?>> getTitleComparator concode_elem_sep int compare concode_elem_sep int compare concode_elem_sep String getXhtmlContent concode_elem_sep Comparator<BaseContentEntry<?>> getReverseUpdatedComparator concode_elem_sep void setParentId concode_elem_sep void setParent"}
{"code": "void function ( Object arg0 ) { if ( arg0 != null && arg0 instanceof CachedTeXFormula ) { cache . remove ( ( CachedTeXFormula ) arg0 ) ; } }", "nl": "remove a formula from the cache . take care , remove the object o , invalidate it ! concode_field_sep Image image concode_elem_sep ConcurrentMap<CachedTeXFormula,SoftReference<CachedImage>> cache concode_elem_sep String f concode_elem_sep int inset concode_elem_sep Color fgcolor concode_elem_sep AffineTransform identity concode_elem_sep int width concode_elem_sep int type concode_elem_sep ReferenceQueue queue concode_elem_sep int depth concode_elem_sep int size concode_elem_sep int style concode_elem_sep CachedTeXFormula cachedTf concode_elem_sep int max concode_elem_sep int height concode_field_sep int[] getCachedTeXFormulaDimensions concode_elem_sep int[] getCachedTeXFormulaDimensions concode_elem_sep int[] getCachedTeXFormulaDimensions concode_elem_sep Object paintCachedTeXFormula concode_elem_sep Object paintCachedTeXFormula concode_elem_sep Object paintCachedTeXFormula concode_elem_sep Image getCachedTeXFormulaImage concode_elem_sep Image getCachedTeXFormulaImage concode_elem_sep Image getCachedTeXFormulaImage concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep void setDimensions concode_elem_sep void clearCache concode_elem_sep SoftReference<CachedImage> makeImage concode_elem_sep void setMaxCachedObjects concode_elem_sep Object getCachedTeXFormula concode_elem_sep Object getCachedTeXFormula"}
{"code": "boolean function ( String arg0 , String arg1 , char [ ] arg2 ) { byte [ ] loc0 = hexStringToByteArray ( arg0 ) ; return arg1 . equals ( hashPassword ( arg2 , loc0 ) . get ( \"srini_string\" ) ) ; }", "nl": "checks if the given password matches the hash and salt . the original password should be kept in the database along with its salt . concode_field_sep PlaceHolder placeHolder concode_field_sep byte[] generateSalt concode_elem_sep Map<String,String> hashPassword concode_elem_sep Map<String,String> hashPassword concode_elem_sep byte[] charToBytesASCII concode_elem_sep String byteArrayToHexString concode_elem_sep byte[] hexStringToByteArray"}
{"code": "void function ( ) { }", "nl": "this method is called right before a worker shuts down concode_field_sep long serialVersionUID concode_field_sep void start"}
{"code": "void function ( ) { final List < Element > loc0 = p . end ( workerContextImpl , new Tag ( \"srini_string\" ) , currentContent ) ; Assert . assertTrue ( loc0 . get ( 0 ) instanceof Paragraph ) ; }", "nl": "verifies if the class of the elements returned by paragraph #end is a paragraph . concode_field_sep List<Element> currentContent concode_elem_sep ParaGraph p concode_elem_sep WorkerContextImpl workerContextImpl concode_field_sep void init concode_elem_sep void verifyContent concode_elem_sep void verifyIfStackOwner"}
{"code": "void function ( RPCContext arg0 ) { }", "nl": "this method is invoked at the rpc server when the request is received , but before the call itself is executed concode_field_sep PlaceHolder placeHolder concode_field_sep void serverSendResponse concode_elem_sep void clientStartConnect concode_elem_sep void clientFinishConnect concode_elem_sep void clientSendRequest concode_elem_sep void serverConnecting concode_elem_sep void clientReceiveResponse"}
{"code": "void function ( PastryContact arg0 ) { if ( arg0 . getOverlayID ( ) . equals ( nodeId ) ) return ; RouteSet loc0 = makeBestEntry ( arg0 . getOverlayID ( ) ) ; if ( ! loc0 . contains ( arg0 ) ) { loc0 . insertEntry ( arg0 ) ; cleanSet ( loc0 ) ; if ( loc0 . contains ( arg0 ) ) lastChanged = Simulator . getCurrentTime ( ) ; } }", "nl": "insert a contact to the set concode_field_sep PastryNode node concode_elem_sep int NUM_OF_COLUMNS concode_elem_sep int NUM_OF_ROWS concode_elem_sep long lastChanged concode_elem_sep RouteSet[][] routingTable concode_elem_sep PastryID nodeId concode_field_sep void cleanSet concode_elem_sep RouteSet makeBestEntry concode_elem_sep PastryContact getContactWithLongerCommonPrefix concode_elem_sep PastryContact getContactWithLongerCommonPrefix concode_elem_sep RouteSet[] getBestRouteSetRow concode_elem_sep long getLastChanged concode_elem_sep RouteSet getBestRouteSet concode_elem_sep RouteSet getEntrySet concode_elem_sep RouteSet[] getRow concode_elem_sep boolean remove concode_elem_sep Iterator<PastryContact> iterator concode_elem_sep PastryContact getNumericallyClosest concode_elem_sep PastryContact getNumericallyClosest concode_elem_sep void reset concode_elem_sep String toString concode_elem_sep int getNumOfUniqueEntries concode_elem_sep void insertAll"}
{"code": "Iterator function ( ) { return iterator ; }", "nl": "gets the iterator being decorated . concode_field_sep Iterator iterator concode_field_sep Object next concode_elem_sep boolean hasNext concode_elem_sep void remove"}
{"code": "Buffer function ( Buffer arg0 ) { return SynchronizedBuffer . decorate ( arg0 ) ; }", "nl": "returns a synchronized buffer backed by the given buffer . much like the synchronized collections returned by java.util.collections , you must manually synchronize on the returned buffer 's iterator to avoid non-deterministic behavior : buffer b = bufferutils.synchronizedbuffer mybuffer ; synchronized b iterator i = b.iterator ; while i.hasnext process i.next ; concode_field_sep Buffer EMPTY_BUFFER concode_field_sep Buffer predicatedBuffer concode_elem_sep Buffer transformedBuffer concode_elem_sep Buffer unmodifiableBuffer concode_elem_sep Buffer typedBuffer concode_elem_sep Buffer blockingBuffer"}
{"code": "TextEdit [ ] function ( ) { return fTextEditGroup . getTextEdits ( ) ; }", "nl": "returns the text edits managed by the underlying text edit group . concode_field_sep TextEditBasedChange fChange concode_elem_sep TextEditGroup fTextEditGroup concode_elem_sep boolean fIsEnabled concode_field_sep void setEnabled concode_elem_sep String getName concode_elem_sep IRegion getRegion concode_elem_sep TextEditGroup getTextEditGroup concode_elem_sep boolean isEnabled concode_elem_sep TextEditBasedChange getTextEditChange concode_elem_sep GroupCategorySet getGroupCategorySet"}
{"code": "void function ( Integer arg0 , int arg1 ) { for ( int loc0 = 0 ; loc0 < arg1 ; loc0 ++ ) System . out . print ( \"srini_string\" ) ; System . out . println ( \"srini_string\" + arg0 ) ; }", "nl": "helper method that prints out an integer . concode_field_sep PlaceHolder placeHolder concode_field_sep void print concode_elem_sep void print concode_elem_sep void printMap concode_elem_sep void printList concode_elem_sep void printString concode_elem_sep void printString"}
{"code": "PreauthHandler function ( ) { return preauthHandler ; }", "nl": "get preauth handler . concode_field_sep KrbSetting krbSetting concode_elem_sep PreauthHandler preauthHandler concode_field_sep void init concode_elem_sep int generateNonce concode_elem_sep KrbSetting getKrbSetting concode_elem_sep KrbConfig getConfig concode_elem_sep long getTicketValidTime"}
{"code": "List < TokenElement > function ( ) { return tokens ; }", "nl": "get a set of tokenized words in the sentence . concode_field_sep long serialVersionUID concode_elem_sep List<String> links concode_elem_sep List<TokenElement> tokens concode_elem_sep List<LineOffset> offsetMap concode_elem_sep int lineNumber concode_elem_sep String content concode_elem_sep int startPositionOffset concode_elem_sep boolean isFirstSentence concode_field_sep int getOffsetMapSize concode_elem_sep void setContent concode_elem_sep List<String> getLinks concode_elem_sep void setOffsetMap concode_elem_sep String getContent concode_elem_sep Optional<LineOffset> getOffset concode_elem_sep boolean isFirstSentence concode_elem_sep void setTokens concode_elem_sep int getLineNumber concode_elem_sep int getOffsetPosition concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep int getStartPositionOffset concode_elem_sep void setIsFirstSentence concode_elem_sep void setLineNumber concode_elem_sep String toString concode_elem_sep List<LineOffset> getOffsetMap concode_elem_sep void addLink"}
{"code": "boolean function ( ) { for ( int loc0 = 0 ; loc0 < grid . length ; loc0 ++ ) { for ( int loc1 = 0 ; loc1 < grid . length ; loc1 ++ ) { if ( grid [ loc0 ] [ loc1 ] == 0 ) return false ; } } return true ; }", "nl": "check if there are any free cells . concode_field_sep boolean[][] newCell concode_elem_sep int[][] grid concode_elem_sep boolean[][] hasCombined concode_field_sep boolean canMoveLeft concode_elem_sep int getCell concode_elem_sep boolean canMoveDown concode_elem_sep void generateNextCell concode_elem_sep void moveDown concode_elem_sep void resetGrid concode_elem_sep void resetMoved concode_elem_sep int getSize concode_elem_sep boolean canMoveUp concode_elem_sep boolean canMoveRight concode_elem_sep void moveRight concode_elem_sep void moveLeft concode_elem_sep boolean IsCellNew concode_elem_sep void initializeGame concode_elem_sep void moveUp"}
{"code": "int function ( ) { return fLimitTo ; }", "nl": "returns what kind of occurrences the query should look for . concode_field_sep IJavaSearchScope fScope concode_elem_sep String fScopeDescription concode_elem_sep int fLimitTo concode_field_sep String getScopeDescription concode_elem_sep IJavaSearchScope getScope"}
{"code": "SchemaPlus function ( final String arg0 , final SchemaConfigInfoProvider arg1 ) { final String loc0 = isImpersonationEnabled ? arg0 : ImpersonationUtil . getProcessUserName ( ) ; final SchemaConfig loc1 = SchemaConfig . newBuilder ( loc0 , arg1 ) . build ( ) ; return createRootSchema ( loc1 ) ; }", "nl": "return root schema with schema owner as the given user . concode_field_sep List<SchemaPlus> schemaTreesToClose concode_elem_sep boolean isImpersonationEnabled concode_elem_sep org.slf4j.Logger logger concode_elem_sep DrillbitContext dContext concode_field_sep void addSchemasToCloseList concode_elem_sep void close"}
{"code": "SysPropsBuildr function ( ) { return new SysPropsBuildr ( ) ; }", "nl": "create and return a builder from system properties . concode_field_sep String PROP_WEBTESTS_BROWSER concode_elem_sep String PROP_WEBTESTS_LOCALES concode_elem_sep String PROP_WEBTESTS_HUB_URL concode_field_sep ChromeBuildr chrome concode_elem_sep SafariBuildr safari concode_elem_sep WebDriver build concode_elem_sep FirefoxBuildr firefox concode_elem_sep RemoteBuildr remote"}
{"code": "IntListIterator function ( IntListIterator arg0 ) { if ( null == arg0 ) { throw new NullPointerException ( ) ; } return UnmodifiableIntListIterator . wrap ( arg0 ) ; }", "nl": "returns an unmodifiable version of the given non-null intlistiterator . concode_field_sep IntListIterator EMPTY_INT_LIST_ITERATOR concode_elem_sep IntList EMPTY_INT_LIST concode_elem_sep IntIterator EMPTY_INT_ITERATOR concode_field_sep IntListIterator singletonIntListIterator concode_elem_sep IntListIterator getEmptyIntListIterator concode_elem_sep IntIterator unmodifiableIntIterator concode_elem_sep IntIterator singletonIntIterator concode_elem_sep IntList getEmptyIntList concode_elem_sep IntIterator getEmptyIntIterator concode_elem_sep IntList unmodifiableIntList concode_elem_sep IntList singletonIntList"}
{"code": "Query function ( Integer arg0 ) { return entityManager . createQuery ( \"srini_string\" ) . setParameter ( \"srini_string\" , arg0 ) ; }", "nl": "maybe return directly context concode_field_sep EntityManager entityManager concode_elem_sep SecurityScreenDomainService securityService concode_elem_sep Logger log concode_elem_sep ContextDomainService contextDomainService concode_elem_sep CommonDomainService commonService concode_elem_sep ResourceTypeProvider resourceTypeProvider concode_field_sep ContextEntity getContextByName concode_elem_sep void saveEnvironment concode_elem_sep String deleteContext concode_elem_sep ContextEntity getContextWithType concode_elem_sep ContextEntity createContextByName"}
{"code": "void function ( ) { startTime = 0 ; elapsedMillis = 0 ; start ( ) ; }", "nl": "also starts the stopwatch . concode_field_sep DecimalFormat[] timeFormat concode_elem_sep long elapsedMillis concode_elem_sep long startTime concode_field_sep void stop concode_elem_sep String stop_start concode_elem_sep void clear concode_elem_sep void start concode_elem_sep String format concode_elem_sep String format concode_elem_sep long elapsedMillis concode_elem_sep double elapsedSeconds concode_elem_sep long snapshot"}
{"code": "void function ( ) { _list . clear ( DEFAULT_CAPACITY ) ; }", "nl": "clears the stack , reseting its capacity to the default . concode_field_sep TShortArrayList _list concode_elem_sep int DEFAULT_CAPACITY concode_field_sep short pop concode_elem_sep short[] toNativeArray concode_elem_sep void toNativeArray concode_elem_sep int size concode_elem_sep void reset concode_elem_sep void push concode_elem_sep short peek"}
{"code": "byte [ ] function ( byte arg0 [ ] , byte arg1 ) { int loc0 = arg0 . loc0 ; byte loc1 [ ] = new byte [ loc0 + 1 ] ; System . arraycopy ( arg0 , 0 , loc1 , 0 , loc0 ) ; loc1 [ loc0 ] = arg1 ; return loc1 ; }", "nl": "append newstring to the end of oldstring . concode_field_sep int nextBits concode_elem_sep int dstIndex concode_elem_sep byte stringTable[][] concode_elem_sep int bytePointer concode_elem_sep int h concode_elem_sep int andTable[] concode_elem_sep byte uncompData[] concode_elem_sep byte data[] concode_elem_sep int samplesPerPixel concode_elem_sep int bitsToGet concode_elem_sep int nextData concode_elem_sep int w concode_elem_sep int predictor concode_elem_sep int tableIndex concode_elem_sep int bitPointer concode_field_sep void addStringToTable concode_elem_sep void addStringToTable concode_elem_sep void initializeStringTable concode_elem_sep byte[] decode concode_elem_sep void writeString concode_elem_sep int getNextCode"}
{"code": "Object function ( Object arg0 , Object arg1 ) { return map . put ( arg0 , arg1 ) ; }", "nl": "invokes the underlying map #put object , object method . concode_field_sep Map map concode_field_sep Set entrySet concode_elem_sep boolean containsKey concode_elem_sep Collection values concode_elem_sep void clear concode_elem_sep boolean isEmpty concode_elem_sep boolean containsValue concode_elem_sep Object remove concode_elem_sep int size concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep Object get concode_elem_sep void putAll concode_elem_sep Set keySet"}
{"code": "ClassLoader function ( Class arg0 ) { ClassLoader loc0 = arg0 . getClassLoader ( ) ; if ( loc0 == null ) { loc0 = ClassLoader . getSystemClassLoader ( ) ; } return loc0 ; }", "nl": "get the loader for the given class . concode_field_sep Log log concode_field_sep Class loadClass concode_elem_sep Class loadClass"}
{"code": "String [ ] function ( Context arg0 ) { Class loc0 = resolveRClass ( arg0 . getPackageName ( ) ) ; if ( loc0 != null ) { return Libs . toStringArray ( loc0 . getFields ( ) ) ; } return new String [ 0 ] ; }", "nl": "a helper to get the string fields from the r class concode_field_sep PlaceHolder placeHolder concode_field_sep Class resolveRClass"}
{"code": "void function ( PropertyChangeListener arg0 ) { if ( arg0 == null ) { throw new IllegalArgumentException ( ) ; } pcsDelegate . addPropertyChangeListener ( arg0 ) ; }", "nl": "attach a non-null propertychangelistener to this object . concode_field_sep IPropertyDescriptor[] EMPTY_ARRAY concode_elem_sep PropertyChangeSupport pcsDelegate concode_elem_sep long serialVersionUID concode_field_sep void firePropertyChange concode_elem_sep Object getPropertyValue concode_elem_sep void setPropertyValue concode_elem_sep Object getEditableValue concode_elem_sep IPropertyDescriptor[] getPropertyDescriptors concode_elem_sep void resetPropertyValue concode_elem_sep boolean isPropertySet concode_elem_sep void removePropertyChangeListener concode_elem_sep void readObject"}
{"code": "File function ( Class arg0 ) { try { return new File ( resolveRootUrl ( arg0 ) . toURI ( ) ) ; } catch ( URISyntaxException loc0 ) { throw new RuntimeException ( \"srini_string\" , loc0 ) ; } }", "nl": "essentially the same as #resolverooturl class , but here we convert the root url to a file directory reference . in fact we delegate to #resolverooturl class and simply convert itsreturn into a file reference . concode_field_sep PlaceHolder placeHolder concode_field_sep URL resolveRootUrl concode_elem_sep File resolveClassFile"}
{"code": "void function ( final String arg0 , final String arg1 ) { synchronized ( resourceAdapterRepositoryIdentifiers ) { resourceAdapterRepositoryIdentifiers . put ( arg0 , arg1 ) ; } }", "nl": "makes a note of the resource adapter identifier with which a resource adapter named raname is registered in the org.jboss.jca.core.spi.rar.resourceadapterrepository . subsequent calls to #getregisteredresourceadapteridentifier string with the passed raname returnthe raidentifier concode_field_sep ServiceName RESOURCE_ADAPTER_SERVICE_PREFIX concode_elem_sep ServiceName BOOTSTRAP_CONTEXT_SERVICE concode_elem_sep ServiceName RESOURCE_ADAPTER_DEPLOYER_SERVICE_PREFIX concode_elem_sep ServiceName CONNECTION_VALIDATOR_SERVICE concode_elem_sep ServiceName TRANSACTION_INTEGRATION_SERVICE concode_elem_sep ServiceName ARCHIVE_VALIDATION_CONFIG_SERVICE concode_elem_sep ServiceName RESOURCEADAPTERS_SERVICE concode_elem_sep ServiceName DATASOURCES_SERVICE concode_elem_sep ServiceName TRACER_CONFIG_SERVICE concode_elem_sep ServiceName CCM_SERVICE concode_elem_sep String STATISTICS_SUFFIX concode_elem_sep ServiceName NON_JTA_DS_RA_REPOSITORY_SERVICE concode_elem_sep ServiceName DISTRIBUTED_WORKMANAGER_STATS_SERVICE concode_elem_sep ServiceName IRONJACAMAR_RESOURCE concode_elem_sep ServiceName BEAN_VALIDATION_CONFIG_SERVICE concode_elem_sep ServiceName NON_TX_CCM_SERVICE concode_elem_sep ServiceName IDLE_REMOVER_SERVICE concode_elem_sep ServiceName RESOURCE_ADAPTER_REGISTRY_SERVICE concode_elem_sep Map<String,String> resourceAdapterRepositoryIdentifiers concode_elem_sep ServiceName RA_REPOSITORY_SERVICE concode_elem_sep ServiceName JDBC_DRIVER_REGISTRY_SERVICE concode_elem_sep ServiceName RESOURCE_ADAPTER_ACTIVATOR_SERVICE concode_elem_sep ServiceName RA_SERVICE concode_elem_sep ServiceName INACTIVE_RESOURCE_ADAPTER_SERVICE concode_elem_sep ServiceName WORKMANAGER_STATS_SERVICE concode_elem_sep ServiceName RESOURCE_ADAPTER_DEPLOYMENT_SERVICE_PREFIX concode_elem_sep ServiceName RESOURCEADAPTERS_SUBSYSTEM_SERVICE concode_elem_sep ServiceName CONNECTOR_CONFIG_SERVICE concode_elem_sep ServiceName WORKMANAGER_SERVICE concode_elem_sep ServiceName IRONJACAMAR_MDR concode_elem_sep ServiceName MANAGEMENT_REPOSITORY_SERVICE concode_field_sep void unregisterResourceAdapterIdentifier concode_elem_sep T notNull concode_elem_sep ServiceName getDeploymentServiceName concode_elem_sep ServiceName getDeploymentServiceName concode_elem_sep ServiceName getDeploymentServiceName concode_elem_sep String getRegisteredResourceAdapterIdentifier concode_elem_sep ServiceName getResourceAdapterServiceName concode_elem_sep String stripDotRarSuffix"}
{"code": "void function ( ) { lookupEnabled = true ; beginPeriodicLookups ( ) ; }", "nl": "enables periodic lookups for measurement purposes . these look up random keys and are scheduled in a constant interval . concode_field_sep Node<T> myNode concode_elem_sep PeerStatus peerStatus concode_elem_sep Logger log concode_elem_sep ComponentsConfig config concode_elem_sep boolean lookupEnabled concode_field_sep void connectivityChanged concode_elem_sep void beginPeriodicLookups concode_elem_sep void doConnect concode_elem_sep void routingTableBuilt concode_elem_sep void doSingleLookup concode_elem_sep void doDisconnect concode_elem_sep PeerStatus getPeerStatus concode_elem_sep double getSimSec"}
{"code": "SpinfoFileParser function ( File arg0 ) { if ( tempdir == null ) { tempdir = createTempDir ( ) ; } if ( ! dkconfig_delete_splitters_on_exit ) { System . out . println ( \"srini_string\" + tempdir ) ; } return new SpinfoFileParser ( arg0 , tempdir ) ; }", "nl": "parses the splitter info . concode_field_sep int dkconfig_compile_timeout concode_elem_sep Logger debug concode_elem_sep FileCompiler fileCompiler concode_elem_sep boolean dkconfig_delete_splitters_on_exit concode_elem_sep String tempdir concode_elem_sep int guid concode_elem_sep String dkconfig_compiler concode_field_sep boolean matchPptRegex concode_elem_sep void compileFiles concode_elem_sep void loadSplitters concode_elem_sep String createTempDir concode_elem_sep void load_splitters concode_elem_sep String clean concode_elem_sep boolean matchPpt concode_elem_sep String getFileName concode_elem_sep String getTempDir concode_elem_sep void printAll concode_elem_sep void debugPrintln"}
{"code": "void function ( String [ ] arg0 ) { String loc0 ; TextIO . putln ( \"srini_string\" ) ; loc0 = TextIO . getln ( ) ; TextIO . putln ( ) ; TextIO . putln ( \"srini_string\" ) ; printCapitalized ( loc0 ) ; }", "nl": "sole entry point to application , as always . concode_field_sep PlaceHolder placeHolder concode_field_sep void printCapitalized"}
{"code": "int function ( float arg0 , byte [ ] arg1 , int arg2 ) { int loc0 = 1 ; int loc1 = Float . floatToRawIntBits ( arg0 ) ; arg1 [ arg2 ] = ( byte ) ( ( loc1 ) & 0xFF ) ; arg1 [ arg2 + loc0 ++ ] = ( byte ) ( ( loc1 >>> 8 ) & 0xFF ) ; arg1 [ arg2 + loc0 ++ ] = ( byte ) ( ( loc1 >>> 16 ) & 0xFF ) ; arg1 [ arg2 + loc0 ++ ] = ( byte ) ( ( loc1 >>> 24 ) & 0xFF ) ; return 4 ; }", "nl": "encode a float to the byte array at the given position . will throw indexoutofbounds if it overflows . users should ensure that there are at least 4 bytes left in the buffer before calling this method . concode_field_sep ThreadLocal<Decoders> DECODERS concode_elem_sep BinaryDecoder decoder concode_elem_sep BinaryDecoder d1 concode_elem_sep ThreadLocal<HashData> HASH_DATA concode_elem_sep BinaryDecoder d2 concode_field_sep int compare concode_elem_sep int compare concode_elem_sep int compare concode_elem_sep int encodeDouble concode_elem_sep void set concode_elem_sep void set concode_elem_sep int hashBytes concode_elem_sep int encodeLong concode_elem_sep int skipLong concode_elem_sep int hashCode concode_elem_sep int hashCode concode_elem_sep int encodeBoolean concode_elem_sep void clear concode_elem_sep int compareBytes concode_elem_sep Decoders initialValue concode_elem_sep HashData initialValue concode_elem_sep int encodeInt"}
{"code": "ShortList function ( ) { return EMPTY_SHORT_LIST ; }", "nl": "returns an unmodifiable , empty shortlist . concode_field_sep ShortList EMPTY_SHORT_LIST concode_elem_sep ShortListIterator EMPTY_SHORT_LIST_ITERATOR concode_elem_sep ShortIterator EMPTY_SHORT_ITERATOR concode_field_sep ShortListIterator getEmptyShortListIterator concode_elem_sep ShortIterator singletonShortIterator concode_elem_sep ShortList unmodifiableShortList concode_elem_sep ShortListIterator singletonShortListIterator concode_elem_sep ShortIterator unmodifiableShortIterator concode_elem_sep ShortListIterator unmodifiableShortListIterator concode_elem_sep ShortList singletonShortList concode_elem_sep ShortIterator getEmptyShortIterator"}
{"code": "void function ( ) { BUFFER . set ( null ) ; }", "nl": "for testing purposes only . clears the cached buffer to force a new allocation on the next invocation . concode_field_sep long CHANNEL_FIELD_OFFSET concode_elem_sep float BUFFER_REALLOCATION_THRESHOLD concode_elem_sep int MAX_CACHED_BUFFER_SIZE concode_elem_sep int MIN_CACHED_BUFFER_SIZE concode_elem_sep ThreadLocal<SoftReference<byte[]>> BUFFER concode_elem_sep Class<?> FILE_OUTPUT_STREAM_CLASS concode_field_sep boolean needToReallocate concode_elem_sep byte[] getOrCreateBuffer concode_elem_sep byte[] getBuffer concode_elem_sep void setBuffer concode_elem_sep long getChannelFieldOffset concode_elem_sep Class<?> safeGetClass concode_elem_sep void write concode_elem_sep boolean writeToChannel"}
{"code": "EdgeHandle function ( NetID arg0 , NetID arg1 ) { return addEdge ( arg0 , arg1 , null , Color . GREEN , \"srini_string\" ) ; }", "nl": "paints an overlay edge concode_field_sep Set<Class<? extends Object>> overlayImpls concode_elem_sep VisAnalyzer analyzer concode_field_sep void handleOverlayMsg concode_elem_sep void handleOperation concode_elem_sep void addOverlayUniverseMetric concode_elem_sep void handleNewHost concode_elem_sep void handleLeavingHost concode_elem_sep boolean isDedicatedOverlayImplFor concode_elem_sep void addOverlayNodeMetric concode_elem_sep void addOverlayImpl concode_elem_sep Translator getTranslator concode_elem_sep Object getBootstrapManagerFor concode_elem_sep String getOverlayName concode_elem_sep void removeEdge concode_elem_sep void addOverlayEdgeMetric concode_elem_sep SchematicPositioner getNewPositioner concode_elem_sep void handleNewHostAfter concode_elem_sep void flashEdge concode_elem_sep void flashEdge concode_elem_sep void flashEdge concode_elem_sep void flashEdge concode_elem_sep void setParentAnalyzer"}
{"code": "UndoableEdit function ( ) { Undoable loc0 = get ( ) ; if ( loc0 instanceof UndoableEdit ) { return ( UndoableEdit ) loc0 ; } else { return null ; } }", "nl": "gets the current undoable pointed to by the internal cursor if it is an undoableedit object . concode_field_sep int MAX_QUEUE_SIZE concode_elem_sep Document doc concode_elem_sep UndoableList queue concode_elem_sep int cursor concode_field_sep void add concode_elem_sep boolean isRedoable concode_elem_sep void prefsTrim concode_elem_sep String getUndoRangeString concode_elem_sep String getRedoName concode_elem_sep void clear concode_elem_sep boolean isEmpty concode_elem_sep String getRedoRangeString concode_elem_sep void destroy concode_elem_sep void redo concode_elem_sep int getSize concode_elem_sep void undo concode_elem_sep String getUndoName concode_elem_sep void trim concode_elem_sep boolean isUndoable concode_elem_sep Undoable get concode_elem_sep void redoAll concode_elem_sep void undoAll"}
{"code": "void function ( final Player arg0 ) { Scoreboard loc0 = arg0 . getScoreboard ( ) ; if ( loc0 != null ) { this . originalScoreboard . put ( arg0 . getName ( ) , loc0 ) ; } arg0 . setScoreboard ( this . scoreboard ) ; }", "nl": "add a scoreboard for a player concode_field_sep int gameID concode_elem_sep Team deadTeam concode_elem_sep Objective sidebarObjective concode_elem_sep Team waitingTeam concode_elem_sep Scoreboard scoreboard concode_elem_sep ArrayList<String> activePlayers concode_elem_sep Team livingTeam concode_elem_sep HashMap<String,Scoreboard> originalScoreboard concode_field_sep void playerDead concode_elem_sep void addPlayer concode_elem_sep void playerLiving concode_elem_sep void reset concode_elem_sep void removeScoreboard concode_elem_sep void incScore concode_elem_sep void removePlayer concode_elem_sep void updateSidebarTitle"}
{"code": "boolean function ( String arg0 ) { return arg0 . matches ( EMAIL_VALIDATION_REGEX ) ; }", "nl": "checks if a given string is a valid person email . concode_field_sep boolean isPrivate concode_elem_sep String EMAIL_VALIDATION_REGEX concode_elem_sep String MESSAGE_EMAIL_CONSTRAINTS concode_elem_sep String value concode_elem_sep String EXAMPLE concode_field_sep int hashCode concode_elem_sep boolean equals concode_elem_sep String toString concode_elem_sep boolean isPrivate"}
{"code": "void function ( String arg0 , Shutdownable arg1 ) { processMap . put ( arg0 , arg1 ) ; }", "nl": "register a process ' handle concode_field_sep ConcurrentHashMap<String,Shutdownable> processMap concode_elem_sep Logger LOG concode_elem_sep Object lock concode_field_sep void killProcess concode_elem_sep Collection<Shutdownable> getAllProcessHandles concode_elem_sep void killAllProcesses"}
{"code": "EventSource [ ] function ( ) { return new EventSource [ ] { EventSource . CENTAURO , EventSource . COURSE , EventSource . PLATFORM , EventSource . PERSONAL } ; }", "nl": "returns an array of all the eventsources concode_field_sep String url concode_field_sep List<Event> getEvents concode_elem_sep List<Event> getEvents concode_elem_sep List<Event> getEvents concode_elem_sep List<Event> getEvents concode_elem_sep String getURL concode_elem_sep List<Event> parseEvents"}
{"code": "int function ( float arg0 ) { return ( int ) ( arg0 + 0.5f ) ; }", "nl": "ends up being a bit faster than math.round . this merely rounds its argument to the nearest int , where x. 5 rounds up . concode_field_sep BitMatrix image concode_elem_sep int CORR concode_elem_sep int width concode_elem_sep int rightInit concode_elem_sep int downInit concode_elem_sep int INIT_SIZE concode_elem_sep int height concode_elem_sep int leftInit concode_elem_sep int upInit concode_field_sep ResultPoint[] centerEdges concode_elem_sep int distanceL2 concode_elem_sep ResultPoint[] detect concode_elem_sep ResultPoint getBlackPointOnSegment concode_elem_sep boolean containsBlackPoint"}
{"code": "boolean function ( ) { return true ; }", "nl": "query if this ring is a field . concode_field_sep java.math.BigDecimal val concode_elem_sep int DEFAULT_PRECISION concode_elem_sep BigDecimal ZERO concode_elem_sep MathContext DEFAULT_CONTEXT concode_elem_sep MathContext context concode_elem_sep BigDecimal ONE concode_elem_sep Random random concode_field_sep boolean isCommutative concode_elem_sep BigDecimal gcd concode_elem_sep BigDecimal sum concode_elem_sep int compareTo concode_elem_sep java.math.BigInteger characteristic concode_elem_sep BigDecimal random concode_elem_sep BigDecimal random concode_elem_sep BigDecimal random concode_elem_sep BigDecimal random concode_elem_sep int hashCode concode_elem_sep BigDecimal divide concode_elem_sep BigDecimal copy concode_elem_sep BigDecimal multiply concode_elem_sep int signum concode_elem_sep boolean isONE concode_elem_sep BigDecimal inverse concode_elem_sep BigDecimal valueOf concode_elem_sep BigDecimal valueOf concode_elem_sep boolean isUnit concode_elem_sep BigDecimal subtract concode_elem_sep BigDecimal parse concode_elem_sep BigDecimal parse concode_elem_sep BigDecimal[] egcd concode_elem_sep BigDecimal abs concode_elem_sep BigDecimal[] divideAndRemainder concode_elem_sep BigDecimal negate concode_elem_sep boolean equals concode_elem_sep BigDecimal clone concode_elem_sep BigDecimal getONE concode_elem_sep BigDecimal getZERO concode_elem_sep BigDecimal fromInteger concode_elem_sep BigDecimal fromInteger concode_elem_sep boolean isZERO concode_elem_sep boolean isAssociative concode_elem_sep String toString concode_elem_sep BigDecimal remainder"}
{"code": "Schema function ( Configuration arg0 ) { String loc0 = arg0 . get ( CONF_OUTPUT_KEY_SCHEMA ) ; return loc0 != null ? Schema . parse ( loc0 ) : null ; }", "nl": "gets the job output key schema . concode_field_sep String CONF_INPUT_KEY_SCHEMA concode_elem_sep String CONF_OUTPUT_KEY_SCHEMA concode_elem_sep String CONF_INPUT_VALUE_SCHEMA concode_elem_sep String CONF_OUTPUT_VALUE_SCHEMA concode_elem_sep String CONF_OUTPUT_CODEC concode_field_sep void setMapOutputKeySchema concode_elem_sep Schema getInputKeySchema concode_elem_sep void setDataModelClass concode_elem_sep void setOutputValueSchema concode_elem_sep Schema getMapOutputKeySchema concode_elem_sep void setOutputKeySchema concode_elem_sep Schema getInputValueSchema concode_elem_sep Schema getMapOutputValueSchema concode_elem_sep void setMapOutputValueSchema concode_elem_sep void setInputKeySchema concode_elem_sep Schema getOutputValueSchema concode_elem_sep void setInputValueSchema"}
{"code": "boolean function ( Object arg0 , Object arg1 ) { checkLocked ( ) ; Integer loc0 = ( Integer ) map . get ( arg0 ) ; if ( loc0 == null ) { throw new IllegalArgumentException ( arg0 + \"srini_string\" + this ) ; } Object loc1 = map . put ( arg1 , loc0 ) ; return ( loc1 == null ) ; }", "nl": "adds a new item , which compares as equal to the given existing item . concode_field_sep int UNKNOWN_AFTER concode_elem_sep int counter concode_elem_sep int unknownObjectBehavior concode_elem_sep boolean isLocked concode_elem_sep int UNKNOWN_BEFORE concode_elem_sep int UNKNOWN_THROW_EXCEPTION concode_elem_sep Map map concode_field_sep boolean add concode_elem_sep void setUnknownObjectBehavior concode_elem_sep int compare concode_elem_sep void checkLocked concode_elem_sep int getUnknownObjectBehavior concode_elem_sep boolean isLocked"}
{"code": "void function ( Display arg0 ) { while ( ! arg0 . isDisposed ( ) ) { try { new DisplayReference ( arg0 ) . execute ( new Callable < Boolean > ( ) { public Boolean call ( ) throws Exception { return true ; } } , 30000 ) ; break ; } catch ( Throwable loc0 ) { continue ; } } }", "nl": "this method verifies and ensures display initialization . verification is based on synchronous execution of empty runnable . concode_field_sep ArrayList<IDisplayIntrospectionListener> listeners concode_elem_sep ThreadGroup root concode_elem_sep long retryTime concode_field_sep Display findDisplay concode_elem_sep Display doRun concode_elem_sep Display syncIntrospect concode_elem_sep void removeIntrospectionListener concode_elem_sep void run concode_elem_sep void asyncIntrospect concode_elem_sep Display visit concode_elem_sep void addIntrospectionListener"}
{"code": "boolean function ( ) { return size == 0 ; }", "nl": "isempty returns true if this queue is empty , false otherwise . concode_field_sep SListNode head concode_elem_sep int size concode_elem_sep SListNode tail concode_field_sep void enqueue concode_elem_sep Object nth concode_elem_sep int size concode_elem_sep Object dequeue concode_elem_sep String toString concode_elem_sep Object front concode_elem_sep void append"}
{"code": "Set < String > function ( Set < String > arg0 ) { if ( this . declined == null || this . declined . isEmpty ( ) ) { return arg0 ; } final Set < String > loc0 = new HashSet < String > ( arg0 ) ; loc0 . removeAll ( this . declined ) ; return loc0 ; }", "nl": "return the set of engines that we support given as an argument but the user has n't explicitly declined on another device . can return the input if the user has n't declined any engines . concode_field_sep Long storageVersion concode_elem_sep JSONArray declined concode_elem_sep Map<String,Integer> versions concode_elem_sep ExtendedJSONObject engines concode_elem_sep AuthHeaderProvider authHeaderProvider concode_elem_sep MetaGlobalDelegate callback concode_elem_sep String LOG_TAG concode_elem_sep String metaURL concode_elem_sep Map<String,String> syncIDs concode_elem_sep Map<String,MetaGlobalException> exceptions concode_elem_sep String syncID concode_elem_sep boolean isUploading concode_field_sep Long getStorageVersion concode_elem_sep void upload concode_elem_sep String credentials concode_elem_sep void recordEngineState concode_elem_sep String ifUnmodifiedSince concode_elem_sep void setEngines concode_elem_sep void declineEngine concode_elem_sep ExtendedJSONObject getEngines concode_elem_sep void verifyEngineSettings concode_elem_sep void handleRequestFailure concode_elem_sep void handleRequestError concode_elem_sep void setStorageVersion concode_elem_sep void setDeclinedEngineNames concode_elem_sep Set<String> getDeclinedEngineNames concode_elem_sep void handleUploadSuccess concode_elem_sep String getSyncID concode_elem_sep void setSyncID concode_elem_sep void handleDownloadSuccess concode_elem_sep void setFromRecord concode_elem_sep CryptoRecord asCryptoRecord concode_elem_sep void handleRequestSuccess concode_elem_sep Set<String> getEnabledEngineNames concode_elem_sep AuthHeaderProvider getAuthHeaderProvider concode_elem_sep void fetch concode_elem_sep ExtendedJSONObject asRecordContents concode_elem_sep void declineEngineNames"}
{"code": "Block function ( final Block arg0 ) { for ( int loc0 = 0 ; loc0 < paths . size ( ) ; loc0 ++ ) { final Block [ ] loc1 = ( Block [ ] ) paths . get ( loc0 ) ; if ( loc1 [ 0 ] == arg0 ) { return loc1 [ 1 ] ; } } return null ; }", "nl": "returns the `` return block '' for a given `` caller block '' . concode_field_sep Block entry concode_elem_sep Block exit concode_elem_sep ArrayList paths concode_elem_sep FlowGraph graph concode_elem_sep LocalVariable returnAddress concode_field_sep void setReturnAddress concode_elem_sep int numPaths concode_elem_sep void setExit concode_elem_sep FlowGraph graph concode_elem_sep void addPath concode_elem_sep LocalVariable returnAddress concode_elem_sep void removePathsContaining concode_elem_sep void removePath concode_elem_sep Block entry concode_elem_sep Block exit concode_elem_sep void print concode_elem_sep Block pathSource concode_elem_sep Collection paths concode_elem_sep String toString concode_elem_sep void removeAllPaths concode_elem_sep void setEntry"}
{"code": "IAxis < ? > function ( ) { return this . m_axis ; }", "nl": "intended for info.monitorenter.gui.chart.axis.aaxis only . concode_field_sep AUnit UNIT_UNCHANGED concode_elem_sep PropertyChangeSupport m_propertyChangeSupport concode_elem_sep long serialVersionUID concode_elem_sep IAxis<?> m_axis concode_field_sep int hashCode concode_elem_sep boolean equals concode_elem_sep void initPaintIteration concode_elem_sep int getMaxAmountChars concode_elem_sep void setAxis concode_elem_sep void addPropertyChangeListener concode_elem_sep AUnit getUnit concode_elem_sep void removePropertyChangeListener"}
{"code": "void function ( RunListener arg0 ) { fListeners . add ( arg0 ) ; }", "nl": "internal use only concode_field_sep List<RunListener> fListeners concode_elem_sep boolean fPleaseStop concode_elem_sep List<RunListener> fCurrentListeners concode_field_sep void fireTestIgnored concode_elem_sep void fireTestRunFinished concode_elem_sep void notifyListener concode_elem_sep void run concode_elem_sep void fireTestFailures concode_elem_sep void removeListener concode_elem_sep void pleaseStop concode_elem_sep void fireTestFailure concode_elem_sep void fireTestFinished concode_elem_sep void fireTestAssumptionFailed concode_elem_sep void fireTestRunStarted concode_elem_sep void fireTestStarted concode_elem_sep void addFirstListener"}
{"code": "Widget function ( int arg0 , Widget arg1 , Point arg2 , int arg3 ) { return _selector . click ( arg1 , arg2 . x , arg2 . y , arg3 , arg0 ) ; }", "nl": "perform the click . this is intended to be overridden in subclasses concode_field_sep BasicWidgetSelector _selector concode_field_sep MenuReference showContextMenu concode_elem_sep boolean unspecifiedXY concode_elem_sep Point getXYOffset concode_elem_sep IWidgetLocator click concode_elem_sep IWidgetLocator contextClick"}
{"code": "File function ( Context arg0 ) { File loc0 = getLibsDirectory ( arg0 ) ; if ( ! loc0 . isDirectory ( ) && ! loc0 . mkdirs ( ) ) { throw new RuntimeException ( \"srini_string\" ) ; } return loc0 ; }", "nl": "return the directory into which we put our self-extracted native libraries and make sure it exists . concode_field_sep byte[] cachedBuffer concode_field_sep void reliablyCopyExecutable concode_elem_sep void deleteOrThrow concode_elem_sep FileLocker lockLibsDirectory concode_elem_sep void freeCopyBuffer concode_elem_sep File getLibsDirectory concode_elem_sep int findAbiScore concode_elem_sep void dumbDeleteRecrusive concode_elem_sep String[] getSupportedAbis concode_elem_sep String[] getSupportedAbis concode_elem_sep void fallocateIfSupported concode_elem_sep void fallocate"}
{"code": "boolean function ( ) { return fSeverity == IStatus . INFO ; }", "nl": "returns if the status ' severity is info . concode_field_sep IStatus OK_STATUS concode_elem_sep String fStatusMessage concode_elem_sep int fSeverity concode_field_sep boolean isWarning concode_elem_sep int getSeverity concode_elem_sep Throwable getException concode_elem_sep String getMessage concode_elem_sep boolean isMultiStatus concode_elem_sep boolean matches concode_elem_sep IStatus[] getChildren concode_elem_sep boolean isError concode_elem_sep void setError concode_elem_sep boolean isOK concode_elem_sep String getPlugin concode_elem_sep void setOK concode_elem_sep void setInfo concode_elem_sep int getCode concode_elem_sep void setWarning"}
{"code": "Closure function ( Map arg0 ) { return SwitchClosure . getInstance ( arg0 ) ; }", "nl": "create a new closure that calls one of the closures depending on the predicates . the map consists of predicate keys and closure values . a closure is called if its matching predicate returns true . each predicate is evaluated until one returns true . if no predicates evaluate to true , the default closure is called . the default closure is set in the map with a null key . the ordering is that of the iterator method on the entryset collection of the map . concode_field_sep PlaceHolder placeHolder concode_field_sep Closure nopClosure concode_elem_sep Closure chainedClosure concode_elem_sep Closure chainedClosure concode_elem_sep Closure chainedClosure concode_elem_sep Closure forClosure concode_elem_sep Closure invokerClosure concode_elem_sep Closure invokerClosure concode_elem_sep Closure ifClosure concode_elem_sep Closure whileClosure concode_elem_sep Closure doWhileClosure concode_elem_sep Closure switchMapClosure concode_elem_sep Closure asClosure concode_elem_sep Closure exceptionClosure"}
{"code": "Iterator function ( ) { return iterator ; }", "nl": "gets the iterator this iterator is using . concode_field_sep Iterator iterator concode_elem_sep Transformer transformer concode_field_sep Object next concode_elem_sep Object transform concode_elem_sep Transformer getTransformer concode_elem_sep boolean hasNext concode_elem_sep void setTransformer concode_elem_sep void remove concode_elem_sep void setIterator"}
{"code": "Iterator function ( LongIterator arg0 ) { return null == arg0 ? null : new LongIteratorIterator ( arg0 ) ; }", "nl": "create an iterator iterator wrappingthe specified longiterator longiterator . when the given iterator is null , returns null . concode_field_sep LongIterator _iterator concode_field_sep Object next concode_elem_sep boolean hasNext concode_elem_sep void remove"}
{"code": "boolean function ( String arg0 , String arg1 , String arg2 ) { if ( TextUtils . isEmpty ( arg1 ) || TextUtils . isEmpty ( arg0 ) || TextUtils . isEmpty ( arg2 ) ) { } PublicKey loc0 = Security . generatePublicKey ( arg0 ) ; return Security . verify ( loc0 , arg1 , arg2 ) ; }", "nl": "verifies that the data was signed with the given signature , and returns the verified purchase . the data is in json format and signed with a private key . the data also contains the purchasestate and product id of the purchase . concode_field_sep String TAG concode_elem_sep String KEY_FACTORY_ALGORITHM concode_elem_sep String SIGNATURE_ALGORITHM concode_field_sep PublicKey generatePublicKey concode_elem_sep boolean verify"}
{"code": "int function ( ) { int loc0 = \"srini_string\" . hashCode ( ) ; return trueFirst ? - 1 * loc0 : loc0 ; }", "nl": "implement a hash code for this comparator that is consistent with #equals object equals . concode_field_sep BooleanComparator TRUE_FIRST concode_elem_sep long serialVersionUID concode_elem_sep BooleanComparator FALSE_FIRST concode_elem_sep boolean trueFirst concode_field_sep BooleanComparator getTrueFirstComparator concode_elem_sep int compare concode_elem_sep int compare concode_elem_sep BooleanComparator getBooleanComparator concode_elem_sep boolean equals concode_elem_sep boolean sortsTrueFirst concode_elem_sep BooleanComparator getFalseFirstComparator"}
{"code": "Object [ ] function ( Object [ ] arg0 , int arg1 ) { Object [ ] loc0 = new Object [ arg1 ] ; System . arraycopy ( arg0 , 0 , loc0 , 0 , Math . min ( arg0 . length , arg1 ) ) ; return loc0 ; }", "nl": "this method attempts to grow an array by allocating a new array and copying all elements . concode_field_sep PlaceHolder placeHolder concode_field_sep Object goodCopyOf concode_elem_sep void main"}
{"code": "void function ( Action ... arg0 ) { for ( Action loc0 : arg0 ) { loc0 ( loc0 ) ; } }", "nl": "perform actions concode_field_sep Logger LOGGER concode_field_sep void goToSleep concode_elem_sep void goToMine concode_elem_sep void wakeUp concode_elem_sep void goHome concode_elem_sep void work concode_elem_sep String name"}
{"code": "boolean function ( AssociationKey arg0 ) { return visitedAssociationKeys . contains ( arg0 ) || strategy . isDuplicateAssociationKey ( arg0 ) ; }", "nl": "has an association with the specified key been visited already ? concode_field_sep Set<AssociationKey> visitedAssociationKeys concode_elem_sep SessionFactoryImplementor factory concode_elem_sep PropertyPath currentPropertyPath concode_elem_sep Logger log concode_elem_sep AssociationVisitationStrategy strategy concode_field_sep void visitEntityDefinition concode_elem_sep void visitCollectionElements concode_elem_sep void visitCompositeDefinition concode_elem_sep void visitAnyDefinition concode_elem_sep void visitCollectionDefinition concode_elem_sep void visitAttributes concode_elem_sep void visitCollection concode_elem_sep void visitIdentifierDefinition concode_elem_sep void visitEntity concode_elem_sep void addAssociationKey concode_elem_sep void visitAssociation concode_elem_sep void visitCollectionIndex concode_elem_sep void visitAttributeDefinition"}
{"code": "Style function ( String arg0 ) { if ( SELECT . arg0 . equals ( arg0 ) ) { return SELECT ; } else { return JOIN ; } }", "nl": "parses a style given an externalized string representation concode_field_sep String name concode_elem_sep Association association concode_elem_sep Style style concode_field_sep Style getStyle concode_elem_sep Association getAssociation concode_elem_sep String toString concode_elem_sep String toString"}
{"code": "Set < SegmentType > function ( ) { return syncedTypes ; }", "nl": "when syncing entities under some sync root , the user can restrict what types of entities will be synced . i.e. you can issue a sync of a feed but restrict the sync only to resource types . this will in effect make sure that the feed only defines the resource types you instruct it to but all the metric types , resource , metrics , etc. that exist under the feed but were not mentioned in the provided inventory structure will be left intact . concode_field_sep EnumSet<SegmentType> syncedTypes concode_elem_sep boolean deepSearch concode_elem_sep SyncConfiguration DEFAULT concode_elem_sep boolean deepSearch concode_elem_sep EnumSet<SegmentType> syncedTypes concode_field_sep Builder withoutType concode_elem_sep boolean isDeepSearch concode_elem_sep Builder withDeepSearch concode_elem_sep SyncConfiguration build concode_elem_sep Builder builder concode_elem_sep Builder withAllTypes concode_elem_sep Builder withoutTypes concode_elem_sep Builder withoutTypes concode_elem_sep Builder withType concode_elem_sep Builder withTypes concode_elem_sep Builder withTypes"}
{"code": "void function ( String arg0 ) { if ( fw != null ) { return ; } assert arg0 != null ; File loc0 = CreateFileUtil . createOutFile ( arg0 , \"srini_string\" ) ; try { fw = new FileWriter ( loc0 ) ; fw . write ( junitAllHeader ) ; } catch ( IOException loc1 ) { loc1 . printStackTrace ( ) ; } }", "nl": "create junitall.java that calls all testclasses suites to be generated . concode_field_sep FileWriter fw concode_field_sep void addTestSuite concode_elem_sep void addTest concode_elem_sep void addTest concode_elem_sep void finish"}
{"code": "void function ( ) { SecurityConfiguration . getCipherAlgorithm ( ) ; }", "nl": "test method for org.jboss.security.config.securityconfiguration #getcipheralgorithm . concode_field_sep PlaceHolder placeHolder concode_field_sep void testSetIterationCount concode_elem_sep void testGetKeyStoreURL concode_elem_sep void testGetSalt concode_elem_sep void testGetTrustStoreType concode_elem_sep void testGetKeyStoreType concode_elem_sep void testSetTrustStoreURL concode_elem_sep void testSetKeyStoreURL concode_elem_sep void testSetSalt concode_elem_sep void testLoadPassword concode_elem_sep void testSetCipherSpec concode_elem_sep void testGetExternalPasswordCacheInstance concode_elem_sep void testSetKeyStoreType concode_elem_sep void testIsDeepCopySubjectMode concode_elem_sep void testGetKeyStorePass concode_elem_sep WebArchive deployment concode_elem_sep void testSetTrustStorePass concode_elem_sep void testGetTrustStorePass concode_elem_sep void testSetCipherAlgorithm concode_elem_sep void testSetTrustStoreType concode_elem_sep void testGetTrustStoreURL concode_elem_sep void testSetDeepCopySubjectMode concode_elem_sep void testGetCipherSpec concode_elem_sep void testAddApplicationPolicy concode_elem_sep void testGetApplicationPolicy concode_elem_sep void testSetKeyStorePass concode_elem_sep void testRemoveApplicationPolicy concode_elem_sep void testSetCipherKey concode_elem_sep void testGetIterationCount concode_elem_sep void testGetCipherKey"}
{"code": "Color function ( final Graphics arg0 ) { Color loc0 = null ; if ( this . m_color != null ) { final Color loc1 = arg0 . getColor ( ) ; if ( ! loc1 . equals ( this . m_color ) ) { loc0 = loc1 ; arg0 . setColor ( this . m_color ) ; } } return loc0 ; }", "nl": "sets the color to the graphics context if it is different and returns the previous one of the graphics context or null if there was no change . concode_field_sep int m_red concode_elem_sep int m_blue concode_elem_sep int m_green concode_elem_sep int m_alpha concode_elem_sep Color m_color concode_field_sep Color applyColorUnconditionally concode_elem_sep Color getColor concode_elem_sep int setAlpha concode_elem_sep int getBlue concode_elem_sep int setGreen concode_elem_sep int setRed concode_elem_sep int getAlpha concode_elem_sep int getGreen concode_elem_sep int getRed concode_elem_sep Color setColor concode_elem_sep int setBlue concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep void assertColorValue"}
{"code": "void function ( Schema arg0 , Object arg1 , Encoder arg2 ) { if ( ! data . isEnum ( arg1 ) ) throw new AvroTypeException ( \"srini_string\" + arg1 ) ; arg2 . writeEnum ( arg0 . getEnumOrdinal ( arg1 . toString ( ) ) ) ; }", "nl": "called to write an enum value . may be overridden for alternate enum representations . concode_field_sep GenericData data concode_elem_sep Schema root concode_field_sep NullPointerException npe concode_elem_sep void writeWithoutConversion concode_elem_sep Iterator<? extends Object> getArrayElements concode_elem_sep void writeFixed concode_elem_sep Object convert concode_elem_sep void writeField concode_elem_sep int getMapSize concode_elem_sep void error concode_elem_sep void writeMap concode_elem_sep void setSchema concode_elem_sep void writeRecord concode_elem_sep void writeBytes concode_elem_sep void writeArray concode_elem_sep Iterable<Map.Entry<Object,Object>> getMapEntries concode_elem_sep int resolveUnion concode_elem_sep long getArraySize concode_elem_sep void write concode_elem_sep void write concode_elem_sep void writeString concode_elem_sep void writeString concode_elem_sep GenericData getData"}
{"code": "void function ( ) { Collection < Integer > loc0 = map . values ( ) ; assertThat ( loc0 . size ( ) , is ( 4 ) ) ; assertThat ( loc0 . contains ( 3 ) , is ( true ) ) ; assertThat ( loc0 . contains ( 0 ) , is ( true ) ) ; assertThat ( loc0 . contains ( 4 ) , is ( false ) ) ; }", "nl": "test method for com.flatironschool.javacs.mylinearmap #values . concode_field_sep Map<String,Integer> map concode_field_sep void testContainsValue concode_elem_sep void testClear concode_elem_sep void testKeySet concode_elem_sep void testGet concode_elem_sep void testIsEmpty concode_elem_sep void testRemove concode_elem_sep void testSize concode_elem_sep void setUp concode_elem_sep void testContainsKey concode_elem_sep void testPut concode_elem_sep void testPutAll"}
{"code": "TodoDTO function ( @ PathVariable ( \"srini_string\" ) Long arg0 ) { LOGGER . info ( \"srini_string\" , arg0 ) ; TodoDTO loc0 = crudService . findById ( arg0 ) ; LOGGER . info ( \"srini_string\" , loc0 ) ; return loc0 ; }", "nl": "finds a single todo entry . concode_field_sep TodoCrudService crudService concode_elem_sep Logger LOGGER concode_field_sep TodoDTO create concode_elem_sep TodoDTO update concode_elem_sep TodoDTO delete concode_elem_sep List<TodoDTO> findAll"}
{"code": "boolean function ( ) { return isDebugging ; }", "nl": "return true if debugging is enabled . concode_field_sep PrintWriter sysOut concode_elem_sep ILog log concode_elem_sep boolean isDebugging concode_field_sep void setLog concode_elem_sep void trace concode_elem_sep void trace concode_elem_sep void setDebugging concode_elem_sep boolean isTracing concode_elem_sep void traceSleep concode_elem_sep void close"}
{"code": "String function ( int arg0 ) { return ( ( tuplemodHasModified ( arg0 ) ? \"srini_string\" : \"srini_string\" ) + ( tuplemodHasUnmodified ( arg0 ) ? \"srini_string\" : \"srini_string\" ) + ( tuplemodHasMissingNonsensical ( arg0 ) ? \"srini_string\" : \"srini_string\" ) + ( tuplemodHasMissingFlow ( arg0 ) ? \"srini_string\" : \"srini_string\" ) ) ; }", "nl": "in output , m = modified , u = unmodified , x = missing . capital letters indicate the specified modbit does occur , lowercase letters indicate it does not occur . concode_field_sep int MODIFIED_BITVAL concode_elem_sep int[] mods concode_elem_sep int MISSING_FLOW_BITVAL concode_elem_sep Object[] vals concode_elem_sep int STATIC_CONSTANT concode_elem_sep int[] tuplemod_not_missing concode_elem_sep int[] tuplemod_modified_not_missing concode_elem_sep int MISSING_NONSENSICAL concode_elem_sep int UNMODIFIED_BITVAL concode_elem_sep int MODBIT_VALUES concode_elem_sep int MISSING_NONSENSICAL_BITVAL concode_elem_sep int MODIFIED concode_elem_sep int MISSING_FLOW concode_elem_sep int UNMODIFIED concode_elem_sep Logger debug concode_elem_sep int TUPLEMOD_VALUES concode_field_sep boolean tuplemodHasUnmodified concode_elem_sep ValueTuple makeUninterned concode_elem_sep boolean modIsMissingFlow concode_elem_sep boolean tuplemodHasMissingNonsensical concode_elem_sep boolean modIsModified concode_elem_sep String valsToString concode_elem_sep boolean tuplemodHasMissingFlow concode_elem_sep ValueTuple shallowcopy concode_elem_sep boolean modIsUnmodified concode_elem_sep boolean isModified concode_elem_sep boolean isModified concode_elem_sep boolean tuplemodHasModified concode_elem_sep ValueTuple trim concode_elem_sep int getModified concode_elem_sep int getModified concode_elem_sep ValueTuple slice concode_elem_sep int hashCode concode_elem_sep int tupleMod concode_elem_sep int tupleMod concode_elem_sep boolean modIsMissingNonsensical concode_elem_sep boolean isUnmodified concode_elem_sep boolean isUnmodified concode_elem_sep boolean isMissingNonsensical concode_elem_sep boolean isMissingNonsensical concode_elem_sep String valToString concode_elem_sep boolean isMissingFlow concode_elem_sep boolean isMissingFlow concode_elem_sep ValueTuple makeFromInterned concode_elem_sep Object getValue concode_elem_sep Object getValue concode_elem_sep boolean isMissing concode_elem_sep boolean isMissing concode_elem_sep int size concode_elem_sep boolean equals concode_elem_sep ValueTuple clone concode_elem_sep String toString concode_elem_sep String toString concode_elem_sep int make_tuplemod concode_elem_sep int parseModified"}
{"code": "IJavaElement [ ] function ( JavaEditor arg0 , boolean arg1 ) { ITypeRoot loc0 = getInput ( arg0 , arg1 ) ; if ( loc0 != null ) return performForkedCodeResolve ( loc0 , ( ITextSelection ) arg0 . getSelectionProvider ( ) . getSelection ( ) ) ; return EMPTY_RESULT ; }", "nl": "perform a code resolve in a separate thread . concode_field_sep IJavaElement[] EMPTY_RESULT concode_field_sep IJavaElement selectJavaElement concode_elem_sep IJavaElement[] codeResolve concode_elem_sep IJavaElement[] codeResolve concode_elem_sep IJavaElement[] codeResolve concode_elem_sep IJavaElement[] performForkedCodeResolve concode_elem_sep boolean canOperateOn concode_elem_sep IStructuredSelection getStructuredSelection concode_elem_sep IClassFile getInputAsClassFile concode_elem_sep ITypeRoot getInput concode_elem_sep ITypeRoot getInput concode_elem_sep IType getTypeAtOffset concode_elem_sep IJavaElement getElementAtOffset concode_elem_sep IJavaElement getElementAtOffset concode_elem_sep IJavaElement getElementAtOffset concode_elem_sep IJavaElement[] codeResolveOrInputForked concode_elem_sep ICompilationUnit getInputAsCompilationUnit concode_elem_sep IJavaElement[] getElements concode_elem_sep IJavaElement resolveEnclosingElement concode_elem_sep IJavaElement resolveEnclosingElement"}
{"code": "String function ( ) { return path ; }", "nl": "retrieves the path to the log file . concode_field_sep int LOG_MAGIC concode_elem_sep String path concode_elem_sep long utime concode_elem_sep long eventNumber concode_elem_sep BufferedRandomAccessFile raf concode_elem_sep long numMessagesWritten concode_elem_sep String channel concode_elem_sep byte data[] concode_field_sep void flush concode_elem_sep void seekPositionFraction concode_elem_sep void write concode_elem_sep void write concode_elem_sep void close concode_elem_sep Event readNext concode_elem_sep double getPositionFraction"}
{"code": "void function ( long arg0 ) { this . connectAttemptsMax = arg0 ; }", "nl": "the maximum number of reconnect attempts before an error is reported back to the client on the first attempt by the client to connect to a server . set to -1 to use unlimited attempts . defaults to -1 . concode_field_sep String userName concode_elem_sep int qos concode_elem_sep long reconnectDelayMax concode_elem_sep String password concode_elem_sep long reconnectDelay concode_elem_sep boolean cleanConnection concode_elem_sep long reconnectAttemptsMax concode_elem_sep double reconnectBackOffMultiplier concode_elem_sep long connectAttemptsMax concode_elem_sep String url concode_elem_sep String willTopic concode_elem_sep MqttOptions options concode_elem_sep int willQos concode_elem_sep List<String> topics concode_elem_sep boolean willRetain concode_elem_sep String willPayload concode_field_sep Builder cleanConnection concode_elem_sep void setPassword concode_elem_sep List<String> getTopics concode_elem_sep void setWillPayload concode_elem_sep void setReconnectBackOffMultiplier concode_elem_sep Builder reconnectAttemptsMax concode_elem_sep long getReconnectDelayMax concode_elem_sep int getWillQos concode_elem_sep String getWillPayload concode_elem_sep void setQos concode_elem_sep Builder password concode_elem_sep void setReconnectDelayMax concode_elem_sep Builder qos concode_elem_sep void setUserName concode_elem_sep void setWillRetain concode_elem_sep Builder connectAttemptsMax concode_elem_sep Builder willTopic concode_elem_sep void setWillTopic concode_elem_sep long getConnectAttemptsMax concode_elem_sep int getQos concode_elem_sep String getUserName concode_elem_sep double getReconnectBackOffMultiplier concode_elem_sep String getWillTopic concode_elem_sep void setReconnectAttemptsMax concode_elem_sep Builder reconnectDelayMax concode_elem_sep boolean getWillRetain concode_elem_sep Builder topics concode_elem_sep void setTopics concode_elem_sep long getReconnectAttemptsMax concode_elem_sep Builder reconnectDelay concode_elem_sep Builder userName concode_elem_sep Builder url concode_elem_sep void setUrl concode_elem_sep Builder willRetain concode_elem_sep String getUrl concode_elem_sep boolean isCleanConnection concode_elem_sep String getPassword concode_elem_sep void setWillQos concode_elem_sep Builder willQos concode_elem_sep MqttOptions build concode_elem_sep Builder reconnectBackOffMultiplier concode_elem_sep void setCleanConnection concode_elem_sep void setReconnectDelay concode_elem_sep Builder willPayload concode_elem_sep long getReconnectDelay"}
{"code": "void function ( Direction arg0 ) { digHole ( arg0 , NUM_DIG_STATES ) ; }", "nl": "clears the tile in a specific direction concode_field_sep Box boundary concode_elem_sep BufferedImage eastDig concode_elem_sep BufferedImage southDig concode_elem_sep int westDigInt concode_elem_sep BufferedImage baseImage concode_elem_sep int eastDigInt concode_elem_sep BufferedImage northDig concode_elem_sep int layer concode_elem_sep Direction[] corner concode_elem_sep int northDigInt concode_elem_sep String biome concode_elem_sep int southDigInt concode_elem_sep int boardX concode_elem_sep int boardY concode_elem_sep BufferedImage westDig concode_elem_sep int NUM_DIG_STATES concode_field_sep int getNorthDigInt concode_elem_sep int getEastDigInt concode_elem_sep void setLayer concode_elem_sep int getSouthDigInt concode_elem_sep void setBaseImage concode_elem_sep void digHole concode_elem_sep int getWestDigInt concode_elem_sep Direction[] getCorner concode_elem_sep void setCorner concode_elem_sep void setBiome concode_elem_sep String getBiome concode_elem_sep void setBoardY concode_elem_sep BufferedImage getSouthDig concode_elem_sep void setBoardX concode_elem_sep Box getBoundary concode_elem_sep int getLayer concode_elem_sep void setEastDig concode_elem_sep boolean isEmpty concode_elem_sep BufferedImage getWestDig concode_elem_sep void setSouthDig concode_elem_sep int getBoardX concode_elem_sep int getBoardY concode_elem_sep void setWestDig concode_elem_sep BufferedImage getNorthDig concode_elem_sep BufferedImage getBaseImage concode_elem_sep boolean isFull concode_elem_sep void setNorthDig concode_elem_sep BufferedImage getEastDig"}
{"code": "void function ( ) { lock . lock ( ) ; }", "nl": "lock cache access . concode_field_sep ReentrantLock lock concode_elem_sep LongSparseArray<Reference<T>> map concode_field_sep void unlock concode_elem_sep T get concode_elem_sep void clear concode_elem_sep void putNoLock concode_elem_sep T getNoLock concode_elem_sep void put concode_elem_sep void remove concode_elem_sep void remove"}
{"code": "String function ( ) { return packageName ; }", "nl": "gets the package name for the java class . concode_field_sep String qualifiedName concode_elem_sep String className concode_elem_sep String packageName concode_field_sep String getQualifiedClassName concode_elem_sep ClassName forClass concode_elem_sep String toString concode_elem_sep ClassName forQualifiedName concode_elem_sep String getClassName"}
{"code": "void function ( Cursor arg0 ) { dumpCursor ( arg0 , 18 , \"srini_string\" ) ; }", "nl": "dump a cursor to the debug log , ignoring any log level settings . the position in the cursor is maintained . caller is responsible for opening and closing cursor . concode_field_sep PlaceHolder placeHolder concode_field_sep String dashes concode_elem_sep String fixedWidth concode_elem_sep String spaces"}
{"code": "Quotient < C > function ( Quotient < C > arg0 ) { if ( arg0 == null || arg0 . isZERO ( ) ) { return arg0 ; } if ( num . isZERO ( ) ) { return this ; } if ( arg0 . isONE ( ) ) { return this ; } if ( this . isONE ( ) ) { return arg0 ; } C loc0 = num . multiply ( arg0 . num ) ; C loc1 = den . multiply ( arg0 . den ) ; return new Quotient < C > ( ring , loc0 , loc1 , false ) ; }", "nl": "quotient multiplication . concode_field_sep Logger logger concode_elem_sep QuotientRing<C> ring concode_elem_sep boolean debug concode_elem_sep C num concode_elem_sep C den concode_field_sep int signum concode_elem_sep boolean isONE concode_elem_sep Quotient<C> inverse concode_elem_sep boolean isUnit concode_elem_sep Quotient<C> subtract concode_elem_sep Quotient<C> gcd concode_elem_sep Quotient<C> sum concode_elem_sep int compareTo concode_elem_sep Quotient<C>[] egcd concode_elem_sep Quotient<C> monic concode_elem_sep Quotient<C> abs concode_elem_sep int hashCode concode_elem_sep Quotient<C> negate concode_elem_sep boolean equals concode_elem_sep Quotient<C> clone concode_elem_sep boolean isZERO concode_elem_sep String toString concode_elem_sep Quotient<C> divide concode_elem_sep Quotient<C> remainder"}
{"code": "void function ( ) { }", "nl": "comment f concode_field_sep int I1z concode_elem_sep int I2z concode_elem_sep int I1 concode_elem_sep int I3 concode_elem_sep int I2 concode_elem_sep int I4 concode_field_sep void fz concode_elem_sep void f11 concode_elem_sep void f1 concode_elem_sep void f2 concode_elem_sep void f1z"}
{"code": "JsonAsserter function ( Reader arg0 ) { return new JsonAsserterImpl ( JsonPath . parse ( convertReaderToString ( arg0 ) ) . json ( ) ) ; }", "nl": "creates a jsonasserter concode_field_sep PlaceHolder placeHolder concode_field_sep String convertReaderToString concode_elem_sep Matcher<Map<String,?>> mapContainingKey concode_elem_sep Matcher<? super Map<?,V>> mapContainingValue concode_elem_sep Matcher<Collection<Object>> emptyCollection concode_elem_sep CollectionMatcher collectionWithSize"}
{"code": "int function ( ) { return this . pending ; }", "nl": "gets the number of connection requests being blocked awaiting a free connection . this can happen only if there are more worker threads contending for fewer connections . concode_field_sep int leased concode_elem_sep int max concode_elem_sep int pending concode_elem_sep int available concode_field_sep int getMax concode_elem_sep String toString concode_elem_sep int getAvailable concode_elem_sep int getLeased"}
{"code": "VarComparability function ( String arg0 , VarComparability arg1 ) { if ( arg1 instanceof VarComparabilityNone ) { return VarComparabilityNone . it ; } else { throw new Error ( \"srini_string\" ) ; } }", "nl": "create a varcomparability based on comparabilities of indices . concode_field_sep Logger debug concode_elem_sep int IMPLICIT concode_elem_sep int NONE concode_field_sep VarComparability makeAlias concode_elem_sep VarComparability makeAlias concode_elem_sep VarComparability indexType concode_elem_sep VarComparability string_length_type concode_elem_sep boolean equality_set_ok concode_elem_sep boolean alwaysComparable concode_elem_sep VarComparability parse concode_elem_sep VarComparability elementType concode_elem_sep boolean comparable concode_elem_sep boolean comparable"}
{"code": "int function ( ) { return identifier ; }", "nl": "returns the response 's identifier , which matches the pushed notification 's . concode_field_sep int identifier concode_elem_sep int command concode_elem_sep int status concode_field_sep int getCommand concode_elem_sep void setIdentifier concode_elem_sep String getMessage concode_elem_sep boolean isValidErrorMessage concode_elem_sep int getStatus concode_elem_sep void setCommand concode_elem_sep void linkToPushedNotification concode_elem_sep boolean isErrorResponsePacket concode_elem_sep void setStatus"}
{"code": "void function ( PropertyChangeListener arg0 ) { if ( arg0 != null ) { pcsDelegate . removePropertyChangeListener ( arg0 ) ; } }", "nl": "remove a propertychangelistener from this component . concode_field_sep IPropertyDescriptor[] EMPTY_ARRAY concode_elem_sep PropertyChangeSupport pcsDelegate concode_elem_sep long serialVersionUID concode_field_sep void firePropertyChange concode_elem_sep Object getPropertyValue concode_elem_sep void setPropertyValue concode_elem_sep Object getEditableValue concode_elem_sep IPropertyDescriptor[] getPropertyDescriptors concode_elem_sep void resetPropertyValue concode_elem_sep void addPropertyChangeListener concode_elem_sep boolean isPropertySet concode_elem_sep void readObject"}
{"code": "int [ ] function ( int arg0 ) { return KeyStrokeDecoder . extractModifiers ( arg0 ) ; }", "nl": "extract discrete keys from this possibly compound key . concode_field_sep Point pointT concode_elem_sep abbot.swt.Robot _robot concode_field_sep void robotKeyClick concode_elem_sep void doKeyDown concode_elem_sep void doKeyUp concode_elem_sep void mouseMove concode_elem_sep void mouseMove concode_elem_sep void keyUp concode_elem_sep void keyUp concode_elem_sep void mouseDown concode_elem_sep abbot.swt.Robot getAbbotRobot concode_elem_sep void mouseDoubleClick concode_elem_sep void pause concode_elem_sep boolean needsShift concode_elem_sep void mouseUp concode_elem_sep void keyClick concode_elem_sep void keyClick concode_elem_sep void keyDown concode_elem_sep void keyDown concode_elem_sep Event createClickEvent concode_elem_sep void enterText"}
{"code": "char function ( int arg0 ) { return ( char ) ( arg0 + 'A' ) ; }", "nl": "convert integer to character concode_field_sep Cell[][] cells concode_elem_sep int width concode_elem_sep long serialVersionUID concode_elem_sep int height concode_field_sep Iterator<Cell> iterator concode_elem_sep int ctoi concode_elem_sep boolean equals concode_elem_sep Cell getCellAtLocation"}
{"code": "String function ( ) { if ( classRef != null ) return classRef . getName ( ) ; else return null ; }", "nl": "get the subject widget 's class name concode_field_sep long serialVersionUID concode_elem_sep int UNASSIGNED concode_elem_sep String nameOrLabel concode_elem_sep int index concode_elem_sep WidgetLocator ancestorInfo concode_elem_sep WidgetLocator parentInfo concode_elem_sep HashMap<String,String> map concode_elem_sep ClassReference classRef concode_field_sep void setAncestorInfo concode_elem_sep Object getAdapter concode_elem_sep int getIndex concode_elem_sep void setData concode_elem_sep void copyDataTo concode_elem_sep WidgetLocator getParentInfo concode_elem_sep String getWidgetLocatorStringName concode_elem_sep String getNameOrLabel concode_elem_sep WidgetLocator getAncestorInfo concode_elem_sep com.windowtester.runtime.locator.IWidgetLocator[] findAll concode_elem_sep boolean matches concode_elem_sep Map<String,String> getDataMap concode_elem_sep void accept concode_elem_sep void setParentInfo concode_elem_sep Class<?> getTargetClass concode_elem_sep void setIndex concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep ClassReference getTargetClassRef concode_elem_sep String toString concode_elem_sep String getData"}
{"code": "void function ( Service arg0 ) { serviceCache . put ( arg0 . getName ( ) , arg0 ) ; }", "nl": "adds the service into the cache map concode_field_sep Logger LOGGER concode_elem_sep Map<String,Service> serviceCache concode_field_sep Service getService"}
{"code": "boolean function ( DurationFieldType arg0 ) { return getPeriodType ( ) . isSupported ( arg0 ) ; }", "nl": "checks whether the field specified is supported by this period . concode_field_sep PlaceHolder placeHolder concode_field_sep int size concode_elem_sep int[] getValues concode_elem_sep int hashCode concode_elem_sep int get concode_elem_sep boolean equals concode_elem_sep Period toPeriod concode_elem_sep MutablePeriod toMutablePeriod concode_elem_sep DurationFieldType getFieldType concode_elem_sep String toString concode_elem_sep String toString concode_elem_sep int indexOf concode_elem_sep DurationFieldType[] getFieldTypes"}
{"code": "void function ( KrbSetting arg0 ) { this . krbSetting = arg0 ; preauthHandler = new PreauthHandler ( ) ; preauthHandler . init ( this ) ; }", "nl": "init with krbsetting . concode_field_sep KrbSetting krbSetting concode_elem_sep PreauthHandler preauthHandler concode_field_sep int generateNonce concode_elem_sep KrbSetting getKrbSetting concode_elem_sep PreauthHandler getPreauthHandler concode_elem_sep KrbConfig getConfig concode_elem_sep long getTicketValidTime"}
{"code": "File function ( ) { return outputDir ; }", "nl": "get the directory into which commited class files should be written . concode_field_sep File outputDir concode_elem_sep LinkedList cache concode_elem_sep ClassSource _classSource concode_elem_sep String classpath concode_elem_sep Map openZipFiles concode_elem_sep boolean DEBUG concode_elem_sep boolean USE_SYSTEM_CLASSES concode_elem_sep int CACHE_LIMIT concode_elem_sep boolean verbose concode_field_sep void setOutputDir concode_elem_sep ClassInfo loadClassFromStream concode_elem_sep void appendClassPath concode_elem_sep ClassInfo loadClassFromFile concode_elem_sep void setVerbose concode_elem_sep ClassInfo[] loadClassesFromZipFile concode_elem_sep void done concode_elem_sep void prependClassPath concode_elem_sep OutputStream outputStreamFor concode_elem_sep OutputStream outputStreamFor concode_elem_sep void setClassPath concode_elem_sep String getClassPath concode_elem_sep void addToCache concode_elem_sep ClassInfo newClass concode_elem_sep ClassInfo loadClassFromRessource concode_elem_sep ClassInfo loadClass concode_elem_sep void writeEntry"}
{"code": "boolean function ( CtField arg0 ) { return arg0 . hasAnnotation ( OneToMany . class ) || arg0 . hasAnnotation ( ManyToMany . class ) || arg0 . hasAnnotation ( ElementCollection . class ) ; }", "nl": "look for @onetomany , @manytomany and @elementcollection annotations concode_field_sep PlaceHolder placeHolder concode_field_sep boolean isEntityClass concode_elem_sep boolean isPersistentField concode_elem_sep boolean doDirtyCheckingInline concode_elem_sep boolean hasLazyLoadableAttributes concode_elem_sep boolean isCompositeClass concode_elem_sep boolean isLazyLoadable concode_elem_sep ClassLoader getLoadingClassLoader concode_elem_sep CtField[] order"}
{"code": "char function ( int arg0 ) { return charAt ( arg0 , false ) ; }", "nl": "return the character at the given position . erase characters will return 0 rather than the actual character concode_field_sep String inlineMarkupDelimiters concode_elem_sep int sectionLevel concode_elem_sep boolean erased concode_elem_sep boolean inBlock concode_elem_sep boolean listStart concode_elem_sep List<Boolean> valid concode_elem_sep char ESCAPED_CHARACTER_VALUE concode_elem_sep List<Integer> offsets concode_elem_sep List<Character> characters concode_elem_sep String text concode_elem_sep List<Boolean> escaped concode_elem_sep int listLevel concode_elem_sep int lineNo concode_elem_sep boolean allSameCharacter concode_field_sep void setListStart concode_elem_sep void erase concode_elem_sep void erase concode_elem_sep void erase concode_elem_sep boolean isListStart concode_elem_sep String getText concode_elem_sep boolean isValid concode_elem_sep int getOffset concode_elem_sep int length concode_elem_sep boolean isEmpty concode_elem_sep void eraseWithStyle concode_elem_sep boolean isAllSameCharacter concode_elem_sep void setSectionLevel concode_elem_sep void setInBlock concode_elem_sep boolean isErased concode_elem_sep int getSectionLevel concode_elem_sep int eraseEnclosure concode_elem_sep int getListLevel concode_elem_sep int getLineNo concode_elem_sep boolean isInBlock concode_elem_sep String toString concode_elem_sep char rawCharAt concode_elem_sep void setListLevel concode_elem_sep boolean startsWith"}
{"code": "boolean function ( Object arg0 ) { if ( arg0 instanceof MercuryContact ) { MercuryContact loc0 = ( MercuryContact ) arg0 ; return loc0 . getAttribute ( ) . equals ( this . getAttribute ( ) ) && loc0 . getTransInfo ( ) . equals ( this . getTransInfo ( ) ) ; } return false ; }", "nl": "equals does not take into account the range of this contact , as this information might change over time and should be updated rather than force a new contact concode_field_sep String attributeName concode_elem_sep Comparable[] range concode_elem_sep TransInfo transInfo concode_field_sep int getTransmissionSize concode_elem_sep String getAttribute concode_elem_sep void setRange concode_elem_sep Comparable[] getRange concode_elem_sep String toString concode_elem_sep TransInfo getTransInfo"}
{"code": "void function ( int [ ] arg0 , int [ ] arg1 ) { int loc0 = arg0 [ 0 ] ; int loc1 = arg0 [ 1 ] ; int loc2 = arg0 [ 2 ] ; int loc3 = ( 299 * loc0 + 587 * loc1 + 114 * loc2 ) / 1000 ; int loc4 = ( - 1687 * loc0 - 3313 * loc1 + 5000 * loc2 ) / 10000 + 128 ; int loc5 = ( 5000 * loc0 - 4187 * loc1 - 813 * loc2 ) / 10000 + 128 ; arg1 [ 0 ] = min ( 255 , max ( 0 , loc3 ) ) ; arg1 [ 1 ] = min ( 255 , max ( 0 , loc4 ) ) ; arg1 [ 2 ] = min ( 255 , max ( 0 , loc5 ) ) ; }", "nl": "ycc 8-bit per channel to rgb 8-bit per channel . concode_field_sep PlaceHolder placeHolder concode_field_sep void RGBtoYCC concode_elem_sep void RGB8toYCC16 concode_elem_sep void RGB8toYCC16 concode_elem_sep void YCC8toRGB8 concode_elem_sep void YCC16toRGB8 concode_elem_sep void YCCtoRGB concode_elem_sep IndexColorModel createMacColors"}
{"code": "AlgebraicNumber < C > function ( AlgebraicNumber < C > arg0 ) { return new AlgebraicNumber < C > ( this , arg0 . val ) ; }", "nl": "copy algebraicnumber element c. concode_field_sep GenPolynomialRing<C> ring concode_elem_sep int isField concode_elem_sep GenPolynomial<C> modul concode_field_sep boolean isField concode_elem_sep boolean isCommutative concode_elem_sep AlgebraicNumber<C> interpolate concode_elem_sep AlgebraicNumber<C> parse concode_elem_sep AlgebraicNumber<C> parse concode_elem_sep java.math.BigInteger characteristic concode_elem_sep AlgebraicNumber<C> random concode_elem_sep AlgebraicNumber<C> random concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep AlgebraicNumber<C> getONE concode_elem_sep AlgebraicNumber<C> getZERO concode_elem_sep AlgebraicNumber<C> fromInteger concode_elem_sep AlgebraicNumber<C> fromInteger concode_elem_sep boolean isAssociative concode_elem_sep String toString concode_elem_sep AlgebraicNumber<C> chineseRemainder"}
{"code": "Test function ( final String arg0 ) { return new TestCase ( \"srini_string\" ) { protected void runTest ( ) { fail ( arg0 ) ; } } ; }", "nl": "returns a test which will fail and log a warning message . concode_field_sep String fName concode_elem_sep Vector fTests concode_field_sep void setName concode_elem_sep int testCount concode_elem_sep void addTestSuite concode_elem_sep String getName concode_elem_sep void addTestMethod concode_elem_sep void run concode_elem_sep boolean isTestMethod concode_elem_sep Test createTest concode_elem_sep Test testAt concode_elem_sep Enumeration tests concode_elem_sep String exceptionToString concode_elem_sep Constructor getTestConstructor concode_elem_sep void addTest concode_elem_sep String toString concode_elem_sep int countTestCases concode_elem_sep boolean isPublicTestMethod concode_elem_sep void runTest"}
{"code": "String function ( VarCharHolder arg0 ) { return toStringFromUTF8 ( arg0 . start , arg0 . end , arg0 . buffer ) ; }", "nl": "convert a varcharholder to a string . varcharholders are designed specifically for object reuse and mutability , only use this method when absolutely necessary for interacting with interfaces that must take a string . concode_field_sep org.slf4j.Logger logger concode_elem_sep int RADIX concode_elem_sep int MAX_INT concode_elem_sep long MAX_LONG concode_elem_sep ISOChronology CHRONOLOGY concode_field_sep String toStringFromUTF16 concode_elem_sep long varTypesToLong concode_elem_sep void initCap concode_elem_sep int[] memGetDate concode_elem_sep int varTypesToInt concode_elem_sep String toStringFromUTF8 concode_elem_sep long getDate concode_elem_sep boolean isReadableAsDate concode_elem_sep int nfeL concode_elem_sep int nfeI"}
{"code": "void function ( int arg0 ) { if ( arg0 > limit - position ) { throw new BSONException ( \"srini_string\" ) ; } }", "nl": "checks is buffer contains needed bytes concode_field_sep byte[] data concode_elem_sep int offset concode_elem_sep int limit concode_elem_sep int position concode_field_sep boolean isAvailable concode_elem_sep byte read concode_elem_sep long readLong concode_elem_sep String readString concode_elem_sep String readString concode_elem_sep byte[] readBytes concode_elem_sep InputBuffer subBuffer concode_elem_sep int readInt concode_elem_sep InputBuffer createFromByteArray"}
{"code": "void function ( ) { if ( invalidScriptError != null ) throw invalidScriptError ; Log . debug ( \"srini_string\" + toString ( ) ) ; runStep ( ) ; }", "nl": "main run method . should never be run on the event dispatch thread , although no check is explicitly done here . concode_field_sep String description concode_elem_sep Resolver resolver concode_elem_sep Throwable invalidScriptError concode_elem_sep long serialVersionUID concode_field_sep String toXMLString concode_elem_sep Map getAttributes concode_elem_sep String getXMLTag concode_elem_sep void writeObject concode_elem_sep void usage concode_elem_sep void usage concode_elem_sep Element addAttributes concode_elem_sep Element toXML concode_elem_sep void setDescription concode_elem_sep String simpleClassName concode_elem_sep Element addContent concode_elem_sep String getDescription concode_elem_sep void parseStepAttributes concode_elem_sep String getUsage concode_elem_sep void readObject concode_elem_sep String getDefaultDescription concode_elem_sep String toEditableString concode_elem_sep Step createStep concode_elem_sep Step createStep concode_elem_sep void runStep concode_elem_sep ComponentTester resolveTester concode_elem_sep Class resolveClass concode_elem_sep void setScriptError concode_elem_sep String toString concode_elem_sep Resolver getResolver concode_elem_sep Map createAttributeMap"}
{"code": "View function ( int arg0 , String arg1 ) { View loc0 = mInflater . inflate ( arg0 , null , false ) ; loc0 . setTag ( arg1 ) ; loc0 . setVisibility ( View . GONE ) ; View loc1 = loc0 . findViewById ( R . id . exception_button ) ; if ( loc1 != null ) loc1 . setOnClickListener ( this . mClickListener ) ; return loc0 ; }", "nl": "return a view based on layout id concode_field_sep String TAG_INTERNET_OFF concode_elem_sep ArrayList<View> mCustomViews concode_elem_sep ViewSwitcher mSwitcher concode_elem_sep LayoutInflater mInflater concode_elem_sep RelativeLayout mContainer concode_elem_sep String[] mSupportedAbsListViews concode_elem_sep Context mContext concode_elem_sep View mTargetView concode_elem_sep String TAG_OTHER_EXCEPTION concode_elem_sep ArrayList<View> mDefaultViews concode_elem_sep View mView concode_elem_sep String TAG_LOADING_CONTENT concode_elem_sep String[] mSupportedViews concode_elem_sep View.OnClickListener mClickListener concode_field_sep void setClickListener concode_elem_sep void initializeAbsListView concode_elem_sep void initializeViewContainer concode_elem_sep void setmView concode_elem_sep void show concode_elem_sep void showExceptionLayout concode_elem_sep void showInternetOffLayout concode_elem_sep void showLoadingLayout concode_elem_sep void showCustomView concode_elem_sep void setInternetOffMessage concode_elem_sep void setLoadingMessage concode_elem_sep View getmView concode_elem_sep void setInternetOffTitle concode_elem_sep void setDefaultViews concode_elem_sep void hideAll concode_elem_sep void setOtherExceptionTitle concode_elem_sep void addCustomView concode_elem_sep void setOtherExceptionMessage"}
{"code": "int function ( int arg0 , int arg1 ) { if ( arg0 < 0 ) { arg0 = - arg0 ; } if ( arg1 < 0 ) { arg1 = - arg1 ; } while ( arg1 != 0 ) { int loc0 = arg0 % arg1 ; arg0 = arg1 ; arg1 = loc0 ; } return arg0 ; }", "nl": "calculate the greatest common divisor . concode_field_sep String PROMPT concode_field_sep void main"}
{"code": "byte [ ] function ( String arg0 ) { byte [ ] loc0 = new byte [ arg0 . length ( ) + 1 ] ; for ( int loc1 = 0 ; loc1 < arg0 . length ( ) ; loc1 ++ ) { loc0 [ loc1 ] = ( byte ) arg0 . charAt ( loc1 ) ; } loc0 [ arg0 . length ( ) ] = 0 ; return loc0 ; }", "nl": "convert a string into a byte for use with the actual registry functions . concode_field_sep boolean _debug concode_elem_sep int KEY_QUERY_VALUE concode_elem_sep int NATIVE_HANDLE concode_elem_sep int ERROR_SUCCESS concode_elem_sep int ERROR_CODE concode_field_sep String getIndirect concode_elem_sep String replace concode_elem_sep byte[] stripHKEY concode_elem_sep byte[] toWindowsName concode_elem_sep Process Launch concode_elem_sep String getValue concode_elem_sep int getHKEY concode_elem_sep String getKeyDefault concode_elem_sep byte[] windowsAbsolutePath concode_elem_sep String[] splitCommandLine concode_elem_sep String[] splitCommandLine concode_elem_sep int WindowsRegCloseKey concode_elem_sep int[] openKey1 concode_elem_sep String getBrowser"}
{"code": "int function ( ) { return startingLocation ; }", "nl": "return the starting location of this move . concode_field_sep int startingLocation concode_elem_sep Player thePlayer concode_elem_sep int endingLocation concode_field_sep Player getPlayer concode_elem_sep int endLocation"}
{"code": "int function ( SkyNetNodeInfo arg0 , SkyNetNodeInfo arg1 , SkyNetNodeInfo arg2 , long arg3 , OperationCallback < SupportPeerRequestACKMsg > arg4 ) { SupportPeerRequestOperation loc0 = new SupportPeerRequestOperation ( skyNetNode , arg0 , arg1 , arg2 , arg3 , arg4 ) ; loc0 . scheduleImmediately ( ) ; return loc0 . getOperationID ( ) ; }", "nl": "this method starts a supportpeerrequestoperation , which begs a chosen node for the execution of the role as support peer . concode_field_sep AttributeInputStrategy attributeInput concode_elem_sep SkyNetNodeInterface skyNetNode concode_elem_sep AttributeStorage attributeStorage concode_elem_sep Logger log concode_elem_sep SupportPeerInfo activeSupportPeer concode_field_sep void supportPeerRequestFailed concode_elem_sep void supportPeerRequestSucceeded concode_elem_sep void supportPeerUpdateOperationSucceeded concode_elem_sep void updateCurrentSettingsOfSupportPeer concode_elem_sep void reset concode_elem_sep void supportPeerUpdateOperationFailed concode_elem_sep SupportPeerInfo getActiveSupportPeer concode_elem_sep void setSupportPeer concode_elem_sep void determineNewSupportPeer concode_elem_sep void removeSupportPeer concode_elem_sep int updateSupportPeer"}
{"code": "void function ( String arg0 ) { this . name = arg0 ; System . out . println ( \"srini_string\" = \"srini_string\" ) ; }", "nl": "sets the string name of this document set concode_field_sep int size concode_elem_sep RandomGenerator rand concode_elem_sep String name concode_elem_sep int startRank concode_field_sep int getSize concode_elem_sep boolean containsResourcesOf concode_elem_sep void setSize concode_elem_sep String getName concode_elem_sep int getKeyForPublish concode_elem_sep int getKeyForLookup concode_elem_sep void setBeginRank"}
{"code": "void function ( InvocationTargetException arg0 , Shell arg1 , String arg2 , String arg3 ) { fgInstance . perform ( arg0 , arg1 , arg2 , arg3 ) ; }", "nl": "handles the given invocationtargetexception . concode_field_sep ExceptionHandler fgInstance concode_field_sep void displayMessageDialog concode_elem_sep void log concode_elem_sep void perform concode_elem_sep void perform"}
{"code": "MutablePeriod function ( ) { MutablePeriod loc0 = new MutablePeriod ( ) ; loc0 . add ( this ) ; return loc0 ; }", "nl": "get this object as a mutableperiod . this will always return a new mutableperiod with the same fields . the period will use periodtype.standard . concode_field_sep long START_1972 concode_elem_sep int iPeriod concode_elem_sep long serialVersionUID concode_field_sep DurationFieldType getFieldType concode_elem_sep DurationFieldType getFieldType concode_elem_sep boolean isSupported concode_elem_sep int compareTo concode_elem_sep int getValue concode_elem_sep int getValue concode_elem_sep int size concode_elem_sep int hashCode concode_elem_sep void setValue concode_elem_sep int get concode_elem_sep boolean equals concode_elem_sep PeriodType getPeriodType concode_elem_sep Period toPeriod concode_elem_sep int between concode_elem_sep int between concode_elem_sep int standardPeriodIn"}
{"code": "String function ( ) { return iTextVersion ; }", "nl": "returns the itext version as shown in the producer line . itext is a product developed by itext group nv . itext group requests that you retain the itext producer line in every pdf that is created or manipulated using itext . concode_field_sep String release concode_elem_sep String iText concode_elem_sep String iTextVersion concode_elem_sep String key concode_elem_sep String AGPL concode_elem_sep Version version concode_field_sep String getKey concode_elem_sep String getProduct concode_elem_sep boolean isAGPLVersion concode_elem_sep Version getInstance concode_elem_sep String getRelease"}
{"code": "long function ( ) { long loc0 = 0 ; if ( streamToTs . size ( ) >= inputStreams . size ( ) ) { loc0 = Long . MAX_VALUE ; for ( Map . Entry < GlobalStreamId , Long > loc1 : streamToTs . entrySet ( ) ) { loc0 = Math . min ( loc0 , loc1 . getValue ( ) ) ; } } return loc0 - eventTsLag ; }", "nl": "computes the min ts across all streams . concode_field_sep Map<GlobalStreamId,Long> streamToTs concode_elem_sep long lastWaterMarkTs concode_elem_sep ScheduledExecutorService executorService concode_elem_sep Set<GlobalStreamId> inputStreams concode_elem_sep int eventTsLag concode_elem_sep Logger LOG concode_elem_sep int interval concode_elem_sep WindowManager<T> windowManager concode_elem_sep ScheduledFuture<?> executorFuture concode_field_sep void checkFailures concode_elem_sep void start concode_elem_sep void run concode_elem_sep boolean track"}
{"code": "Criteria function ( Object arg0 ) { this . criteriaType = RelationalOperator . LT ; this . right = ValueNode . toValueNode ( arg0 ) ; return this ; }", "nl": "creates a criterion using the < operator concode_field_sep List<Criteria> criteriaChain concode_elem_sep ValueNode left concode_elem_sep ValueNode right concode_elem_sep RelationalOperator criteriaType concode_field_sep Criteria type concode_elem_sep String prefixPath concode_elem_sep Criteria empty concode_elem_sep void checkComplete concode_elem_sep Criteria nin concode_elem_sep Criteria nin concode_elem_sep Criteria and concode_elem_sep Criteria gte concode_elem_sep Criteria create concode_elem_sep Criteria where concode_elem_sep Criteria where concode_elem_sep Criteria lte concode_elem_sep Criteria all concode_elem_sep Criteria all concode_elem_sep boolean apply concode_elem_sep Criteria in concode_elem_sep Criteria in concode_elem_sep Criteria is concode_elem_sep Criteria parse concode_elem_sep Criteria eq concode_elem_sep Criteria gt concode_elem_sep Criteria matches concode_elem_sep Criteria regex concode_elem_sep Criteria contains concode_elem_sep Criteria size concode_elem_sep Criteria ne concode_elem_sep Criteria exists concode_elem_sep String toString concode_elem_sep Collection<RelationalExpressionNode> toRelationalExpressionNodes concode_elem_sep Criteria notEmpty"}
{"code": "void function ( String arg0 ) { this . cssClassName = arg0 ; }", "nl": "sets the css class for the element we will eventually create . blows away any previously set or added class names . concode_field_sep List<LazyEventListenerAttacher<?>> listenerAttachers concode_elem_sep String cssClassName concode_elem_sep ManagesEventListeners listenerManager concode_elem_sep Element element concode_field_sep boolean isCreated concode_elem_sep void addClassName concode_elem_sep void addClickListener concode_elem_sep Element getElement concode_elem_sep void hookListeners concode_elem_sep void addMouseOverListener concode_elem_sep Element createElement concode_elem_sep String getClassName concode_elem_sep void manageEventListener"}
{"code": "void function ( String arg0 ) { try { Class loc0 = Class . forName ( arg0 ) ; Class [ ] loc1 = new Class [ 1 ] ; loc1 [ 0 ] = \"srini_string\" . getClass ( ) ; logImplctor = loc0 . getConstructor ( loc1 ) ; } catch ( Throwable loc0 ) { logImplctor = null ; } }", "nl": "set the log implementation/log implementation factory by the name of the class . the given class must implement log , and provide a constructor that takes a single string argument containing the nameof the log . concode_field_sep Constructor logImplctor concode_elem_sep boolean jdk14IsAvailable concode_elem_sep boolean log4jIsAvailable concode_elem_sep Hashtable logs concode_field_sep String[] getLogNames concode_elem_sep Log makeNewLogInstance concode_elem_sep Log getInstance concode_elem_sep Log getInstance"}
{"code": "boolean function ( ModelNode arg0 ) { return arg0 . hasDefined ( ModelDescriptionConstants . INCLUDE_DEFAULTS ) ? arg0 . get ( ModelDescriptionConstants . INCLUDE_DEFAULTS ) . asBoolean ( ) : true ; }", "nl": "indicates whether or not this operation expects to include default values . concode_field_sep String INDEX concode_elem_sep String KEY concode_field_sep String getName concode_elem_sep ModelNode getAttributeValue concode_elem_sep ModelNode createWriteAttributeOperation concode_elem_sep ModelNode createReadAttributeOperation concode_elem_sep Set<String> getAllWriteAttributeOperationNames concode_elem_sep void setPathAddress concode_elem_sep ModelNode createMapEntryOperation concode_elem_sep ModelNode createListRemoveOperation concode_elem_sep ModelNode createListRemoveOperation concode_elem_sep ModelNode createUndefineAttributeOperation concode_elem_sep String getAttributeName concode_elem_sep ModelNode createCompositeOperation concode_elem_sep ModelNode createCompositeOperation concode_elem_sep ModelNode createReadResourceOperation concode_elem_sep ModelNode createMapRemoveOperation concode_elem_sep ModelNode createMapClearOperation concode_elem_sep ModelNode createMapPutOperation concode_elem_sep ModelNode createDescribeOperation concode_elem_sep ModelNode createListElementOperation concode_elem_sep ModelNode createListElementOperation concode_elem_sep ModelNode createListAddOperation concode_elem_sep ModelNode createListGetOperation concode_elem_sep ModelNode createAttributeOperation concode_elem_sep ModelNode createMapGetOperation concode_elem_sep PathAddress getPathAddress concode_elem_sep ModelNode createAddOperation concode_elem_sep ModelNode createAddOperation concode_elem_sep ModelNode createAddOperation"}
{"code": "int function ( ) { return type ; }", "nl": "get type type to mark this response , default is 0 it will be used in httpcache #httpcache android.content.context , int concode_field_sep boolean isInCache concode_elem_sep int responseCode concode_elem_sep String responseBody concode_elem_sep Map<String,Object> responseHeaders concode_elem_sep boolean isInitExpiredTime concode_elem_sep int type concode_elem_sep String url concode_elem_sep long expiredTime concode_field_sep boolean isInCache concode_elem_sep long getExpiresInMillis concode_elem_sep HttpResponse setInCache concode_elem_sep void setResponseHeader concode_elem_sep void setExpiredTime concode_elem_sep String getResponseBody concode_elem_sep void setResponseCode concode_elem_sep void setResponseHeaders concode_elem_sep void setType concode_elem_sep long getExpiredTime concode_elem_sep void setUrl concode_elem_sep String getUrl concode_elem_sep String getExpiresHeader concode_elem_sep long getCacheControlMaxAge concode_elem_sep int getResponseCode concode_elem_sep Map<String,Object> getResponseHeaders concode_elem_sep void setResponseBody concode_elem_sep Object getResponseHeader concode_elem_sep boolean isExpired"}
{"code": "void function ( ) { list . clear ( ) ; }", "nl": "empties the contents of the stack . concode_field_sep ArrayByteList list concode_field_sep byte pop concode_elem_sep int search concode_elem_sep int size concode_elem_sep byte get concode_elem_sep byte push concode_elem_sep boolean empty concode_elem_sep byte peek concode_elem_sep byte peek"}
{"code": "double function ( ) { return apply ( new SumOfSquares ( ) ) ; }", "nl": "returns the sum of the squares of the available values . concode_field_sep int INFINITE_WINDOW concode_elem_sep long serialVersionUID concode_field_sep double getKurtosis concode_elem_sep double getStandardDeviation concode_elem_sep double getSkewness concode_elem_sep int getWindowSize concode_elem_sep double[] getValues concode_elem_sep double[] getSortedValues concode_elem_sep double apply concode_elem_sep double getMax concode_elem_sep long getN concode_elem_sep void clear concode_elem_sep DescriptiveStatistics newInstance concode_elem_sep DescriptiveStatistics newInstance concode_elem_sep double getMin concode_elem_sep double getElement concode_elem_sep double getVariance concode_elem_sep double getMean concode_elem_sep String toString concode_elem_sep void setWindowSize concode_elem_sep double getSum concode_elem_sep double getPercentile concode_elem_sep void addValue concode_elem_sep double getGeometricMean"}
{"code": "XMPDateTime function ( String arg0 ) { return parse ( arg0 , new XMPDateTimeImpl ( ) ) ; }", "nl": "converts an iso 8601 string to an xmpdatetime . parse a date according to iso 8601 and http://www.w3.org/tr/note-datetime : yyyy yyyy-mm yyyy-mm-dd yyyy-mm-ddthh : mmtzd yyyy-mm-ddthh : mm : sstzd yyyy-mm-ddthh : mm : ss.stzd data fields : yyyy = four-digit year mm = two-digit month 01 = january , etc. dd = two-digit day of month 01 through 31 hh = two digits of hour 00 through 23 mm = two digits of minute 00 through 59 ss = two digits of second 00 through 59 s = one or more digits representing a decimal fraction of a second tzd = time zone designator z or + hh : mm or - hh : mm note that iso 8601 does not seem to allow years less than 1000 or greater than 9999 . we allow any year , even negative ones . the year is formatted as '' % .4 d '' . note : tolerate missing tzd , assume is utc . photoshop 8 writes dates like this for exif : gpstimestamp . note : does not apply anymore . tolerate missing date portion , in case someone foolishly writes a time-only value that way . concode_field_sep String str concode_elem_sep int pos concode_field_sep char ch concode_elem_sep char ch concode_elem_sep int pos concode_elem_sep int length concode_elem_sep boolean hasNext concode_elem_sep void skip concode_elem_sep String render concode_elem_sep int gatherInt"}
{"code": "Object function ( ) { return this . intern ( ) ; }", "nl": "special handler for deserialization . concode_field_sep Map<VarInfoAux,VarInfoAux> interningMap concode_elem_sep String IS_PARAM concode_elem_sep Logger debug concode_elem_sep String HAS_DUPLICATES concode_elem_sep String NULL_TERMINATING concode_elem_sep VarInfoAux theDefault concode_elem_sep String FALSE concode_elem_sep String PACKAGE_NAME concode_elem_sep boolean isInterned concode_elem_sep String IS_STRUCT concode_elem_sep String HAS_NULL concode_elem_sep String TRUE concode_elem_sep long serialVersionUID concode_elem_sep String HAS_ORDER concode_elem_sep String HAS_SIZE concode_elem_sep String NO_PACKAGE_NAME concode_elem_sep Map<String,String> map concode_field_sep String getValue concode_elem_sep VarInfoAux intern concode_elem_sep boolean isParam concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep boolean equals concode_elem_sep VarInfoAux setValue concode_elem_sep VarInfoAux clone concode_elem_sep VarInfoAux getDefault concode_elem_sep String toString concode_elem_sep VarInfoAux parse concode_elem_sep boolean getFlag"}
{"code": "void function ( ) { handleChange ( new Change ( TypingRun . SELECTION , - 1 ) ) ; }", "nl": "handles an incoming selection event . concode_field_sep TextListener fTextListener concode_elem_sep ChangeType fType concode_elem_sep SelectionListener fSelectionListener concode_elem_sep Set<ITypingRunListener> fListeners concode_elem_sep int fNextOffset concode_elem_sep boolean DEBUG concode_elem_sep TypingRun fRun concode_elem_sep ITextViewer fViewer concode_elem_sep Change fLastChange concode_field_sep void disconnect concode_elem_sep void fireRunBegun concode_elem_sep void mouseDown concode_elem_sep void handleTextChanged concode_elem_sep void startOrContinue concode_elem_sep void fireRunEnded concode_elem_sep void focusLost concode_elem_sep Change computeChange concode_elem_sep void uninstall concode_elem_sep void handleChange concode_elem_sep boolean hasRun concode_elem_sep void ensureSelectionListenerAdded concode_elem_sep boolean canFollow concode_elem_sep void keyReleased concode_elem_sep void connect concode_elem_sep void addTypingRunListener concode_elem_sep void focusGained concode_elem_sep void keyPressed concode_elem_sep void endIfStarted concode_elem_sep void ensureSelectionListenerRemoved concode_elem_sep void mouseDoubleClick concode_elem_sep ChangeType getType concode_elem_sep void install concode_elem_sep boolean isModification concode_elem_sep void mouseUp concode_elem_sep String toString concode_elem_sep void removeTypingRunListener concode_elem_sep void textChanged"}
{"code": "RingFactory < C > function ( int arg0 ) { if ( nCopies != 0 ) { if ( 0 <= arg0 && arg0 < nCopies ) { return ring ; } throw new RuntimeException ( \"srini_string\" + this . getClass ( ) . getName ( ) ) ; } else { return ringList . get ( arg0 ) ; } }", "nl": "get ring factory at index i. concode_field_sep int nCopies concode_elem_sep RingFactory<C> ring concode_elem_sep List<RingFactory<C>> ringList concode_elem_sep Logger logger concode_elem_sep Random random concode_field_sep void addFactory concode_elem_sep boolean containsFactory concode_elem_sep boolean isField concode_elem_sep int length concode_elem_sep boolean isCommutative concode_elem_sep Product<C> parse concode_elem_sep Product<C> parse concode_elem_sep java.math.BigInteger characteristic concode_elem_sep Product<C> random concode_elem_sep Product<C> random concode_elem_sep Product<C> random concode_elem_sep Product<C> random concode_elem_sep Product<C> getAtomic concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep Product<C> getONE concode_elem_sep Product<C> getZERO concode_elem_sep Product<C> fromInteger concode_elem_sep Product<C> fromInteger concode_elem_sep boolean isAssociative concode_elem_sep String toString concode_elem_sep Product<C> copy"}
{"code": "boolean function ( CanArea arg0 ) { if ( sameXValue ( arg0 ) && sameYValue ( arg0 ) ) return true ; return false ; }", "nl": "checks if the x value of the hash should be in this area concode_field_sep BigInteger id concode_field_sep int getTransmissionSize concode_elem_sep int[] getIntValue concode_elem_sep BigInteger getXValue concode_elem_sep BigInteger getId concode_elem_sep boolean sameXValue concode_elem_sep int compareTo concode_elem_sep byte[] getBytes concode_elem_sep BigInteger[] getValue concode_elem_sep boolean sameYValue concode_elem_sep BigInteger getYValue concode_elem_sep BigInteger getUniqueValue concode_elem_sep void setId concode_elem_sep String toString"}
{"code": "K function ( final K arg0 ) { final K loc0 = this . m_value ; this . m_value = arg0 ; return loc0 ; }", "nl": "sets a new value instance overwriting the old value which is returned . you may use null . but you will get it back next call ! concode_field_sep V m_key concode_elem_sep K m_value concode_field_sep V getKey concode_elem_sep K getValue concode_elem_sep int hashCode concode_elem_sep boolean equals"}
{"code": "void function ( DialectResolver arg0 ) { this . dialectResolver = arg0 ; }", "nl": "intended only for use from testing . concode_field_sep DialectResolver dialectResolver concode_elem_sep StrategySelector strategySelector concode_field_sep Dialect buildDialect concode_elem_sep Dialect constructDialect concode_elem_sep Dialect determineDialect concode_elem_sep void injectServices"}
{"code": "void function ( ) { document . close ( ) ; }", "nl": "we 've finished writing the concatenated document . concode_field_sep Document document concode_elem_sep PdfCopy copy concode_field_sep PdfCopy getWriter concode_elem_sep int addPages concode_elem_sep void open"}
{"code": "long function ( int arg0 ) { return ( ( ANIMFrame ) frames_ . elementAt ( arg0 ) ) . getRelTime ( ) ; }", "nl": "timing for frame relative to previous frame . concode_field_sep int xPosition concode_elem_sep boolean isPlayWrapupFrames concode_elem_sep int CMP_VERTICAL concode_elem_sep int yPosition concode_elem_sep int MODE_INDEXED_COLORS concode_elem_sep int MSK_HAS_MASK concode_elem_sep int MSK_HAS_TRANSPARENT_COLOR concode_elem_sep int pageHeight concode_elem_sep int pageWidth concode_elem_sep Vector frames_ concode_elem_sep int transparentColor concode_elem_sep Hashtable properties concode_elem_sep int height concode_elem_sep long totalDuration concode_elem_sep int MODE_HAM8 concode_elem_sep int masking concode_elem_sep int MODE_HAM6 concode_elem_sep int MSK_NONE concode_elem_sep int MSK_LASSO concode_elem_sep int MODE_EHB concode_elem_sep boolean isSwapSpeakers concode_elem_sep int nbPlanes concode_elem_sep int nbPalettes concode_elem_sep int MODE_DIRECT_COLORS concode_elem_sep int xAspect concode_elem_sep Vector audioClips_ concode_elem_sep PropertyChangeSupport listeners concode_elem_sep int screenMode concode_elem_sep int jiffies concode_elem_sep int CMP_BYTE_RUN_1 concode_elem_sep int yAspect concode_elem_sep int CMP_NONE concode_elem_sep int width concode_elem_sep ArrayList<ColorCycle> colorCycles concode_elem_sep int compression concode_field_sep int getNbPlanes concode_elem_sep int getCompression concode_elem_sep void setYPosition concode_elem_sep List<ColorCycle> getColorCycles concode_elem_sep int getColorCyclesCount concode_elem_sep int getFrameCount concode_elem_sep AudioClip getAudioClip concode_elem_sep void setTransparentColor concode_elem_sep int getNbPalettes concode_elem_sep int getXAspect concode_elem_sep void setPageHeight concode_elem_sep int getTransparentColor concode_elem_sep int getJiffies concode_elem_sep int getInterleave concode_elem_sep int getMasking concode_elem_sep void firePropertyChange concode_elem_sep void removePropertyChangeListener concode_elem_sep void setHeight concode_elem_sep void setXAspect concode_elem_sep void setScreenMode concode_elem_sep void setCompression concode_elem_sep void setSwapSpeakers concode_elem_sep void setProperty concode_elem_sep void addFrame concode_elem_sep int getAudioClipCount concode_elem_sep void setXPosition concode_elem_sep int getYPosition concode_elem_sep boolean isPlayWrapupFrames concode_elem_sep ANIMFrame getFrame concode_elem_sep int getWidth concode_elem_sep boolean isSwapSpeakers concode_elem_sep void addColorCycle concode_elem_sep void setPageWidth concode_elem_sep int getPageHeight concode_elem_sep int getHeight concode_elem_sep void addAudioClip concode_elem_sep int getDeltaOperation concode_elem_sep void addPropertyChangeListener concode_elem_sep Object getProperty concode_elem_sep int getXPosition concode_elem_sep void setMasking concode_elem_sep int getPageWidth concode_elem_sep int getYAspect concode_elem_sep void setYAspect concode_elem_sep void setWidth concode_elem_sep void setNbPlanes concode_elem_sep void setPlayWrapupFrames concode_elem_sep long getTotalDuration concode_elem_sep int getScreenMode concode_elem_sep void setJiffies"}
{"code": "void function ( Throwable arg0 ) { throw arg0 ; }", "nl": "if the #call method throws an exception , then this method is called tohandle that exception . this method may either handle the exception and return a value or rethrow the exception . the default implementation just rethrows the exception . subclasses may extend or override . concode_field_sep PlaceHolder placeHolder concode_field_sep void call"}
{"code": "int function ( int arg0 ) { BigInteger loc0 ; int loc1 = arg0 * PastryConstants . ID_BASE_BIT_LENGTH ; loc0 = id . shiftRight ( loc1 ) ; loc0 = loc0 . mod ( TWO . pow ( PastryConstants . ID_BASE_BIT_LENGTH ) ) ; if ( loc0 . compareTo ( BigInteger . valueOf ( Integer . MAX_VALUE ) ) <= 0 ) return loc0 . intValue ( ) ; else return - 1 ; }", "nl": "returns the ith digit of the id in base 2 ^ b . i = 0 returns the least significant digit . concode_field_sep BigInteger MAX_ID_VALUE concode_elem_sep BigInteger TWO concode_elem_sep BigInteger NUM_OF_DISTINCT_IDS concode_elem_sep int NUM_OF_DIGITS concode_elem_sep BigInteger id concode_field_sep int getTransmissionSize concode_elem_sep int indexOfMSDD concode_elem_sep int compareTo concode_elem_sep byte[] getBytes concode_elem_sep int hashCode concode_elem_sep BigInteger getUniqueValue concode_elem_sep boolean equals concode_elem_sep boolean isBetween concode_elem_sep BigInteger getMinAbsDistance concode_elem_sep String toString concode_elem_sep BigInteger getCwDistance concode_elem_sep PastryKey getCorrespondingKey concode_elem_sep BigInteger getCcwDistance"}
{"code": "int function ( ) { int loc0 ; loc0 = ring . hashCode ( ) ; loc0 = 37 * loc0 + num . hashCode ( ) ; loc0 = 37 * loc0 + den . hashCode ( ) ; return loc0 ; }", "nl": "hash code for this local . concode_field_sep Logger logger concode_elem_sep QuotientRing<C> ring concode_elem_sep boolean debug concode_elem_sep C num concode_elem_sep C den concode_field_sep int signum concode_elem_sep boolean isONE concode_elem_sep Quotient<C> inverse concode_elem_sep boolean isUnit concode_elem_sep Quotient<C> subtract concode_elem_sep Quotient<C> gcd concode_elem_sep Quotient<C> sum concode_elem_sep int compareTo concode_elem_sep Quotient<C>[] egcd concode_elem_sep Quotient<C> monic concode_elem_sep Quotient<C> abs concode_elem_sep Quotient<C> negate concode_elem_sep boolean equals concode_elem_sep Quotient<C> clone concode_elem_sep boolean isZERO concode_elem_sep String toString concode_elem_sep Quotient<C> divide concode_elem_sep Quotient<C> multiply concode_elem_sep Quotient<C> remainder"}
{"code": "MiniPair function ( ) { return new MiniPair ( i , j ) ; }", "nl": "what is this for ? concode_field_sep boolean useCriterion4 concode_elem_sep GenPolynomial<C> pi concode_elem_sep int i concode_elem_sep GenPolynomial<C> pj concode_elem_sep int j concode_elem_sep boolean useCriterion3 concode_elem_sep int n concode_elem_sep boolean toZero concode_field_sep int getPairNumber concode_elem_sep void setUseCriterion3 concode_elem_sep boolean equals concode_elem_sep boolean getUseCriterion3 concode_elem_sep void setZero concode_elem_sep boolean isZero concode_elem_sep void setUseCriterion4 concode_elem_sep String toString concode_elem_sep int compareTo concode_elem_sep void pairNumber concode_elem_sep boolean getUseCriterion4"}
{"code": "boolean function ( ) { if ( is12 ) { return getLogger ( ) . isEnabledFor ( ( Priority ) Level . WARN ) ; } else { return getLogger ( ) . isEnabledFor ( Level . WARN ) ; } }", "nl": "check whether the log4j logger used is enabled for warn priority . concode_field_sep String name concode_elem_sep boolean is12 concode_elem_sep Logger logger concode_elem_sep String FQCN concode_field_sep void warn concode_elem_sep void warn concode_elem_sep void trace concode_elem_sep void trace concode_elem_sep void debug concode_elem_sep void debug concode_elem_sep boolean isInfoEnabled concode_elem_sep boolean isErrorEnabled concode_elem_sep Logger getLogger concode_elem_sep boolean isTraceEnabled concode_elem_sep boolean isDebugEnabled concode_elem_sep void error concode_elem_sep void error concode_elem_sep boolean isFatalEnabled concode_elem_sep void fatal concode_elem_sep void fatal concode_elem_sep void info concode_elem_sep void info"}
{"code": "boolean function ( String arg0 , String arg1 ) { if ( \"srini_string\" . equals ( arg0 ) && \"srini_string\" . equals ( arg1 ) ) return true ; Entry loc0 = sessions . get ( arg0 ) ; return loc0 != null && loc0 . arg1 . equals ( arg1 ) ; }", "nl": "for test use concode_field_sep Map<String,Entry> sessions concode_elem_sep long lastAccessTime concode_elem_sep String ticket concode_elem_sep TicketContainer instance concode_field_sep String getTicket"}
{"code": "String function ( ) { return numberChosen ; }", "nl": "gets the number chosen . concode_field_sep String errorMessage concode_elem_sep String numberChosen concode_elem_sep String buyerName concode_elem_sep Boolean isTest concode_field_sep String getBuyerName concode_elem_sep void setIsTest concode_elem_sep void execute concode_elem_sep String getErrorMessage"}
{"code": "Transformer [ ] function ( ) { return iTransformers ; }", "nl": "gets the transformers , do not modify the array . concode_field_sep Transformer[] iTransformers concode_elem_sep long serialVersionUID concode_field_sep Object transform concode_elem_sep Transformer getInstance concode_elem_sep Transformer getInstance concode_elem_sep Transformer getInstance"}
{"code": "void function ( int arg0 ) { }", "nl": "flashes the output area a specified color . currently inoperable . concode_field_sep Font consoleFont concode_elem_sep int ydim concode_elem_sep SwingConsoleFrame targetFrame concode_elem_sep int ypos concode_elem_sep Position caretPosition concode_elem_sep int xpos concode_elem_sep Properties configuration concode_elem_sep CSIColor[][] colorsBuffer concode_elem_sep StrokeInformer aStrokeInformer concode_elem_sep HashMap<CSIColor,Color> colorMap concode_elem_sep CSIColor[][] backcolorsBuffer concode_elem_sep CSIColor[][] colors concode_elem_sep CSIColor[][] backcolors concode_elem_sep int xdim concode_elem_sep FontMetrics fMetric concode_elem_sep char[][] charsBuffer concode_elem_sep char[][] chars concode_elem_sep CSIColor backColor concode_elem_sep CSIColor frontColor concode_field_sep void locate concode_elem_sep void safeprint concode_elem_sep void run concode_elem_sep void saveBuffer concode_elem_sep void componentResized concode_elem_sep void waitKeys concode_elem_sep void addKeyListener concode_elem_sep boolean isInsideBounds concode_elem_sep boolean isInsideBounds concode_elem_sep int defineFontSize concode_elem_sep void componentMoved concode_elem_sep int peekColor concode_elem_sep CharKey inkey concode_elem_sep void componentHidden concode_elem_sep void waitKey concode_elem_sep void restore concode_elem_sep char peekChar concode_elem_sep void refresh concode_elem_sep void refresh concode_elem_sep int getColor concode_elem_sep void printTransparent concode_elem_sep void cls concode_elem_sep void componentShown concode_elem_sep void flushColorTable concode_elem_sep void setAutoRefresh concode_elem_sep String loadFont concode_elem_sep String input concode_elem_sep String input concode_elem_sep void print concode_elem_sep void print concode_elem_sep void print concode_elem_sep void print concode_elem_sep void print concode_elem_sep void print concode_elem_sep void print concode_elem_sep CSIColor peekCSIColor concode_elem_sep void locateCaret concode_elem_sep Color colorPreProcess"}
{"code": "int function ( ) { if ( constantValue != null ) { return constantValue . constantValueIndex ( ) ; } return 0 ; }", "nl": "get the index into the constant pool of the field 's constant value , if any . returns 0 if the field does not have a constant value . concode_field_sep ClassInfo classInfo concode_elem_sep int name concode_elem_sep int modifiers concode_elem_sep int type concode_elem_sep Attribute[] attrs concode_elem_sep ConstantValue constantValue concode_field_sep void setConstantValue concode_elem_sep int typeIndex concode_elem_sep int nameIndex concode_elem_sep void setNameIndex concode_elem_sep String toString concode_elem_sep void setTypeIndex concode_elem_sep void setModifiers concode_elem_sep int modifiers concode_elem_sep void write concode_elem_sep ClassInfo declaringClass"}
{"code": "void function ( double arg0 ) { this . sigma = arg0 ; }", "nl": "sets the sigma parameter unit is msec concode_field_sep RandomGenerator rand concode_elem_sep LognormalDist dist concode_elem_sep double sigma concode_elem_sep double mu concode_field_sep long getJitter concode_elem_sep void writeBackToXML concode_elem_sep void setMu"}
{"code": "DoubleIterator function ( ) { return EMPTY_DOUBLE_ITERATOR ; }", "nl": "returns an unmodifiable , empty doubleiterator concode_field_sep DoubleListIterator EMPTY_DOUBLE_LIST_ITERATOR concode_elem_sep DoubleIterator EMPTY_DOUBLE_ITERATOR concode_elem_sep DoubleList EMPTY_DOUBLE_LIST concode_field_sep DoubleList unmodifiableDoubleList concode_elem_sep DoubleList getEmptyDoubleList concode_elem_sep DoubleIterator singletonDoubleIterator concode_elem_sep DoubleListIterator unmodifiableDoubleListIterator concode_elem_sep DoubleList singletonDoubleList concode_elem_sep DoubleIterator unmodifiableDoubleIterator concode_elem_sep DoubleListIterator singletonDoubleListIterator concode_elem_sep DoubleListIterator getEmptyDoubleListIterator"}
{"code": "ResponsePacket function ( ) { return response ; }", "nl": "if a response packet regarding this notification was received , this method returns it . otherwise it returns null . concode_field_sep Exception exception concode_elem_sep int identifier concode_elem_sep Payload payload concode_elem_sep ResponsePacket response concode_elem_sep int transmissionAttempts concode_elem_sep boolean transmissionCompleted concode_elem_sep long expiry concode_elem_sep Device device concode_field_sep void setExpiry concode_elem_sep void setTransmissionAttempts concode_elem_sep boolean isTransmissionCompleted concode_elem_sep Exception getException concode_elem_sep void setIdentifier concode_elem_sep long getExpiry concode_elem_sep void setResponse concode_elem_sep List<PushedNotification> findSuccessfulNotifications concode_elem_sep Device getDevice concode_elem_sep void setTransmissionCompleted concode_elem_sep void setDevice concode_elem_sep Payload getPayload concode_elem_sep void addTransmissionAttempt concode_elem_sep boolean isSuccessful concode_elem_sep void setPayload concode_elem_sep int getIdentifier concode_elem_sep String getLatestTransmissionAttempt concode_elem_sep List<PushedNotification> findFailedNotifications concode_elem_sep int getTransmissionAttempts concode_elem_sep String toString concode_elem_sep void setException"}
{"code": "PerspectiveLocator function ( String arg0 ) { return new PerspectiveLocator ( PerspectiveFinder . findByNameInRegistry ( arg0 ) ) ; }", "nl": "create a new perspective locator that identifies perspectives by name . concode_field_sep IPerspectiveDescriptor descriptor concode_elem_sep long serialVersionUID concode_field_sep IPerspectiveDescriptor getDescriptor concode_elem_sep IConditionHandler isClosed concode_elem_sep PerspectiveLocator forId concode_elem_sep IConditionHandler isActive concode_elem_sep ICondition isActive concode_elem_sep String getPerspectiveId"}
{"code": "ShortList function ( ShortList arg0 ) { if ( null == arg0 ) { throw new NullPointerException ( ) ; } return UnmodifiableShortList . wrap ( arg0 ) ; }", "nl": "returns an unmodifiable version of the given non-null shortlist . concode_field_sep ShortList EMPTY_SHORT_LIST concode_elem_sep ShortListIterator EMPTY_SHORT_LIST_ITERATOR concode_elem_sep ShortIterator EMPTY_SHORT_ITERATOR concode_field_sep ShortListIterator getEmptyShortListIterator concode_elem_sep ShortIterator singletonShortIterator concode_elem_sep ShortListIterator singletonShortListIterator concode_elem_sep ShortIterator unmodifiableShortIterator concode_elem_sep ShortList getEmptyShortList concode_elem_sep ShortListIterator unmodifiableShortListIterator concode_elem_sep ShortList singletonShortList concode_elem_sep ShortIterator getEmptyShortIterator"}
{"code": "void function ( Object arg0 , Throwable arg1 ) { log ( Level . FINE , String . valueOf ( arg0 ) , arg1 ) ; }", "nl": "log a message and exception with debug log level . concode_field_sep String name concode_elem_sep Logger logger concode_field_sep void log concode_elem_sep Logger getLogger concode_elem_sep boolean isWarnEnabled concode_elem_sep void error concode_elem_sep void error concode_elem_sep boolean isFatalEnabled concode_elem_sep void fatal concode_elem_sep void fatal concode_elem_sep void warn concode_elem_sep void warn concode_elem_sep void trace concode_elem_sep void trace concode_elem_sep boolean isInfoEnabled concode_elem_sep boolean isErrorEnabled concode_elem_sep boolean isTraceEnabled concode_elem_sep boolean isDebugEnabled concode_elem_sep void info concode_elem_sep void info"}
{"code": "Phenotype function ( SolrQuery arg0 ) { try { QueryResponse loc0 = server . query ( arg0 ) ; List < SolrDocument > loc1 = loc0 . getResults ( ) ; if ( loc1 . size ( ) == 0 ) { return Phenotype . NULL ; } return mapper . fromDoc ( loc1 . get ( 0 ) ) ; } catch ( SolrServerException loc0 ) { throw new IOException ( loc0 ) ; } }", "nl": "run the query given and return one result from it . concode_field_sep Joiner OR_QUERY_JOINER concode_elem_sep Path path concode_elem_sep SolrClient server concode_elem_sep CoreContainer cores concode_elem_sep boolean autocommit concode_elem_sep String WILDCARD_QSTRING concode_elem_sep String CORE_NAME concode_elem_sep SolrMapper mapper concode_elem_sep boolean up concode_elem_sep String FIELD_IS concode_field_sep void init concode_elem_sep Phenotype savePhenotype concode_elem_sep String addStatusFilter concode_elem_sep Phenotype getPhenotypeByIssueNumber concode_elem_sep Phenotype getPhenotype concode_elem_sep void commit concode_elem_sep boolean getAutocommit concode_elem_sep List<Phenotype> searchPhenotypes concode_elem_sep Phenotype getPhenotypeByField concode_elem_sep void setAutocommit concode_elem_sep List<Phenotype> getPhenotypesByStatus concode_elem_sep List<Phenotype> getPhenotypesByField concode_elem_sep String getNextId concode_elem_sep Phenotype getPhenotypeByHpoId concode_elem_sep boolean deletePhenotype concode_elem_sep void checkUp concode_elem_sep void shutdown concode_elem_sep Phenotype getPhenotypeById"}
{"code": "Expr function ( int arg0 ) { for ( int loc0 = stack . size ( ) - 1 ; loc0 >= 0 ; loc0 -- ) { final Expr loc1 = ( Expr ) stack . get ( loc0 ) ; if ( arg0 == 0 ) { return loc1 ; } arg0 -= loc1 . type ( ) . stackHeight ( ) ; } throw new IllegalArgumentException ( \"srini_string\" ) ; }", "nl": "get the expression that is depth expressions from the top of the stack , but do not modify the stack . concode_field_sep ArrayList stack concode_elem_sep int height concode_field_sep Expr pop concode_elem_sep void set concode_elem_sep Expr pop1 concode_elem_sep int size concode_elem_sep Expr[] pop2 concode_elem_sep Expr get concode_elem_sep boolean isEmpty concode_elem_sep void replace concode_elem_sep String toString concode_elem_sep void push concode_elem_sep int height"}
{"code": "IUIConditionHandler function ( ) { return new WorkbenchIsMaximizedCondition ( ) ; }", "nl": "create a condition that tests if the workbench shell is maximized . concode_field_sep PlaceHolder placeHolder concode_field_sep IUIConditionHandler hasFocus"}
{"code": "void function ( LoggingEvent arg0 ) { boolean loc0 = false ; synchronized ( EVENTQUEUELOCK ) { if ( eventQueueLength < capacity ) { eventQueue . add ( arg0 ) ; eventQueueLength ++ ; } else { loc0 = true ; } } if ( loc0 ) { flushAndPublishQueue ( false ) ; } }", "nl": "adds a log event to the cache . if the number of events reach the capacity of the batch , they will be published . concode_field_sep String PUBLISH_THREAD_NAME concode_elem_sep String cacheName concode_elem_sep int eventQueueLength concode_elem_sep ExecutorService executorService concode_elem_sep Object EVENTQUEUELOCK concode_elem_sep Queue<LoggingEvent> eventQueue concode_elem_sep ICachePublisher cachePublisher concode_elem_sep int capacity concode_field_sep ExecutorService createExecutorService concode_elem_sep Future<Boolean> publishCache concode_elem_sep void publish concode_elem_sep PublishContext startPublish concode_elem_sep void flushAndPublishQueue concode_elem_sep void endPublish concode_elem_sep String getCacheName"}
{"code": "int function ( ) { return timeout ; }", "nl": "retrieve the current timeout setting . the timeout is the amount of time , in milliseconds , we should instruct the database to wait for any requested pessimistic lock acquisition . #no_wait , #wait_forever or #skip_locked represent 3 `` magic '' values . concode_field_sep Map<String,LockMode> aliasSpecificLockModes concode_elem_sep int NO_WAIT concode_elem_sep LockOptions NONE concode_elem_sep boolean scope concode_elem_sep int SKIP_LOCKED concode_elem_sep LockOptions READ concode_elem_sep LockOptions UPGRADE concode_elem_sep LockMode lockMode concode_elem_sep int timeout concode_elem_sep int WAIT_FOREVER concode_field_sep LockMode getLockMode concode_elem_sep LockOptions makeCopy concode_elem_sep LockMode getEffectiveLockMode concode_elem_sep int getAliasLockCount concode_elem_sep LockOptions setLockMode concode_elem_sep Iterator getAliasLockIterator concode_elem_sep LockOptions setAliasSpecificLockMode concode_elem_sep LockMode getAliasSpecificLockMode concode_elem_sep LockOptions setTimeOut concode_elem_sep LockMode findGreatestLockMode concode_elem_sep boolean hasAliasSpecificLockModes concode_elem_sep LockOptions copy concode_elem_sep LockOptions setScope concode_elem_sep boolean getScope"}
{"code": "void function ( ) { assertEquals ( 255 , WebColors . getRGBColor ( RGB_PERCENT ) . getRed ( ) ) ; }", "nl": "test method for com.itextpdf.text.html.webcolors #getrgbcolor java.lang.string . concode_field_sep String RGB_PERCENT concode_elem_sep String RGB_OUT_OF_RANGE concode_elem_sep String RGB_MISSING_COLOR_VALUES concode_field_sep String dumpColor concode_elem_sep void testGetRGBColorInPercentBlue concode_elem_sep void testGetRGBColorValueOutOfRange concode_elem_sep void testGetRGBColorChannelsMissingBlue concode_elem_sep void moreColorTest concode_elem_sep void testGetRGBColorInPercentAlpha concode_elem_sep void testGetRGBColorInPercentGreen concode_elem_sep void goodColorTests concode_elem_sep void testGetRGBColorChannelsMissingRed concode_elem_sep void testGetRGBColorChannelsMissingGreen concode_elem_sep void badColorTests concode_elem_sep void testGetRGBColorNegativeValue"}
{"code": "int function ( ) { int loc0 ; loc0 = ring . hashCode ( ) ; return loc0 ; }", "nl": "hash code for this quotient ring . concode_field_sep RingFactory<C> ring concode_elem_sep boolean debug concode_elem_sep Logger logger concode_field_sep Quotient<C> random concode_elem_sep Quotient<C> random concode_elem_sep boolean isField concode_elem_sep boolean equals concode_elem_sep Quotient<C> getONE concode_elem_sep boolean isCommutative concode_elem_sep Quotient<C> getZERO concode_elem_sep Quotient<C> fromInteger concode_elem_sep Quotient<C> fromInteger concode_elem_sep boolean isAssociative concode_elem_sep String toString concode_elem_sep Quotient<C> parse concode_elem_sep Quotient<C> parse concode_elem_sep Quotient<C> copy concode_elem_sep java.math.BigInteger characteristic"}
{"code": "Set function ( Set arg0 ) { return ListOrderedSet . decorate ( arg0 ) ; }", "nl": "returns a set that maintains the order of elements that are added backed by the given set . if an element is added twice , the order is determined by the first add . the order is observed through the iterator or toarray . concode_field_sep Set EMPTY_SET concode_elem_sep SortedSet EMPTY_SORTED_SET concode_field_sep Set transformedSet concode_elem_sep SortedSet typedSortedSet concode_elem_sep Set synchronizedSet concode_elem_sep SortedSet synchronizedSortedSet concode_elem_sep SortedSet predicatedSortedSet concode_elem_sep Set unmodifiableSet concode_elem_sep boolean isEqualSet concode_elem_sep SortedSet transformedSortedSet concode_elem_sep int hashCodeForSet concode_elem_sep Set predicatedSet concode_elem_sep SortedSet unmodifiableSortedSet concode_elem_sep Set typedSet"}
{"code": "void function ( String arg0 , Double arg1 ) { valid = true ; customMetrics . put ( arg0 , arg1 ) ; }", "nl": "add one metric to this record to be displayed on the custom dashboard . concode_field_sep Map<String,Double> customMetrics concode_elem_sep long timeStamp concode_elem_sep long serialVersionUID concode_elem_sep String name concode_elem_sep boolean valid concode_elem_sep String revision concode_field_sep Map<String,Double> getCustomMetrics concode_elem_sep String getFormattedRecord concode_elem_sep String getName concode_elem_sep long getTimestamp concode_elem_sep boolean isValid concode_elem_sep Double getMetric concode_elem_sep String getRevision"}
{"code": "Iterable < AttributeDefinition > function ( AbstractEntityPersister arg0 ) { return getSingularSubAttributes ( arg0 , arg0 , ( CompositeType ) arg0 . getIdentifierType ( ) , arg0 . getTableName ( ) , arg0 . getRootTableIdentifierColumnNames ( ) ) ; }", "nl": "get composite id sub-attribute definitions . concode_field_sep PlaceHolder placeHolder concode_field_sep Iterable<AttributeDefinition> getCompositeCollectionIndexSubAttributes concode_elem_sep Iterable<AttributeDefinition> getCompositeCollectionElementSubAttributes concode_elem_sep Iterable<AttributeDefinition> getSingularSubAttributes"}
{"code": "boolean function ( ) { return archiveValidation . get ( ) ; }", "nl": "should archive validation be performed concode_field_sep Map<String,CloneableBootstrapContext> bootstrapContexts concode_elem_sep AtomicBoolean archiveValidationFailOnError concode_elem_sep AtomicBoolean beanValidation concode_elem_sep CloneableBootstrapContext defaultBootstrapContext concode_elem_sep AtomicBoolean archiveValidation concode_elem_sep AtomicBoolean archiveValidationFailOnWarn concode_field_sep boolean getBeanValidation concode_elem_sep Map<String,CloneableBootstrapContext> getBootstrapContexts concode_elem_sep void setArchiveValidationFailOnWarn concode_elem_sep void setBootstrapContexts concode_elem_sep void setDefaultBootstrapContext concode_elem_sep boolean getArchiveValidationFailOnWarn concode_elem_sep void setArchiveValidationFailOnError concode_elem_sep CloneableBootstrapContext getDefaultBootstrapContext concode_elem_sep boolean getArchiveValidationFailOnError concode_elem_sep void setTracer concode_elem_sep void setArchiveValidation concode_elem_sep boolean getTracer concode_elem_sep void setBeanValidation"}
{"code": "String function ( ) { String loc0 = null ; if ( isCustomType ( ) ) { loc0 = this . validationLogic == null ? DEFAULTVALIDATIONEXPRESSION : this . validationLogic ; } else { loc0 = this . validationLogic == null ? getPropertyTypeValidationRegex ( ) : this . validationLogic ; } return loc0 ; }", "nl": "the validation logic can either be defined in the property validation logic or as a regex of the property type . this method distincts between those different possibility and returns the actual validation pattern . concode_field_sep PropertyTypeEntity propertyTypeEntity concode_elem_sep String fcExternalKey concode_elem_sep String DEFAULTVALIDATIONEXPRESSION concode_elem_sep String propertyComment concode_elem_sep Integer cardinalityProperty concode_elem_sep boolean nullable concode_elem_sep String validationLogic concode_elem_sep String defaultValue concode_elem_sep String displayName concode_elem_sep boolean testing concode_elem_sep boolean optional concode_elem_sep ForeignableOwner fcOwner concode_elem_sep long serialVersionUID concode_elem_sep String exampleValue concode_elem_sep Comparator<PropertyDescriptorEntity> CARDINALITY_AND_NAME_COMPARATOR concode_elem_sep String propertyName concode_elem_sep String machineInterpretationKey concode_elem_sep boolean encrypt concode_elem_sep long v concode_elem_sep List<PropertyTagEntity> propertyTags concode_elem_sep String fcExternalLink concode_elem_sep Comparator<PropertyDescriptorEntity> NAME_SORTING_COMPARATOR concode_elem_sep Integer id concode_elem_sep Set<PropertyEntity> properties concode_field_sep void setDefaultValue concode_elem_sep int compare concode_elem_sep int compare concode_elem_sep String getExternalKey concode_elem_sep boolean hasTagWithName concode_elem_sep String getExternalLink concode_elem_sep ForeignableOwner getOwner concode_elem_sep Set<String> getPropertyTagsNameSet concode_elem_sep void setExampleValue concode_elem_sep void setOwner concode_elem_sep void setExternalKey concode_elem_sep String getPropertyTypeValidationRegex concode_elem_sep int foreignableFieldHashCode concode_elem_sep void addPropertyTag concode_elem_sep PropertyDescriptorEntity getCopy concode_elem_sep String getForeignableObjectName concode_elem_sep String removeLineBreaks concode_elem_sep Set<PropertyEntity> getProperties concode_elem_sep String getPropertyDescriptorDisplayName concode_elem_sep void addProperty concode_elem_sep List<PropertyTagEntity> getPropertyTags concode_elem_sep boolean isCustomType concode_elem_sep void setPropertyName concode_elem_sep void removePropertyTag concode_elem_sep String toString concode_elem_sep void setExternalLink concode_elem_sep void removeProperty"}
{"code": "void function ( String [ ] arg0 ) { SpringApplication . run ( PriceApplication . class , arg0 ) ; }", "nl": "microservice entry point concode_field_sep PlaceHolder placeHolder concode_field_sep placeholderType placeHolder"}
{"code": "LockMode function ( ) { return lockMode ; }", "nl": "retrieve the overall lock mode in effect for this set of options . in certain contexts hql and criteria , lock-modes can be defined in an even more granular #setaliasspecificlockmode string , lockmode per-alias fashion concode_field_sep Map<String,LockMode> aliasSpecificLockModes concode_elem_sep int NO_WAIT concode_elem_sep LockOptions NONE concode_elem_sep boolean scope concode_elem_sep int SKIP_LOCKED concode_elem_sep LockOptions READ concode_elem_sep LockOptions UPGRADE concode_elem_sep LockMode lockMode concode_elem_sep int timeout concode_elem_sep int WAIT_FOREVER concode_field_sep LockOptions makeCopy concode_elem_sep LockMode getEffectiveLockMode concode_elem_sep int getAliasLockCount concode_elem_sep LockOptions setLockMode concode_elem_sep Iterator getAliasLockIterator concode_elem_sep LockOptions setAliasSpecificLockMode concode_elem_sep LockMode getAliasSpecificLockMode concode_elem_sep LockOptions setTimeOut concode_elem_sep LockMode findGreatestLockMode concode_elem_sep boolean hasAliasSpecificLockModes concode_elem_sep int getTimeOut concode_elem_sep LockOptions copy concode_elem_sep LockOptions setScope concode_elem_sep boolean getScope"}
{"code": "int function ( ) { return declaringClass . hashCode ( ) ^ nameAndType . hashCode ( ) ; }", "nl": "hash the member reference . concode_field_sep NameAndType nameAndType concode_elem_sep Type declaringClass concode_field_sep NameAndType nameAndType concode_elem_sep boolean equals concode_elem_sep String name concode_elem_sep String toString concode_elem_sep Type type concode_elem_sep Type declaringClass"}
{"code": "LoggerFactory function ( ) { return myself ; }", "nl": "returns the loggerfactory concode_field_sep Logger logger concode_elem_sep LoggerFactory myself concode_field_sep void setLogger concode_elem_sep Logger logger concode_elem_sep Logger getLogger concode_elem_sep Logger getLogger"}
{"code": "XMLParser function ( final String arg0 ) { this . memory . current ( ) . append ( arg0 ) ; return this ; }", "nl": "appends the given string to the buffer . concode_field_sep String text concode_elem_sep Charset charset concode_elem_sep StateController controller concode_elem_sep XMLParserMemory memory concode_elem_sep List<XMLParserListener> listeners concode_elem_sep TagState tagState concode_elem_sep ParserMonitor monitor concode_elem_sep State state concode_field_sep XMLParserMemory memory concode_elem_sep void startElement concode_elem_sep InputStreamReader detectEncoding concode_elem_sep char currentLastChar concode_elem_sep XMLParser removeListener concode_elem_sep void parse concode_elem_sep void parse concode_elem_sep void parse concode_elem_sep void parse concode_elem_sep Charset getCharset concode_elem_sep TagState currentTagState concode_elem_sep void currentTagState concode_elem_sep String current concode_elem_sep void endElement concode_elem_sep void flush concode_elem_sep void parseWithReader concode_elem_sep void unknownData concode_elem_sep String currentTag concode_elem_sep void setMonitor concode_elem_sep String bufferToString concode_elem_sep void setState concode_elem_sep void comment concode_elem_sep StateController selectState concode_elem_sep void text concode_elem_sep void callText concode_elem_sep XMLParser addListener concode_elem_sep int bufferSize"}
{"code": "boolean function ( ) { return myList != null ; }", "nl": "isvalidnode returns true if this node is valid ; false otherwise . by default , an invalid node is one that does n't belong to a list mylist is null , but subclasses can override this definition . concode_field_sep Object item concode_elem_sep List myList concode_field_sep ListNode next concode_elem_sep Object item concode_elem_sep ListNode prev concode_elem_sep void setItem concode_elem_sep void insertAfter concode_elem_sep void remove concode_elem_sep void insertBefore"}
{"code": "ConsoleLoggerModule function ( ) { if ( ConsoleLoggerModule . singleton == null ) { ConsoleLoggerModule . singleton = new ConsoleLoggerModule ( ) ; } return ConsoleLoggerModule . singleton ; }", "nl": "static method to get single instance of class concode_field_sep Logger LOGGER concode_elem_sep PrintStream error concode_elem_sep PrintStream output concode_elem_sep ConsoleLoggerModule singleton concode_field_sep void unprepare concode_elem_sep ConsoleLoggerModule prepare concode_elem_sep void printErrorString concode_elem_sep void printString"}
{"code": "void function ( ) { AppServerRelationHierarchyEntity loc0 = new AppServerRelationHierarchyEntity ( ) ; entity . setParentRelation ( loc0 ) ; entity . getApplicationServer ( ) ; }", "nl": "there is no relation defined in the uppermost hierarchy instance - this is an inconsistency and shall result in a runtime exception concode_field_sep AppServerRelationHierarchyEntity entity concode_field_sep void testRefersToRelationResourceRelationTypeEntity concode_elem_sep void testSetRelationResourceRelationTypeEntity concode_elem_sep void testRefersToRelationConsumedResourceRelationEntity concode_elem_sep void testGetApplicationServer1Step concode_elem_sep void testGetRelationConsumed concode_elem_sep void testGetApplicationServerNullAS concode_elem_sep void testSetRelationResourceRelationTypeEntityOverwritten concode_elem_sep void testGetApplicationServer2Step concode_elem_sep void setUp concode_elem_sep void testSetRelationConsumedResourceRelationEntity concode_elem_sep void testGetRelease concode_elem_sep void testGetRelationType concode_elem_sep void testGetApplicationServerDirect concode_elem_sep void testGetApplicationServerNOKWrongRelationType"}
{"code": "T [ ] function ( T [ ] arg0 , T [ ] arg1 ) { return ArrayTool . transferValues ( arg0 , arg1 , 0 , arg1 . length ) ; }", "nl": "transfers from right to left concode_field_sep PlaceHolder placeHolder concode_field_sep void swap concode_elem_sep void swap"}
{"code": "boolean function ( String arg0 , boolean arg1 ) { return updateClientMembership ( PREF_COLLAPSED_CLIENT_GUIDS , collapsedClients , arg0 , arg1 ) ; }", "nl": "mark a client as collapsed . concode_field_sep String selectedClient concode_elem_sep String PREF_COLLAPSED_CLIENT_GUIDS concode_elem_sep SharedPreferences sharedPrefs concode_elem_sep String PREF_HIDDEN_CLIENT_GUIDS concode_elem_sep Set<String> collapsedClients concode_elem_sep Set<String> hiddenClients concode_elem_sep String PREF_SELECTED_CLIENT_GUID concode_field_sep boolean updateClientMembership concode_elem_sep boolean isClientCollapsed concode_elem_sep boolean setClientHidden concode_elem_sep void setClientAsSelected concode_elem_sep boolean isClientHidden concode_elem_sep Set<String> getStringSet"}
{"code": "USAddress function ( ) { return billTo ; }", "nl": "gets the value of the billto property . concode_field_sep USAddress billTo concode_elem_sep String comment concode_elem_sep Items items concode_elem_sep XMLGregorianCalendar orderDate concode_elem_sep USAddress shipTo concode_field_sep Items getItems concode_elem_sep USAddress getShipTo concode_elem_sep void setBillTo concode_elem_sep void setItems concode_elem_sep void setOrderDate concode_elem_sep void setComment concode_elem_sep XMLGregorianCalendar getOrderDate concode_elem_sep String getComment concode_elem_sep void setShipTo"}
{"code": "Sentence function ( ) { return sentence ; }", "nl": "get sentence containing the error . concode_field_sep Sentence sentence concode_elem_sep long serialVersionUID concode_elem_sep LineOffset endPosition concode_elem_sep String validatorName concode_elem_sep String message concode_elem_sep LineOffset startPosition concode_field_sep Optional<LineOffset> getStartPosition concode_elem_sep int getLineNumber concode_elem_sep String getValidatorName concode_elem_sep String getMessage concode_elem_sep Optional<LineOffset> getEndPosition concode_elem_sep String toString concode_elem_sep int getStartColumnNumber"}
{"code": "String function ( Integer arg0 ) { String loc0 = JDBC_TYPE_MAP . get ( arg0 ) ; if ( loc0 == null ) { return \"srini_string\" + arg0 + \"srini_string\" ; } return loc0 ; }", "nl": "get the type name as in the static field names defined on java.sql.types . if a type code is not recognized , it is reported as unknown ? where ' ? ' is replace with the given type code.intended as useful for logging purposes ... concode_field_sep CoreMessageLogger LOG concode_elem_sep Map<Integer,String> JDBC_TYPE_MAP concode_field_sep Map<Integer,String> buildJdbcTypeMap concode_elem_sep boolean isStandardTypeCode concode_elem_sep boolean isStandardTypeCode"}
{"code": "boolean function ( ) { return Platform . isWindows ( ) || Platform . isOSX ( ) ; }", "nl": "returns whether there may be some scenarios in which the robot does not function properly . concode_field_sep boolean gotBug1Event concode_elem_sep java.util.ArrayList bugList concode_field_sep boolean fileDialogRequiresDismiss concode_elem_sep boolean hasHierarchyEventGenerationBug concode_elem_sep boolean hasKeyStrokeGenerationBug concode_elem_sep String[] bugCheck concode_elem_sep boolean hasRobotMotionBug concode_elem_sep boolean reportsIncorrectLockingKeyState concode_elem_sep boolean fileDialogMisreportsBounds concode_elem_sep boolean hasMenuDisableBug concode_elem_sep boolean hasInputMethodInsteadOfKeyTyped concode_elem_sep boolean hasMissingWindowMouseMotion concode_elem_sep boolean hasEscapeGenerationBug concode_elem_sep boolean showAWTPopupMenuBlocks concode_elem_sep boolean hasChoiceLockupBug concode_elem_sep boolean hasRobotButtonsSwapped concode_elem_sep boolean hasKeyInputDelay concode_elem_sep boolean hasFrameDeiconifyBug concode_elem_sep boolean dragDropRequiresNativeEvents concode_elem_sep boolean hasTextComponentSelectionDelay concode_elem_sep boolean hasMultiClickFrameBug concode_elem_sep boolean fileDialogRequiresVisibleFrame"}
{"code": "boolean function ( Object arg0 , Object arg1 ) { if ( arg0 == null ) { return arg1 == null ; } if ( arg1 == null ) { return false ; } return ( arg0 . equals ( arg1 ) ) ; }", "nl": "if both parameters are null , returns true . if one parameter is null and the other is n't , returns false . otherwise , returns o1.equals o2 . concode_field_sep String newLine concode_field_sep String convertToHexString concode_elem_sep String hangingParagraph concode_elem_sep boolean iff concode_elem_sep String toNColsStr concode_elem_sep int occurCount concode_elem_sep boolean implies concode_elem_sep String createArgListJVML concode_elem_sep List<String> toNCols concode_elem_sep boolean isJavaIdentifier"}
{"code": "Object [ ] function ( Object [ ] arg0 ) { return extractList ( ) . toArray ( arg0 ) ; }", "nl": "returns an array of all of this bag 's elements . concode_field_sep Object _current concode_elem_sep int _total concode_elem_sep DefaultMapBag _parent concode_elem_sep Map _map concode_elem_sep int _mods concode_elem_sep Iterator _support concode_field_sep boolean add concode_elem_sep boolean add concode_elem_sep Object next concode_elem_sep boolean containsAll concode_elem_sep boolean containsAll concode_elem_sep void clear concode_elem_sep boolean isEmpty concode_elem_sep boolean hasNext concode_elem_sep void remove concode_elem_sep boolean remove concode_elem_sep boolean remove concode_elem_sep Map getMap concode_elem_sep int modCount concode_elem_sep boolean contains concode_elem_sep Iterator iterator concode_elem_sep boolean removeAll concode_elem_sep int size concode_elem_sep boolean addAll concode_elem_sep int hashCode concode_elem_sep int calcTotalSize concode_elem_sep boolean equals concode_elem_sep Set uniqueSet concode_elem_sep void setMap concode_elem_sep String toString concode_elem_sep int getCount concode_elem_sep List extractList concode_elem_sep boolean retainAll concode_elem_sep boolean retainAll"}
{"code": "void function ( IProblemChangedListener arg0 ) { if ( fListeners . isEmpty ( ) ) { JavaPlugin . getWorkspace ( ) . addResourceChangeListener ( this ) ; JavaPlugin . getDefault ( ) . getCompilationUnitDocumentProvider ( ) . addGlobalAnnotationModelListener ( this ) ; } fListeners . add ( arg0 ) ; }", "nl": "adds a listener for problem marker changes . concode_field_sep Set<IResource> fResourcesWithAnnotationChanges concode_elem_sep HashSet<IResource> fChangedElements concode_elem_sep ListenerList<IProblemChangedListener> fListeners concode_elem_sep UIJob fNotifierJob concode_elem_sep Set<IResource> fResourcesWithMarkerChanges concode_field_sep void checkInvalidate concode_elem_sep void resourceChanged concode_elem_sep void modelChanged concode_elem_sep void modelChanged concode_elem_sep boolean isErrorDelta concode_elem_sep boolean visit concode_elem_sep void removeListener concode_elem_sep void fireChanges concode_elem_sep void postAsyncUpdate concode_elem_sep void runPendingUpdates"}
{"code": "Timeout function ( long arg0 ) { Assert . assertTrue ( arg0 > 0 ) ; synchronized ( fMutex ) { switch ( fState ) { case STOPPED : startThread ( ) ; setNextTimeout ( arg0 ) ; break ; case IDLE : unhold ( ) ; setNextTimeout ( arg0 ) ; break ; default : break ; } return fCurrentTimeoutState ; } }", "nl": "starts the timeout thread if it is not currently running . nothing happens if a thread is already running . concode_field_sep Thread fCurrentThread concode_elem_sep Timeout fCurrentTimeoutState concode_elem_sep int IDLE concode_elem_sep Display fDisplay concode_elem_sep Object fMutex concode_elem_sep boolean fTimeoutState concode_elem_sep long fNextTimeout concode_elem_sep boolean fKeepRunningOnTimeout concode_elem_sep int fState concode_elem_sep int RUNNING concode_elem_sep int STOPPED concode_field_sep Timeout restart concode_elem_sep void hold concode_elem_sep boolean tryTransition concode_elem_sep void setNextTimeout concode_elem_sep void stop concode_elem_sep boolean isState concode_elem_sep boolean hasTimedOut concode_elem_sep String name concode_elem_sep void checkedTransition concode_elem_sep void startThread concode_elem_sep void assertStates concode_elem_sep void setTimedOut concode_elem_sep void unhold"}
{"code": "void function ( String arg0 , String arg1 ) { if ( m_context != null ) m_context . registerTagLibrary ( arg0 , arg1 ) ; }", "nl": "registers the given tag library class name against the given namespace uri . the class will be loaded via the given classloader this should be called before the parser is used . concode_field_sep InputStream m_inputStream concode_elem_sep Exception m_scriptCompilationException concode_elem_sep Log log concode_elem_sep Jelly m_jellyEngine concode_elem_sep XMLOutput m_output concode_elem_sep Script m_script concode_elem_sep OutputStream m_outputStream concode_elem_sep boolean m_scriptCompiled concode_elem_sep String m_errorMsg concode_elem_sep JellyContext m_context concode_field_sep void setErrorMsg concode_elem_sep void setOutputStream concode_elem_sep void setContext concode_elem_sep void compileScriptAndKeep concode_elem_sep void setVariable concode_elem_sep URL resolveURL concode_elem_sep JellyContext getContext concode_elem_sep boolean execute concode_elem_sep void setScript concode_elem_sep void setScript concode_elem_sep String getErrorMsg"}
{"code": "PrintableResult function ( Class < ? > arg0 ) { return testResult ( Request . aClass ( arg0 ) ) ; }", "nl": "the result of running junit on type concode_field_sep Result result concode_field_sep String toString concode_elem_sep int failureCount"}
{"code": "void function ( String arg0 ) { fireJavaScriptEvent ( \"srini_string\" , mpl . getPaymentResults ( \"srini_string\" , \"srini_string\" , \"srini_string\" ) ) ; }", "nl": "notification that the payment was canceled . concode_field_sep long serialVersionUID concode_field_sep void fireJavaScriptEvent concode_elem_sep void onPaymentSucceeded concode_elem_sep void onPaymentFailed"}
{"code": "boolean function ( ) { return isDebugging ; }", "nl": "return true if debugging is enabled . concode_field_sep PrintWriter sysOut concode_elem_sep ILog log concode_elem_sep boolean isDebugging concode_field_sep void setLog concode_elem_sep void trace concode_elem_sep void trace concode_elem_sep void setDebugging concode_elem_sep boolean isTracing concode_elem_sep void traceSleep concode_elem_sep void close"}
{"code": "ExecutionDataStore function ( ) { return executionData ; }", "nl": "returns the execution data store with data for all loaded classes . concode_field_sep SessionInfoStore sessionInfos concode_elem_sep ExecutionDataStore executionData concode_field_sep void load concode_elem_sep void load concode_elem_sep SessionInfoStore getSessionInfoStore concode_elem_sep void save concode_elem_sep void save"}
{"code": "boolean function ( ) { return getFirstHeader ( HeaderConstants . VARY ) != null ; }", "nl": "indicates whether the origin response indicated the associated resource had variants i.e. that the vary header was set on the origin response . concode_field_sep Date date concode_elem_sep Map<String,String> variantMap concode_elem_sep StatusLine statusLine concode_elem_sep HeaderGroup responseHeaders concode_elem_sep Resource resource concode_elem_sep Date requestDate concode_elem_sep long serialVersionUID concode_elem_sep Date responseDate concode_field_sep Resource getResource concode_elem_sep Header[] getHeaders concode_elem_sep Header getFirstHeader concode_elem_sep Header[] getAllHeaders concode_elem_sep Map<String,String> getVariantMap concode_elem_sep String getReasonPhrase concode_elem_sep ProtocolVersion getProtocolVersion concode_elem_sep Date getResponseDate concode_elem_sep Date parseDate concode_elem_sep int getStatusCode concode_elem_sep StatusLine getStatusLine concode_elem_sep Date getDate concode_elem_sep String toString concode_elem_sep Date getRequestDate"}
{"code": "String function ( String arg0 ) { return \"srini_string\" + arg0 ; }", "nl": "get an issue title for the phenotype with the name given . concode_field_sep String LABEL_SUFFIX concode_elem_sep Joiner JOINER concode_elem_sep String ETAG concode_elem_sep String BODY_FORMAT concode_elem_sep String body concode_elem_sep String title concode_elem_sep Pattern BODY_PATTERN concode_elem_sep List<Label> labels concode_elem_sep String NEW_LINE concode_elem_sep int number concode_elem_sep Pattern ETAG_PATTERN concode_elem_sep Pattern LABEL_PATTERN concode_elem_sep Splitter SPLITTER concode_elem_sep String state concode_field_sep Map<String,String> getRequestParams concode_elem_sep String getBody concode_elem_sep void readEtag concode_elem_sep Phenotype asPhenotype concode_elem_sep void setTitle concode_elem_sep void setBody concode_elem_sep void setNumber concode_elem_sep Phenotype.Status getPTStatus concode_elem_sep int getNumber concode_elem_sep List<Label> getLabels concode_elem_sep String getState concode_elem_sep String getTitle concode_elem_sep void setState concode_elem_sep String describe concode_elem_sep void setLabels"}
{"code": "void function ( final AbstractNodeFactory arg0 ) { nodeFactory = arg0 ; }", "nl": "sets the currently used node factory . concode_field_sep KademliaSetup singleton concode_elem_sep WorkloadGenerator workloadGen concode_elem_sep Logger log concode_elem_sep AbstractNodeFactory nodeFactory concode_elem_sep KademliaMonitor monitor concode_elem_sep Config config concode_field_sep WorkloadGenerator getWorkloadGenerator concode_elem_sep void setMonitor concode_elem_sep void setWorkload concode_elem_sep KademliaMonitor getMonitor concode_elem_sep AbstractNodeFactory getNodeFactory concode_elem_sep KademliaSetup getInstance concode_elem_sep void setConfigPath concode_elem_sep Config getConfig concode_elem_sep void setConfig"}
{"code": "EntityBuilder function ( final NameValuePair ... arg0 ) { return setParameters ( Arrays . asList ( arg0 ) ) ; }", "nl": "sets entity content as a parameter list . this method is mutually exclusive with #settext string , #setbinary byte , #setstream java.io.inputstream , #setserializable java.io.serializable , #setfile java.io.file methods . concode_field_sep File file concode_elem_sep boolean gzipCompress concode_elem_sep InputStream stream concode_elem_sep byte[] binary concode_elem_sep String contentEncoding concode_elem_sep boolean chunked concode_elem_sep String text concode_elem_sep List<NameValuePair> parameters concode_elem_sep Serializable serializable concode_elem_sep ContentType contentType concode_field_sep EntityBuilder setBinary concode_elem_sep String getContentEncoding concode_elem_sep boolean isGzipCompress concode_elem_sep EntityBuilder setStream concode_elem_sep String getText concode_elem_sep void clearContent concode_elem_sep EntityBuilder setContentEncoding concode_elem_sep EntityBuilder chunked concode_elem_sep EntityBuilder setSerializable concode_elem_sep File getFile concode_elem_sep Serializable getSerializable concode_elem_sep EntityBuilder setFile concode_elem_sep boolean isChunked concode_elem_sep EntityBuilder gzipCompress concode_elem_sep HttpEntity build concode_elem_sep List<NameValuePair> getParameters concode_elem_sep EntityBuilder create concode_elem_sep ContentType getContentType concode_elem_sep ContentType getContentOrDefault concode_elem_sep byte[] getBinary concode_elem_sep InputStream getStream concode_elem_sep EntityBuilder setContentType concode_elem_sep EntityBuilder setText"}
{"code": "Bin function ( String arg0 ) { return _binsByUri . get ( arg0 ) ; }", "nl": "returns the memory bin for the given uri for external use . concode_field_sep int _pageSize concode_elem_sep int DEFAULT_PAGESIZE concode_elem_sep Map<String,Bin> _binsByUri concode_field_sep Bin produceBin concode_elem_sep void rename concode_elem_sep boolean exists concode_elem_sep void delete concode_elem_sep Bin open"}
{"code": "void function ( IReconcilingStrategy [ ] arg0 ) { fStrategies = arg0 ; }", "nl": "sets the reconciling strategies for this composite strategy . concode_field_sep IReconcilingStrategy[] fStrategies concode_field_sep void reconcile concode_elem_sep void reconcile concode_elem_sep void setDocument concode_elem_sep void setProgressMonitor concode_elem_sep IReconcilingStrategy[] getReconcilingStrategies concode_elem_sep void initialReconcile"}
{"code": "List < Application > function ( ) { if ( applications == null ) { applications = new ArrayList < Application > ( ) ; } return this . applications ; }", "nl": "gets the value of the applications property . this accessor method returns a reference to the live list , not a snapshot . therefore any modification you make to the returned list will be present inside the jaxb object . this is why there is not a set method for the applications property . for example , to add a new item , do as follows : getapplications . add newitem ; objects of the following type s are allowed in the list application concode_field_sep List<ApplicationPredecessorRelation> applicationPredecessors concode_elem_sep List<ApplicationID> removedApplications concode_elem_sep List<Application> applications concode_field_sep List<ApplicationID> getRemovedApplications concode_elem_sep List<ApplicationPredecessorRelation> getApplicationPredecessors"}
{"code": "void function ( long arg0 ) { in . seek ( arg0 ) ; blockCount = 0 ; blockStart = arg0 ; vin = DecoderFactory . get ( ) . binaryDecoder ( in , vin ) ; }", "nl": "move to the specified synchronization point , as returned by datafilewriter #sync . concode_field_sep byte[] MAGIC concode_elem_sep String CODEC concode_elem_sep Schema schema concode_elem_sep long blockCount concode_elem_sep int SYNC_SIZE concode_elem_sep String SYNC concode_elem_sep DataFileReader.SeekableInputStream in concode_elem_sep DatumReader<D> reader concode_elem_sep long count concode_elem_sep byte[] sync concode_elem_sep String SCHEMA concode_elem_sep Map<String,byte[]> meta concode_elem_sep D peek concode_elem_sep long blockStart concode_elem_sep byte VERSION concode_elem_sep byte[] syncBuffer concode_elem_sep String COUNT concode_elem_sep long FOOTER_BLOCK concode_elem_sep BinaryDecoder vin concode_elem_sep String NULL_CODEC concode_elem_sep int SYNC_INTERVAL concode_field_sep D next concode_elem_sep D next concode_elem_sep long tell concode_elem_sep String getMetaString concode_elem_sep long getMetaLong concode_elem_sep boolean hasNext concode_elem_sep boolean pastSync concode_elem_sep void sync concode_elem_sep void remove concode_elem_sep Schema getSchema concode_elem_sep Iterator<D> iterator concode_elem_sep byte[] getMeta concode_elem_sep void skipSync concode_elem_sep void close"}
{"code": "int function ( ) { return readExpGolombCodeNum ( ) ; }", "nl": "reads an unsigned exp-golomb-coded format integer . concode_field_sep byte[] data concode_elem_sep int byteOffset concode_elem_sep int bitOffset concode_elem_sep int byteLimit concode_field_sep int bitsLeft concode_elem_sep boolean readBit concode_elem_sep int getPosition concode_elem_sep int readExpGolombCodeNum concode_elem_sep void assertValidOffset concode_elem_sep void reset concode_elem_sep void reset concode_elem_sep int readSignedExpGolombCodedInt concode_elem_sep int peekExpGolombCodedNumLength concode_elem_sep void skipBits concode_elem_sep void setPosition concode_elem_sep int readBits"}
{"code": "int function ( ReadableInstant arg0 ) { if ( this == arg0 ) { return 0 ; } long loc0 = arg0 . getMillis ( ) ; long loc1 = getMillis ( ) ; if ( loc1 == loc0 ) { return 0 ; } if ( loc1 < loc0 ) { return - 1 ; } else { return 1 ; } }", "nl": "compares this object with the specified object for ascending millisecond instant order . this ordering is inconsistent with equals , as it ignores the chronology . all readableinstant instances are accepted . concode_field_sep PlaceHolder placeHolder concode_field_sep MutableDateTime toMutableDateTime concode_elem_sep MutableDateTime toMutableDateTime concode_elem_sep MutableDateTime toMutableDateTime concode_elem_sep Date toDate concode_elem_sep boolean isEqual concode_elem_sep boolean isEqual concode_elem_sep DateTimeZone getZone concode_elem_sep boolean isSupported concode_elem_sep boolean isBeforeNow concode_elem_sep Instant toInstant concode_elem_sep boolean isBefore concode_elem_sep boolean isBefore concode_elem_sep boolean isEqualNow concode_elem_sep MutableDateTime toMutableDateTimeISO concode_elem_sep DateTime toDateTimeISO concode_elem_sep int hashCode concode_elem_sep int get concode_elem_sep int get concode_elem_sep boolean equals concode_elem_sep String toString concode_elem_sep String toString concode_elem_sep boolean isAfter concode_elem_sep boolean isAfter concode_elem_sep DateTime toDateTime concode_elem_sep DateTime toDateTime concode_elem_sep DateTime toDateTime concode_elem_sep boolean isAfterNow"}
{"code": "boolean function ( ) { return ( Platform . isOSX ( ) && Platform . JAVA_VERSION <= 0x1425 ) || ( Platform . isWindows ( ) && Platform . JAVA_VERSION <= Platform . JAVA_1_5 ) ; }", "nl": "returns whether a java.awt.filedialog misreports its screenlocation . concode_field_sep boolean gotBug1Event concode_elem_sep java.util.ArrayList bugList concode_field_sep boolean fileDialogRequiresDismiss concode_elem_sep boolean hasHierarchyEventGenerationBug concode_elem_sep boolean hasKeyStrokeGenerationBug concode_elem_sep String[] bugCheck concode_elem_sep boolean hasRobotMotionBug concode_elem_sep boolean reportsIncorrectLockingKeyState concode_elem_sep boolean needsRobotVerification concode_elem_sep boolean hasMenuDisableBug concode_elem_sep boolean hasInputMethodInsteadOfKeyTyped concode_elem_sep boolean hasMissingWindowMouseMotion concode_elem_sep boolean hasEscapeGenerationBug concode_elem_sep boolean showAWTPopupMenuBlocks concode_elem_sep boolean hasChoiceLockupBug concode_elem_sep boolean hasRobotButtonsSwapped concode_elem_sep boolean hasKeyInputDelay concode_elem_sep boolean hasFrameDeiconifyBug concode_elem_sep boolean dragDropRequiresNativeEvents concode_elem_sep boolean hasTextComponentSelectionDelay concode_elem_sep boolean hasMultiClickFrameBug concode_elem_sep boolean fileDialogRequiresVisibleFrame"}
{"code": "AST function ( AST arg0 ) { AST loc0 = null ; while ( arg0 != null ) { loc0 = arg0 ; arg0 = arg0 . getNextSibling ( ) ; } return loc0 ; }", "nl": "returns the last sibling of ` a ' . concode_field_sep FilterPredicate predicate concode_elem_sep List collectedNodes concode_field_sep AST findTypeInChildren concode_elem_sep AST findPreviousSibling concode_elem_sep String getPathText concode_elem_sep void getPathText concode_elem_sep String getTokenTypeName concode_elem_sep boolean isSubtreeChild concode_elem_sep String getDebugString concode_elem_sep List getCollectedNodes concode_elem_sep Integer extractIntegerValue concode_elem_sep AST create concode_elem_sep AST createParent concode_elem_sep String getConstantName concode_elem_sep boolean exclude concode_elem_sep boolean exclude concode_elem_sep AST createBinarySubtree concode_elem_sep boolean include concode_elem_sep Map generateTokenNameCache concode_elem_sep void appendSibling concode_elem_sep ASTArray createAstArray concode_elem_sep AST createTree concode_elem_sep void insertChild concode_elem_sep List collectChildren concode_elem_sep AST getLastChild concode_elem_sep void makeSiblingOfParent concode_elem_sep void visit concode_elem_sep boolean hasExactlyOneChild concode_elem_sep AST insertSibling concode_elem_sep List collect concode_elem_sep AST createSibling"}
{"code": "long function ( ) { return locallyHeldMemory . get ( ) ; }", "nl": "return the current amount of allocated memory that this accountant is managing accounting for . note this does not include reservation memory that has n't been allocated . concode_field_sep Accountant parent concode_elem_sep AtomicLong allocationLimit concode_elem_sep AtomicLong peakAllocation concode_elem_sep long reservation concode_elem_sep boolean ok concode_elem_sep AtomicLong locallyHeldMemory concode_field_sep void releaseBytes concode_elem_sep void updatePeak concode_elem_sep AllocationOutcome allocateBytes concode_elem_sep boolean forceAllocate concode_elem_sep AllocationOutcome allocate concode_elem_sep long getLimit concode_elem_sep void setLimit concode_elem_sep long getPeakMemoryAllocation concode_elem_sep boolean isOk concode_elem_sep void close concode_elem_sep boolean isOverLimit"}
{"code": "PropertyMapping function ( String arg0 ) { return collectionPropertyMappingByRole . get ( arg0 ) ; }", "nl": "retrieve a propertymapping describing the given collection role . concode_field_sep SessionFactoryImplementor sfi concode_elem_sep Map<String,PropertyMapping> collectionPropertyMappingByRole concode_field_sep QueryableCollection getCollectionPersister concode_elem_sep Type getElementType concode_elem_sep JoinSequence createJoinSequence concode_elem_sep JoinSequence createJoinSequence concode_elem_sep Type findFunctionReturnType concode_elem_sep Type findFunctionReturnType concode_elem_sep AssociationType getElementAssociationType concode_elem_sep String getImportedClassName concode_elem_sep SQLFunction requireSQLFunction concode_elem_sep SessionFactoryImplementor getFactory concode_elem_sep boolean hasPhysicalDiscriminatorColumn concode_elem_sep EntityPersister requireClassPersister concode_elem_sep QueryableCollection requireQueryableCollection concode_elem_sep String[] getCollectionElementColumns concode_elem_sep String[][] generateColumnNames concode_elem_sep String getIdentifierOrUniqueKeyPropertyName concode_elem_sep int getColumnSpan concode_elem_sep String getAssociatedEntityName concode_elem_sep JoinSequence createCollectionJoinSequence concode_elem_sep Queryable findQueryableUsingImports concode_elem_sep Queryable findQueryableUsingImports concode_elem_sep boolean isStrictJPAQLComplianceEnabled concode_elem_sep EntityPersister findEntityPersisterByName concode_elem_sep SQLFunction findSQLFunction"}
{"code": "IInformationControlCreator function ( ) { return new IInformationControlCreator ( ) { @ Override public IInformationControl createInformationControl ( Shell arg0 ) { return new DefaultInformationControl ( arg0 , true ) ; } } ; }", "nl": "delegate method for javainformationprovider #getinformationpresentercontrolcreator concode_field_sep IEditorPart fEditor concode_field_sep IEditorPart getEditor concode_elem_sep IJavaElement[] getJavaElementsAt concode_elem_sep boolean isInheritDoc concode_elem_sep IRegion getHoverRegion concode_elem_sep void setEditor concode_elem_sep IInformationControlCreator getHoverControlCreator concode_elem_sep Object getHoverInfo2 concode_elem_sep ITypeRoot getEditorInputJavaElement concode_elem_sep ICodeAssist getCodeAssist"}
{"code": "boolean function ( int arg0 , LocalAssignment arg1 ) { PortNAssignment loc0 = new PortNAssignment ( arg0 , arg1 ) ; boolean loc1 = _references . remove ( loc0 ) ; if ( loc1 && _references . isEmpty ( ) ) { _isDone = true ; } return loc1 ; }", "nl": "release a port from the reference count , and update isdone if all is done . concode_field_sep Logger LOG concode_elem_sep LocalAssignment _assignment concode_elem_sep Future<Void> _pending concode_elem_sep boolean _isDone concode_elem_sep Set<PortNAssignment> _references concode_elem_sep Future<T> _wrapped concode_elem_sep int _port concode_field_sep boolean cancel concode_elem_sep boolean isCancelled concode_elem_sep int hashCode concode_elem_sep T get concode_elem_sep T get concode_elem_sep boolean equals concode_elem_sep Future<Void> reserve concode_elem_sep String toString concode_elem_sep String toString concode_elem_sep boolean isDone concode_elem_sep boolean isDone"}
{"code": "BaseColor function ( ) { return currentTextColor ; }", "nl": "getter for property currenttextcolor . concode_field_sep int OPAQUE concode_elem_sep int TA_LEFT concode_elem_sep int TA_BASELINE concode_elem_sep ArrayList<MetaObject> MetaObjects concode_elem_sep int TA_TOP concode_elem_sep int TA_BOTTOM concode_elem_sep int TA_UPDATECP concode_elem_sep int TA_RIGHT concode_elem_sep int extentWy concode_elem_sep int extentWx concode_elem_sep int WINDING concode_elem_sep BaseColor currentTextColor concode_elem_sep int offsetWx concode_elem_sep int textAlign concode_elem_sep int offsetWy concode_elem_sep MetaFont currentFont concode_elem_sep float scalingX concode_elem_sep int lineJoin concode_elem_sep BaseColor currentBackgroundColor concode_elem_sep float scalingY concode_elem_sep int TA_CENTER concode_elem_sep int backgroundMode concode_elem_sep Point currentPoint concode_elem_sep int TA_NOUPDATECP concode_elem_sep int polyFillMode concode_elem_sep MetaBrush currentBrush concode_elem_sep int ALTERNATE concode_elem_sep MetaPen currentPen concode_elem_sep Stack<MetaState> savedStates concode_elem_sep int TRANSPARENT concode_field_sep void restoreState concode_elem_sep void addMetaObject concode_elem_sep void saveState concode_elem_sep int getTextAlign concode_elem_sep int getBackgroundMode concode_elem_sep MetaPen getCurrentPen concode_elem_sep void setCurrentBackgroundColor concode_elem_sep void setMetaState concode_elem_sep MetaBrush getCurrentBrush concode_elem_sep void setBackgroundMode concode_elem_sep void setOffsetWy concode_elem_sep MetaFont getCurrentFont concode_elem_sep void setOffsetWx concode_elem_sep void setLineJoinRectangle concode_elem_sep void setScalingY concode_elem_sep float transformAngle concode_elem_sep void setScalingX concode_elem_sep BaseColor getCurrentBackgroundColor concode_elem_sep void setPolyFillMode concode_elem_sep float transformY concode_elem_sep float transformX concode_elem_sep int getPolyFillMode concode_elem_sep void setExtentWy concode_elem_sep void deleteMetaObject concode_elem_sep void setExtentWx concode_elem_sep Point getCurrentPoint concode_elem_sep void setTextAlign concode_elem_sep void setCurrentPoint concode_elem_sep void setLineJoinPolygon concode_elem_sep boolean getLineNeutral concode_elem_sep void setCurrentTextColor concode_elem_sep void selectMetaObject concode_elem_sep void cleanup"}
{"code": "List < ResourceEntity > function ( ResourceEntity arg0 ) { if ( arg0 . getId ( ) != null ) { return entityManager . createQuery ( \"srini_string\" , ResourceEntity . class ) . setParameter ( \"srini_string\" , arg0 . getSoftlinkId ( ) ) . getResultList ( ) ; } return Collections . emptyList ( ) ; }", "nl": "returns cpi resources which reference consume a given ppi resource concode_field_sep EntityManager entityManager concode_elem_sep Logger log concode_elem_sep long serialVersionUID concode_elem_sep ResourceDependencyResolverService dependencyResolverService concode_field_sep void setSoftlinkRelation concode_elem_sep SoftlinkRelationEntity getSoftLinkRelationByCpiAndSoftlinkRef concode_elem_sep void removeSoftlinkRelation concode_elem_sep List<SoftlinkRelationEntity> getSoftlinksForCpi concode_elem_sep ResourceEntity getSoftlinkResolvableSlaveResource"}
{"code": "void function ( final String arg0 ) { dataQuality = new HashMap < Integer , DataLookupQuality > ( ) ; FileReader loc0 = new FileReader ( arg0 ) ; BufferedReader loc1 = new BufferedReader ( loc0 ) ; String loc2 = null ; DataLookupQuality loc3 ; loc1 . readLine ( ) ; while ( ( loc2 = loc1 . readLine ( ) ) != null ) { loc3 = DataLookupQuality . fromString ( loc2 ) ; } }", "nl": "reads data lookup quality information from the given file . concode_field_sep Map<Integer,OpDelay> opDelay concode_elem_sep Map<Integer,DataLookupQuality> dataQuality concode_elem_sep Map<Integer,NodeLookupQuality> nodeQuality concode_elem_sep Map<Integer,OpTraffic> opTraffic concode_field_sep void readOpDelay concode_elem_sep void readOpTraffic concode_elem_sep void readNodeQuality"}
{"code": "List < ByteBuffer > function ( ) { return this . requestPayload ; }", "nl": "returns the serialized payload of the request in this rpc . will only be generated from a requestor and will not include handshake or meta-data . if the request payload has not been set yet , returns null . concode_field_sep Map<String,ByteBuffer> requestCallMeta concode_elem_sep Map<String,ByteBuffer> responseCallMeta concode_elem_sep Object response concode_elem_sep List<ByteBuffer> requestPayload concode_elem_sep List<ByteBuffer> responsePayload concode_elem_sep HandshakeRequest handshakeRequest concode_elem_sep HandshakeResponse handshakeResponse concode_elem_sep Exception error concode_elem_sep Message message concode_field_sep void setResponseCallMeta concode_elem_sep void setRequestHandshakeMeta concode_elem_sep Map<String,ByteBuffer> requestHandshakeMeta concode_elem_sep void setRequestPayload concode_elem_sep void setResponsePayload concode_elem_sep Message getMessage concode_elem_sep void setResponse concode_elem_sep void setResponseHandshakeMeta concode_elem_sep void setRequestCallMeta concode_elem_sep Exception error concode_elem_sep void setMessage concode_elem_sep void setHandshakeRequest concode_elem_sep Map<String,ByteBuffer> responseHandshakeMeta concode_elem_sep Map<String,ByteBuffer> requestCallMeta concode_elem_sep boolean isError concode_elem_sep Map<String,ByteBuffer> responseCallMeta concode_elem_sep HandshakeRequest getHandshakeRequest concode_elem_sep Object response concode_elem_sep void setError concode_elem_sep void setHandshakeResponse concode_elem_sep HandshakeResponse getHandshakeResponse concode_elem_sep List<ByteBuffer> getResponsePayload"}
{"code": "RemoteBuildr function ( ) { return new RemoteBuildr ( ) ; }", "nl": "create and return a remotebuildr instance . concode_field_sep String PROP_WEBTESTS_BROWSER concode_elem_sep String PROP_WEBTESTS_LOCALES concode_elem_sep String PROP_WEBTESTS_HUB_URL concode_field_sep ChromeBuildr chrome concode_elem_sep SafariBuildr safari concode_elem_sep SysPropsBuildr fromSysProps concode_elem_sep WebDriver build concode_elem_sep FirefoxBuildr firefox"}
{"code": "void function ( Iterable4 arg0 ) { removeAll ( arg0 . iterator ( ) ) ; }", "nl": "removes all the elements from this collection that are returned by iterable . concode_field_sep int _size concode_elem_sep List4 _last concode_elem_sep List4 _first concode_elem_sep int _version concode_field_sep void prepend concode_elem_sep void replace concode_elem_sep boolean remove concode_elem_sep Object singleElement concode_elem_sep Iterator4 iterator concode_elem_sep List4 find concode_elem_sep void assertNotNull concode_elem_sep Object get concode_elem_sep Object get concode_elem_sep void replaceByIdentity concode_elem_sep Object[] toArray concode_elem_sep Object[] toArray concode_elem_sep void adjustOnRemoval concode_elem_sep int indexOf concode_elem_sep void doPrepend concode_elem_sep List4 findByIdentity concode_elem_sep boolean add concode_elem_sep void doAdd concode_elem_sep Object ensure concode_elem_sep boolean containsAll concode_elem_sep void clear concode_elem_sep boolean isEmpty concode_elem_sep int version concode_elem_sep boolean contains concode_elem_sep int size concode_elem_sep void addAll concode_elem_sep void addAll concode_elem_sep void addAll concode_elem_sep Object deepClone concode_elem_sep boolean containsByIdentity concode_elem_sep String toString concode_elem_sep Iterator4 internalIterator concode_elem_sep void changed"}
{"code": "void function ( ) { commonTests ( ) ; findHibernateBundle ( \"srini_string\" ) . stop ( ) ; testHibernateBundle ( \"srini_string\" , Bundle . RESOLVED ) ; assertNull ( context . getServiceReference ( OsgiSessionFactoryService . class ) ) ; assertNull ( context . getServiceReference ( OsgiPersistenceProviderService . class ) ) ; }", "nl": "test that stopping the hibernate-osgi bundle happens cleanly . todo : this will be really simplistic at first , but should be expanded upon . concode_field_sep BundleContext context concode_field_sep void testNative concode_elem_sep void commonTests concode_elem_sep void testLazyLoading concode_elem_sep void testClientBundle concode_elem_sep Bundle findHibernateBundle concode_elem_sep void testExtensionPoints concode_elem_sep void testHibernateBundle concode_elem_sep TestService getTestService concode_elem_sep JavaArchive deployment concode_elem_sep void testJpa"}
{"code": "void function ( PdfWriter arg0 , Document arg1 , Rectangle arg2 , String arg3 ) { }", "nl": "called when a chunk with a generic tag is written . it is useful to pinpoint the chunk location to generate bookmarks , for example . concode_field_sep PlaceHolder placeHolder concode_field_sep void onSection concode_elem_sep void onParagraph concode_elem_sep void onParagraphEnd concode_elem_sep void onOpenDocument concode_elem_sep void onSectionEnd concode_elem_sep void onEndPage concode_elem_sep void onChapter concode_elem_sep void onCloseDocument concode_elem_sep void onChapterEnd concode_elem_sep void onStartPage"}
{"code": "String function ( ) { return m_type ; }", "nl": "returns the artifact type . concode_field_sep String CLASSIFIER_SEPARATOR concode_elem_sep String m_fullClassifier concode_elem_sep String FILE_SEPARATOR concode_elem_sep String TYPE_SEPARATOR concode_elem_sep String m_artifact concode_elem_sep String m_group concode_elem_sep String m_classifier concode_elem_sep String m_version concode_elem_sep String SYNTAX concode_elem_sep String GROUP_SEPARATOR concode_elem_sep String VERSION_SEPARATOR concode_elem_sep String METADATA_FILE concode_elem_sep MavenRepositoryURL m_repositoryURL concode_elem_sep String REPOSITORY_SEPARATOR concode_elem_sep String VERSION_SNAPSHOT concode_elem_sep String TYPE_JAR concode_elem_sep String m_type concode_elem_sep String ARTIFACT_SEPARATOR concode_elem_sep String VERSION_LATEST concode_elem_sep String METADATA_FILE_LOCAL concode_field_sep String getVersion concode_elem_sep MavenURL parsePathWithSchemePrefix concode_elem_sep MavenRepositoryURL getRepositoryURL concode_elem_sep String getArtifactMetdataPath concode_elem_sep void parseArtifactPart concode_elem_sep String getClassifier concode_elem_sep String getSnapshotVersion concode_elem_sep String getVersionMetadataPath concode_elem_sep String getArtifactPath concode_elem_sep String getArtifactPath concode_elem_sep String getArtifact concode_elem_sep String getSnapshotPath concode_elem_sep String getGroup concode_elem_sep String getArtifactLocalMetdataPath concode_elem_sep String getVersionLocalMetadataPath"}
{"code": "RuleBasedScanner function ( ) { return fMultilineCommentScanner ; }", "nl": "returns a scanner which is configured to scan java multi-line comments . concode_field_sep JavaCommentScanner fMultilineCommentScanner concode_elem_sep JavaCommentScanner fSinglelineCommentScanner concode_elem_sep JavaDocScanner fJavaDocScanner concode_elem_sep PreferenceListener fPreferenceListener concode_elem_sep JavaCodeScanner fCodeScanner concode_elem_sep IPreferenceStore fPreferenceStore concode_elem_sep SingleTokenJavaScanner fStringScanner concode_elem_sep String[] LEGAL_CONTENT_TYPES concode_elem_sep JavaColorManager fColorManager concode_elem_sep Preferences fCorePreferenceStore concode_field_sep RuleBasedScanner getJavaDocScanner concode_elem_sep RuleBasedScanner getSinglelineCommentScanner concode_elem_sep IDocumentPartitioner createDocumentPartitioner concode_elem_sep RuleBasedScanner getStringScanner concode_elem_sep IPreferenceStore getPreferenceStore concode_elem_sep RuleBasedScanner getCodeScanner concode_elem_sep void setupJavaDocumentPartitioner concode_elem_sep void setupJavaDocumentPartitioner concode_elem_sep void adaptToPreferenceChange concode_elem_sep String[] getPartitionManagingPositionCategories concode_elem_sep IPartitionTokenScanner getPartitionScanner concode_elem_sep void propertyChange concode_elem_sep void propertyChange concode_elem_sep void dispose concode_elem_sep boolean affectsBehavior concode_elem_sep IColorManager getColorManager concode_elem_sep Preferences getCorePreferenceStore"}
{"code": "int function ( ) { return numberOfHits ; }", "nl": "returns the number of hits that match the given query . concode_field_sep TContact c concode_elem_sep int numberOfHits concode_field_sep int getTotalHits concode_elem_sep long getSize concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep String toString concode_elem_sep TContact getContact"}
{"code": "boolean function ( int arg0 , int [ ] arg1 ) { for ( int loc0 = 0 ; loc0 < arg1 . length ; ++ loc0 ) { if ( arg1 [ loc0 ] == arg0 ) return true ; } return false ; }", "nl": "check to see if the given item is in an array . concode_field_sep PlaceHolder placeHolder concode_field_sep int findFirstNotContainedIn concode_elem_sep int ctrlSelect concode_elem_sep int last concode_elem_sep int stdSelect concode_elem_sep int indexToSelect concode_elem_sep int indexToSelect concode_elem_sep int shiftSelect concode_elem_sep int first"}
{"code": "Collection < V > function ( ) { return convert ( getInternalLeafNodes ( ) ) ; }", "nl": "get a list of nodes that have no outbound edges . concode_field_sep Set<Node> allNodes concode_elem_sep ListMultimap<Node,Edge<Node>> adjacencies concode_elem_sep int lowlink concode_elem_sep V nodeValue concode_elem_sep boolean visited concode_elem_sep int index concode_field_sep AdjacencyList<V> getReversedList concode_elem_sep Collection<Node> getInternalRootNodes concode_elem_sep Node getNewNode concode_elem_sep AdjacencyList<V> newInstance concode_elem_sep List<V> convert concode_elem_sep int compareTo concode_elem_sep V getNodeValue concode_elem_sep void fix concode_elem_sep int hashCode concode_elem_sep List<V> getRootNodes concode_elem_sep void printEdges concode_elem_sep Collection<Edge<Node>> getAllEdges concode_elem_sep List<Edge<Node>> getAdjacent concode_elem_sep String toString concode_elem_sep void clearVisited concode_elem_sep void addEdge concode_elem_sep Collection<Node> getInternalLeafNodes concode_elem_sep Set<Node> getNodeSet"}
{"code": "T function ( S arg0 , S arg1 ) { Map < S , T > loc0 ; if ( ( loc0 = values . get ( arg0 ) ) != null ) { if ( loc0 . containsKey ( arg1 ) ) return loc0 . remove ( arg1 ) ; } return null ; }", "nl": "remove a value from the map concode_field_sep LinkedHashMap<S,LinkedHashMap<S,T>> values concode_field_sep boolean contains concode_elem_sep T get concode_elem_sep Set<T> removeComplementarySet concode_elem_sep void put"}
{"code": "void function ( Reader arg0 ) { currentLanguage = readLanguageStream ( arg0 ) ; }", "nl": "sets the error messages directly from a reader . concode_field_sep String BASE_PATH concode_elem_sep HashMap<String,String> currentLanguage concode_elem_sep HashMap<String,String> defaultLanguage concode_field_sep String getComposedMessage concode_elem_sep String getComposedMessage concode_elem_sep HashMap<String,String> getLanguageMessages concode_elem_sep String getMessage concode_elem_sep String getMessage concode_elem_sep HashMap<String,String> readLanguageStream concode_elem_sep HashMap<String,String> readLanguageStream concode_elem_sep boolean setLanguage"}
{"code": "int function ( ) { return backgroundMode ; }", "nl": "getter for property backgroundmode . concode_field_sep int OPAQUE concode_elem_sep int TA_LEFT concode_elem_sep int TA_BASELINE concode_elem_sep ArrayList<MetaObject> MetaObjects concode_elem_sep int TA_TOP concode_elem_sep int TA_BOTTOM concode_elem_sep int TA_UPDATECP concode_elem_sep int TA_RIGHT concode_elem_sep int extentWy concode_elem_sep int extentWx concode_elem_sep int WINDING concode_elem_sep BaseColor currentTextColor concode_elem_sep int offsetWx concode_elem_sep int textAlign concode_elem_sep int offsetWy concode_elem_sep MetaFont currentFont concode_elem_sep float scalingX concode_elem_sep int lineJoin concode_elem_sep BaseColor currentBackgroundColor concode_elem_sep float scalingY concode_elem_sep int TA_CENTER concode_elem_sep int backgroundMode concode_elem_sep Point currentPoint concode_elem_sep int TA_NOUPDATECP concode_elem_sep int polyFillMode concode_elem_sep MetaBrush currentBrush concode_elem_sep int ALTERNATE concode_elem_sep MetaPen currentPen concode_elem_sep Stack<MetaState> savedStates concode_elem_sep int TRANSPARENT concode_field_sep void restoreState concode_elem_sep void addMetaObject concode_elem_sep void saveState concode_elem_sep int getTextAlign concode_elem_sep MetaPen getCurrentPen concode_elem_sep void setCurrentBackgroundColor concode_elem_sep void setMetaState concode_elem_sep MetaBrush getCurrentBrush concode_elem_sep void setBackgroundMode concode_elem_sep void setOffsetWy concode_elem_sep MetaFont getCurrentFont concode_elem_sep void setOffsetWx concode_elem_sep void setLineJoinRectangle concode_elem_sep void setScalingY concode_elem_sep float transformAngle concode_elem_sep void setScalingX concode_elem_sep BaseColor getCurrentBackgroundColor concode_elem_sep void setPolyFillMode concode_elem_sep float transformY concode_elem_sep float transformX concode_elem_sep int getPolyFillMode concode_elem_sep void setExtentWy concode_elem_sep BaseColor getCurrentTextColor concode_elem_sep void deleteMetaObject concode_elem_sep void setExtentWx concode_elem_sep Point getCurrentPoint concode_elem_sep void setTextAlign concode_elem_sep void setCurrentPoint concode_elem_sep void setLineJoinPolygon concode_elem_sep boolean getLineNeutral concode_elem_sep void setCurrentTextColor concode_elem_sep void selectMetaObject concode_elem_sep void cleanup"}
{"code": "File function ( Context arg0 ) { File loc0 = getLibsDirectory ( arg0 ) ; if ( ! loc0 . isDirectory ( ) && ! loc0 . mkdirs ( ) ) { throw new RuntimeException ( \"srini_string\" ) ; } return loc0 ; }", "nl": "return the directory into which we put our self-extracted native libraries and make sure it exists . concode_field_sep byte[] cachedBuffer concode_field_sep void reliablyCopyExecutable concode_elem_sep void deleteOrThrow concode_elem_sep FileLocker lockLibsDirectory concode_elem_sep void freeCopyBuffer concode_elem_sep File getLibsDirectory concode_elem_sep int findAbiScore concode_elem_sep void dumbDeleteRecrusive concode_elem_sep String[] getSupportedAbis concode_elem_sep String[] getSupportedAbis concode_elem_sep void fallocateIfSupported concode_elem_sep void fallocate"}
{"code": "long function ( Object arg0 ) { if ( arg0 instanceof Integer ) { return getCount ( ( ( Integer ) arg0 ) . longValue ( ) ) ; } long loc0 = 0 ; try { Long loc1 = ( Long ) freqTable . get ( arg0 ) ; if ( loc1 != null ) { loc0 = loc1 . longValue ( ) ; } } catch ( ClassCastException loc1 ) { } return loc0 ; }", "nl": "returns the number of values = v. concode_field_sep long serialVersionUID concode_elem_sep TreeMap freqTable concode_field_sep int compare concode_elem_sep double getPct concode_elem_sep double getPct concode_elem_sep double getPct concode_elem_sep double getPct concode_elem_sep long getCumFreq concode_elem_sep long getCumFreq concode_elem_sep long getCumFreq concode_elem_sep long getCumFreq concode_elem_sep Iterator valuesIterator concode_elem_sep double getCumPct concode_elem_sep double getCumPct concode_elem_sep double getCumPct concode_elem_sep double getCumPct concode_elem_sep void clear concode_elem_sep String toString concode_elem_sep void addValue concode_elem_sep void addValue concode_elem_sep void addValue concode_elem_sep void addValue concode_elem_sep void addValue concode_elem_sep long getSumFreq"}
{"code": "void function ( byte [ ] arg0 ) { write ( arg0 , arg0 . length ) ; }", "nl": "writes a buffer to the seeked address concode_field_sep int COPY_SIZE concode_elem_sep int _blockSize concode_field_sep int read concode_elem_sep int read concode_elem_sep long regularAddress concode_elem_sep void delete concode_elem_sep void seek concode_elem_sep void sync concode_elem_sep void blockSize concode_elem_sep int blockSize concode_elem_sep IoAdapter delegatedIoAdapter concode_elem_sep boolean exists concode_elem_sep long getLength concode_elem_sep void blockCopy concode_elem_sep void blockSeek concode_elem_sep void blockSeek concode_elem_sep void copy concode_elem_sep void copy concode_elem_sep void close concode_elem_sep IoAdapter open"}
{"code": "List < GenPolynomial < C >> function ( List < GenPolynomial < C >> arg0 , GenPolynomial < C > arg1 ) { List < GenPolynomial < C >> loc0 = new ArrayList < GenPolynomial < C >> ( arg0 . size ( ) ) ; for ( GenPolynomial < C > loc1 : arg0 ) { if ( loc1 != null ) { loc1 = loc1 . multiply ( arg1 ) ; } loc0 . add ( loc1 ) ; } return loc0 ; }", "nl": "scalar product of vector of polynomials with polynomial . concode_field_sep Logger logger concode_field_sep List<GenPolynomial<C>> vectorAdd concode_elem_sep boolean isZero"}
{"code": "JQueryLibrary function ( String arg0 ) { return new JQueryLibrary ( BASE_RESOURCE_URL + \"srini_string\" + arg0 + \"srini_string\" + arg0 + \"srini_string\" ) ; }", "nl": "return a library that loads the structure-only from code.jquery.com concode_field_sep String BASE_RESOURCE_URL concode_elem_sep String url concode_field_sep JQueryLibrary core concode_elem_sep JQueryLibrary baseTheme concode_elem_sep JQueryLibrary ui concode_elem_sep void renderOn concode_elem_sep JQueryLibrary mobileTheme concode_elem_sep JQueryLibrary mobile concode_elem_sep JQueryLibrary theme"}
{"code": "int function ( Random arg0 ) { int loc0 = arg0 . nextInt ( ) ; if ( loc0 < 0 ) loc0 = - loc0 ; return loc0 & ( ( loc0 & 0xF0000 ) != 0 ? 0xF : ( ( loc0 & 0xFF0000 ) != 0 ? 0xFF : ( ( loc0 & 0xFFF0000 ) != 0 ? 0xFFF : 0xFFFF ) ) ) ; }", "nl": "returns 0-15 15/16 times . returns 0-255 255/256 times . returns 0-4095 4095/4096 times . returns 0-65535 every time . concode_field_sep long seed concode_elem_sep boolean seedSet concode_field_sep void testRandomLength concode_elem_sep String randomString concode_elem_sep Random createRandom concode_elem_sep void resetRandomSeed concode_elem_sep long getRandomSeed concode_elem_sep ByteBuffer randomBytes"}
{"code": "void function ( ContentAssistInvocationContext arg0 ) { }", "nl": "called once before initial sorting starts the first time . note : as of 3.8 a completion proposal computer can request that proposals are resorted . if such a computer is active , then this method will not be called . clients may override , the default implementation does nothing . concode_field_sep PlaceHolder placeHolder concode_field_sep int compare concode_elem_sep void endSorting"}
{"code": "boolean function ( ) { return SwitchBoard . hasExperimentValues ( context , experimentName ) ; }", "nl": "returns true if the experiment has aditional values . concode_field_sep Context context concode_elem_sep String experimentName concode_field_sep JSONObject getValues concode_elem_sep boolean isActive concode_elem_sep boolean isActive"}
{"code": "void function ( final URL arg0 , Display arg1 ) { arg1 . syncExec ( new Runnable ( ) { @ Override public void run ( ) { internalOpen ( arg0 , false ) ; } } ) ; }", "nl": "opens the given url in the browser as choosen in the preferences . concode_field_sep PlaceHolder placeHolder concode_field_sep void internalOpen concode_elem_sep void openExternal"}
{"code": "byte [ ] function ( byte [ ] arg0 , byte [ ] arg1 ) { return ArrayTool . transferValues ( arg0 , arg1 , 0 , arg1 . length ) ; }", "nl": "transfers from right to left concode_field_sep PlaceHolder placeHolder concode_field_sep void swap concode_elem_sep void swap"}
{"code": "void function ( final FontProvider arg0 ) { this . provider = arg0 ; }", "nl": "setter for the font provider concode_field_sep FontProvider provider concode_field_sep ListItem createListItem concode_elem_sep void setParagraphLeading concode_elem_sep List createList concode_elem_sep Image createImage concode_elem_sep FontProvider getFontProvider concode_elem_sep Chunk createChunk concode_elem_sep LineSeparator createLineSeparator concode_elem_sep Paragraph createParagraph concode_elem_sep Font getFont concode_elem_sep HyphenationEvent getHyphenation concode_elem_sep void updateElement"}
{"code": "Criteria function ( Object arg0 ) { this . criteriaType = RelationalOperator . GT ; this . right = ValueNode . toValueNode ( arg0 ) ; return this ; }", "nl": "creates a criterion using the > operator concode_field_sep List<Criteria> criteriaChain concode_elem_sep ValueNode left concode_elem_sep ValueNode right concode_elem_sep RelationalOperator criteriaType concode_field_sep Criteria lt concode_elem_sep Criteria type concode_elem_sep String prefixPath concode_elem_sep Criteria empty concode_elem_sep void checkComplete concode_elem_sep Criteria nin concode_elem_sep Criteria nin concode_elem_sep Criteria and concode_elem_sep Criteria gte concode_elem_sep Criteria create concode_elem_sep Criteria where concode_elem_sep Criteria where concode_elem_sep Criteria lte concode_elem_sep Criteria all concode_elem_sep Criteria all concode_elem_sep boolean apply concode_elem_sep Criteria in concode_elem_sep Criteria in concode_elem_sep Criteria is concode_elem_sep Criteria parse concode_elem_sep Criteria eq concode_elem_sep Criteria matches concode_elem_sep Criteria regex concode_elem_sep Criteria contains concode_elem_sep Criteria size concode_elem_sep Criteria ne concode_elem_sep Criteria exists concode_elem_sep String toString concode_elem_sep Collection<RelationalExpressionNode> toRelationalExpressionNodes concode_elem_sep Criteria notEmpty"}
{"code": "void function ( Map arg0 ) { Log . debug ( \"srini_string\" + getClass ( ) ) ; description = ( String ) arg0 . get ( TAG_DESC ) ; }", "nl": "only exposed so that script may invoke it on load from disk . concode_field_sep String description concode_elem_sep Resolver resolver concode_elem_sep Throwable invalidScriptError concode_field_sep String toXMLString concode_elem_sep Map getAttributes concode_elem_sep String getXMLTag concode_elem_sep void writeObject concode_elem_sep void usage concode_elem_sep void usage concode_elem_sep Element addAttributes concode_elem_sep void run concode_elem_sep Element toXML concode_elem_sep void setDescription concode_elem_sep String simpleClassName concode_elem_sep Element addContent concode_elem_sep String getDescription concode_elem_sep String getUsage concode_elem_sep void readObject concode_elem_sep String getDefaultDescription concode_elem_sep String toEditableString concode_elem_sep Step createStep concode_elem_sep Step createStep concode_elem_sep void runStep concode_elem_sep ComponentTester resolveTester concode_elem_sep Class resolveClass concode_elem_sep void setScriptError concode_elem_sep String toString concode_elem_sep Resolver getResolver concode_elem_sep Map createAttributeMap"}
{"code": "void function ( final String arg0 , final String arg1 , Configuration arg2 ) { assertHasResults ( arg0 , arg1 , 1 , arg2 ) ; }", "nl": "assertion which requires list of one element as a result of indefinite path search . concode_field_sep PlaceHolder placeHolder concode_field_sep void assertHasResults concode_elem_sep void assertEvaluationThrows concode_elem_sep void assertEvaluationThrows concode_elem_sep void assertHasNoResults"}
{"code": "void function ( final String arg0 ) { if ( ! started ) { fileSuffix = arg0 ; } }", "nl": "sets the suffix of the output file including the file extension . the file name will be constructed by appending the prefix , some configuration and version information , and the suffix . if that file already exists , it will be overwritten . if not , it will be created . if the path does not exist , it is attempted to create it as well . a new file is created only if none has been opened by this analyzer before . if one file is still open from an earlier analyzer run , it will be used . the output file is constructed with this prefix only if #setoutputfile string has never been called before setting thecomplete output file path disables prefix/suffix settings . the contents of this output file is aimed at supporting in-depth analysis of the measurement results . it is not the same as the contents written onto the writer passed to #stop writer as that contents isintended to be displayed after the simulation run . calls to this method are ignored if this analyzer has already been started . concode_field_sep Logger log concode_elem_sep String description concode_elem_sep int clusterIDLength concode_elem_sep String style concode_elem_sep boolean started concode_elem_sep String fileDescr concode_elem_sep String seed concode_elem_sep int BUFFER_CAPACITY concode_elem_sep String filePrefix concode_elem_sep String fileSuffix concode_elem_sep PrintWriter out concode_field_sep void appendClusterID concode_elem_sep void setOutputFilePrefix concode_elem_sep void stopped concode_elem_sep void start concode_elem_sep void appendNewLine concode_elem_sep void started concode_elem_sep void setDescription concode_elem_sep boolean isStarted concode_elem_sep void setOutputFile concode_elem_sep void appendSeparator concode_elem_sep void setOutputFileDescr concode_elem_sep void stop concode_elem_sep void appendToFile concode_elem_sep void appendToFile concode_elem_sep void appendToFile concode_elem_sep void appendToFile concode_elem_sep void appendToFile concode_elem_sep void setStyle concode_elem_sep void setSeed concode_elem_sep String getFileName"}
{"code": "boolean function ( ) { if ( segments . size ( ) > 0 && closed ) { return false ; } for ( Shape loc0 : segments ) { Set < Point2D > loc1 = new HashSet < Point2D > ( loc0 . getBasePoints ( ) ) ; if ( loc1 . size ( ) != 1 ) { return false ; } } return segments . size ( ) > 0 || closed ; }", "nl": "returns a boolean indicating whether the subpath is degenerate or not . a degenerate subpath is the subpath consisting of a single-point closed path or of two or more points at the same coordinates . concode_field_sep List<Shape> segments concode_elem_sep Point2D startPoint concode_elem_sep boolean closed concode_field_sep Point2D getStartPoint concode_elem_sep boolean isSinglePointOpen concode_elem_sep void addSegment concode_elem_sep boolean isClosed concode_elem_sep boolean isEmpty concode_elem_sep boolean isSinglePointClosed concode_elem_sep List<Point2D> getPiecewiseLinearApproximation concode_elem_sep void setStartPoint concode_elem_sep void setStartPoint concode_elem_sep Point2D getLastPoint concode_elem_sep void setClosed concode_elem_sep List<Shape> getSegments"}
{"code": "Codec function ( Format arg0 ) { return getCodec ( arg0 , null ) ; }", "nl": "gets the first codec which can decode the specified format . concode_field_sep Registry instance concode_field_sep Codec[] getCodecs concode_elem_sep Codec[] getDecoders concode_elem_sep String[] getCodecClasses concode_elem_sep Codec[] getEncoders concode_elem_sep void unregisterCodec concode_elem_sep void putCodec concode_elem_sep Codec getEncoder concode_elem_sep String[] getDecoderClasses concode_elem_sep void init concode_elem_sep String getExtension concode_elem_sep Codec getCodec concode_elem_sep void putReader concode_elem_sep MovieReader getReader concode_elem_sep MovieReader getReader concode_elem_sep void putFileFormat concode_elem_sep Format[] getWriterFormats concode_elem_sep Format getFileFormat concode_elem_sep Format[] getReaderFormats concode_elem_sep Format[] getFileFormats concode_elem_sep String[] getWriterClasses concode_elem_sep String[] getReaderClasses concode_elem_sep String[] getEncoderClasses concode_elem_sep MovieWriter getWriter concode_elem_sep MovieWriter getWriter concode_elem_sep ArrayList<Format> suggestOutputFormats concode_elem_sep void putWriter concode_elem_sep Registry getInstance"}
{"code": "int function ( ) { return index ; }", "nl": "get the index into the local variable array . concode_field_sep String name concode_elem_sep int index concode_elem_sep Type type concode_field_sep int hashCode concode_elem_sep boolean equals concode_elem_sep String name concode_elem_sep String toString concode_elem_sep Type type"}
{"code": "int function ( ) { return stack . size ( ) ; }", "nl": "returns the number of expressions on the stack . concode_field_sep ArrayList stack concode_elem_sep int height concode_field_sep Expr pop concode_elem_sep void set concode_elem_sep Expr pop1 concode_elem_sep Expr[] pop2 concode_elem_sep Expr get concode_elem_sep boolean isEmpty concode_elem_sep void replace concode_elem_sep String toString concode_elem_sep void push concode_elem_sep Expr peek concode_elem_sep Expr peek concode_elem_sep int height"}
{"code": "void function ( ) { Assert . assertTrue ( d . isStackOwner ( ) ) ; }", "nl": "verifies if div is a stack owner . should be true . concode_field_sep List<Element> currentContent concode_elem_sep Div d concode_elem_sep WorkerContextImpl workerContextImpl concode_field_sep void init concode_elem_sep void verifyNumberOfParagraphs concode_elem_sep void verifyIfPdfDiv concode_elem_sep void verifyContent"}
{"code": "double function ( NetID arg0 , NetID arg1 ) { NetLayer loc0 = subnet . getNetLayer ( arg0 ) ; NetLayer loc1 = subnet . getNetLayer ( arg1 ) ; return lm . getPropagationDelay ( ( GnpNetLayer ) loc0 , ( GnpNetLayer ) loc1 ) / ( double ) Simulator . MILLISECOND_UNIT ; }", "nl": "normally , the propagation of messages through channels and routers of the internet is affected by the propagation delays of the physical media , and the processing - , queuing - , and transmission delays of the routers . the so called internet propagation delay is modeled as the sum of a fixed part that combines the aforementioned router and propagation delays , and a variable part to reproduce the jitter . invoking this method returns the internet propagation delay in ms between two hosts in the internet . note that this delay is derived from measurement data , and it therefore estimates the one-way delay of the measured round-trip-times between the specified hosts . concode_field_sep GnpSubnet subnet concode_elem_sep GnpLatencyModel lm concode_field_sep void setLatencyModel concode_elem_sep int getGeoPriority concode_elem_sep double getGeographicalDistance"}
{"code": "MatchResult function ( ) { return new MatchResult ( WIDGET_NOT_FOUND ) ; }", "nl": "create a widget not found match result . concode_field_sep int MATCH concode_elem_sep Collection _widgets concode_elem_sep int _dbComparisons concode_elem_sep Widget _widget concode_elem_sep Hierarchy _hierarchy concode_elem_sep int BFS concode_elem_sep int DFS concode_elem_sep int _type concode_elem_sep ArrayList _list concode_elem_sep int WIDGET_NOT_FOUND concode_elem_sep int MULTIPLE_WIDGETS_FOUND concode_elem_sep int _searchType concode_field_sep Widget getParent concode_elem_sep Collection getRoots concode_elem_sep Widget getWidget concode_elem_sep Collection getWidgets concode_elem_sep Collection getWidgets concode_elem_sep MatchResult match concode_elem_sep void findMatches concode_elem_sep MatchResult multipleFound concode_elem_sep void pause concode_elem_sep boolean contains concode_elem_sep int getType concode_elem_sep MatchResult find concode_elem_sep MatchResult find concode_elem_sep MatchResult find concode_elem_sep MatchResult find concode_elem_sep MatchResult find concode_elem_sep MatchResult find concode_elem_sep void assertNotNull concode_elem_sep void assertNotNull concode_elem_sep MatchResult find0 concode_elem_sep void dispose concode_elem_sep int getFinderRetryInterval concode_elem_sep int getMaxFinderRetries concode_elem_sep void setFound"}
{"code": "Bag function ( Bag arg0 ) { return UnmodifiableBag . decorate ( arg0 ) ; }", "nl": "returns an unmodifiable view of the given bag . any modification attempts to the returned bag will raise an unsupportedoperationexception . concode_field_sep Bag EMPTY_BAG concode_elem_sep Bag EMPTY_SORTED_BAG concode_field_sep Bag predicatedBag concode_elem_sep SortedBag synchronizedSortedBag concode_elem_sep SortedBag predicatedSortedBag concode_elem_sep SortedBag transformedSortedBag concode_elem_sep Bag typedBag concode_elem_sep Bag transformedBag concode_elem_sep SortedBag unmodifiableSortedBag concode_elem_sep SortedBag typedSortedBag concode_elem_sep Bag synchronizedBag"}
{"code": "void function ( ) { MockServer loc0 = new MockServer ( 200 , TestMetaGlobal . TEST_META_GLOBAL_EMPTY_PAYLOAD_RESPONSE ) ; doSession ( loc0 ) ; assertTrue ( calledFreshStart ) ; }", "nl": "empty payload object has no syncid or storageversion and should call freshstart . concode_field_sep String LOG_TAG concode_elem_sep String TEST_NW_URL concode_elem_sep String TEST_PASSWORD concode_elem_sep String TEST_SYNC_ID concode_elem_sep String TEST_SERVER concode_elem_sep String TEST_CLUSTER_URL concode_elem_sep boolean calledFreshStart concode_elem_sep boolean calledResetAllStages concode_elem_sep String TEST_SYNC_KEY concode_elem_sep GlobalSession session concode_elem_sep long TEST_STORAGE_VERSION concode_elem_sep boolean calledProcessMissingMetaGlobal concode_elem_sep boolean calledUploadKeys concode_elem_sep String TEST_INFO_COLLECTIONS_JSON concode_elem_sep KeyBundle syncKeyBundle concode_elem_sep int TEST_PORT concode_elem_sep HTTPServerTestHelper data concode_elem_sep boolean calledRequiresUpgrade concode_elem_sep InfoCollections infoCollections concode_elem_sep boolean calledWipeServer concode_elem_sep MockGlobalSessionCallback callback concode_elem_sep String TEST_USERNAME concode_field_sep void doFreshStart concode_elem_sep void doSession concode_elem_sep void testFetchRequiresUpgrade concode_elem_sep JSONArray makeTestDeclinedArray concode_elem_sep void testFetchSuccessWithDifferentSyncIDMergesDeclined concode_elem_sep void testFreshStart concode_elem_sep void assertSameContents concode_elem_sep void setUp concode_elem_sep void testFetchSuccessWithDifferentSyncID concode_elem_sep void testFetchMissing concode_elem_sep void testFetchNoPayload concode_elem_sep void testFetchSuccessWithSameSyncID concode_elem_sep void testFetchMalformedPayload"}
{"code": "void function ( ) { final StealingMethod loc0 = mock ( StealingMethod . class ) ; final HalflingThief loc1 = new HalflingThief ( loc0 ) ; loc1 . steal ( ) ; verify ( loc0 ) . steal ( ) ; verifyNoMoreInteractions ( loc0 ) ; }", "nl": "verify if the thief uses the provided stealing method concode_field_sep PlaceHolder placeHolder concode_field_sep void testChangeMethod"}
{"code": "boolean function ( Integer arg0 ) { Socket loc0 = new Socket ( ) ; boolean loc1 = false ; int loc2 = 0 ; boolean loc3 = false ; while ( loc3 = tryToConnect ( loc0 , arg0 ) && loc2 < 10 ) { loc1 = loc3 ; tryToClose ( loc0 ) ; loc2 ++ ; loc0 = new Socket ( ) ; } return loc1 ; }", "nl": "checks if given port is open on ` localhost ' concode_field_sep Logger LOG concode_elem_sep String cmdHistory concode_elem_sep PythonProcess mockPythonProcess concode_elem_sep PythonInterpreter pythonInterpreter concode_field_sep void testPy4jInstalled concode_elem_sep void checkMultiRowErrorFails concode_elem_sep boolean tryToConnect concode_elem_sep void tryToClose concode_elem_sep void testOpenInterpreter concode_elem_sep String answerFromPythonMock concode_elem_sep void beforeTest concode_elem_sep void testClose concode_elem_sep Properties getPythonTestProperties concode_elem_sep void testInterpret concode_elem_sep void testPy4jIsNotInstalled"}
{"code": "void function ( final T arg0 ) { try { assign ( arg0 ) ; } catch ( final Exception loc0 ) { throw new RuntimeException ( loc0 ) ; } }", "nl": "like #assign autocloseable , except that any exception thrown by closing the previously held pointer is wrapped with an unchecked runtimeexception . concode_field_sep T pointer concode_field_sep T adopt concode_elem_sep T get concode_elem_sep void close concode_elem_sep void assign"}
{"code": "Point function ( ) { return position ; }", "nl": "gets the position back concode_field_sep MSG_TYPE msgType concode_elem_sep SequenceNumber sequenceNr concode_elem_sep byte hopCount concode_elem_sep Point position concode_elem_sep int radius concode_field_sep MSG_TYPE getMsgType concode_elem_sep int getSizeOfAbstractMessage concode_elem_sep byte getHopCount concode_elem_sep boolean equals concode_elem_sep SequenceNumber getSequenceNr concode_elem_sep int getRadius"}
{"code": "IUIContext function ( ) { if ( _ui == null ) _ui = createUI ( ) ; return _ui ; }", "nl": "answers the uicontext . notice this is acting as a context factory . concode_field_sep IUIContext _ui concode_elem_sep Display _display concode_elem_sep Shell _rootShell concode_field_sep IUIContext createUI concode_elem_sep void cacheDisplay concode_elem_sep void setDisplay concode_elem_sep void update concode_elem_sep Shell getRootShell concode_elem_sep void cacheRootShell concode_elem_sep void setRootShell concode_elem_sep Display getDisplay"}
{"code": "int function ( String arg0 ) { int loc0 ; for ( loc0 = arg0 . length ( ) - 1 ; loc0 >= 0 ; loc0 -- ) { char loc1 = arg0 . charAt ( loc0 ) ; if ( ! Character . isDigit ( loc1 ) ) { break ; } } if ( loc0 == arg0 . length ( ) - 1 ) { return - 1 ; } return loc0 + 1 ; }", "nl": "returns the position of the first digit in the trailing number of the given string or -1 if the string does not end with number example : alice has got a cat 12 - will return 20 the position of ' 1 ' alice has got a black cat - will return -1 no trailing number in the string concode_field_sep List<String> partNames concode_elem_sep String PART_NAME concode_elem_sep Map<Character,String> greekLetters concode_elem_sep Map<String,String> wordToDecimal concode_field_sep String replaceLastWordNumberToDecimal concode_elem_sep String replaceNumbersToDecimal concode_elem_sep String normalizePartQualifiers concode_elem_sep int digitsPercentage concode_elem_sep int romanToDecimal concode_elem_sep String removeStopWords concode_elem_sep String getTrailingInteger concode_elem_sep boolean inLevenshteinDistance concode_elem_sep String replaceLastRomanNumberToDecimal concode_elem_sep String normalize concode_elem_sep boolean isRomanNumber concode_elem_sep boolean isDecimalNumber concode_elem_sep boolean isEngWordNumber concode_elem_sep int processDecimal"}
{"code": "BigInteger function ( byte [ ] arg0 , byte [ ] arg1 , byte [ ] arg2 , BigInteger arg3 , BigInteger arg4 ) { BigInteger loc0 = srpVerifierLowercaseX ( arg0 , arg1 , arg2 ) ; BigInteger loc1 = arg3 . modPow ( loc0 , arg4 ) ; return loc1 ; }", "nl": "calculate the srp verifier v value . concode_field_sep int HASH_LENGTH_HEX concode_elem_sep int CRYPTO_KEY_LENGTH_BYTES concode_elem_sep int SALT_LENGTH_HEX concode_elem_sep int NUMBER_OF_QUICK_STRETCH_ROUNDS concode_elem_sep String KW_VERSION_STRING concode_elem_sep boolean LOG_PERSONAL_INFORMATION concode_elem_sep int CRYPTO_KEY_LENGTH_HEX concode_elem_sep String LOG_TAG concode_elem_sep int SALT_LENGTH_BYTES concode_elem_sep int HASH_LENGTH_BYTES concode_field_sep byte[] unwrapkB concode_elem_sep String defaultClientName concode_elem_sep String getAudienceForURL concode_elem_sep String hexModN concode_elem_sep KeyBundle generateSyncKeyBundle concode_elem_sep byte[] generateQuickStretchedPW concode_elem_sep byte[] generateAuthPW concode_elem_sep String computeClientState concode_elem_sep byte[] KW concode_elem_sep void pii concode_elem_sep BigInteger srpVerifierLowercaseX concode_elem_sep String bytes concode_elem_sep byte[] generateUnwrapBKey concode_elem_sep byte[] KWE"}
{"code": "String function ( Throwable arg0 ) { return ( arg0 . getCause ( ) != null ) ? arg0 . getCause ( ) . getMessage ( ) : arg0 . getMessage ( ) ; }", "nl": "method to get exception details concode_field_sep Logger LOGGER concode_field_sep void init concode_elem_sep void compare concode_elem_sep int validateInput concode_elem_sep void main"}
{"code": "void function ( String arg0 ) { this . machineInterpretationKey = arg0 ; }", "nl": "sets the value of the machineinterpretationkey property . concode_field_sep String validationPattern concode_elem_sep boolean isValueOptional concode_elem_sep boolean encrypted concode_elem_sep String machineInterpretationKey concode_elem_sep String displayName concode_elem_sep String defaultValue concode_elem_sep String technicalKey concode_elem_sep boolean isKeyOptional concode_elem_sep List<String> tags concode_elem_sep String exampleValue concode_field_sep void setDefaultValue concode_elem_sep String getExampleValue concode_elem_sep List<String> getTags concode_elem_sep String getValidationPattern concode_elem_sep boolean isIsKeyOptional concode_elem_sep void setIsKeyOptional concode_elem_sep void setDisplayName concode_elem_sep void setExampleValue concode_elem_sep String getDefaultValue concode_elem_sep String getTechnicalKey concode_elem_sep void setEncrypted concode_elem_sep void setTechnicalKey concode_elem_sep String getDisplayName concode_elem_sep boolean isEncrypted concode_elem_sep String getMachineInterpretationKey concode_elem_sep void setValidationPattern concode_elem_sep boolean isIsValueOptional concode_elem_sep void setIsValueOptional"}
{"code": "boolean function ( CharSequence arg0 ) { return arg0 == null || arg0 . length ( ) == 0 ; }", "nl": "checks if a charsequence is empty '' '' or null . stringutils.isempty null = true stringutils.isempty '' '' = true stringutils.isempty '' '' = false stringutils.isempty `` bob '' = false stringutils.isempty '' bob '' = false note : this method changed in lang version 2.0 . it no longer trims the charsequence . that functionality is available in isblank . concode_field_sep PlaceHolder placeHolder concode_field_sep T notNull concode_elem_sep String unescape concode_elem_sep String concat concode_elem_sep void onlyOneIsTrue concode_elem_sep void isTrue concode_elem_sep boolean onlyOneIsTrueNonThrow concode_elem_sep String hex concode_elem_sep String toString concode_elem_sep String join concode_elem_sep String join concode_elem_sep void closeQuietly concode_elem_sep T notEmpty concode_elem_sep String escape concode_elem_sep int indexOf"}
{"code": "Date function ( @ NonNull Cursor arg0 , int arg1 ) { if ( arg0 . isNull ( arg1 ) ) { return null ; } return new Date ( arg0 . getLong ( arg1 ) ) ; }", "nl": "gets date value form cursor for column index . concode_field_sep PlaceHolder placeHolder concode_field_sep Long getLong concode_elem_sep Character getChar concode_elem_sep Integer getInt concode_elem_sep void bind concode_elem_sep void bind concode_elem_sep void bind concode_elem_sep void bind concode_elem_sep void bind concode_elem_sep void bind concode_elem_sep void bind concode_elem_sep void bind concode_elem_sep void bind concode_elem_sep void bind concode_elem_sep void bind concode_elem_sep void bind concode_elem_sep Byte getByte concode_elem_sep Short getShort concode_elem_sep byte[] getByteArray concode_elem_sep Double getDouble concode_elem_sep Boolean getBoolean concode_elem_sep Float getFloat concode_elem_sep String getString"}
{"code": "void function ( boolean arg0 ) { this . invoked = arg0 ; }", "nl": "sets the invoked . concode_field_sep Log log concode_elem_sep List customers concode_elem_sep boolean invoked concode_field_sep void addCustomer concode_elem_sep List getCustomers concode_elem_sep boolean isInvoked concode_elem_sep String toString concode_elem_sep void run concode_elem_sep void removeCustomer"}
{"code": "byte function ( ) { return quote ; }", "nl": "returns the character used for escaping values where the field delimiter is part of the value . defaults to ' '' ' concode_field_sep TextParsingSettings DEFAULT concode_elem_sep String emptyValue concode_elem_sep byte normalizedNewLine concode_elem_sep boolean parseUnescapedQuotes concode_elem_sep boolean headerExtractionEnabled concode_elem_sep int numberOfRecordsToRead concode_elem_sep boolean useRepeatedVarChar concode_elem_sep org.slf4j.Logger logger concode_elem_sep boolean ignoreLeadingWhitespaces concode_elem_sep byte delimiter concode_elem_sep boolean ignoreTrailingWhitespaces concode_elem_sep byte quote concode_elem_sep byte quoteEscape concode_elem_sep byte[] newLineDelimiter concode_elem_sep long maxCharsPerColumn concode_elem_sep String lineSeparatorString concode_elem_sep byte comment concode_elem_sep boolean skipFirstLine concode_field_sep byte getQuoteEscape concode_elem_sep String getEmptyValue concode_elem_sep boolean isIgnoreLeadingWhitespaces concode_elem_sep byte bSafe concode_elem_sep String getLineSeparatorString concode_elem_sep void setIgnoreLeadingWhitespaces concode_elem_sep void setNormalizedNewLine concode_elem_sep boolean isQuoteEscape concode_elem_sep void setIgnoreTrailingWhitespaces concode_elem_sep void setQuoteEscape concode_elem_sep boolean isUseRepeatedVarChar concode_elem_sep void setUseRepeatedVarChar concode_elem_sep void setDelimiter concode_elem_sep void setHeaderExtractionEnabled concode_elem_sep byte getNormalizedNewLine concode_elem_sep byte getComment concode_elem_sep void setEmptyValue concode_elem_sep void setNumberOfRecordsToRead concode_elem_sep boolean isSkipFirstLine concode_elem_sep byte[] getNewLineDelimiter concode_elem_sep void setSkipFirstLine concode_elem_sep void setQuote concode_elem_sep byte b concode_elem_sep void set concode_elem_sep boolean isQuote concode_elem_sep boolean isIgnoreTrailingWhitespaces concode_elem_sep int getNumberOfRecordsToRead concode_elem_sep byte getDelimiter concode_elem_sep long getMaxCharsPerColumn concode_elem_sep boolean isDelimiter concode_elem_sep void setMaxCharsPerColumn concode_elem_sep boolean isHeaderExtractionEnabled concode_elem_sep void setComment concode_elem_sep boolean isParseUnescapedQuotes concode_elem_sep void setParseUnescapedQuotes"}
{"code": "void function ( Throwable arg0 ) { if ( invalidScriptError != null ) invalidScriptError = arg0 ; else Log . warn ( \"srini_string\" + arg0 ) ; }", "nl": "for use by subclasses when an error is encountered during parsing . should only be used by the xml parsing ctors . concode_field_sep String description concode_elem_sep Resolver resolver concode_elem_sep String copyright concode_elem_sep Throwable invalidScriptError concode_elem_sep WidgetTester tester concode_field_sep String toXMLString concode_elem_sep String getXMLTag concode_elem_sep Widget resolve concode_elem_sep void usage concode_elem_sep void usage concode_elem_sep Element addAttributes concode_elem_sep void run concode_elem_sep Element toXML concode_elem_sep void setDescription concode_elem_sep String simpleClassName concode_elem_sep String getDescription concode_elem_sep String getDefaultDescription concode_elem_sep void runStep concode_elem_sep WidgetTester resolveTester concode_elem_sep HashMap createAttributeMap concode_elem_sep HashMap getAttributes concode_elem_sep void writeObject concode_elem_sep Element addContent concode_elem_sep void parseStepAttributes concode_elem_sep String getUsage concode_elem_sep void readObject concode_elem_sep String toEditableString concode_elem_sep Step createStep concode_elem_sep Step createStep concode_elem_sep Class resolveClass concode_elem_sep WidgetFinder getFinder concode_elem_sep Resolver getResolver"}
{"code": "Header [ ] function ( ) { return responseHeaders . getAllHeaders ( ) ; }", "nl": "returns all the headers that were on the origin response . concode_field_sep Date date concode_elem_sep Map<String,String> variantMap concode_elem_sep StatusLine statusLine concode_elem_sep HeaderGroup responseHeaders concode_elem_sep Resource resource concode_elem_sep Date requestDate concode_elem_sep long serialVersionUID concode_elem_sep Date responseDate concode_field_sep Resource getResource concode_elem_sep Header[] getHeaders concode_elem_sep Header getFirstHeader concode_elem_sep Map<String,String> getVariantMap concode_elem_sep String getReasonPhrase concode_elem_sep ProtocolVersion getProtocolVersion concode_elem_sep Date getResponseDate concode_elem_sep boolean hasVariants concode_elem_sep Date parseDate concode_elem_sep int getStatusCode concode_elem_sep StatusLine getStatusLine concode_elem_sep Date getDate concode_elem_sep String toString concode_elem_sep Date getRequestDate"}
{"code": "Throwable function ( ) { return error ; }", "nl": "gets the error that was thrown during rpc execution . does not block . either #get or #get long , timeunit should be called first because these methods block until the rpc has completed . concode_field_sep CountDownLatch latch concode_elem_sep Callback<T> chainedCallback concode_elem_sep Throwable error concode_elem_sep T result concode_field_sep boolean cancel concode_elem_sep boolean isCancelled concode_elem_sep void handleResult concode_elem_sep void handleError concode_elem_sep T getResult concode_elem_sep T get concode_elem_sep T get concode_elem_sep void await concode_elem_sep void await concode_elem_sep boolean isDone"}
{"code": "void function ( PdfWriter arg0 , Document arg1 ) { for ( PdfPageEvent loc0 : events ) { loc0 . onOpenDocument ( arg0 , arg1 ) ; } }", "nl": "called when the document is opened . concode_field_sep ArrayList<PdfPageEvent> events concode_field_sep void addPageEvent concode_elem_sep void onSection concode_elem_sep void onParagraph concode_elem_sep void onParagraphEnd concode_elem_sep void onSectionEnd concode_elem_sep void onEndPage concode_elem_sep void onChapter concode_elem_sep void onGenericTag concode_elem_sep void onCloseDocument concode_elem_sep void onChapterEnd concode_elem_sep void onStartPage"}
{"code": "void function ( ResourceEntity arg0 ) { List < SoftlinkRelationEntity > loc0 = getSoftlinksForCpi ( arg0 ) ; arg0 . clearSoftlinkRelations ( ) ; for ( SoftlinkRelationEntity loc1 : loc0 ) { entityManager . remove ( loc1 ) ; } }", "nl": "removes the softlinkrelation of a cpi resource . concode_field_sep EntityManager entityManager concode_elem_sep Logger log concode_elem_sep long serialVersionUID concode_elem_sep ResourceDependencyResolverService dependencyResolverService concode_field_sep void setSoftlinkRelation concode_elem_sep List<ResourceEntity> getConsumingResources concode_elem_sep SoftlinkRelationEntity getSoftLinkRelationByCpiAndSoftlinkRef concode_elem_sep List<SoftlinkRelationEntity> getSoftlinksForCpi concode_elem_sep ResourceEntity getSoftlinkResolvableSlaveResource"}
{"code": "ValueTuple function ( Object [ ] arg0 , int [ ] arg1 ) { return new ValueTuple ( arg0 , arg1 , true ) ; }", "nl": "constructor that takes already-interned arguments . concode_field_sep int MODIFIED_BITVAL concode_elem_sep int[] mods concode_elem_sep int MISSING_FLOW_BITVAL concode_elem_sep Object[] vals concode_elem_sep int STATIC_CONSTANT concode_elem_sep int[] tuplemod_not_missing concode_elem_sep int[] tuplemod_modified_not_missing concode_elem_sep int MISSING_NONSENSICAL concode_elem_sep int UNMODIFIED_BITVAL concode_elem_sep int MODBIT_VALUES concode_elem_sep int MISSING_NONSENSICAL_BITVAL concode_elem_sep int MODIFIED concode_elem_sep int MISSING_FLOW concode_elem_sep int UNMODIFIED concode_elem_sep Logger debug concode_elem_sep int TUPLEMOD_VALUES concode_field_sep boolean tuplemodHasUnmodified concode_elem_sep ValueTuple makeUninterned concode_elem_sep boolean modIsMissingFlow concode_elem_sep boolean tuplemodHasMissingNonsensical concode_elem_sep String tuplemodToStringBrief concode_elem_sep boolean modIsModified concode_elem_sep String valsToString concode_elem_sep boolean tuplemodHasMissingFlow concode_elem_sep ValueTuple shallowcopy concode_elem_sep boolean modIsUnmodified concode_elem_sep boolean isModified concode_elem_sep boolean isModified concode_elem_sep boolean tuplemodHasModified concode_elem_sep ValueTuple trim concode_elem_sep int getModified concode_elem_sep int getModified concode_elem_sep ValueTuple slice concode_elem_sep int hashCode concode_elem_sep int tupleMod concode_elem_sep int tupleMod concode_elem_sep boolean modIsMissingNonsensical concode_elem_sep boolean isUnmodified concode_elem_sep boolean isUnmodified concode_elem_sep boolean isMissingNonsensical concode_elem_sep boolean isMissingNonsensical concode_elem_sep String valToString concode_elem_sep boolean isMissingFlow concode_elem_sep boolean isMissingFlow concode_elem_sep Object getValue concode_elem_sep Object getValue concode_elem_sep boolean isMissing concode_elem_sep boolean isMissing concode_elem_sep int size concode_elem_sep boolean equals concode_elem_sep ValueTuple clone concode_elem_sep String toString concode_elem_sep String toString concode_elem_sep int make_tuplemod concode_elem_sep int parseModified"}
{"code": "List < FrequencyAdjuster > function ( ) { return this . frequencyAdjusters ; }", "nl": "returns a list of all loaded frequency adjusters of the function concode_field_sep Logger log concode_elem_sep double frequency concode_elem_sep List<FrequencyAdjuster> frequencyAdjusters concode_elem_sep double maxMagnitude concode_field_sep void setFrequencyAdjuster concode_elem_sep double getMaxMagnitude concode_elem_sep double getFrequency concode_elem_sep void setFrequencyDouble concode_elem_sep String toString concode_elem_sep double execute concode_elem_sep void setFrequency concode_elem_sep void setMaxMagnitude concode_elem_sep double getDerivativeAt"}
{"code": "boolean function ( double arg0 , double arg1 , double arg2 ) { return ( arg0 < arg1 ) && ( arg1 < arg2 ) ; }", "nl": "returns true if the arguments form a strictly increasing sequence concode_field_sep double functionValueAccuracy concode_elem_sep boolean resultComputed concode_elem_sep double defaultFunctionValueAccuracy concode_elem_sep UnivariateRealFunction f concode_elem_sep double relativeAccuracy concode_elem_sep double absoluteAccuracy concode_elem_sep double result concode_elem_sep int iterationCount concode_elem_sep int defaultMaximalIterationCount concode_elem_sep int maximalIterationCount concode_elem_sep double defaultAbsoluteAccuracy concode_elem_sep double defaultRelativeAccuracy concode_elem_sep long serialVersionUID concode_field_sep double getFunctionValueAccuracy concode_elem_sep void setAbsoluteAccuracy concode_elem_sep void verifySequence concode_elem_sep void setResult concode_elem_sep void setRelativeAccuracy concode_elem_sep void resetFunctionValueAccuracy concode_elem_sep int getMaximalIterationCount concode_elem_sep void resetRelativeAccuracy concode_elem_sep double getAbsoluteAccuracy concode_elem_sep int getIterationCount concode_elem_sep void resetAbsoluteAccuracy concode_elem_sep void verifyInterval concode_elem_sep double getResult concode_elem_sep void setMaximalIterationCount concode_elem_sep void resetMaximalIterationCount concode_elem_sep boolean isBracketing concode_elem_sep void clearResult concode_elem_sep void verifyBracketing concode_elem_sep double getRelativeAccuracy concode_elem_sep void setFunctionValueAccuracy"}
{"code": "Getcontentlanguage function ( ) { return new Getcontentlanguage ( ) ; }", "nl": "create an instance of getcontentlanguage concode_field_sep QName _SyncToken_QNAME concode_elem_sep QName _Dst_QNAME concode_elem_sep QName _SyncLevel_QNAME concode_elem_sep QName _Status_QNAME concode_elem_sep QName _Depth_QNAME concode_elem_sep QName _Responsedescription_QNAME concode_elem_sep QName _Nresults_QNAME concode_elem_sep QName _Timeout_QNAME concode_elem_sep QName _Href_QNAME concode_elem_sep QName _Src_QNAME concode_field_sep JAXBElement<String> createDst concode_elem_sep Propstat createPropstat concode_elem_sep Supportedlock createSupportedlock concode_elem_sep Propertybehavior createPropertybehavior concode_elem_sep Lockentry createLockentry concode_elem_sep Resourcetype createResourcetype concode_elem_sep Unauthenticated createUnauthenticated concode_elem_sep JAXBElement<String> createSyncToken concode_elem_sep JAXBElement<String> createStatus concode_elem_sep Link createLink concode_elem_sep SyncCollection createSyncCollection concode_elem_sep Limit createLimit concode_elem_sep Location createLocation concode_elem_sep JAXBElement<String> createSyncLevel concode_elem_sep SupportedReportSet createSupportedReportSet concode_elem_sep Lockinfo createLockinfo concode_elem_sep Lockscope createLockscope concode_elem_sep Getcontenttype createGetcontenttype concode_elem_sep Owner createOwner concode_elem_sep Read createRead concode_elem_sep All createAll concode_elem_sep Lockdiscovery createLockdiscovery concode_elem_sep Exclusive createExclusive concode_elem_sep ReadAcl createReadAcl concode_elem_sep JAXBElement<String> createDepth concode_elem_sep WriteContent createWriteContent concode_elem_sep Getetag createGetetag concode_elem_sep Omit createOmit concode_elem_sep Collection createCollection concode_elem_sep Propname createPropname concode_elem_sep Error createError concode_elem_sep ReadCurrentUserPrivilegeSet createReadCurrentUserPrivilegeSet concode_elem_sep Authenticated createAuthenticated concode_elem_sep Bind createBind concode_elem_sep JAXBElement<BigInteger> createNresults concode_elem_sep JAXBElement<String> createHref concode_elem_sep Report createReport concode_elem_sep JAXBElement<String> createTimeout concode_elem_sep Keepalive createKeepalive concode_elem_sep Shared createShared concode_elem_sep Locktype createLocktype concode_elem_sep Remove createRemove concode_elem_sep Write createWrite concode_elem_sep JAXBElement<String> createResponsedescription concode_elem_sep Creationdate createCreationdate concode_elem_sep JAXBElement<String> createSrc concode_elem_sep Activelock createActivelock concode_elem_sep Getcontentlength createGetcontentlength concode_elem_sep Prop createProp concode_elem_sep Displayname createDisplayname concode_elem_sep Response createResponse concode_elem_sep UnBind createUnbind concode_elem_sep SearchRequest createSearch concode_elem_sep Set createSet concode_elem_sep Propertyupdate createPropertyupdate concode_elem_sep Locktoken createLocktoken concode_elem_sep Source createSource concode_elem_sep Propfind createPropfind concode_elem_sep Self createSelf concode_elem_sep Getlastmodified createGetlastmodified concode_elem_sep SupportedReport createSupportedReport concode_elem_sep Unlock createUnlock concode_elem_sep Multistatus createMultistatus concode_elem_sep Allprop createAllprop concode_elem_sep WriteProperties createWriteProperties"}
{"code": "T function ( ViewGroup arg0 , int ... arg1 ) { ViewGroup loc0 = arg0 ; View loc1 = loc0 . getChildAt ( 0 ) ; for ( int loc2 = 0 ; loc2 < arg1 . length ; loc2 ++ ) { loc1 = ( ( ViewGroup ) loc1 ) . getChildAt ( arg1 [ loc2 ] ) ; } return ( T ) loc1 ; }", "nl": "gets the view at given path in the ui hierarchy , ignoring modals . concode_field_sep NativeModuleRegistry.Builder mNativeModuleRegistryBuilder concode_elem_sep Context mContext concode_elem_sep JavaScriptModuleRegistry.Builder mJSModuleRegistryBuilder concode_field_sep View findChild concode_elem_sep ReactInstanceEasyBuilder addNativeModule concode_elem_sep CatalystInstance build concode_elem_sep ReactInstanceEasyBuilder getCatalystInstanceBuilder concode_elem_sep ReactInstanceEasyBuilder addJSModule concode_elem_sep Predicate<View> hasTagValue concode_elem_sep ReactInstanceEasyBuilder setContext concode_elem_sep View getViewWithReactTestId concode_elem_sep ReactTestFactory.ReactInstanceEasyBuilder catalystInstanceBuilder concode_elem_sep String getTestId concode_elem_sep ReactTestFactory getReactTestFactory concode_elem_sep ReactInstanceManager.Builder getReactInstanceManagerBuilder"}
{"code": "boolean function ( ) { return myList != null ; }", "nl": "isvalidnode returns true if this node is valid ; false otherwise . by default , an invalid node is one that does n't belong to a list mylist is null , but subclasses can override this definition . concode_field_sep Object item concode_elem_sep List myList concode_field_sep ListNode next concode_elem_sep Object item concode_elem_sep ListNode prev concode_elem_sep void setItem concode_elem_sep void insertAfter concode_elem_sep void remove concode_elem_sep void insertBefore"}
{"code": "Type function ( String arg0 , Properties arg1 ) { Type loc0 = basic ( arg0 ) ; if ( loc0 != null ) { return loc0 ; } try { Class loc1 = ReflectHelper . classForName ( arg0 ) ; if ( loc1 != null ) { return typeFactory . byClass ( loc1 , arg1 ) ; } } catch ( ClassNotFoundException loc1 ) { } return null ; }", "nl": "uses heuristics to deduce the proper type given a string naming the type or java class . the search goes as follows : search for a basic type with ` typename ' as a registration key look for ` typename ' as a class name and if it names a type implementor , return an instanceif it names a compositeusertype or a usertype , return an instance of class wrapped intot the appropriate type adapterif it implements lifecycle , return the corresponding entity type if it implements serializable , return the corresponding serializable type concode_field_sep TypeFactory typeFactory concode_elem_sep BasicTypeRegistry basicTypeRegistry concode_field_sep void registerTypeOverride concode_elem_sep void registerTypeOverride concode_elem_sep void registerTypeOverride concode_elem_sep TypeFactory getTypeFactory concode_elem_sep TypeResolver scope concode_elem_sep BasicType basic"}
{"code": "void function ( ) { close ( ) ; super . finalize ( ) ; }", "nl": "invokes the close method concode_field_sep long size concode_elem_sep long pos concode_elem_sep FileChannel channel concode_elem_sep int BUFSIZE concode_elem_sep MappedByteBuffer[] mappedBuffers concode_field_sep void init concode_elem_sep int read concode_elem_sep int read concode_elem_sep FileChannel getChannel concode_elem_sep long length concode_elem_sep long getFilePointer concode_elem_sep boolean clean concode_elem_sep void seek concode_elem_sep void close"}
{"code": "Grid function ( ) { return solutionGrid ; }", "nl": "return solutiongrid concode_field_sep int difficulty concode_elem_sep Grid playerGrid concode_elem_sep Grid initialGrid concode_elem_sep Grid solutionGrid concode_field_sep Grid getInitialGrid concode_elem_sep Set<Cell> getIncorrect concode_elem_sep void setInitialGrid concode_elem_sep int getSize concode_elem_sep boolean hasWon concode_elem_sep Object deepClone concode_elem_sep void reset concode_elem_sep Grid getPlayerGrid concode_elem_sep int getDifficulty concode_elem_sep void setDifficulty"}
{"code": "void function ( ) { writer . write ( LT ) ; writer . write ( name ) ; }", "nl": "emits the beginning of the open tag . this method has to be called before other other methods are called on this element . concode_field_sep char EQ concode_elem_sep char LT concode_elem_sep char AMP concode_elem_sep char QUOT concode_elem_sep char GT concode_elem_sep XMLElement lastchild concode_elem_sep char SPACE concode_elem_sep String name concode_elem_sep boolean closed concode_elem_sep Writer writer concode_elem_sep boolean openTagDone concode_elem_sep char SLASH concode_field_sep void quote concode_elem_sep void finishOpenTag concode_elem_sep void addChildElement concode_elem_sep XMLElement text concode_elem_sep XMLElement attr concode_elem_sep XMLElement attr concode_elem_sep XMLElement attr concode_elem_sep void close concode_elem_sep XMLElement element"}
{"code": "boolean function ( ) { return fIsEnabled ; }", "nl": "returns whether the group is enabled or not . concode_field_sep TextEditBasedChange fChange concode_elem_sep TextEditGroup fTextEditGroup concode_elem_sep boolean fIsEnabled concode_field_sep void setEnabled concode_elem_sep String getName concode_elem_sep IRegion getRegion concode_elem_sep TextEditGroup getTextEditGroup concode_elem_sep TextEdit[] getTextEdits concode_elem_sep TextEditBasedChange getTextEditChange concode_elem_sep GroupCategorySet getGroupCategorySet"}
{"code": "Selection function ( int arg0 , int arg1 ) { Assert . isTrue ( arg0 >= 0 && arg1 >= 0 ) ; Selection loc0 = new Selection ( ) ; loc0 . fStart = arg0 ; loc0 . fLength = arg1 ; loc0 . fExclusiveEnd = arg0 + arg1 ; return loc0 ; }", "nl": "creates a new selection from the given start and length . concode_field_sep int fLength concode_elem_sep int fExclusiveEnd concode_elem_sep int INTERSECTS concode_elem_sep int AFTER concode_elem_sep int fStart concode_elem_sep int BEFORE concode_elem_sep int SELECTED concode_field_sep int getExclusiveEnd concode_elem_sep int getVisitSelectionMode concode_elem_sep Selection createFromStartEnd concode_elem_sep boolean coveredBy concode_elem_sep boolean coveredBy concode_elem_sep int getOffset concode_elem_sep boolean liesOutside concode_elem_sep int getEndVisitSelectionMode concode_elem_sep int getLength concode_elem_sep String toString concode_elem_sep boolean endsIn concode_elem_sep int getInclusiveEnd concode_elem_sep boolean covers concode_elem_sep boolean covers"}
{"code": "PaDataType [ ] function ( ) { return pluginMeta . getPaTypes ( ) ; }", "nl": "get padata type . concode_field_sep PreauthPluginMeta pluginMeta concode_elem_sep KrbContext context concode_field_sep int getVersion concode_elem_sep void init concode_elem_sep void tryFirst concode_elem_sep boolean process concode_elem_sep String getName concode_elem_sep List<EncryptionType> getEncTypes concode_elem_sep void prepareQuestions concode_elem_sep boolean tryAgain concode_elem_sep void destroy concode_elem_sep void setPreauthOptions concode_elem_sep PaFlags getFlags concode_elem_sep PluginRequestContext initRequestContext"}
{"code": "int function ( DateTimeFieldType arg0 ) { for ( int loc0 = 0 , loc1 = size ( ) ; loc0 < loc1 ; loc0 ++ ) { if ( getFieldType ( loc0 ) == arg0 ) { return loc0 ; } } return - 1 ; }", "nl": "gets the index of the specified field , or -1 if the field is unsupported . concode_field_sep PlaceHolder placeHolder concode_field_sep int[] getValues concode_elem_sep boolean isEqual concode_elem_sep DateTimeField getField concode_elem_sep DateTimeField getField concode_elem_sep DateTimeFieldType getFieldType concode_elem_sep int indexOfSupported concode_elem_sep int indexOfSupported concode_elem_sep boolean isSupported concode_elem_sep int compareTo concode_elem_sep boolean isBefore concode_elem_sep DateTimeField[] getFields concode_elem_sep int hashCode concode_elem_sep int get concode_elem_sep boolean equals concode_elem_sep String toString concode_elem_sep boolean isAfter concode_elem_sep DateTime toDateTime concode_elem_sep DateTimeFieldType[] getFieldTypes"}
{"code": "PolynomialFunction [ ] function ( ) { PolynomialFunction loc0 [ ] = new PolynomialFunction [ n ] ; System . arraycopy ( polynomials , 0 , loc0 , 0 , n ) ; return loc0 ; }", "nl": "returns a copy of the interpolating polynomials array . returns a fresh copy of the array . changes made to the copy will not affect the polynomials property . concode_field_sep int n concode_elem_sep long serialVersionUID concode_elem_sep PolynomialFunction polynomials[] concode_elem_sep double knots[] concode_field_sep double[] getKnots concode_elem_sep boolean isStrictlyIncreasing concode_elem_sep PolynomialSplineFunction polynomialSplineDerivative concode_elem_sep int getN concode_elem_sep UnivariateRealFunction derivative concode_elem_sep double value"}
{"code": "Color function ( ) { return playerColor ; }", "nl": "return the color of this player concode_field_sep int playerNumber concode_elem_sep Rules theRules concode_elem_sep String playerName concode_elem_sep Driver theDriver concode_elem_sep Color playerColor concode_elem_sep Move theMove concode_elem_sep GameplayMediator mediator concode_elem_sep int type concode_field_sep int getNumber concode_elem_sep void setName concode_elem_sep String getName concode_elem_sep void setColor concode_elem_sep int getType concode_elem_sep boolean makeMove concode_elem_sep void endOfGame concode_elem_sep String toString"}
{"code": "void function ( ) { gralComponents . clear ( ) ; gralComponents . addAll ( this . gralSeeds ) ; }", "nl": "removes any components sequences added so far , except for seed sequences , which are preserved . concode_field_sep PackageLiterals packageLiterals concode_elem_sep ClassLiterals classLiterals concode_elem_sep SequenceCollection gralComponents concode_elem_sep Collection<Sequence> gralSeeds concode_field_sep int numGeneratedSequences concode_elem_sep void addClassLevelLiteral concode_elem_sep void addGeneratedSequence concode_elem_sep Set<Sequence> getAllGeneratedSequences concode_elem_sep SimpleList<Sequence> getSequencesForType concode_elem_sep SimpleList<Sequence> getSequencesForType concode_elem_sep Set<Sequence> getAllPrimitiveSequences concode_elem_sep void addPackageLevelLiteral"}
{"code": "void function ( FlowControl arg0 ) { if ( arg0 == FlowControl . XON_XOFF ) throw new IllegalArgumentException ( Localizer . getLocalizedMessage ( Port . class , \"srini_string\" ) ) ; setFlowControl ( device . getHandle ( ) , arg0 . value , ( char ) 0 , ( char ) 0 ) ; }", "nl": "sets the flow control mode for this port . note : this method only supports modes different from xon xoff , because for this mode additional parameters are needed . in order to set xon xoff mode use #setflowcontrol flowcontrol , char , char instead . concode_field_sep Device device concode_field_sep void setBaudRate concode_elem_sep void setBaudRate concode_elem_sep void setDTR concode_elem_sep void setDTR concode_elem_sep void setDivisor concode_elem_sep void setDivisor concode_elem_sep void setDataCharacteristics concode_elem_sep void setDataCharacteristics concode_elem_sep void reset concode_elem_sep void reset concode_elem_sep void setBreakOn concode_elem_sep void setBreakOn concode_elem_sep void setRTS concode_elem_sep void setRTS"}
{"code": "AuditOrder function ( ) { return new PropertyAuditOrder ( propertyNameGetter , true ) ; }", "nl": "sort the results by the property in ascending order concode_field_sep PropertyNameGetter propertyNameGetter concode_field_sep AuditCriterion hasNotChanged concode_elem_sep AuditCriterion lt concode_elem_sep AuditProjection distinct concode_elem_sep AuditCriterion leProperty concode_elem_sep AggregatedAuditExpression maximize concode_elem_sep AuditProjection min concode_elem_sep AuditCriterion hasChanged concode_elem_sep AuditCriterion gtProperty concode_elem_sep AuditProjection function concode_elem_sep AuditCriterion neProperty concode_elem_sep AuditCriterion ltProperty concode_elem_sep AuditCriterion ge concode_elem_sep AuditCriterion between concode_elem_sep Triple<String,String,Boolean> getData concode_elem_sep AuditCriterion isNotNull concode_elem_sep AggregatedAuditExpression minimize concode_elem_sep AuditCriterion like concode_elem_sep AuditCriterion like concode_elem_sep AuditCriterion in concode_elem_sep AuditCriterion in concode_elem_sep AuditProjection max concode_elem_sep AuditCriterion geProperty concode_elem_sep AuditProjection count concode_elem_sep AuditCriterion eq concode_elem_sep AuditCriterion gt concode_elem_sep AuditProjection countDistinct concode_elem_sep AuditCriterion ne concode_elem_sep AuditCriterion isNull concode_elem_sep AuditCriterion eqProperty concode_elem_sep AuditCriterion le concode_elem_sep AuditCriterion ilike concode_elem_sep AuditCriterion ilike concode_elem_sep AuditOrder desc"}
{"code": "void function ( ) { synchronized ( _lock ) { _destroyed = true ; } }", "nl": "it is not possible to remove a watcher ... so we just set the tracker in destroyed mode which will simply ignore all subsequent event . concode_field_sep Watcher _treeWacher concode_elem_sep boolean _destroyed concode_elem_sep Object _lock concode_elem_sep ZKDataReader<T> _zkDataReader concode_elem_sep long _lastZkTxId concode_elem_sep int _depth concode_elem_sep Clock clock concode_elem_sep String MODULE concode_elem_sep IZKClient _zk concode_elem_sep String _root concode_elem_sep Set<NodeEventsListener<T>> _eventsListeners concode_elem_sep int _rootDepth concode_elem_sep Set<ErrorListener> _errorListeners concode_elem_sep Logger log concode_elem_sep Map<String,TrackedNode<T>> _tree concode_field_sep void process concode_elem_sep int getDepth concode_elem_sep void raiseEvents concode_elem_sep Map<String,TrackedNode<T>> handleNodeDeleted concode_elem_sep boolean handleEvent concode_elem_sep String logString concode_elem_sep int computeAbsoluteDepth concode_elem_sep long waitForZkTxId concode_elem_sep void registerListener concode_elem_sep Map<String,TrackedNode<T>> trackNode concode_elem_sep Map<String,TrackedNode<T>> handleNodeChildrenChanged concode_elem_sep Map<String,TrackedNode<T>> getTree concode_elem_sep Map<String,TrackedNode<T>> handleNodeDataChanged concode_elem_sep long getLastZkTxId concode_elem_sep int computeDepth concode_elem_sep void raiseError concode_elem_sep void registerErrorListener concode_elem_sep String getRoot concode_elem_sep IZKClient getZKCient concode_elem_sep void track concode_elem_sep void track"}
{"code": "boolean function ( ) { return this . useCriterion3 ; }", "nl": "get usecriterion3 . concode_field_sep boolean useCriterion4 concode_elem_sep GenPolynomial<C> pi concode_elem_sep int i concode_elem_sep GenPolynomial<C> pj concode_elem_sep int j concode_elem_sep boolean useCriterion3 concode_elem_sep int n concode_elem_sep boolean toZero concode_field_sep MiniPair toMiniPair concode_elem_sep int getPairNumber concode_elem_sep void setUseCriterion3 concode_elem_sep boolean equals concode_elem_sep void setZero concode_elem_sep boolean isZero concode_elem_sep void setUseCriterion4 concode_elem_sep String toString concode_elem_sep int compareTo concode_elem_sep void pairNumber concode_elem_sep boolean getUseCriterion4"}
{"code": "int function ( V arg0 , V arg1 ) { return arg0 == null ? ( arg1 == null ? 0 : - 1 ) : ( arg1 == null ? 1 : ( ( Comparable ) arg0 ) . compareTo ( arg1 ) ) ; }", "nl": "compare two object about result if v1 > v2 , return 1 if v1 = v2 , return 0 if v1 about rule if v1 is null , v2 is null , then return 0 if v1 is null , v2 is not null , then return -1 if v1 is not null , v2 is null , then return 1 return v1 . comparable #compareto object concode_field_sep PlaceHolder placeHolder concode_field_sep String nullStrToEmpty concode_elem_sep Long[] transformLongArray concode_elem_sep long[] transformLongArray concode_elem_sep Integer[] transformIntArray concode_elem_sep int[] transformIntArray concode_elem_sep boolean isEquals"}
{"code": "void function ( ) { usage ( null ) ; }", "nl": "throw an invalid script exception describing the proper script usage . this should be used by derived classes whenever parsing indicates invalid input . concode_field_sep String description concode_elem_sep Resolver resolver concode_elem_sep String copyright concode_elem_sep Throwable invalidScriptError concode_elem_sep WidgetTester tester concode_field_sep String toXMLString concode_elem_sep String getXMLTag concode_elem_sep Widget resolve concode_elem_sep Element addAttributes concode_elem_sep void run concode_elem_sep Element toXML concode_elem_sep void setDescription concode_elem_sep String simpleClassName concode_elem_sep String getDescription concode_elem_sep String getDefaultDescription concode_elem_sep void runStep concode_elem_sep WidgetTester resolveTester concode_elem_sep void setScriptError concode_elem_sep HashMap createAttributeMap concode_elem_sep HashMap getAttributes concode_elem_sep void writeObject concode_elem_sep Element addContent concode_elem_sep void parseStepAttributes concode_elem_sep String getUsage concode_elem_sep void readObject concode_elem_sep String toEditableString concode_elem_sep Step createStep concode_elem_sep Step createStep concode_elem_sep Class resolveClass concode_elem_sep WidgetFinder getFinder concode_elem_sep Resolver getResolver"}
{"code": "void function ( IScreenCaptureHandler arg0 ) { ScreenCapture . arg0 = arg0 ; }", "nl": "override the default screen capture strategy with a user-defined one . concode_field_sep int MAX_CAPTURE_RETRIES concode_elem_sep int CAPTURE_RETRY_INTERVAL concode_elem_sep IScreenCaptureHandler handler concode_elem_sep String BASE_IMAGE_NAME concode_elem_sep String OUTPUT_DIR concode_elem_sep int _counter concode_elem_sep String WINDOW_TESTER_SCREEN_CAPTURE_PATHS_KEY concode_elem_sep String PATH_DELIM concode_elem_sep Robot _robot concode_elem_sep String IMAGE_EXT concode_field_sep File createScreenCaptureFile concode_elem_sep void ensureOutputDirExists concode_elem_sep String getOutputLocation concode_elem_sep File createScreenCapture concode_elem_sep File createScreenCapture concode_elem_sep File createScreenCapture concode_elem_sep File createScreenCapture concode_elem_sep IScreenCaptureHandler getDefaultHandler concode_elem_sep IScreenCaptureHandler getHandler concode_elem_sep void setOutputLocation concode_elem_sep BufferedImage captureScreen"}
{"code": "SSLConnectionSocketFactory function ( ) { return new SSLConnectionSocketFactory ( SSLContexts . createDefault ( ) , BROWSER_COMPATIBLE_HOSTNAME_VERIFIER ) ; }", "nl": "obtains default ssl socket factory with an ssl context based on the standard jsse trust material cacerts file in the security properties directory . system properties are not taken into consideration . concode_field_sep String SSLV2 concode_elem_sep X509HostnameVerifier STRICT_HOSTNAME_VERIFIER concode_elem_sep String TLS concode_elem_sep X509HostnameVerifier ALLOW_ALL_HOSTNAME_VERIFIER concode_elem_sep X509HostnameVerifier hostnameVerifier concode_elem_sep String[] supportedCipherSuites concode_elem_sep X509HostnameVerifier BROWSER_COMPATIBLE_HOSTNAME_VERIFIER concode_elem_sep String[] supportedProtocols concode_elem_sep javax.net.ssl.SSLSocketFactory socketfactory concode_elem_sep String SSL concode_field_sep void verifyHostname concode_elem_sep String[] split concode_elem_sep Socket createSocket concode_elem_sep Socket createLayeredSocket concode_elem_sep Socket connectSocket concode_elem_sep X509HostnameVerifier getHostnameVerifier concode_elem_sep SSLConnectionSocketFactory getSystemSocketFactory concode_elem_sep void prepareSocket"}
{"code": "GreatestCommonDivisor < BigRational > function ( BigRational arg0 ) { GreatestCommonDivisorAbstract < BigRational > loc0 , loc1 ; return getImplementation ( arg0 ) ; }", "nl": "determine suitable proxy for gcd algorithms , case bigrational . concode_field_sep Logger logger concode_field_sep GreatestCommonDivisor<ModInteger> getImplementation concode_elem_sep GreatestCommonDivisor<BigInteger> getImplementation concode_elem_sep GreatestCommonDivisor<BigRational> getImplementation concode_elem_sep GreatestCommonDivisor<C> getImplementation"}
{"code": "void function ( ) { run ( WorkbenchFinder . getActiveWindow ( ) ) ; }", "nl": "note : it is callers responsibility to validate post exec . concode_field_sep PlaceHolder placeHolder concode_field_sep void syncExec"}
{"code": "boolean function ( Object arg0 ) { for ( int loc0 = 0 ; loc0 < iPredicates . length ; loc0 ++ ) { if ( iPredicates [ loc0 ] . evaluate ( arg0 ) ) { return false ; } } return true ; }", "nl": "evaluates the predicate returning false if any stored predicate returns false . concode_field_sep long serialVersionUID concode_elem_sep Predicate[] iPredicates concode_field_sep Predicate getInstance concode_elem_sep Predicate getInstance concode_elem_sep Predicate[] getPredicates"}
{"code": "Buffer function ( Buffer arg0 ) { return UnmodifiableBuffer . decorate ( arg0 ) ; }", "nl": "returns an unmodifiable buffer backed by the given buffer . concode_field_sep Buffer EMPTY_BUFFER concode_field_sep Buffer predicatedBuffer concode_elem_sep Buffer transformedBuffer concode_elem_sep Buffer typedBuffer concode_elem_sep Buffer blockingBuffer concode_elem_sep Buffer synchronizedBuffer"}
{"code": "String function ( ) { return ( this . name ) ; }", "nl": "return the name of the command that we will look up anddelegate execution to . concode_field_sep String name concode_elem_sep String catalogName concode_elem_sep boolean optional concode_elem_sep String nameKey concode_field_sep void setName concode_elem_sep String getNameKey concode_elem_sep void setCatalogName concode_elem_sep void setNameKey concode_elem_sep String getCatalogName concode_elem_sep boolean postprocess concode_elem_sep Command getCommand concode_elem_sep boolean isOptional concode_elem_sep boolean execute concode_elem_sep void setOptional"}
{"code": "RealMatrix function ( double [ ] [ ] arg0 ) { return new RealMatrixImpl ( arg0 ) ; }", "nl": "returns a realmatrix whose entries are the the values in thethe input array . the input array is copied , not referenced . concode_field_sep PlaceHolder placeHolder concode_field_sep BigMatrix createColumnBigMatrix concode_elem_sep BigMatrix createColumnBigMatrix concode_elem_sep BigMatrix createColumnBigMatrix concode_elem_sep RealMatrix createColumnRealMatrix concode_elem_sep RealMatrix createRowRealMatrix concode_elem_sep BigMatrix createBigMatrix concode_elem_sep BigMatrix createBigMatrix concode_elem_sep BigMatrix createBigMatrix concode_elem_sep BigMatrix createRowBigMatrix concode_elem_sep BigMatrix createRowBigMatrix concode_elem_sep BigMatrix createRowBigMatrix"}
{"code": "void function ( Element arg0 ) { }", "nl": "called when the javadoc ant script is generated . concode_field_sep IJavadocExportWizardPageContainer fContainer concode_elem_sep IStatus fPageStatus concode_field_sep void setVisible concode_elem_sep IJavadocExportWizardPageContainer getContainer concode_elem_sep void updateArguments concode_elem_sep IStatus getStatus concode_elem_sep void setStatus concode_elem_sep String[] getConfiguredJavadocOptions concode_elem_sep void performHelp concode_elem_sep String[] getConfiguredVMOptions concode_elem_sep IJavaElement[] getSelectedJavaElements concode_elem_sep Control createContents concode_elem_sep void dispose concode_elem_sep IRunnableContext getRunnableContext concode_elem_sep void setContainer concode_elem_sep void statusUpdated"}
{"code": "int function ( ) { return count ; }", "nl": "return the count of records in the buffer . used for task input only . concode_field_sep int count concode_elem_sep ByteBuffer buffer concode_field_sep ByteBuffer buffer concode_elem_sep void buffer"}
{"code": "void function ( String arg0 , JsSymbolMap arg1 ) { resourceSymbols . put ( arg0 , arg1 ) ; }", "nl": "inserts a symbol map into the set of available symbol maps , keyed by resource url . concode_field_sep int ERROR_SYMBOL_FETCH_FAIL concode_elem_sep IterableFastStringMap<JsSymbolMap> resourceSymbols concode_elem_sep String resourceUrl concode_elem_sep List<PendingRequest> pendingRequests concode_elem_sep Callback callback concode_elem_sep int ERROR_MANIFEST_NOT_LOADED concode_elem_sep boolean manifestLoaded concode_elem_sep SymbolServerManifest symbolServerManifest concode_elem_sep IterableFastStringMap<List<XhrCallback>> queuedSymbolMapRequests concode_elem_sep Url symbolManifestUrl concode_elem_sep Url mainResourceUrl concode_field_sep void init concode_elem_sep void attemptResymbolization concode_elem_sep void onSymbolsReady concode_elem_sep void onSymbolsFetchFailed concode_elem_sep JsSymbolMap get concode_elem_sep void serviceRequest concode_elem_sep void cancelPendingRequests concode_elem_sep void reSymbolize concode_elem_sep void requestSymbolsFor concode_elem_sep ResourceSymbolInfo lookupEntryInManifest"}
{"code": "void function ( PersistenceUnitMetadataHolder arg0 ) { persistenceUnitMetadataHolderList . add ( arg0 ) ; }", "nl": "track the passed persistence units for the application concode_field_sep AttachmentKey<PersistenceUnitsInApplication> PERSISTENCE_UNITS_IN_APPLICATION concode_elem_sep List<PersistenceUnitMetadataHolder> persistenceUnitMetadataHolderList concode_elem_sep int count concode_field_sep void increment concode_elem_sep List<PersistenceUnitMetadataHolder> getPersistenceUnitHolders concode_elem_sep int getCount"}
{"code": "void function ( AST arg0 , PrintStream arg1 ) { showAst ( arg0 , new PrintWriter ( arg1 ) ) ; }", "nl": "prints the ast in ` ascii art ' form to the specified print stream . concode_field_sep boolean showClassNames concode_elem_sep Map tokenTypeNameCache concode_field_sep String showAsString concode_elem_sep String nodeToString concode_elem_sep void showNode concode_elem_sep String escapeMultibyteChars concode_elem_sep String getTokenTypeName concode_elem_sep boolean isShowClassNames concode_elem_sep void appendEscapedMultibyteChars"}
{"code": "String function ( ) { return company ; }", "nl": "this method returns the value of the database column sys_ip_area . company concode_field_sep String areaCode concode_elem_sep String IPCODE_UNKNOWN concode_elem_sep String city concode_elem_sep String province concode_elem_sep String edu concode_elem_sep String district concode_elem_sep String company concode_elem_sep Date createTime concode_elem_sep Long endIp concode_elem_sep String owner concode_elem_sep Long startIp concode_elem_sep String country concode_field_sep boolean isIp concode_elem_sep void setCountry concode_elem_sep Date getCreateTime concode_elem_sep String getCountry concode_elem_sep void setProvince concode_elem_sep long valueOfIpv4 concode_elem_sep String getEdu concode_elem_sep Long getStartIp concode_elem_sep Long getEndIp concode_elem_sep String getOwner concode_elem_sep void setStartIp concode_elem_sep void setEndIp concode_elem_sep void setOwner concode_elem_sep String getStartIpv4 concode_elem_sep String getEndIpv4 concode_elem_sep String getAreaCode concode_elem_sep String ipv4 concode_elem_sep String getDistrict concode_elem_sep String getProvince concode_elem_sep void setDistrict concode_elem_sep void setCompany concode_elem_sep String getCity concode_elem_sep void setCity concode_elem_sep void setAreaCode concode_elem_sep void setCreateTime concode_elem_sep void setEdu concode_elem_sep String toString"}
{"code": "boolean function ( ISelection arg0 ) { if ( ( arg0 == null ) || ( arg0 . isEmpty ( ) ) ) { return true ; } else { return false ; } }", "nl": "is the iselectionempty or null ? concode_field_sep String DOT concode_elem_sep String SLASH_STRING concode_elem_sep char DOT_CHAR concode_elem_sep char SLASH_CHAR concode_field_sep void safeJoin concode_elem_sep void assertNotEmpty concode_elem_sep String slashAppend concode_elem_sep String slashAppend concode_elem_sep String dotAppend concode_elem_sep String dotAppend"}
{"code": "void function ( DialectResolver arg0 ) { resolvers . add ( arg0 ) ; }", "nl": "add a resolver at the end of the underlying resolver list . the resolver added by this method is at lower priority than any other existing resolvers . concode_field_sep CoreMessageLogger LOG concode_elem_sep List<DialectResolver> resolvers concode_field_sep void addResolverAtFirst concode_elem_sep Dialect resolveDialect"}
{"code": "void function ( ) { region . evictAll ( ) ; }", "nl": "clear the update-timestamps data . concode_field_sep SessionFactoryImplementor factory concode_elem_sep boolean DEBUG_ENABLED concode_elem_sep String REGION_NAME concode_elem_sep CoreMessageLogger LOG concode_elem_sep TimestampsRegion region concode_field_sep boolean isUpToDate concode_elem_sep Long getLastUpdateTimestampForSpace concode_elem_sep void preInvalidate concode_elem_sep TimestampsRegion getRegion concode_elem_sep void destroy concode_elem_sep String toString concode_elem_sep void invalidate"}
{"code": "Long function ( ) { return startIp ; }", "nl": "this method returns the value of the database column sys_ip_area . start_ip concode_field_sep String areaCode concode_elem_sep String IPCODE_UNKNOWN concode_elem_sep String city concode_elem_sep String province concode_elem_sep String edu concode_elem_sep String district concode_elem_sep String company concode_elem_sep Date createTime concode_elem_sep Long endIp concode_elem_sep String owner concode_elem_sep Long startIp concode_elem_sep String country concode_field_sep boolean isIp concode_elem_sep void setCountry concode_elem_sep Date getCreateTime concode_elem_sep String getCountry concode_elem_sep void setProvince concode_elem_sep long valueOfIpv4 concode_elem_sep String getEdu concode_elem_sep Long getEndIp concode_elem_sep String getOwner concode_elem_sep void setStartIp concode_elem_sep void setEndIp concode_elem_sep void setOwner concode_elem_sep String getStartIpv4 concode_elem_sep String getEndIpv4 concode_elem_sep String getAreaCode concode_elem_sep String ipv4 concode_elem_sep String getDistrict concode_elem_sep String getProvince concode_elem_sep void setDistrict concode_elem_sep void setCompany concode_elem_sep String getCity concode_elem_sep void setCity concode_elem_sep void setAreaCode concode_elem_sep void setCreateTime concode_elem_sep String getCompany concode_elem_sep void setEdu concode_elem_sep String toString"}
{"code": "void function ( final Element arg0 ) { list . add ( arg0 ) ; }", "nl": "add a single element to the list of elements . concode_field_sep ArrayList<Element> list concode_field_sep void addAll concode_elem_sep List<Element> elements"}
{"code": "int function ( ) { return 4 ; }", "nl": "returns the number of values for each vertex in the vertex buffer layout . concode_field_sep AbstractPrimitiveShader shader concode_elem_sep VectorXYZW lightPos concode_elem_sep GL3 gl concode_elem_sep int valueTypeSize concode_elem_sep int glValueType concode_elem_sep int[] id concode_elem_sep int vertexCount concode_field_sep void addVerticesToValueBuffer concode_elem_sep int valueTypeSize concode_elem_sep void setShader concode_elem_sep int glValueType concode_elem_sep List<VectorXYZW> getPrimitivesShadowVolumes concode_elem_sep BufferT createBuffer concode_elem_sep void render concode_elem_sep void delete concode_elem_sep void put concode_elem_sep void setPointerLayout"}
{"code": "StatementReplacer function ( ) { return statementReplacer ; }", "nl": "gets the statementreplacer for the replace statements in the file parsed . concode_field_sep String lineSep concode_elem_sep StatementReplacer statementReplacer concode_elem_sep String spinfoFileName concode_elem_sep String tempDir concode_elem_sep SplitterObject[][] splitterObjects concode_field_sep void readPptStatements concode_elem_sep boolean isComment concode_elem_sep SplitterObject[][] createSplitterObjects concode_elem_sep void setFormatting concode_elem_sep void readReplaceStatements concode_elem_sep void parseFile concode_elem_sep boolean isFormatting concode_elem_sep boolean isBlank concode_elem_sep SplitterObject[][] getSplitterObjects"}
{"code": "Map < K , V > function ( int arg0 ) { return new HashMap < K , V > ( determineProperSizing ( arg0 ) , LOAD_FACTOR ) ; }", "nl": "build a properly sized map , especially handling load size and load factor to prevent immediate resizing . especially helpful for copy map contents . concode_field_sep int MINIMUM_INITIAL_CAPACITY concode_elem_sep List EMPTY_LIST concode_elem_sep Collection EMPTY_COLLECTION concode_elem_sep Map EMPTY_MAP concode_elem_sep float LOAD_FACTOR concode_field_sep Set<T> makeCopy concode_elem_sep Map<X,Y> makeCopy concode_elem_sep boolean isEmpty concode_elem_sep boolean isEmpty concode_elem_sep boolean isEmpty concode_elem_sep ArrayList<T> arrayList concode_elem_sep boolean isNotEmpty concode_elem_sep boolean isNotEmpty concode_elem_sep ConcurrentHashMap<K,V> concurrentMap concode_elem_sep ConcurrentHashMap<K,V> concurrentMap concode_elem_sep int determineProperSizing concode_elem_sep int determineProperSizing concode_elem_sep int determineProperSizing"}
{"code": "char function ( ) { return this . last ; }", "nl": "liefert das signal , mit dem die letzte ' 1 ' codiert wurde . concode_field_sep ZeroBuffer zeroBuffer concode_elem_sep int pointer concode_elem_sep char last concode_elem_sep State state concode_elem_sep boolean[] buffer concode_elem_sep AMI.Medium medium concode_field_sep State next concode_elem_sep boolean[] receive concode_elem_sep HDB3Receiver.Lookahead lookahead concode_elem_sep void puffern concode_elem_sep boolean[] flush concode_elem_sep int size concode_elem_sep boolean get concode_elem_sep void clear concode_elem_sep void reset concode_elem_sep void buffer concode_elem_sep boolean[] convertToBoolArray"}
{"code": "Reflector function ( ) { return _delegate ; }", "nl": "returns delegate reflector concode_field_sep GenericArrayReflector _array concode_elem_sep Collection4 _collectionPredicates concode_elem_sep Hashtable4 _classByClass concode_elem_sep ObjectContainerBase _stream concode_elem_sep KnownClassesRepository _repository concode_elem_sep Transaction _trans concode_elem_sep Reflector _delegate concode_field_sep void setTransaction concode_elem_sep void registerCollection concode_elem_sep void registerCollection concode_elem_sep ReflectClass forName concode_elem_sep ReflectClass[] knownClasses concode_elem_sep void configuration concode_elem_sep GenericClass ensureDelegate concode_elem_sep GenericClass genericClass concode_elem_sep boolean isCollection concode_elem_sep ReflectClassPredicate classPredicate concode_elem_sep void registerPrimitiveClass concode_elem_sep boolean hasTransaction concode_elem_sep ReflectArray array concode_elem_sep Object deepClone concode_elem_sep ReflectClass forClass concode_elem_sep ReflectClass forGenericObject concode_elem_sep ObjectContainerBase getStream concode_elem_sep ReflectClass forObject concode_elem_sep void setParent concode_elem_sep T withLock concode_elem_sep void register"}
{"code": "void function ( CLIWrapper arg0 ) { throw new IllegalStateException ( \"srini_string\" ) ; }", "nl": "creates this element in domain model and also creates other resources if needed e.g. external files concode_field_sep PlaceHolder placeHolder concode_field_sep String getName concode_elem_sep void remove concode_elem_sep void remove"}
{"code": "List < Integer > function ( String arg0 ) { List < Integer > loc0 = _componentToTasks . get ( arg0 ) ; if ( loc0 == null ) return new ArrayList < > ( ) ; else return new ArrayList < > ( loc0 ) ; }", "nl": "gets the task ids allocated for the given component id . the task ids are always returned in ascending order . concode_field_sep StormTopology _topology concode_elem_sep String _stormId concode_elem_sep Map<Integer,String> _taskToComponent concode_elem_sep Map<String,List<Integer>> _componentToTasks concode_elem_sep Map _stormConf concode_elem_sep Map<String,Map<String,Fields>> _componentToStreamToFields concode_field_sep int maxTopologyMessageTimeout concode_elem_sep String getComponentId concode_elem_sep Map<String,Map<String,Grouping>> getTargets concode_elem_sep Map<Integer,String> getTaskToComponent concode_elem_sep Set<String> getComponentIds concode_elem_sep String getStormId concode_elem_sep Set<String> getComponentStreams concode_elem_sep String toJSONString concode_elem_sep StormTopology getRawTopology concode_elem_sep Fields getComponentOutputFields concode_elem_sep Fields getComponentOutputFields concode_elem_sep ComponentCommon getComponentCommon concode_elem_sep Map<GlobalStreamId,Grouping> getSources"}
{"code": "int function ( T arg0 ) { JdbcTemplate loc0 = getJdbcTemplate ( ) ; int loc1 = loc0 . update ( getSqlUpdate ( ) , getValuesForUpdate ( arg0 ) ) ; if ( loc1 != 0 && loc1 != 1 ) { throw new RuntimeException ( \"srini_string\" + loc1 + \"srini_string\" ) ; } return loc1 ; }", "nl": "updates the given bean in the database sql update concode_field_sep int[] insertJdbcTypes concode_elem_sep DataSource dataSource concode_elem_sep String autoIncrColumnName concode_field_sep Long doInsertAutoIncrOLD concode_elem_sep String getSqlSelect concode_elem_sep Object[] getValuesForPrimaryKey concode_elem_sep int doDelete concode_elem_sep int doDelete concode_elem_sep String getSqlCountAll concode_elem_sep void log concode_elem_sep String getSqlCount concode_elem_sep boolean doSelect concode_elem_sep T doSelect concode_elem_sep JdbcTemplate getJdbcTemplate concode_elem_sep PreparedStatementCreator getPreparedStatementCreator concode_elem_sep boolean doExists concode_elem_sep boolean doExists concode_elem_sep long doCountAll concode_elem_sep String getSqlInsert concode_elem_sep String getSqlUpdate concode_elem_sep Object[] getValuesForInsert concode_elem_sep Object[] getValuesForUpdate concode_elem_sep long doInsertAutoIncr concode_elem_sep RowMapper<T> getRowMapper concode_elem_sep RowMapper<T> getRowMapper concode_elem_sep void doInsert concode_elem_sep String toString concode_elem_sep String getSqlDelete"}
{"code": "void function ( ) { final String loc0 = \"srini_string\" ; parseAndAssertCommandType ( loc0 , HelpCommand . class ) ; }", "nl": "test 0-argument commands concode_field_sep Parser parser concode_field_sep void findCommand_invalidArgs concode_elem_sep void addCommand_invalidArgs concode_elem_sep void addCommand_duplicateTags_merged concode_elem_sep void deleteCommand_numericArg_indexParsedCorrectly concode_elem_sep void viewCommand_argsIsNotSingleNumber concode_elem_sep void viewCommand_noArgs concode_elem_sep void viewAllCommand_argsIsNotSingleNumber concode_elem_sep void emptyInput_returnsIncorrect concode_elem_sep void clearCommand_parsedCorrectly concode_elem_sep void unknownCommandWord_returnsHelp concode_elem_sep void viewAllCommand_noArgs concode_elem_sep void addCommand_invalidPersonDataInArgs concode_elem_sep void addCommand_validPersonData_parsedCorrectly concode_elem_sep void listCommand_parsedCorrectly concode_elem_sep void viewCommand_numericArg_indexParsedCorrectly concode_elem_sep T parseAndAssertCommandType concode_elem_sep void findCommand_validArgs_parsedCorrectly concode_elem_sep String convertPersonToAddCommandString concode_elem_sep void deleteCommand_noArgs concode_elem_sep void deleteCommand_argsIsNotSingleNumber concode_elem_sep Person generateTestPerson concode_elem_sep void findCommand_duplicateKeys_parsedCorrectly concode_elem_sep void parseAndAssertIncorrectWithMessage concode_elem_sep void setup concode_elem_sep void viewAllCommand_numericArg_indexParsedCorrectly concode_elem_sep void exitCommand_parsedCorrectly"}
{"code": "void function ( double arg0 ) { VectorXYZ loc0 = lookAt . subtract ( pos ) ; VectorXYZ loc1 = loc0 . rotateVec ( arg0 , up ) ; lookAt = pos . add ( loc1 ) ; }", "nl": "rotates the camera around the yaw axis concode_field_sep VectorXYZ pos concode_elem_sep VectorXYZ lookAt concode_elem_sep VectorXYZ up concode_field_sep void moveMapRight concode_elem_sep void setCamera concode_elem_sep void setCamera concode_elem_sep void moveForward concode_elem_sep void move concode_elem_sep void move concode_elem_sep void roll concode_elem_sep VectorXYZ getUp concode_elem_sep void moveMapUp concode_elem_sep void setPos concode_elem_sep void setPos concode_elem_sep void mapPitch concode_elem_sep VectorXYZ getRight concode_elem_sep void setLookAt concode_elem_sep void setLookAt concode_elem_sep VectorXYZ getViewDirection concode_elem_sep VectorXYZ getPos concode_elem_sep void moveRight concode_elem_sep VectorXYZ getLookAt concode_elem_sep void moveMapForward concode_elem_sep String toString concode_elem_sep void pitch concode_elem_sep void rotateY concode_elem_sep void moveUp"}
{"code": "Object function ( Object arg0 , long arg1 ) { if ( ! region . checkValid ( ) ) { return null ; } final Object loc0 = cache . get ( arg0 ) ; if ( loc0 == null ) { putValidator . registerPendingPut ( arg0 ) ; } return loc0 ; }", "nl": "attempt to retrieve an object from the cache . concode_field_sep AdvancedCache<Object,Object> writeCache concode_elem_sep AdvancedCache cache concode_elem_sep PutFromLoadValidator putValidator concode_elem_sep boolean TRACE_ENABLED concode_elem_sep Log log concode_elem_sep BaseRegion region concode_field_sep void removeAll concode_elem_sep void evictAll concode_elem_sep boolean putFromLoad concode_elem_sep boolean putFromLoad concode_elem_sep boolean insert concode_elem_sep boolean update concode_elem_sep void remove concode_elem_sep void evict"}
{"code": "void function ( int arg0 ) { if ( position != arg0 ) { int loc0 = position ; position = arg0 ; listeners . firePropertyChange ( PROPERTY_POSITION , new Integer ( loc0 ) , new Integer ( position ) ) ; } }", "nl": "sets the location of the guide concode_field_sep String PROPERTY_CHILDREN concode_elem_sep boolean horizontal concode_elem_sep String PROPERTY_POSITION concode_elem_sep int position concode_elem_sep Map map concode_elem_sep long serialVersionUID concode_elem_sep PropertyChangeSupport listeners concode_field_sep int getAlignment concode_elem_sep void attachPart concode_elem_sep int getPosition concode_elem_sep void detachPart concode_elem_sep void addPropertyChangeListener concode_elem_sep void removePropertyChangeListener concode_elem_sep void setHorizontal concode_elem_sep Map getMap concode_elem_sep boolean isHorizontal concode_elem_sep Set getParts"}
{"code": "void function ( final int arg0 ) { this . m_positiveYErrorPixel = arg0 ; }", "nl": "intended for aerrorbarpolicyconfigurable only . concode_field_sep int m_negativeYErrorPixel concode_elem_sep int m_negativeXErrorPixel concode_elem_sep int m_positiveYErrorPixel concode_elem_sep int m_positiveXErrorPixel concode_elem_sep ITrace2D m_trace concode_elem_sep long serialVersionUID concode_field_sep void setTrace concode_elem_sep void setPositiveXErrorPixel concode_elem_sep int getNegativeXErrorPixel concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep int getPositiveYErrorPixel concode_elem_sep void setNegativeYErrorPixel concode_elem_sep void clear concode_elem_sep ITrace2D getTrace concode_elem_sep void setNegativeXErrorPixel concode_elem_sep int getPositiveXErrorPixel concode_elem_sep int getNegativeYErrorPixel"}
{"code": "String function ( ) { final StringBuilder loc0 = new StringBuilder ( \"srini_string\" ) ; for ( Ord < Pair < String , Object >> loc1 : Ord . zip ( values ) ) { if ( loc1 . i > 0 ) { loc0 . append ( \"srini_string\" ) ; } loc0 . append ( loc1 . e . left ) . append ( \"srini_string\" ) . append ( loc1 . e . right ) . append ( \"srini_string\" ) ; } loc0 . append ( \"srini_string\" ) ; return loc0 . toString ( ) ; }", "nl": "converts the collected terms and values to a string . does not write to the parent writer . concode_field_sep List<Pair<String,Object>> values concode_elem_sep PrintWriter pw concode_elem_sep Map<Prel,OpId> ids concode_elem_sep Spacer spacer concode_elem_sep SqlExplainLevel detailLevel concode_field_sep void explain concode_elem_sep RelWriter input concode_elem_sep RelWriter item concode_elem_sep void explain_ concode_elem_sep boolean nest concode_elem_sep void explainInputs concode_elem_sep RelWriter done concode_elem_sep SqlExplainLevel getDetailLevel concode_elem_sep RelWriter itemIf"}
{"code": "WidgetFinderService function ( Display arg0 ) { if ( _finderService == null ) _finderService = new WidgetFinderService ( arg0 ) ; return _finderService ; }", "nl": "get the widget finder that is doing the heavy lifting . concode_field_sep IUIContext _ui concode_elem_sep WidgetFinderService _finderService concode_field_sep Widget[] findAllInScope concode_elem_sep IWidgetLocator[] findAll"}
{"code": "void function ( ) { }", "nl": "load default values for the shader . should be called after every #useshader and before any draw calls . concode_field_sep int shaderProgram concode_elem_sep GL3 gl concode_elem_sep int vertexShader concode_elem_sep int fragmentShader concode_field_sep void useShader concode_elem_sep int getProgram concode_elem_sep void disableShader concode_elem_sep void freeResources concode_elem_sep void finalize concode_elem_sep void validateShader"}
{"code": "void function ( Config4Impl arg0 ) { }", "nl": "always call super if you override concode_field_sep PlaceHolder placeHolder concode_field_sep void lockFile concode_elem_sep Object createWeakReference concode_elem_sep Reflector createReflector concode_elem_sep Class constructorClass concode_elem_sep void killYapRef concode_elem_sep boolean isConnected concode_elem_sep Thread addShutdownHook concode_elem_sep Object weakReferenceTarget concode_elem_sep Constructor serializableConstructor concode_elem_sep void forEachCollectionElement concode_elem_sep void registerCollections concode_elem_sep long nanoTime concode_elem_sep Reflector reflectorForType concode_elem_sep boolean methodIsAvailable concode_elem_sep Object deserialize concode_elem_sep void extendConfiguration concode_elem_sep Config4Class extendConfiguration concode_elem_sep void unlockFile concode_elem_sep Object createActivateObjectReference concode_elem_sep int ver concode_elem_sep NetTypeHandler[] types concode_elem_sep void setAccessible concode_elem_sep String format concode_elem_sep boolean isEnum concode_elem_sep void throwIllegalArgumentException concode_elem_sep Object createReferenceQueue concode_elem_sep byte[] serialize concode_elem_sep void pollReferenceQueue concode_elem_sep Object getContextClassLoader concode_elem_sep Object getYapRefObject concode_elem_sep Class loadClass concode_elem_sep void removeShutdownHook concode_elem_sep boolean isCollectionTranslator concode_elem_sep boolean useNativeSerialization concode_elem_sep NetTypeHandler[] netTypes"}
{"code": "boolean function ( Document arg0 , ValidationError arg1 ) { int loc0 = arg1 . getLineNumber ( ) ; String loc1 = arg1 . getValidatorName ( ) ; if ( loc1 . equals ( \"srini_string\" ) ) { loc1 = extractJSValidatorName ( arg1 . getMessage ( ) ) ; } return isTriggeredBy ( arg0 , loc0 , loc1 ) ; }", "nl": "return true if the rule is triggered by the given line and name given the structure of the supplied document concode_field_sep List<String> parameters concode_elem_sep int lineNumber concode_elem_sep RuleType ruleType concode_elem_sep int lineNumberLimit concode_field_sep String extractJSValidatorName concode_elem_sep int getLineNumber concode_elem_sep RuleType getRuleType concode_elem_sep List<String> getParameters concode_elem_sep int getLineNumberLimit concode_elem_sep void setLineNumberLimit concode_elem_sep boolean isInsideSentences concode_elem_sep void addParameter"}
{"code": "void function ( PdfWriter arg0 , Document arg1 ) { }", "nl": "called when the document is opened . concode_field_sep PlaceHolder placeHolder concode_field_sep void onSection concode_elem_sep void onParagraph concode_elem_sep void onParagraphEnd concode_elem_sep void onSectionEnd concode_elem_sep void onEndPage concode_elem_sep void onChapter concode_elem_sep void onGenericTag concode_elem_sep void onCloseDocument concode_elem_sep void onChapterEnd concode_elem_sep void onStartPage"}
{"code": "void function ( OutputStream arg0 ) { writeHeader ( arg0 ) ; for ( int loc0 = 0 ; loc0 < columnCount ; loc0 ++ ) columns [ loc0 ] . writeTo ( arg0 ) ; }", "nl": "write all rows added to the named output stream . concode_field_sep byte[] MAGIC_1 concode_elem_sep ColumnFileMetaData metaData concode_elem_sep long size concode_elem_sep byte[] MAGIC_0 concode_elem_sep ColumnOutputBuffer[] columns concode_elem_sep long rowCount concode_elem_sep int columnCount concode_elem_sep byte[] MAGIC concode_field_sep void writeLength concode_elem_sep void writeHeader concode_elem_sep long[] computeStarts concode_elem_sep void startRow concode_elem_sep void endRow concode_elem_sep void checkColumns concode_elem_sep int getColumnCount concode_elem_sep void writeRow concode_elem_sep void incrementSize concode_elem_sep ColumnFileMetaData getMetaData concode_elem_sep void writeValue concode_elem_sep long sizeEstimate"}
{"code": "JSObject function ( String arg0 ) { Object loc0 = engine . executeScript ( arg0 ) ; if ( loc0 instanceof JSObject ) { return ( JSObject ) loc0 ; } return null ; }", "nl": "execute the specified command returning a value if any concode_field_sep IJavascriptRuntime runtime concode_elem_sep IWebEngine engine concode_field_sep String getArrayFunction concode_elem_sep String getFunction concode_elem_sep String getFunction concode_elem_sep void setDefaultWebEngine concode_elem_sep String getArrayConstructor concode_elem_sep IJavascriptRuntime getInstance concode_elem_sep String getArgString concode_elem_sep String getConstructor"}
{"code": "void function ( ) { for ( int loc0 = 0 ; loc0 < 10 ; loc0 ++ ) { assertEquals ( this . expectedExecutionTime * loc0 , this . factory . apply ( loc0 ) . getTimeMs ( ) ) ; } }", "nl": "verify if the time per execution of a task matches the actual time required to execute the task a given number of times concode_field_sep Function<Integer,T> factory concode_elem_sep int THREAD_COUNT concode_elem_sep int TASK_COUNT concode_elem_sep int expectedExecutionTime concode_field_sep void testToString concode_elem_sep void testIdGeneration concode_elem_sep O get"}
{"code": "XMLParser function ( ) { return setState ( unknown ) ; }", "nl": "set parser state to unknownstate . concode_field_sep State closeStarComment concode_elem_sep State selfClosing concode_elem_sep State tagAttributes concode_elem_sep State unquoted concode_elem_sep State unknown concode_elem_sep State inTag concode_elem_sep State cdata concode_elem_sep State previousState concode_elem_sep State doctype concode_elem_sep State tagEncountered concode_elem_sep State singleQuoted concode_elem_sep XMLParser parser concode_elem_sep State xml concode_elem_sep State specialChar concode_elem_sep State doubleQuoted concode_elem_sep State closingTag concode_elem_sep State comment concode_elem_sep State attrValue concode_elem_sep State starComment concode_elem_sep State currentState concode_elem_sep State closeComment concode_elem_sep State processingInstruction concode_field_sep XMLParser closeStarComment concode_elem_sep XMLParser selfClosing concode_elem_sep XMLParser tagAttributes concode_elem_sep XMLParser unquotedAttr concode_elem_sep XMLParser attributeValue concode_elem_sep XMLParser doubleQuotedAttr concode_elem_sep XMLParser singleQuotedAttr concode_elem_sep XMLParser previousState concode_elem_sep XMLParser inTag concode_elem_sep XMLParser cdata concode_elem_sep XMLParser doctype concode_elem_sep XMLParser tagEncountered concode_elem_sep XMLParser specialChar concode_elem_sep XMLParser setState concode_elem_sep XMLParser closingTag concode_elem_sep XMLParser comment concode_elem_sep XMLParser starComment concode_elem_sep XMLParser processingInstructions concode_elem_sep XMLParser closeComment"}
{"code": "void function ( int arg0 , int arg1 ) { if ( validVertex ( arg0 ) && validVertex ( arg1 ) ) { if ( ! adjMatrix [ arg0 ] [ arg1 ] ) { adjMatrix [ arg0 ] [ arg1 ] = true ; edges ++ ; } } }", "nl": "creates the edge origin , destination . if the edge did not already exists , increments the edge count . concode_field_sep boolean[][] adjMatrix concode_elem_sep int vertices concode_elem_sep int edges concode_field_sep void removeEdge concode_elem_sep boolean hasEdge concode_elem_sep int getNumEdges concode_elem_sep UDGraph paths concode_elem_sep UDGraph length2Paths concode_elem_sep String toString concode_elem_sep void main concode_elem_sep int getNumVertices concode_elem_sep boolean validVertex"}
{"code": "Class function ( ) { return _cls ; }", "nl": "get the subject widget 's class . concode_field_sep long serialVersionUID concode_elem_sep HashMap _map concode_elem_sep int UNASSIGNED concode_elem_sep int _index concode_elem_sep WidgetLocator _parentInfo concode_elem_sep Class _cls concode_elem_sep String _nameOrLabel concode_elem_sep IWidgetMatcher _matcher concode_field_sep int getIndex concode_elem_sep void setData concode_elem_sep WidgetLocator getParentInfo concode_elem_sep String getNameOrLabel concode_elem_sep IWidgetLocator[] findAll concode_elem_sep boolean matches concode_elem_sep Map getDataMap concode_elem_sep void setParentInfo concode_elem_sep void setIndex concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep String toString concode_elem_sep String getTargetClassName concode_elem_sep String getData"}
{"code": "List < TextFormatParseInfoTree > function ( final FieldDescriptor arg0 ) { List < TextFormatParseInfoTree > loc0 = subtreesFromField . get ( arg0 ) ; return loc0 == null ? Collections . < TextFormatParseInfoTree > emptyList ( ) : loc0 ; }", "nl": "retrieve a list of all the location information trees for a sub message field . concode_field_sep Map<FieldDescriptor,List<TextFormatParseInfoTree>> subtreesFromField concode_elem_sep Map<FieldDescriptor,List<TextFormatParseLocation>> locationsFromField concode_elem_sep Map<FieldDescriptor,List<Builder>> subtreeBuildersFromField concode_field_sep TextFormatParseInfoTree getNestedTree concode_elem_sep TextFormatParseLocation getLocation concode_elem_sep Builder getBuilderForSubMessageField concode_elem_sep Builder setLocation concode_elem_sep TextFormatParseInfoTree build concode_elem_sep Builder builder concode_elem_sep T getFromList concode_elem_sep List<TextFormatParseLocation> getLocations"}
{"code": "void function ( GeckoView arg0 , Bundle arg1 , GeckoView . MessageResult arg2 ) { if ( arg2 != null ) { arg2 . failure ( null ) ; } }", "nl": "receive a message from an imported script . concode_field_sep PlaceHolder placeHolder concode_field_sep void onAlert concode_elem_sep void onConfirm concode_elem_sep void onPrompt concode_elem_sep void onDebugRequest concode_elem_sep void onReady"}
{"code": "void function ( String arg0 ) { String loc0 = TestMonitor . getInstance ( ) . getCurrentTestCaseID ( ) ; TraceHandler . trace ( IRuntimePluginTraceOptions . WIDGET_SELECTION , \"srini_string\" + arg0 + \"srini_string\" + loc0 ) ; ScreenCapture . createScreenCapture ( loc0 ) ; }", "nl": "take a screenshot . concode_field_sep int CLOSE_ALL_WAIT_THRESHOLD concode_elem_sep int _disposedCount concode_elem_sep boolean _first concode_elem_sep IUIContext ui concode_elem_sep boolean _screenCaptureOnFirst concode_elem_sep int _closeCalls concode_elem_sep int CLOSE_ALL_WAIT_INTERVAL concode_elem_sep Display _display concode_elem_sep ShellTester _shellTester concode_elem_sep Shell _lastDisposed concode_elem_sep int CALL_TO_NUCLEAR_CLOSE_INTERVAL concode_elem_sep boolean _captureScreens concode_field_sep void handleConditions concode_elem_sep Shell[] getShells concode_elem_sep Shell[] getShells concode_elem_sep boolean isLast concode_elem_sep String getText concode_elem_sep void closeShell concode_elem_sep void closeOpenShells concode_elem_sep void closeModalShellsNuclearOption concode_elem_sep boolean captureScreens concode_elem_sep void doClose concode_elem_sep int getStyle concode_elem_sep String getShellStateDump concode_elem_sep String getState concode_elem_sep void closeShells concode_elem_sep void closeShells concode_elem_sep ShellTester getShellTester concode_elem_sep Display getDisplay concode_elem_sep boolean isModal"}
{"code": "InputSource function ( ) { return inputSource ; }", "nl": "get the sax inputsource to be used for the source . concode_field_sep String FEATURE concode_elem_sep XMLReader reader concode_elem_sep InputSource inputSource concode_field_sep String getSystemId concode_elem_sep InputSource sourceToInputSource concode_elem_sep void setSystemId concode_elem_sep void setInputSource concode_elem_sep void setXMLReader concode_elem_sep XMLReader getXMLReader"}
{"code": "CallContext function ( ) { return new CallContext ( ) ; }", "nl": "create an instance of callcontext concode_field_sep QName _HistoryHeader_QNAME concode_elem_sep QName _ISDVInfo_QNAME concode_elem_sep QName _KeyValuePairList_QNAME concode_elem_sep QName _LocalizedMessage_QNAME concode_elem_sep QName _BusinessException_QNAME concode_elem_sep QName _Message_QNAME concode_elem_sep QName _CallContext_QNAME concode_elem_sep QName _ValidationException_QNAME concode_elem_sep QName _NotFoundException_QNAME concode_elem_sep QName _ValidationContext_QNAME concode_elem_sep QName _TimePeriod_QNAME concode_elem_sep QName _OpenTimePeriod_QNAME concode_elem_sep QName _LocalizedString_QNAME concode_elem_sep QName _KeyValuePair_QNAME concode_elem_sep QName _TechnicalException_QNAME concode_field_sep ISDVInfo createISDVInfo concode_elem_sep JAXBElement<ISDVInfo> createISDVInfo concode_elem_sep ValidationException createValidationException concode_elem_sep JAXBElement<ValidationException> createValidationException concode_elem_sep OpenTimePeriod createOpenTimePeriod concode_elem_sep JAXBElement<OpenTimePeriod> createOpenTimePeriod concode_elem_sep LocalizedMessage createLocalizedMessage concode_elem_sep JAXBElement<LocalizedMessage> createLocalizedMessage concode_elem_sep TechnicalException createTechnicalException concode_elem_sep JAXBElement<TechnicalException> createTechnicalException concode_elem_sep KeyValuePairList createKeyValuePairList concode_elem_sep JAXBElement<KeyValuePairList> createKeyValuePairList concode_elem_sep TimePeriod createTimePeriod concode_elem_sep JAXBElement<TimePeriod> createTimePeriod concode_elem_sep LocalizedString createLocalizedString concode_elem_sep JAXBElement<LocalizedString> createLocalizedString concode_elem_sep HistoryHeader createHistoryHeader concode_elem_sep JAXBElement<HistoryHeader> createHistoryHeader concode_elem_sep KeyValuePair createKeyValuePair concode_elem_sep JAXBElement<KeyValuePair> createKeyValuePair concode_elem_sep BusinessException createBusinessException concode_elem_sep JAXBElement<BusinessException> createBusinessException concode_elem_sep NotFoundException createNotFoundException concode_elem_sep JAXBElement<NotFoundException> createNotFoundException concode_elem_sep ValidationContext createValidationContext concode_elem_sep JAXBElement<ValidationContext> createValidationContext concode_elem_sep Message createMessage concode_elem_sep JAXBElement<Message> createMessage"}
{"code": "int function ( ResourceGroupEntity arg0 ) { if ( arg0 == null ) { return 1 ; } else { if ( getName ( ) == null ) { return arg0 . getName ( ) == null ? 0 : - 1 ; } else { return arg0 . getName ( ) == null ? 1 : getName ( ) . compareTo ( arg0 . getName ( ) ) ; } } }", "nl": "compare the resource groups by name null concode_field_sep String ALLRESOURCESBYTYPE_QUERY concode_elem_sep Set<FavoriteResourceEntity> favorites concode_elem_sep String fcExternalKey concode_elem_sep Set<ResourceActivationEntity> resourceActivationEntities concode_elem_sep long serialVersionUID concode_elem_sep ReleaseEntity outOfServiceRelease concode_elem_sep Set<ResourceEntity> resources concode_elem_sep Set<TemplateDescriptorEntity> runtimeTemplateDescriptors concode_elem_sep long v concode_elem_sep String fcExternalLink concode_elem_sep String name concode_elem_sep Integer id concode_elem_sep ResourceTypeEntity resourceType concode_field_sep void setName concode_elem_sep ReleaseEntity getNewestRelease concode_elem_sep void setFcExternalLink concode_elem_sep ReleaseEntity getFirstRelease concode_elem_sep String getFcExternalLink concode_elem_sep String getFcExternalKey concode_elem_sep void setResourceType concode_elem_sep void setFcExternalKey concode_elem_sep String toString concode_elem_sep SortedSet<ReleaseEntity> getReleases concode_elem_sep boolean isAppServerContainer"}
{"code": "Residue < C > function ( ) { return new Residue < C > ( ring , val . abs ( ) , isunit ) ; }", "nl": "residue absolute value . concode_field_sep GenPolynomial<C> val concode_elem_sep ResidueRing<C> ring concode_elem_sep int isunit concode_field_sep int signum concode_elem_sep boolean isONE concode_elem_sep Residue<C> inverse concode_elem_sep boolean isUnit concode_elem_sep Residue<C> subtract concode_elem_sep Residue<C> gcd concode_elem_sep Residue<C> sum concode_elem_sep int compareTo concode_elem_sep Residue<C>[] egcd concode_elem_sep boolean isConstant concode_elem_sep Residue<C> monic concode_elem_sep int hashCode concode_elem_sep Residue<C> negate concode_elem_sep boolean equals concode_elem_sep Residue<C> clone concode_elem_sep boolean isZERO concode_elem_sep String toString concode_elem_sep Residue<C> divide concode_elem_sep Residue<C> multiply concode_elem_sep Residue<C> remainder"}
{"code": "Hierarchy function ( ) { return defaultHierarchy != null ? defaultHierarchy : new AWTHierarchy ( ) ; }", "nl": "obtain a default hierarchy . this method is provided only to support the deprecated componenttester.assertframeshowing method . concode_field_sep Collection EMPTY concode_elem_sep WindowTracker tracker concode_elem_sep Hierarchy defaultHierarchy concode_field_sep boolean contains concode_elem_sep Container getParent concode_elem_sep Collection getRoots concode_elem_sep Collection getComponents concode_elem_sep Collection findInternalFramesFromIcons concode_elem_sep void dispose concode_elem_sep void setDefault"}
{"code": "void function ( @ Observes ResourceTypeEntity arg0 ) { if ( arg0 != null ) { resourceOrResourceType = arg0 ; } }", "nl": "observes if currently editing resource type concode_field_sep Boolean testing concode_elem_sep ch.puzzle.itc.mobiliar.business.utils.Identifiable resourceOrResourceType concode_elem_sep Integer relationId concode_field_sep void onChangedTestingMode concode_elem_sep boolean isEditable concode_elem_sep boolean isCurrentFocusOnResource concode_elem_sep Integer getResourceId concode_elem_sep Integer getResourceTypeId concode_elem_sep void onChangedResource concode_elem_sep boolean isCurrentFocusOnResourceType concode_elem_sep boolean isPropertyDisplayable concode_elem_sep void onChangedRelation concode_elem_sep boolean isTesting"}
{"code": "void function ( ) { resources = GWT . create ( Resources . class ) ; StyleInjector . inject ( resources . whitelistTableCss ( ) . getText ( ) + resources . optionsPageCss ( ) . getText ( ) + resources . tableControlsCss ( ) . getText ( ) ) ; }", "nl": "initializes resources . this must be called before #getresources . this allows us to avoid an evil static initializer that would pollute all the getresources call sites . concode_field_sep Resources resources concode_field_sep Css optionsPageCss concode_elem_sep Resources getResources concode_elem_sep String outer"}
{"code": "List < TriangleXZ > function ( SimplePolygonXZ arg0 , Collection < SimplePolygonXZ > arg1 ) { List < VectorXZ > loc0 = emptyList ( ) ; List < LineSegmentXZ > loc1 = emptyList ( ) ; return triangulate ( arg0 , arg1 , loc1 , loc0 ) ; }", "nl": "triangulation of a polygon with holes , based on a conforming delaunay triangulation concode_field_sep Geometry[] EMPTY_GEOM_ARRAY concode_field_sep placeholderType placeHolder"}
{"code": "Residue < C > function ( Residue < C > arg0 ) { return new Residue < C > ( arg0 . ring , arg0 . val ) ; }", "nl": "copy residue element c. concode_field_sep Logger logger concode_elem_sep RingFactory<C> ring concode_elem_sep int isField concode_elem_sep C modul concode_field_sep Residue<C> random concode_elem_sep Residue<C> random concode_elem_sep int hashCode concode_elem_sep boolean isField concode_elem_sep boolean equals concode_elem_sep Residue<C> getONE concode_elem_sep boolean isCommutative concode_elem_sep Residue<C> getZERO concode_elem_sep Residue<C> fromInteger concode_elem_sep Residue<C> fromInteger concode_elem_sep boolean isAssociative concode_elem_sep String toString concode_elem_sep Residue<C> parse concode_elem_sep Residue<C> parse concode_elem_sep java.math.BigInteger characteristic"}
{"code": "Object function ( Object arg0 ) { int loc0 = ( hashCode ( arg0 ) & 0x7FFFFFFF ) % elementData . length ; HashMapEntry loc1 = elementData [ loc0 ] ; while ( loc1 != null ) { if ( keyEquals ( arg0 , loc1 . arg0 ) ) return loc1 . arg0 ; loc1 = loc1 . next ; } return null ; }", "nl": "answers the stored key that is equal to the specified key . concode_field_sep HashMapEntry next concode_elem_sep HashMapEntry[] elementData concode_elem_sep int start concode_elem_sep int threshold concode_elem_sep IElementComparer comparer concode_elem_sep HashMapEntry entry concode_elem_sep float loadFactor concode_elem_sep int elementCount concode_elem_sep int lastSlot concode_elem_sep EmptyEnumerator emptyEnumerator concode_elem_sep int firstSlot concode_elem_sep Object value concode_elem_sep boolean key concode_elem_sep int DEFAULT_CAPACITY concode_field_sep boolean containsKey concode_elem_sep Enumeration keys concode_elem_sep void rehash concode_elem_sep boolean keyEquals concode_elem_sep Object put concode_elem_sep Object remove concode_elem_sep int size concode_elem_sep boolean hasMoreElements concode_elem_sep boolean hasMoreElements concode_elem_sep void computeMaxSize concode_elem_sep int hashCode concode_elem_sep Enumeration elements concode_elem_sep Object get concode_elem_sep String toString concode_elem_sep String toString concode_elem_sep void appendToStringWithCommaNL concode_elem_sep HashMapEntry getEntry concode_elem_sep Object nextElement concode_elem_sep Object nextElement"}
{"code": "String function ( String arg0 ) { if ( arg0 == null ) { return null ; } try { return encode ( arg0 , getDefaultCharset ( ) ) ; } catch ( UnsupportedEncodingException loc0 ) { throw new EncoderException ( loc0 . getMessage ( ) , loc0 ) ; } }", "nl": "encodes a string into its quoted-printable form using the default string charset . unsafe characters are escaped . this function implements a subset of quoted-printable encoding specification rule # 1 and rule # 2 as defined in rfc 1521 and is suitable for encoding binary data . concode_field_sep String charset concode_elem_sep BitSet PRINTABLE_CHARS concode_elem_sep byte SPACE concode_elem_sep byte ESCAPE_CHAR concode_elem_sep byte TAB concode_field_sep byte[] decodeQuotedPrintable concode_elem_sep void encodeQuotedPrintable concode_elem_sep byte[] encodeQuotedPrintable concode_elem_sep String getDefaultCharset concode_elem_sep byte[] decode concode_elem_sep String decode concode_elem_sep String decode concode_elem_sep Object decode"}
{"code": "String function ( ) { return baseZNode ; }", "nl": "get base znode . concode_field_sep String ENCRYPTION_KEY_NO_ZNODE_NAME concode_elem_sep String KEY_VERSION_ZNODE_NAME concode_elem_sep String PRINCIPAL_NAME_ZNODE_NAME concode_elem_sep String baseZNode concode_elem_sep String CREATED_TIME_ZNODE_NAME concode_elem_sep String KDC_FLAGS_ZNODE_NAME concode_elem_sep String DISABLED_ZNODE_NAME concode_elem_sep String KEYS_ZNODE_NAME concode_elem_sep String IDENTITIES_ZNODE_NAME concode_elem_sep String KEY_ZNODE_NAME concode_elem_sep String EXPIRE_TIME_ZNODE_NAME concode_elem_sep String KEY_TYPE_ZNODE_NAME concode_elem_sep String LOCKED_ZNODE_NAME concode_field_sep String getEncryptionKeyTypeZNode concode_elem_sep String getDisabledZNode concode_elem_sep String getKeyTypeZNode concode_elem_sep String getEncryptionKeyNoZNode concode_elem_sep String getEncryptionKeyZNode concode_elem_sep String getLockedZNode concode_elem_sep String getCreatedTimeZNode concode_elem_sep String getExpireTimeZNode concode_elem_sep String getKeyVersionZNode concode_elem_sep String getKeysZNode concode_elem_sep String getIdentitiesZNode concode_elem_sep List<String> getIdentityNames concode_elem_sep String getPrincipalNameZnode concode_elem_sep String getIndentityZNode concode_elem_sep String getKdcFlagsZNode"}
{"code": "void function ( Subpath arg0 ) { subpaths . add ( arg0 ) ; currentPoint = arg0 . getLastPoint ( ) ; }", "nl": "adds the subpath to this path . concode_field_sep List<Subpath> subpaths concode_elem_sep String START_PATH_ERR_MSG concode_elem_sep Point2D currentPoint concode_field_sep Point2D getCurrentPoint concode_elem_sep void curveTo concode_elem_sep void curveTo concode_elem_sep boolean isEmpty concode_elem_sep Subpath getLastSubpath concode_elem_sep List<Subpath> getSubpaths concode_elem_sep void lineTo concode_elem_sep void closeSubpath concode_elem_sep void addSubpaths concode_elem_sep List<Integer> replaceCloseWithLine concode_elem_sep void closeAllSubpaths concode_elem_sep void rectangle concode_elem_sep void curveFromTo concode_elem_sep void moveTo"}
{"code": "void function ( ) { int loc0 = activeTransactionCountUpdater . decrementAndGet ( this ) ; if ( suspended && loc0 == 0 && activeInvocationCountUpdater . get ( this ) == 0 ) { doneSuspended ( ) ; } }", "nl": "decrements active tranbsaction count and completes suspension if we are suspending and there are no more active transactions left . concode_field_sep int activeInvocationCount concode_elem_sep InjectedValue<DeploymentRepository> deploymentRepositoryInjectedValue concode_elem_sep AtomicIntegerFieldUpdater<EJBSuspendHandlerService> activeTransactionCountUpdater concode_elem_sep boolean gracefulTxnShutdown concode_elem_sep ServerActivityCallback listener concode_elem_sep AtomicReferenceFieldUpdater<EJBSuspendHandlerService,ServerActivityCallback> listenerUpdater concode_elem_sep InjectedValue<SuspendController> suspendControllerInjectedValue concode_elem_sep InjectedValue<LocalTransactionContext> localTransactionContextInjectedValue concode_elem_sep int activeTransactionCount concode_elem_sep AtomicIntegerFieldUpdater<EJBSuspendHandlerService> activeInvocationCountUpdater concode_elem_sep boolean suspended concode_elem_sep ServiceName SERVICE_NAME concode_field_sep void resume concode_elem_sep void beforeCompletion concode_elem_sep void enableGracefulTxnShutdown concode_elem_sep void invocationComplete concode_elem_sep void doneSuspended concode_elem_sep boolean isSuspended concode_elem_sep void afterCompletion concode_elem_sep void start concode_elem_sep InjectedValue<SuspendController> getSuspendControllerInjectedValue concode_elem_sep void suspended concode_elem_sep void transactionCreated concode_elem_sep EJBSuspendHandlerService getValue concode_elem_sep void stop concode_elem_sep InjectedValue<LocalTransactionContext> getLocalTransactionContextInjectedValue concode_elem_sep InjectedValue<DeploymentRepository> getDeploymentRepositoryInjectedValue concode_elem_sep boolean acceptInvocation concode_elem_sep void preSuspend"}
{"code": "void function ( InetAddress arg0 ) { _remoteAddr = arg0 ; }", "nl": "client address concode_field_sep InetAddress _remoteAddr concode_elem_sep Principal realPrincipal concode_elem_sep Subject _subject concode_elem_sep AtomicInteger uniqueId concode_elem_sep Integer _reqID concode_elem_sep ThreadLocal<ReqContext> ctxt concode_field_sep Principal principal concode_elem_sep void setSubject concode_elem_sep boolean isImpersonating concode_elem_sep Principal realPrincipal concode_elem_sep Subject subject concode_elem_sep Integer requestID concode_elem_sep void setRealPrincipal concode_elem_sep ReqContext context concode_elem_sep void reset concode_elem_sep String toString concode_elem_sep ReqContext initialValue concode_elem_sep InetAddress remoteAddress"}
{"code": "void function ( Logger arg0 , File arg1 , File arg2 ) { FileFilter loc0 = null ; createZipFile ( arg0 , arg1 , arg2 , loc0 ) ; }", "nl": "creates a zip fie from the given source directory and output zip file name concode_field_sep PlaceHolder placeHolder concode_field_sep void zipDirectory concode_elem_sep void unzip concode_elem_sep boolean matches"}
{"code": "int function ( ) { return fValues [ CHECK_INITIAL_CONDITIONS ] + fValues [ CHECK_FINAL_CONDITIONS ] ; }", "nl": "sum of getcheckinitialconditionsticks and getcheckfinalconditionsticks concode_field_sep RefactoringTickProvider DEFAULT concode_elem_sep int CHECK_INITIAL_CONDITIONS concode_elem_sep int INITIALIZE_CHANGE concode_elem_sep int CHECK_FINAL_CONDITIONS concode_elem_sep int CREATE_CHANGE concode_elem_sep int[] fValues concode_field_sep int getAllTicks concode_elem_sep int getCreateChangeTicks concode_elem_sep int getCheckInitialConditionsTicks concode_elem_sep int getCheckFinalConditionsTicks concode_elem_sep int getInitializeChangeTicks"}
{"code": "String function ( String arg0 ) { return markLTR ( arg0 , \"srini_string\" ) ; }", "nl": "returns a label for a version name . example is ' 1.4.1 ' concode_field_sep String CONCAT_STRING concode_field_sep String getURLPart concode_elem_sep String getFilePattern concode_elem_sep String markLTR concode_elem_sep String getResourceName concode_elem_sep String getResourceName concode_elem_sep String getPathLabel"}
{"code": "Local < C > function ( ) { return new Local < C > ( ring , num . abs ( ) , den , true ) ; }", "nl": "local absolute value . concode_field_sep Logger logger concode_elem_sep LocalRing<C> ring concode_elem_sep boolean debug concode_elem_sep GenPolynomial<C> num concode_elem_sep int isunit concode_elem_sep GenPolynomial<C> den concode_field_sep int signum concode_elem_sep boolean isONE concode_elem_sep Local<C> inverse concode_elem_sep boolean isUnit concode_elem_sep Local<C> subtract concode_elem_sep GenPolynomial<C> gcd concode_elem_sep Local<C> gcd concode_elem_sep Local<C> sum concode_elem_sep int compareTo concode_elem_sep Local<C>[] egcd concode_elem_sep Local<C> monic concode_elem_sep int hashCode concode_elem_sep Local<C> negate concode_elem_sep GenPolynomial<C> lcm concode_elem_sep boolean equals concode_elem_sep Local<C> clone concode_elem_sep boolean isZERO concode_elem_sep String toString concode_elem_sep Local<C> divide concode_elem_sep Local<C> multiply concode_elem_sep Local<C> remainder"}
{"code": "String function ( String arg0 , String arg1 ) { StringBuffer loc0 = new StringBuffer ( ) ; loc0 . append ( arg0 ) ; loc0 . append ( \"srini_string\" ) ; for ( int loc1 = 0 ; loc1 <= N ; loc1 ++ ) { loc0 . append ( variable ( loc1 ) ) ; if ( loc1 < N ) { loc0 . append ( \"srini_string\" ) ; } } loc0 . append ( \"srini_string\" ) ; loc0 . append ( arg1 ) ; return loc0 . toString ( ) ; }", "nl": "generate variable list . concode_field_sep String var concode_elem_sep int N concode_elem_sep String order concode_field_sep String sum1 concode_elem_sep String polyList concode_elem_sep String sumUm concode_elem_sep String variable concode_elem_sep void main concode_elem_sep String toString"}
{"code": "Predicate function ( ) { return predicate ; }", "nl": "gets the predicate this iterator is using . concode_field_sep Predicate predicate concode_elem_sep Object nextObject concode_elem_sep ListIterator iterator concode_elem_sep boolean nextObjectSet concode_elem_sep boolean previousObjectSet concode_elem_sep int nextIndex concode_elem_sep Object previousObject concode_field_sep void add concode_elem_sep Object next concode_elem_sep void set concode_elem_sep Object previous concode_elem_sep boolean hasNext concode_elem_sep ListIterator getListIterator concode_elem_sep int nextIndex concode_elem_sep boolean setNextObject concode_elem_sep void remove concode_elem_sep boolean setPreviousObject concode_elem_sep void setPredicate concode_elem_sep void clearNextObject concode_elem_sep boolean hasPrevious concode_elem_sep int previousIndex concode_elem_sep void clearPreviousObject concode_elem_sep void setListIterator"}
{"code": "int function ( ListView arg0 ) { int loc0 = getAbsListViewHeightBasedOnChildren ( arg0 ) ; ListAdapter loc1 ; int loc2 ; if ( arg0 != null && ( loc1 = arg0 . getAdapter ( ) ) != null && ( loc2 = loc1 . getCount ( ) ) > 0 ) { loc0 += arg0 . getDividerHeight ( ) * ( loc2 - 1 ) ; } return loc0 ; }", "nl": "get listview height according to every children concode_field_sep String CLASS_NAME_GRID_VIEW concode_elem_sep String FIELD_NAME_VERTICAL_SPACING concode_field_sep List<T> getDescendants concode_elem_sep void setViewHeight concode_elem_sep void setSearchViewOnClickListener concode_elem_sep int getGridViewVerticalSpacing concode_elem_sep int getAbsListViewHeightBasedOnChildren concode_elem_sep void setAbsListViewHeightBasedOnChildren concode_elem_sep void setListViewHeightBasedOnChildren"}
{"code": "RefactoringDescriptor function ( ) { return null ; }", "nl": "creates a new customizable refactoring descriptor initialized with its default values . this method may be reimplemented to return a language-specified refactoring descriptor which can be initialized using language-specific features . refactoring tool providers may reimplement this method to provide a uniform api to expose refactoring functionality in the form of refactoring descriptors . callers of this method are supposed to cast the resulting refactoring descriptor to the corresponding language-specific refactoring descriptor provided by the api of the refactoring tooling provider . note : this method is supposed to be reimplemented by clients wishing to provide customizable refactoring descriptors . concode_field_sep PlaceHolder placeHolder concode_field_sep Map<String,String> retrieveArgumentMap concode_elem_sep String getId"}
{"code": "BusinessException function ( ) { return new BusinessException ( ) ; }", "nl": "create an instance of businessexception concode_field_sep QName _HistoryHeader_QNAME concode_elem_sep QName _ISDVInfo_QNAME concode_elem_sep QName _KeyValuePairList_QNAME concode_elem_sep QName _LocalizedMessage_QNAME concode_elem_sep QName _BusinessException_QNAME concode_elem_sep QName _Message_QNAME concode_elem_sep QName _CallContext_QNAME concode_elem_sep QName _ValidationException_QNAME concode_elem_sep QName _NotFoundException_QNAME concode_elem_sep QName _ValidationContext_QNAME concode_elem_sep QName _TimePeriod_QNAME concode_elem_sep QName _OpenTimePeriod_QNAME concode_elem_sep QName _LocalizedString_QNAME concode_elem_sep QName _KeyValuePair_QNAME concode_elem_sep QName _TechnicalException_QNAME concode_field_sep ISDVInfo createISDVInfo concode_elem_sep JAXBElement<ISDVInfo> createISDVInfo concode_elem_sep ValidationException createValidationException concode_elem_sep JAXBElement<ValidationException> createValidationException concode_elem_sep CallContext createCallContext concode_elem_sep JAXBElement<CallContext> createCallContext concode_elem_sep OpenTimePeriod createOpenTimePeriod concode_elem_sep JAXBElement<OpenTimePeriod> createOpenTimePeriod concode_elem_sep LocalizedMessage createLocalizedMessage concode_elem_sep JAXBElement<LocalizedMessage> createLocalizedMessage concode_elem_sep TechnicalException createTechnicalException concode_elem_sep JAXBElement<TechnicalException> createTechnicalException concode_elem_sep KeyValuePairList createKeyValuePairList concode_elem_sep JAXBElement<KeyValuePairList> createKeyValuePairList concode_elem_sep TimePeriod createTimePeriod concode_elem_sep JAXBElement<TimePeriod> createTimePeriod concode_elem_sep LocalizedString createLocalizedString concode_elem_sep JAXBElement<LocalizedString> createLocalizedString concode_elem_sep HistoryHeader createHistoryHeader concode_elem_sep JAXBElement<HistoryHeader> createHistoryHeader concode_elem_sep KeyValuePair createKeyValuePair concode_elem_sep JAXBElement<KeyValuePair> createKeyValuePair concode_elem_sep NotFoundException createNotFoundException concode_elem_sep JAXBElement<NotFoundException> createNotFoundException concode_elem_sep ValidationContext createValidationContext concode_elem_sep JAXBElement<ValidationContext> createValidationContext concode_elem_sep Message createMessage concode_elem_sep JAXBElement<Message> createMessage"}
{"code": "String function ( ECPublicKey arg0 ) { byte [ ] loc0 = loc0 ( arg0 ) ; return hexColonDelimited ( Hashing . md5 ( ) . hashBytes ( loc0 ) ) ; }", "nl": "create a fingerprint per the following spec concode_field_sep Map<String,ECParameterSpec> CURVES concode_elem_sep String NISTP384 concode_elem_sep Map<Integer,String> CURVE_SIZES concode_elem_sep String ECDSA_SHA2_PREFIX concode_elem_sep ECParameterSpec nistp521 concode_elem_sep String NISTP521 concode_elem_sep ECParameterSpec nistp384 concode_elem_sep String NISTP256 concode_elem_sep ECParameterSpec nistp256 concode_field_sep byte[] keyBlob concode_elem_sep String getCurveName concode_elem_sep ECPublicKeySpec publicKeySpecFromOpenSSH concode_elem_sep ECPublicKeySpec publicKeySpecFromOpenSSH concode_elem_sep String encodeAsOpenSSH concode_elem_sep byte[] readLengthFirst concode_elem_sep String fingerprintPublicKey concode_elem_sep byte[] encodeECPoint concode_elem_sep String hexColonDelimited concode_elem_sep ECPoint decodeECPoint concode_elem_sep int getCurveSize concode_elem_sep void writeLengthFirst concode_elem_sep byte[] removeLeadingZeroes"}
{"code": "HashCodeBuilder function ( byte arg0 ) { iTotal = iTotal * iConstant + arg0 ; return this ; }", "nl": "append a hashcode for a byte . concode_field_sep int iConstant concode_elem_sep int iTotal concode_field_sep HashCodeBuilder appendSuper concode_elem_sep int toHashCode"}
{"code": "boolean function ( IMethod arg0 ) { if ( arg0 . isConstructor ( ) ) return false ; if ( JdtFlags . isPrivate ( arg0 ) ) return false ; if ( JdtFlags . isStatic ( arg0 ) ) return false ; return true ; }", "nl": "returns true iff the method could be a virtual method , i.e. if it is not a constructor , is private , or is static . concode_field_sep PlaceHolder placeHolder concode_field_sep IMethod isDeclaredInInterface concode_elem_sep IMethod overridesAnotherMethod concode_elem_sep IMethod getTopmostMethod concode_elem_sep RefactoringStatus checkIfComesFromInterface concode_elem_sep RefactoringStatus checkIfOverridesAnother"}
{"code": "void function ( final Failure arg0 ) { new SafeNotifier ( ) { @ Override protected void notifyListener ( RunListener arg1 ) throws Exception { arg1 . testAssumptionFailure ( arg0 ) ; } } . run ( ) ; }", "nl": "invoke to tell listeners that an atomic test flagged that it assumed something false . concode_field_sep List<RunListener> fListeners concode_elem_sep boolean fPleaseStop concode_elem_sep List<RunListener> fCurrentListeners concode_field_sep void fireTestIgnored concode_elem_sep void fireTestRunFinished concode_elem_sep void notifyListener concode_elem_sep void run concode_elem_sep void fireTestFailures concode_elem_sep void removeListener concode_elem_sep void pleaseStop concode_elem_sep void fireTestFailure concode_elem_sep void fireTestFinished concode_elem_sep void fireTestRunStarted concode_elem_sep void fireTestStarted concode_elem_sep void addListener concode_elem_sep void addFirstListener"}
{"code": "Image function ( String arg0 , int arg1 , int arg2 , int arg3 , int arg4 , Color arg5 ) { return getCachedTeXFormulaImage ( new CachedTeXFormula ( arg0 , arg1 , arg2 , arg3 , arg4 , arg5 ) ) ; }", "nl": "get a cached formula concode_field_sep Image image concode_elem_sep ConcurrentMap<CachedTeXFormula,SoftReference<CachedImage>> cache concode_elem_sep String f concode_elem_sep int inset concode_elem_sep Color fgcolor concode_elem_sep AffineTransform identity concode_elem_sep int width concode_elem_sep int type concode_elem_sep ReferenceQueue queue concode_elem_sep int depth concode_elem_sep int size concode_elem_sep int style concode_elem_sep CachedTeXFormula cachedTf concode_elem_sep int max concode_elem_sep int height concode_field_sep void removeCachedTeXFormula concode_elem_sep void removeCachedTeXFormula concode_elem_sep void removeCachedTeXFormula concode_elem_sep int[] getCachedTeXFormulaDimensions concode_elem_sep int[] getCachedTeXFormulaDimensions concode_elem_sep int[] getCachedTeXFormulaDimensions concode_elem_sep Object paintCachedTeXFormula concode_elem_sep Object paintCachedTeXFormula concode_elem_sep Object paintCachedTeXFormula concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep void setDimensions concode_elem_sep void clearCache concode_elem_sep SoftReference<CachedImage> makeImage concode_elem_sep void setMaxCachedObjects concode_elem_sep Object getCachedTeXFormula concode_elem_sep Object getCachedTeXFormula"}
{"code": "void function ( byte [ ] arg0 ) { readFixed ( arg0 , 0 , arg0 . length ) ; }", "nl": "a shorthand for readfixed bytes , 0 , bytes.length . concode_field_sep PlaceHolder placeHolder concode_field_sep void skipFixed concode_elem_sep long readArrayStart concode_elem_sep long arrayNext concode_elem_sep long skipMap concode_elem_sep Utf8 readString concode_elem_sep String readString concode_elem_sep long skipArray concode_elem_sep void skipBytes concode_elem_sep long mapNext concode_elem_sep long readLong concode_elem_sep int readEnum concode_elem_sep int readIndex concode_elem_sep double readDouble concode_elem_sep void skipString concode_elem_sep float readFloat concode_elem_sep ByteBuffer readBytes concode_elem_sep void readNull concode_elem_sep boolean readBoolean concode_elem_sep int readInt concode_elem_sep long readMapStart"}
{"code": "DetachedCriteria function ( String arg0 ) { criteria . setComment ( arg0 ) ; return this ; }", "nl": "set the sql comment to use . concode_field_sep CriteriaImpl impl concode_elem_sep Criteria criteria concode_field_sep DetachedCriteria add concode_elem_sep Criteria getExecutableCriteria concode_elem_sep DetachedCriteria setFetchMode concode_elem_sep DetachedCriteria setProjection concode_elem_sep DetachedCriteria forEntityName concode_elem_sep DetachedCriteria forEntityName concode_elem_sep DetachedCriteria createCriteria concode_elem_sep DetachedCriteria createCriteria concode_elem_sep DetachedCriteria createCriteria concode_elem_sep DetachedCriteria createCriteria concode_elem_sep DetachedCriteria createCriteria concode_elem_sep DetachedCriteria createCriteria concode_elem_sep DetachedCriteria createCriteria concode_elem_sep DetachedCriteria createCriteria concode_elem_sep DetachedCriteria setLockMode concode_elem_sep DetachedCriteria setLockMode concode_elem_sep DetachedCriteria setResultTransformer concode_elem_sep CriteriaImpl getCriteriaImpl concode_elem_sep DetachedCriteria forClass concode_elem_sep DetachedCriteria forClass concode_elem_sep DetachedCriteria addOrder concode_elem_sep String toString concode_elem_sep String getAlias concode_elem_sep DetachedCriteria createAlias concode_elem_sep DetachedCriteria createAlias concode_elem_sep DetachedCriteria createAlias concode_elem_sep DetachedCriteria createAlias concode_elem_sep DetachedCriteria createAlias"}
{"code": "void function ( int arg0 ) { int [ ] loc0 = { arg0 } ; waitForState ( loc0 ) ; }", "nl": "waits until the statemodel reaches the indicated state . note : waitforstate methods may not be called from multiple threads simoultaneously . concode_field_sep int[] targetStates_ concode_elem_sep StateModel model_ concode_field_sep void stateChanged concode_elem_sep void setStateModel"}
{"code": "void function ( String arg0 ) { if ( this . orderByClause == null ) { this . orderByClause = new StringBuilder ( ) ; } else { this . orderByClause . append ( \"srini_string\" ) ; this . guesstimatedBufferSize += 2 ; } this . orderByClause . append ( arg0 ) ; }", "nl": "appends the `` order by '' fragment , prefixed by a comma if the `` order by '' fragment already exists . concode_field_sep LockOptions lockOptions concode_elem_sep int guesstimatedBufferSize concode_elem_sep StringBuilder whereClause concode_elem_sep Dialect dialect concode_elem_sep StringBuilder selectClause concode_elem_sep String outerJoinsAfterWhere concode_elem_sep String outerJoinsAfterFrom concode_elem_sep StringBuilder fromClause concode_elem_sep String comment concode_elem_sep StringBuilder orderByClause concode_field_sep void appendFromClauseFragment concode_elem_sep void appendFromClauseFragment concode_elem_sep void setOuterJoins concode_elem_sep void setLockOptions concode_elem_sep void setComment concode_elem_sep String toStatementString concode_elem_sep boolean isNotEmpty concode_elem_sep boolean isNotEmpty concode_elem_sep String cleanRestrictions concode_elem_sep void appendSelectClauseFragment concode_elem_sep void setLockMode concode_elem_sep void appendRestrictions"}
{"code": "AngularObjectListener function ( ) { return listener ; }", "nl": "get event listener of this object concode_field_sep String name concode_elem_sep AngularObjectListener listener concode_elem_sep String noteId concode_elem_sep String paragraphId concode_elem_sep List<AngularObjectWatcher> watchers concode_elem_sep T object concode_field_sep void addWatcher concode_elem_sep String getName concode_elem_sep void set concode_elem_sep void set concode_elem_sep void removeWatcher concode_elem_sep String getParagraphId concode_elem_sep void clearAllWatchers concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep Object get concode_elem_sep boolean isGlobal concode_elem_sep void setParagraphId concode_elem_sep void setListener concode_elem_sep String toString concode_elem_sep void setNoteId concode_elem_sep void emit concode_elem_sep String getNoteId"}
{"code": "Closure function ( Closure [ ] arg0 ) { FunctorUtils . validate ( arg0 ) ; if ( arg0 . length == 0 ) { return NOPClosure . INSTANCE ; } arg0 = FunctorUtils . copy ( arg0 ) ; return new ChainedClosure ( arg0 ) ; }", "nl": "factory method that performs validation and copies the parameter array . concode_field_sep Closure[] iClosures concode_elem_sep long serialVersionUID concode_field_sep Closure[] getClosures concode_elem_sep void execute"}
{"code": "boolean function ( final Object arg0 ) { return ( arg0 instanceof TypeComparator ) ; }", "nl": "indicates whether some other object is `` equal to '' this comparator . concode_field_sep EditorContext context concode_elem_sep boolean DEBUG concode_field_sep int compare concode_elem_sep void db"}
{"code": "boolean function ( Menu arg0 , Control arg1 ) { Collection loc0 = _hierarchy . getWidgets ( arg1 ) ; return loc0 == null ? false : loc0 . contains ( arg0 ) ; }", "nl": "is this menu contained by this control ? concode_field_sep SWTHierarchy _hierarchy concode_field_sep boolean isOrphanedBy concode_elem_sep boolean isSubMenu"}
{"code": "void function ( int arg0 ) { Event loc0 = createClickEvent ( arg0 ) ; loc0 . type = SWT . MouseUp ; new SWTPushEventOperation ( loc0 ) . execute ( ) ; }", "nl": "dispatch a mouserelease event . concode_field_sep Point pointT concode_elem_sep abbot.swt.Robot _robot concode_field_sep void robotKeyClick concode_elem_sep void doKeyDown concode_elem_sep void doKeyUp concode_elem_sep void mouseMove concode_elem_sep void mouseMove concode_elem_sep void keyUp concode_elem_sep void keyUp concode_elem_sep void mouseDown concode_elem_sep abbot.swt.Robot getAbbotRobot concode_elem_sep void mouseDoubleClick concode_elem_sep void pause concode_elem_sep boolean needsShift concode_elem_sep int[] extractKeys concode_elem_sep void keyClick concode_elem_sep void keyClick concode_elem_sep void keyDown concode_elem_sep void keyDown concode_elem_sep Event createClickEvent concode_elem_sep void enterText"}
{"code": "void function ( int arg0 , Notification arg1 ) { mNotificationManager . notify ( arg0 , arg1 ) ; mNotifications . put ( arg0 , arg1 ) ; if ( mForegroundNotification == null && isOngoing ( arg1 ) ) { setForegroundNotification ( arg0 , arg1 ) ; } }", "nl": "adds a notification . concode_field_sep Notification mForegroundNotification concode_elem_sep ConcurrentHashMap<Integer,Notification> mNotifications concode_elem_sep NotificationManagerCompat mNotificationManager concode_elem_sep Context mContext concode_elem_sep int mForegroundNotificationId concode_field_sep void updateForegroundNotification concode_elem_sep void setForegroundNotification concode_elem_sep boolean isOngoing concode_elem_sep boolean isOngoing concode_elem_sep void update concode_elem_sep boolean isDone concode_elem_sep void remove"}
{"code": "short function ( ) { if ( list . isEmpty ( ) ) { throw new EmptyStackException ( ) ; } return list . get ( list . size ( ) - 1 ) ; }", "nl": "looks at the top of this stack without removing it . concode_field_sep ArrayShortList list concode_field_sep short pop concode_elem_sep int search concode_elem_sep int size concode_elem_sep short get concode_elem_sep void clear concode_elem_sep short push concode_elem_sep boolean empty"}
{"code": "int function ( ) { return endingLocation ; }", "nl": "return the ending location of this move . concode_field_sep int startingLocation concode_elem_sep Player thePlayer concode_elem_sep int endingLocation concode_field_sep Player getPlayer concode_elem_sep int startLocation"}
{"code": "void function ( int arg0 ) { this . vendorID = arg0 ; }", "nl": "sets the new vendorid . concode_field_sep long signature1 concode_elem_sep int productID concode_elem_sep String manufacturer concode_elem_sep int vendorID concode_elem_sep long version concode_elem_sep long signature2 concode_elem_sep String productDescription concode_elem_sep String serialNumber concode_elem_sep int MAX_HEADER_LENGTH concode_elem_sep String manufacturerID concode_elem_sep boolean remoteWakeupCapable concode_elem_sep boolean pnpEnabled concode_elem_sep int maxPower concode_elem_sep boolean selfPowered concode_field_sep boolean isPnpEnabled concode_elem_sep long getSignature2 concode_elem_sep void setProductID concode_elem_sep void setPnpEnabled concode_elem_sep void setManufacturer concode_elem_sep void setMaxPower concode_elem_sep void setProductDescription concode_elem_sep String getManufacturer concode_elem_sep void setSelfPowered concode_elem_sep long getSignature1 concode_elem_sep void setManufacturerID concode_elem_sep boolean isRemoteWakeupCapable concode_elem_sep String getManufacturerID concode_elem_sep void validate concode_elem_sep int getMaxPower concode_elem_sep long getVersion concode_elem_sep void setSignature1 concode_elem_sep String getSerialNumber concode_elem_sep void setSerialNumber concode_elem_sep void setVersion concode_elem_sep void setSignature2 concode_elem_sep String getProductDescription concode_elem_sep int getProductID concode_elem_sep boolean isSelfPowered concode_elem_sep void setRemoteWakeupCapable concode_elem_sep int getVendorID"}
{"code": "void function ( float [ ] arg0 , float [ ] arg1 , Point3D arg2 ) { arg2 . x = arg0 [ 1 ] * arg1 [ 2 ] - arg0 [ 2 ] * arg1 [ 1 ] ; arg2 . y = arg0 [ 2 ] * arg1 [ 0 ] - arg0 [ 0 ] * arg1 [ 2 ] ; arg2 . z = arg0 [ 0 ] * arg1 [ 1 ] - arg0 [ 1 ] * arg1 [ 0 ] ; }", "nl": "finds the cross product of two 3d vectors represented to float arrays concode_field_sep float x concode_elem_sep float z concode_elem_sep float y concode_field_sep void setLength concode_elem_sep void logVector concode_elem_sep void normalize concode_elem_sep double dot concode_elem_sep float length concode_elem_sep void copy concode_elem_sep void copy concode_elem_sep void reverse concode_elem_sep double rotToRad concode_elem_sep void rotateX concode_elem_sep void rotateY concode_elem_sep void rotateZ"}
{"code": "int function ( ) { return keys . length ; }", "nl": "gets the size of the list of keys . concode_field_sep long serialVersionUID concode_elem_sep Object[] keys concode_elem_sep int hashCode concode_field_sep Object getKey concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep String toString concode_elem_sep Object[] getKeys"}
{"code": "MatchResult function ( Display arg0 , Matcher arg1 ) { return find ( arg0 , arg1 , getMaxFinderRetries ( ) ) ; }", "nl": "find a widget , using the given matcher to determine whether a given widget in the hierarchy in the given display is the desired one . concode_field_sep int MATCH concode_elem_sep Collection _widgets concode_elem_sep int _dbComparisons concode_elem_sep Widget _widget concode_elem_sep Hierarchy _hierarchy concode_elem_sep int BFS concode_elem_sep int DFS concode_elem_sep int _type concode_elem_sep ArrayList _list concode_elem_sep int WIDGET_NOT_FOUND concode_elem_sep int MULTIPLE_WIDGETS_FOUND concode_elem_sep int _searchType concode_field_sep Widget getParent concode_elem_sep Collection getRoots concode_elem_sep Widget getWidget concode_elem_sep Collection getWidgets concode_elem_sep Collection getWidgets concode_elem_sep MatchResult match concode_elem_sep void findMatches concode_elem_sep MatchResult multipleFound concode_elem_sep void pause concode_elem_sep boolean contains concode_elem_sep int getType concode_elem_sep void assertNotNull concode_elem_sep void assertNotNull concode_elem_sep MatchResult find0 concode_elem_sep void dispose concode_elem_sep MatchResult notFound concode_elem_sep int getFinderRetryInterval concode_elem_sep int getMaxFinderRetries concode_elem_sep void setFound"}
{"code": "void function ( ) { assumeCondition ( \"srini_string\" , CONDITION_SKIP_ELYTRON_PROFILE ) ; }", "nl": "assume for test failures when running with elytron profile enabled . it skips test in case the ' - delytron ' mavenargument is used for elytron profile activation and system property wildfly.tmp.enable.elytron.profile.tests has n't value ` true ' . concode_field_sep Supplier<Boolean> CONDITION_SKIP_ELYTRON_PROFILE concode_field_sep void assumeInvocationTestsEnabled concode_elem_sep void assumeCondition"}
{"code": "void function ( LineNumberReader arg0 , List < List < String >> arg1 , String arg2 ) { List < String > loc0 = new ArrayList < String > ( ) ; loc0 . add ( arg2 ) ; String loc1 = arg0 . readLine ( ) ; while ( ( loc1 != null ) && ( ! loc1 . trim ( ) . equals ( \"srini_string\" ) ) ) { loc0 . add ( loc1 ) ; loc1 = arg0 . readLine ( ) ; } arg1 . add ( loc0 ) ; }", "nl": "reads a group of ppt statements statements following the line `` ppt_name ... '' . all the lines between firstline and the first empty line are placed into a list and then this list is placed in to pptsections . concode_field_sep String lineSep concode_elem_sep StatementReplacer statementReplacer concode_elem_sep String spinfoFileName concode_elem_sep String tempDir concode_elem_sep SplitterObject[][] splitterObjects concode_field_sep boolean isComment concode_elem_sep StatementReplacer getReplacer concode_elem_sep SplitterObject[][] createSplitterObjects concode_elem_sep void setFormatting concode_elem_sep void readReplaceStatements concode_elem_sep void parseFile concode_elem_sep boolean isFormatting concode_elem_sep boolean isBlank concode_elem_sep SplitterObject[][] getSplitterObjects"}
{"code": "JQueryLibrary function ( String arg0 ) { return new JQueryLibrary ( BASE_RESOURCE_URL + \"srini_string\" + arg0 + \"srini_string\" ) ; }", "nl": "return a library that loads the core from code.jquery.com concode_field_sep String BASE_RESOURCE_URL concode_elem_sep String url concode_field_sep JQueryLibrary mobileStructure concode_elem_sep JQueryLibrary baseTheme concode_elem_sep JQueryLibrary ui concode_elem_sep void renderOn concode_elem_sep JQueryLibrary mobileTheme concode_elem_sep JQueryLibrary mobile concode_elem_sep JQueryLibrary theme"}
{"code": "IUICondition function ( String arg0 ) { return new HasTextCondition ( new WizardPageElement ( ) { public String getText ( IUIContext arg1 ) throws WidgetSearchException { return getPage ( ) . getMessage ( ) ; } } , arg0 ) ; }", "nl": "build a condition that tests whether the active wizard page has an expected message text . concode_field_sep long serialVersionUID concode_field_sep IUICondition hasErrorMessage concode_elem_sep IUICondition hasDescription concode_elem_sep String toString concode_elem_sep IUICondition hasTitle"}
{"code": "Set < String > function ( ) { return java . util . Collections . unmodifiableSet ( enabledFilters . keySet ( ) ) ; }", "nl": "returns an unmodifiable set of enabled filter names . concode_field_sep String internalFetchProfile concode_elem_sep EntityGraph loadGraph concode_elem_sep SessionFactoryImplementor sessionFactory concode_elem_sep Map<String,Filter> enabledFilters concode_elem_sep Set<String> enabledFetchProfileNames concode_elem_sep EntityGraph fetchGraph concode_elem_sep LoadQueryInfluencers NONE concode_field_sep void setInternalFetchProfile concode_elem_sep EntityGraph getFetchGraph concode_elem_sep void setLoadGraph concode_elem_sep Map<String,Filter> getEnabledFilters concode_elem_sep boolean isFetchProfileEnabled concode_elem_sep Object getFilterParameterValue concode_elem_sep void enableFetchProfile concode_elem_sep Set<String> getEnabledFetchProfileNames concode_elem_sep SessionFactoryImplementor getSessionFactory concode_elem_sep void disableFilter concode_elem_sep String[] parseFilterParameterName concode_elem_sep void disableFetchProfile concode_elem_sep void checkFetchProfileName concode_elem_sep Type getFilterParameterType concode_elem_sep boolean hasEnabledFilters concode_elem_sep Filter enableFilter concode_elem_sep void setFetchGraph concode_elem_sep String getInternalFetchProfile concode_elem_sep Filter getEnabledFilter concode_elem_sep boolean hasEnabledFetchProfiles concode_elem_sep EntityGraph getLoadGraph"}
{"code": "void function ( ) { mostRecentInfo = new DebugRecordingInfo ( ) ; }", "nl": "create and cache a new recording debug info structure concode_field_sep IPath workspaceLocation concode_elem_sep String PROJECT_CLASSPATH concode_elem_sep String[] recorderClasspath concode_elem_sep String[] bundleClasspath concode_elem_sep String recLogContent concode_elem_sep String RECORDER_CLASSPATH concode_elem_sep DebugRecordingInfo mostRecentInfo concode_elem_sep String devLogContent concode_elem_sep ISemanticEvent[] semanticEvents concode_field_sep Object[] getClasspath concode_elem_sep DebugRecordingInfo getInfo concode_elem_sep void printInfo concode_elem_sep void printClasspath concode_elem_sep String getDevelopmentLogContent concode_elem_sep String[] getRecorderClasspath concode_elem_sep void setRecorderClasspath concode_elem_sep boolean shouldShow concode_elem_sep IPath getWorkspaceLocation concode_elem_sep String[] getBundleClasspath concode_elem_sep ISemanticEvent[] getSemanticEvents concode_elem_sep void setSemanticEvents concode_elem_sep void setSemanticEvents concode_elem_sep String getRecorderLogContent concode_elem_sep Object[] getClasspathNames concode_elem_sep String readLogContent concode_elem_sep void copyToClipboard concode_elem_sep void setBundleClasspath concode_elem_sep void setWorkspaceLocation concode_elem_sep String convertToText"}
{"code": "double [ ] function ( double arg0 , double arg1 , double arg2 , double arg3 , double arg4 , double arg5 ) { System . out . println ( \"srini_string\" + arg0 + \"srini_string\" + arg1 + \"srini_string\" + arg2 + \"srini_string\" + arg3 + \"srini_string\" + arg4 + \"srini_string\" + arg5 + \"srini_string\" ) ; double loc0 = ( arg4 * arg3 - arg1 * arg5 ) / ( arg0 * arg3 - arg1 * arg2 ) ; double loc1 = ( arg0 * arg5 - arg4 * arg2 ) / ( arg0 * arg3 - arg1 * arg2 ) ; return new double [ ] { loc0 , loc1 } ; }", "nl": "solves a linear system for x , y with cramer 's rule . ax + by = e cx + dy = f concode_field_sep PlaceHolder placeHolder concode_field_sep double det concode_elem_sep double det"}
{"code": "PaintSurface function ( ) { return paintSurface ; }", "nl": "returns the paint surface associated with this paint session . concode_field_sep PaintSurface paintSurface concode_field_sep placeholderType placeHolder"}
{"code": "List < String > function ( String arg0 ) { return Arrays . asList ( ( arg0 . split ( \"srini_string\" ) ) ) ; }", "nl": "this method splits a string by hyphens in it and returns the list of strings . concode_field_sep PlaceHolder placeHolder concode_field_sep String getDocContent concode_elem_sep ArrayList<String> processToken concode_elem_sep Map<Integer,Double> sortByValue concode_elem_sep Map<String,Integer> getStemmedTokens"}
{"code": "void function ( ) { getUIThreadMonitor ( ) . setListener ( null ) ; }", "nl": "stop monitoring the ui for responsiveness . concode_field_sep ITestCleanupHandler _cleanupHandler concode_elem_sep boolean _isRunning concode_elem_sep List<ITestExecutionListener> _listeners concode_elem_sep RunningState _runningState concode_elem_sep TestExceptionCache _exceptionCache concode_field_sep void startUIMonitor concode_elem_sep void testFinished concode_elem_sep void exceptionCaught concode_elem_sep IUIThreadMonitor getUIThreadMonitor concode_elem_sep void testStarted concode_elem_sep TestExceptionCache getExceptions concode_elem_sep void setIsRunning concode_elem_sep boolean isRunning concode_elem_sep void cleanUp concode_elem_sep void testFinishing concode_elem_sep void waitUntilFinished concode_elem_sep void stopTestMonitors concode_elem_sep void setException concode_elem_sep void addListener concode_elem_sep boolean isExceptional concode_elem_sep void testStarting concode_elem_sep void doWaitForFinish concode_elem_sep void uiTimeout concode_elem_sep boolean terminateWaitForFinish concode_elem_sep void removeListener concode_elem_sep void throwException concode_elem_sep RunningState getState concode_elem_sep void setCleanupHandler concode_elem_sep void startTestMonitors concode_elem_sep TestExceptionCache getExceptionCache"}
{"code": "void function ( String [ ] arg0 ) { try { TextTestShell loc0 = new TextTestShell ( ) ; loc0 . open ( ) ; final Display loc1 = Display . getDefault ( ) ; while ( ! loc0 . getShell ( ) . isDisposed ( ) ) { if ( ! loc1 . readAndDispatch ( ) ) loc1 . sleep ( ) ; } } catch ( Exception loc0 ) { loc0 . printStackTrace ( ) ; } }", "nl": "launch the application concode_field_sep Shell shell concode_elem_sep boolean ALPHA concode_elem_sep Text text concode_elem_sep boolean BETA concode_field_sep void toggleBETA concode_elem_sep Text getText concode_elem_sep void toggleALPHA concode_elem_sep Shell getShell concode_elem_sep void createContents concode_elem_sep void open"}
{"code": "AdvancedCache function ( AdvancedCache arg0 ) { return arg0 . withFlags ( Flag . FAIL_SILENTLY , Flag . ZERO_LOCK_ACQUISITION_TIMEOUT ) ; }", "nl": "transform a given cache into a cache that fails silently if cache reads fail . concode_field_sep PlaceHolder placeHolder concode_field_sep AdvancedCache asyncWriteCache concode_elem_sep boolean isClustered concode_elem_sep AdvancedCache localCache concode_elem_sep AdvancedCache failSilentWriteCache concode_elem_sep AdvancedCache failSilentWriteCache concode_elem_sep boolean isSynchronousCache concode_elem_sep T withinTx concode_elem_sep T withinTx concode_elem_sep AdvancedCache ignoreReturnValuesCache concode_elem_sep AdvancedCache ignoreReturnValuesCache concode_elem_sep boolean isInvalidationCache concode_elem_sep void broadcastEvictAll"}
{"code": "int function ( ) { return lineNo ; }", "nl": "return the original line number for this line concode_field_sep String inlineMarkupDelimiters concode_elem_sep int sectionLevel concode_elem_sep boolean erased concode_elem_sep boolean inBlock concode_elem_sep boolean listStart concode_elem_sep List<Boolean> valid concode_elem_sep char ESCAPED_CHARACTER_VALUE concode_elem_sep List<Integer> offsets concode_elem_sep List<Character> characters concode_elem_sep String text concode_elem_sep List<Boolean> escaped concode_elem_sep int listLevel concode_elem_sep int lineNo concode_elem_sep boolean allSameCharacter concode_field_sep void setListStart concode_elem_sep void erase concode_elem_sep void erase concode_elem_sep void erase concode_elem_sep boolean isListStart concode_elem_sep String getText concode_elem_sep boolean isValid concode_elem_sep int getOffset concode_elem_sep int length concode_elem_sep boolean isEmpty concode_elem_sep void eraseWithStyle concode_elem_sep boolean isAllSameCharacter concode_elem_sep void setSectionLevel concode_elem_sep void setInBlock concode_elem_sep boolean isErased concode_elem_sep int getSectionLevel concode_elem_sep int eraseEnclosure concode_elem_sep int getListLevel concode_elem_sep boolean isInBlock concode_elem_sep String toString concode_elem_sep char rawCharAt concode_elem_sep void setListLevel concode_elem_sep char charAt concode_elem_sep char charAt concode_elem_sep boolean startsWith"}
{"code": "Object function ( ) { last = ( Map . Entry ) iterator . next ( ) ; canRemove = true ; return last . getKey ( ) ; }", "nl": "gets the next key from the map . concode_field_sep Iterator iterator concode_elem_sep Map.Entry last concode_elem_sep Map map concode_elem_sep boolean canRemove concode_field_sep Object getKey concode_elem_sep Object getValue concode_elem_sep Object setValue concode_elem_sep void reset concode_elem_sep boolean hasNext concode_elem_sep String toString concode_elem_sep void remove"}
{"code": "long function ( Object arg0 ) { return ( ( Collection ) arg0 ) . size ( ) ; }", "nl": "called by the default implementation of #writearray to get thesize of an array . the default implementation is for collection . concode_field_sep GenericData data concode_elem_sep Schema root concode_field_sep NullPointerException npe concode_elem_sep void writeWithoutConversion concode_elem_sep Iterator<? extends Object> getArrayElements concode_elem_sep void writeFixed concode_elem_sep void writeEnum concode_elem_sep Object convert concode_elem_sep void writeField concode_elem_sep int getMapSize concode_elem_sep void error concode_elem_sep void writeMap concode_elem_sep void setSchema concode_elem_sep void writeRecord concode_elem_sep void writeBytes concode_elem_sep void writeArray concode_elem_sep Iterable<Map.Entry<Object,Object>> getMapEntries concode_elem_sep int resolveUnion concode_elem_sep void write concode_elem_sep void write concode_elem_sep void writeString concode_elem_sep void writeString concode_elem_sep GenericData getData"}
{"code": "void function ( PdfWriter arg0 , Document arg1 , float arg2 ) { }", "nl": "called when a paragraph is written . paragraphposition will hold the height of the end of the paragraph . concode_field_sep PlaceHolder placeHolder concode_field_sep void onSection concode_elem_sep void onParagraph concode_elem_sep void onOpenDocument concode_elem_sep void onSectionEnd concode_elem_sep void onEndPage concode_elem_sep void onChapter concode_elem_sep void onGenericTag concode_elem_sep void onCloseDocument concode_elem_sep void onChapterEnd concode_elem_sep void onStartPage"}
{"code": "XMLElement function ( final String arg0 ) { if ( closed ) { throw new IOException ( format ( \"srini_string\" , name ) ) ; } finishOpenTag ( ) ; if ( lastchild != null ) { lastchild . close ( ) ; } quote ( arg0 ) ; return this ; }", "nl": "adds the given text as a child to this node . the text will be quoted . concode_field_sep char EQ concode_elem_sep char LT concode_elem_sep char AMP concode_elem_sep char QUOT concode_elem_sep char GT concode_elem_sep XMLElement lastchild concode_elem_sep char SPACE concode_elem_sep String name concode_elem_sep boolean closed concode_elem_sep Writer writer concode_elem_sep boolean openTagDone concode_elem_sep char SLASH concode_field_sep void quote concode_elem_sep void finishOpenTag concode_elem_sep void addChildElement concode_elem_sep XMLElement text concode_elem_sep XMLElement attr concode_elem_sep XMLElement attr concode_elem_sep XMLElement attr concode_elem_sep void close concode_elem_sep void beginOpenTag concode_elem_sep XMLElement element"}
{"code": "void function ( final InputStream arg0 , final boolean arg1 ) { if ( arg1 ) { parse ( arg1 ( new BufferedInputStream ( arg0 ) ) ) ; } else { parse ( arg0 ) ; } }", "nl": "parse an inputstream that optionally detects encoding from the stream concode_field_sep String text concode_elem_sep Charset charset concode_elem_sep StateController controller concode_elem_sep XMLParserMemory memory concode_elem_sep List<XMLParserListener> listeners concode_elem_sep TagState tagState concode_elem_sep ParserMonitor monitor concode_elem_sep State state concode_field_sep XMLParserMemory memory concode_elem_sep void startElement concode_elem_sep InputStreamReader detectEncoding concode_elem_sep char currentLastChar concode_elem_sep XMLParser removeListener concode_elem_sep Charset getCharset concode_elem_sep TagState currentTagState concode_elem_sep void currentTagState concode_elem_sep String current concode_elem_sep void endElement concode_elem_sep void flush concode_elem_sep void parseWithReader concode_elem_sep void unknownData concode_elem_sep String currentTag concode_elem_sep void setMonitor concode_elem_sep String bufferToString concode_elem_sep void setState concode_elem_sep void comment concode_elem_sep StateController selectState concode_elem_sep void text concode_elem_sep XMLParser append concode_elem_sep XMLParser append concode_elem_sep XMLParser append concode_elem_sep void callText concode_elem_sep XMLParser addListener concode_elem_sep int bufferSize"}
{"code": "String function ( ) { return entityName ; }", "nl": "getter for property ` entityname ' . concode_field_sep String propertyName concode_elem_sep String entityName concode_field_sep String getRole concode_elem_sep void configure concode_elem_sep Serializable generate concode_elem_sep String getPropertyName"}
{"code": "boolean function ( final String arg0 ) { for ( int loc0 = arg0 . length ( ) - 1 ; loc0 >= 0 ; loc0 -- ) { if ( Character . isLowerCase ( arg0 . charAt ( loc0 ) ) ) return false ; } return true ; }", "nl": "does this word contain upper-case letters only ? concode_field_sep Set<ISpellDictionary> fDictionaries concode_elem_sep Set<String> fIgnored concode_elem_sep Locale fLocale concode_elem_sep String[] URL_PREFIXES concode_elem_sep IPreferenceStore fPreferences concode_field_sep void addDictionary concode_elem_sep void addWord concode_elem_sep void ignoreWord concode_elem_sep void removeDictionary concode_elem_sep boolean isMixedCase concode_elem_sep Set<RankedWordProposal> getProposals concode_elem_sep boolean acceptsWords concode_elem_sep void execute concode_elem_sep void checkWord concode_elem_sep boolean isUrl concode_elem_sep boolean isDigits concode_elem_sep Locale getLocale concode_elem_sep boolean isCorrect"}
{"code": "CodecFactory function ( String arg0 ) { CodecFactory loc0 = REGISTERED . get ( arg0 ) ; if ( loc0 == null ) { throw new AvroRuntimeException ( \"srini_string\" + arg0 ) ; } return loc0 ; }", "nl": "maps a codec name into a codecfactory . currently there are five codecs registered by default : null deflate snappy bzip2 xz concode_field_sep int DEFAULT_XZ_LEVEL concode_elem_sep Map<String,CodecFactory> REGISTERED concode_elem_sep int DEFAULT_DEFLATE_LEVEL concode_field_sep Codec createInstance concode_elem_sep CodecFactory snappyCodec concode_elem_sep CodecFactory bzip2Codec concode_elem_sep CodecFactory deflateCodec concode_elem_sep String toString concode_elem_sep CodecFactory xzCodec concode_elem_sep CodecFactory addCodec concode_elem_sep CodecFactory nullCodec"}
{"code": "void function ( FrameworkMethod arg0 ) { }", "nl": "invoked when a test method is about to start concode_field_sep PlaceHolder placeHolder concode_field_sep Statement apply concode_elem_sep void finished concode_elem_sep void failed concode_elem_sep void succeeded"}
{"code": "HazelcastInstance function ( ) { HazelcastInstance loc0 = InstanceHelper . makeServer ( Constants . HAZELCAST_INSTANCE_NAME , CLUSTER_PORT ) ; LOG . trace ( \"srini_string\" , loc0 ) ; InstanceHelper . makeServer ( \"srini_string\" + Constants . HAZELCAST_INSTANCE_NAME , ( 1 + CLUSTER_PORT ) ) ; return loc0 ; }", "nl": "create two hazelcastinstance server @bean s clustered together . concode_field_sep String CLUSTER_HOST concode_elem_sep Logger LOG concode_elem_sep String MASTER_SERVER concode_elem_sep HazelcastInstance hazelcastInstance concode_elem_sep int CLUSTER_PORT concode_field_sep HazelcastInstance singleton concode_elem_sep HazelcastInstance makeClient concode_elem_sep void preDestroy concode_elem_sep HazelcastInstance makeServer concode_elem_sep KeyValueOperations keyValueTemplate"}
{"code": "boolean function ( ) { return map . isEmpty ( ) ; }", "nl": "invokes the underlying map #isempty method . concode_field_sep Map map concode_field_sep Set entrySet concode_elem_sep boolean containsKey concode_elem_sep Collection values concode_elem_sep void clear concode_elem_sep boolean containsValue concode_elem_sep Object put concode_elem_sep Object remove concode_elem_sep int size concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep Object get concode_elem_sep void putAll concode_elem_sep Set keySet"}
{"code": "boolean function ( ) { return quirks ; }", "nl": "returns the quirks . concode_field_sep T headPointer concode_elem_sep int mode concode_elem_sep boolean quirks concode_elem_sep T formPointer concode_elem_sep StackNode<T>[] stack concode_elem_sep boolean framesetOk concode_elem_sep boolean needToDropLF concode_elem_sep T deepTreeSurrogateParent concode_elem_sep int[] templateModeStack concode_elem_sep StackNode<T>[] listOfActiveFormattingElements concode_elem_sep int originalMode concode_field_sep T getDeepTreeSurrogateParent concode_elem_sep int getListOfActiveFormattingElementsLength concode_elem_sep boolean isFramesetOk concode_elem_sep void destructor concode_elem_sep int[] getTemplateModeStack concode_elem_sep int getStackLength concode_elem_sep T getHeadPointer concode_elem_sep int getOriginalMode concode_elem_sep int getTemplateModeStackLength concode_elem_sep StackNode<T>[] getStack concode_elem_sep boolean isNeedToDropLF concode_elem_sep StackNode<T>[] getListOfActiveFormattingElements concode_elem_sep int getMode concode_elem_sep T getFormPointer"}
{"code": "void function ( long arg0 ) { this . ours = arg0 ; }", "nl": "sets the value of ours concode_field_sep long theirs concode_elem_sep long ours concode_elem_sep String description concode_elem_sep int iterations concode_field_sep int getIterations concode_elem_sep void setIterations concode_elem_sep long getOurAvg concode_elem_sep String toString concode_elem_sep void setDescription concode_elem_sep void setTheirs concode_elem_sep long getTheirs concode_elem_sep String getDescription concode_elem_sep long getOurs concode_elem_sep long getTheirAvg"}
{"code": "float function ( ) { return leading ; }", "nl": "getter for the leading concode_field_sep boolean knockout concode_elem_sep LineDashPattern lineDashPattern concode_elem_sep BaseColor fillColor concode_elem_sep float wordSpacing concode_elem_sep float leading concode_elem_sep BaseColor strokeColor concode_elem_sep int lineJoinStyle concode_elem_sep float miterLimit concode_elem_sep int lineCapStyle concode_elem_sep float lineWidth concode_elem_sep int renderMode concode_elem_sep PdfName colorSpaceFill concode_elem_sep PdfName colorSpaceStroke concode_elem_sep float fontSize concode_elem_sep float rise concode_elem_sep Matrix ctm concode_elem_sep float horizontalScaling concode_elem_sep float characterSpacing concode_elem_sep CMapAwareDocumentFont font concode_field_sep float getFontSize concode_elem_sep int getRenderMode concode_elem_sep void setLineDashPattern concode_elem_sep int getLineJoinStyle concode_elem_sep PdfName getColorSpaceStroke concode_elem_sep float getCharacterSpacing concode_elem_sep void setLineWidth concode_elem_sep Matrix getCtm concode_elem_sep void setLineCapStyle concode_elem_sep PdfName getColorSpaceFill concode_elem_sep float getMiterLimit concode_elem_sep float getLineWidth concode_elem_sep float getWordSpacing concode_elem_sep boolean isKnockout concode_elem_sep BaseColor getFillColor concode_elem_sep CMapAwareDocumentFont getFont concode_elem_sep void setMiterLimit concode_elem_sep float getRise concode_elem_sep BaseColor getStrokeColor concode_elem_sep int getLineCapStyle concode_elem_sep LineDashPattern getLineDashPattern concode_elem_sep float getHorizontalScaling concode_elem_sep void setLineJoinStyle"}
{"code": "Object function ( ) { return iConstant ; }", "nl": "always return constant . concode_field_sep Factory NULL_INSTANCE concode_elem_sep long serialVersionUID concode_elem_sep Object iConstant concode_field_sep Object getConstant concode_elem_sep Factory getInstance"}
{"code": "Scene function ( ) { return focusScene ; }", "nl": "get reference to the scene that has the input focus concode_field_sep List<Scene> scenes concode_elem_sep Map<String,Scene> sceneHashMap concode_elem_sep List<Btimer> btimers concode_elem_sep Scene focusScene concode_field_sep void startScene concode_elem_sep void startScene concode_elem_sep void addTimer concode_elem_sep void stopScene concode_elem_sep void setInputFocus concode_elem_sep void setInputFocus concode_elem_sep List<Scene> getScenes concode_elem_sep void updateTimers concode_elem_sep boolean sceneExist concode_elem_sep void addScene"}
{"code": "List < Command > function ( String ... arg0 ) { List < Command > loc0 = new ArrayList < Command > ( ) ; for ( String loc1 : arg0 ) { Command loc2 = findCommand ( loc1 ) ; if ( loc2 != null ) { loc0 . add ( loc2 ) ; } } return loc0 ; }", "nl": "builds the commands . concode_field_sep PlaceHolder placeHolder concode_field_sep Command findCommand concode_elem_sep boolean commandEquals"}
{"code": "void function ( ) { lockChain ( ) ; updateCurrentIterator ( ) ; lastUsedIterator . remove ( ) ; }", "nl": "removes from the underlying collection the last element returned by the iterator . as with next and hasnext , this method calls remove on the underlying iterator . therefore , this method may throw an unsupportedoperationexception if the underlying iterator does not support this method . concode_field_sep Iterator lastUsedIterator concode_elem_sep boolean isLocked concode_elem_sep Iterator currentIterator concode_elem_sep List iteratorChain concode_elem_sep int currentIteratorIndex concode_field_sep Object next concode_elem_sep void checkLocked concode_elem_sep int size concode_elem_sep void addIterator concode_elem_sep boolean isLocked concode_elem_sep void lockChain concode_elem_sep boolean hasNext concode_elem_sep List getIterators concode_elem_sep void setIterator concode_elem_sep void updateCurrentIterator"}
{"code": "float function ( float arg0 , float arg1 ) { return arg0 + ( rand . nextFloat ( ) * ( ( 1 + arg1 ) - arg0 ) ) ; }", "nl": "inclusive min / max concode_field_sep Random rand concode_field_sep int nextIntRange concode_elem_sep double getAngle concode_elem_sep byte[] putBytesInArray"}
{"code": "List < String > function ( ) { return Collections . unmodifiableList ( activeVersions ) ; }", "nl": "return the slot id 's of all active jsf versions . concode_field_sep Map<String,ModuleIdentifier> apiIds concode_elem_sep Set<String> allVersions concode_elem_sep List<String> activeVersions concode_elem_sep JSFModuleIdFactory instance concode_elem_sep Map<String,ModuleIdentifier> implIds concode_elem_sep String API_MODULE concode_elem_sep String INJECTION_MODULE concode_elem_sep String defaultSlot concode_elem_sep Map<String,ModuleIdentifier> injectionIds concode_elem_sep String IMPL_MODULE concode_field_sep void loadIds concode_elem_sep String getDefaultSlot concode_elem_sep String computeSlot concode_elem_sep boolean isBogusPath concode_elem_sep void loadIdsManually concode_elem_sep void setDefaultSlot concode_elem_sep ModuleIdentifier getImplModId concode_elem_sep boolean isValidJSFSlot concode_elem_sep JSFModuleIdFactory getInstance concode_elem_sep void loadIdsFromModulePath concode_elem_sep void checkVersionIntegrity concode_elem_sep ModuleIdentifier getApiModId concode_elem_sep ModuleIdentifier getInjectionModId"}
{"code": "void function ( IFigure arg0 , LayoutManager arg1 ) { arg0 . setLayoutManager ( arg1 ) ; this . activeLayoutManager = arg1 ; if ( arg1 == xyLayoutManager ) { diagram . installEditPolicy ( EditPolicy . LAYOUT_ROLE , new SchemaXYLayoutPolicy ( ) ) ; } else { diagram . installEditPolicy ( EditPolicy . LAYOUT_ROLE , null ) ; } }", "nl": "sets the current active layout manager concode_field_sep SchemaDiagramPart diagram concode_elem_sep Map partsToNodeMap concode_elem_sep GraphXYLayout xyLayoutManager concode_elem_sep Map figureToBoundsMap concode_elem_sep LayoutManager activeLayoutManager concode_elem_sep GraphLayoutManager graphLayoutManager concode_field_sep void layout concode_elem_sep void setConstraint concode_elem_sep Object getConstraint concode_elem_sep Dimension getPreferredSize concode_elem_sep Dimension getMinimumSize concode_elem_sep LayoutManager getActiveLayoutManager concode_elem_sep void invalidate concode_elem_sep void setXYLayoutConstraint concode_elem_sep void remove"}
{"code": "void function ( int arg0 , int arg1 , double arg2 ) { if ( accounts [ arg0 ] < arg2 ) return ; System . out . print ( Thread . currentThread ( ) ) ; accounts [ arg0 ] -= arg2 ; System . out . printf ( \"srini_string\" , arg2 , arg0 , arg1 ) ; accounts [ arg1 ] += arg2 ; System . out . printf ( \"srini_string\" , getTotalBalance ( ) ) ; }", "nl": "transfers money from one account to another . concode_field_sep double[] accounts concode_field_sep int size concode_elem_sep double getTotalBalance"}
{"code": "void function ( ) { evictAll ( ) ; }", "nl": "called to evict data from the entire region concode_field_sep CoreMessageLogger LOG concode_field_sep void unlockRegion concode_elem_sep void evictAll concode_elem_sep BaseGeneralDataRegion getInternalRegion concode_elem_sep void unlockItem concode_elem_sep Object get concode_elem_sep boolean putFromLoad concode_elem_sep boolean putFromLoad concode_elem_sep SoftLock lockItem concode_elem_sep SoftLock lockRegion concode_elem_sep boolean isDefaultMinimalPutOverride concode_elem_sep void remove concode_elem_sep void evict"}
{"code": "String function ( Object arg0 ) { return JacksonUtils . toJsonNode ( arg0 ) . toString ( ) ; }", "nl": "converts an instance of the object model described in org.apache.avro.jsonproperties to a json string . concode_field_sep ResolvingDecoder resolver concode_elem_sep Schema SCHEMA concode_elem_sep Schema written concode_elem_sep JsonFactory FACTORY concode_elem_sep ObjectMapper MAPPER concode_field_sep JsonNode read concode_elem_sep Object read concode_elem_sep JsonNode read concode_elem_sep Object parseJson concode_elem_sep void writeObject concode_elem_sep void write concode_elem_sep void write concode_elem_sep void write concode_elem_sep void setSchema concode_elem_sep void setSchema concode_elem_sep void setSchema concode_elem_sep void setSchema concode_elem_sep Object readObject"}
{"code": "void function ( JobConf arg0 , Class < ? extends AvroMapper > arg1 ) { arg0 . set ( MAPPER , arg1 . getName ( ) ) ; }", "nl": "configure a job 's mapper implementation . concode_field_sep String COMBINER concode_elem_sep String MAP_OUTPUT_SCHEMA concode_elem_sep String INPUT_SCHEMA concode_elem_sep String MAPPER concode_elem_sep String TEXT_PREFIX concode_elem_sep String CONF_DATA_MODEL concode_elem_sep String BINARY_PREFIX concode_elem_sep String OUTPUT_SCHEMA concode_elem_sep String INPUT_IS_REFLECT concode_elem_sep String MAP_OUTPUT_IS_REFLECT concode_elem_sep String REDUCER concode_elem_sep String OUTPUT_CODEC concode_field_sep void configureAvroShuffle concode_elem_sep GenericData createDataModel concode_elem_sep Schema getOutputSchema concode_elem_sep void setInputSequenceFile concode_elem_sep void configureAvroInput concode_elem_sep void setDataModelClass concode_elem_sep void setInputSchema concode_elem_sep void setInputReflect concode_elem_sep void setOutputSchema concode_elem_sep void configureAvroOutput concode_elem_sep Class<? extends GenericData> getDataModelClass concode_elem_sep void setMapOutputSchema concode_elem_sep GenericData newDataModelInstance concode_elem_sep Schema getInputSchema concode_elem_sep void setReducerClass concode_elem_sep Schema getMapOutputSchema concode_elem_sep void setReflect concode_elem_sep GenericData createInputDataModel concode_elem_sep void setMapOutputReflect concode_elem_sep void setOutputCodec concode_elem_sep void setCombinerClass concode_elem_sep GenericData createMapOutputDataModel concode_elem_sep void setOutputMeta concode_elem_sep void setOutputMeta concode_elem_sep void setOutputMeta"}
{"code": "Residue < C > function ( Residue < C > arg0 ) { return new Residue < C > ( ring , val . sum ( arg0 . val ) ) ; }", "nl": "residue summation . concode_field_sep GenPolynomial<C> val concode_elem_sep ResidueRing<C> ring concode_elem_sep int isunit concode_field_sep int signum concode_elem_sep boolean isONE concode_elem_sep Residue<C> inverse concode_elem_sep boolean isUnit concode_elem_sep Residue<C> subtract concode_elem_sep Residue<C> gcd concode_elem_sep int compareTo concode_elem_sep Residue<C>[] egcd concode_elem_sep boolean isConstant concode_elem_sep Residue<C> monic concode_elem_sep Residue<C> abs concode_elem_sep int hashCode concode_elem_sep Residue<C> negate concode_elem_sep boolean equals concode_elem_sep Residue<C> clone concode_elem_sep boolean isZERO concode_elem_sep String toString concode_elem_sep Residue<C> divide concode_elem_sep Residue<C> multiply concode_elem_sep Residue<C> remainder"}
{"code": "void function ( Throwable arg0 , Description arg1 ) { }", "nl": "invoked when a test fails concode_field_sep PlaceHolder placeHolder concode_field_sep void finishedQuietly concode_elem_sep Statement apply concode_elem_sep void startingQuietly concode_elem_sep void finished concode_elem_sep void succeededQuietly concode_elem_sep void starting concode_elem_sep void failedQuietly concode_elem_sep void skippedQuietly concode_elem_sep void succeeded concode_elem_sep void skipped"}
{"code": "boolean function ( final int arg0 ) { if ( ! Character . isLetter ( fContent . charAt ( arg0 ) ) ) return false ; if ( arg0 > 0 && ! Character . isWhitespace ( fContent . charAt ( arg0 - 1 ) ) ) return false ; if ( arg0 < fContent . length ( ) - 1 && ! Character . isWhitespace ( fContent . charAt ( arg0 + 1 ) ) ) return false ; return true ; }", "nl": "is the current token a single letter token surrounded by non-whitespace characters ? concode_field_sep LinkedList<Integer> fSentenceBreaks concode_elem_sep String fDelimiter concode_elem_sep int WHITE_SPACE_TOKEN concode_elem_sep int fOffset concode_elem_sep int fNext concode_elem_sep int fPredecessor concode_elem_sep int fPrevious concode_elem_sep boolean fStartsSentence concode_elem_sep String fLastToken concode_elem_sep String fContent concode_elem_sep boolean fIsIgnoringSingleLetters concode_elem_sep int fSuccessor concode_elem_sep BreakIterator fWordIterator concode_field_sep String next concode_elem_sep int getBegin concode_elem_sep boolean hasNext concode_elem_sep boolean isWhitespace concode_elem_sep int nextSentence concode_elem_sep void skipTokens concode_elem_sep int getEnd concode_elem_sep void remove concode_elem_sep boolean isToken concode_elem_sep boolean isToken concode_elem_sep boolean isUrlToken concode_elem_sep void setIgnoreSingleLetters concode_elem_sep String nextToken concode_elem_sep boolean isAlphaNumeric concode_elem_sep void nextBreak concode_elem_sep boolean startsSentence"}
{"code": "Predicate < WebElement > function ( ) { return new Predicate < WebElement > ( ) { @ Override public boolean apply ( WebElement arg0 ) { return arg0 . isDisplayed ( ) ; } @ Override public String toString ( ) { return \"srini_string\" ; } } ; }", "nl": "create and return a new predicate that checks if the element is displayed . concode_field_sep PlaceHolder placeHolder concode_field_sep Predicate<WebElement> attrEquals concode_elem_sep Predicate<WebElement> textEndsWith concode_elem_sep Predicate<WebElement> hasClass concode_elem_sep Predicate<WebElement> textMatches concode_elem_sep Function<WebElement,Boolean> clear concode_elem_sep Predicate<WebElement> cssValue concode_elem_sep Function<WebElement,Boolean> sendKeys concode_elem_sep Function<WebElement,Boolean> click concode_elem_sep Predicate<WebElement> attrStartsWith concode_elem_sep Predicate<WebElement> not concode_elem_sep Predicate<WebElement> textStartsWith concode_elem_sep Predicate<WebElement> isEnabled concode_elem_sep Predicate<WebElement> textEquals concode_elem_sep Predicate<WebElement> textContains concode_elem_sep Predicate<WebElement> attrEndsWith"}
{"code": "List < File > function ( List < ExecutableSequence > arg0 ) { return createJunitTestFiles ( arg0 , junitDriverClassName ) ; }", "nl": "creates junit tests for the faults . output is a set of . java files . the default junit class name is the driver class name + index concode_field_sep boolean includeParseableString concode_elem_sep String junitDriverClassName concode_elem_sep String packageName concode_elem_sep Map<String,List<List<ExecutableSequence>>> createdSequencesAndClasses concode_elem_sep int testsPerFile concode_elem_sep String dirName concode_field_sep File createJunitTestFile concode_elem_sep File writeSubSuite concode_elem_sep File writeDriverFile concode_elem_sep File writeDriverFile concode_elem_sep File writeDriverFile concode_elem_sep File writeDriverFile concode_elem_sep String indent concode_elem_sep void createOutputDir concode_elem_sep List<File> createJunitFiles concode_elem_sep List<File> createJunitFiles concode_elem_sep List<String> getJunitTestSuiteNames concode_elem_sep void outputPackageName concode_elem_sep File getDir concode_elem_sep PrintStream createTextOutputStream"}
{"code": "List < Message > function ( ) { if ( message == null ) { message = new ArrayList < Message > ( ) ; } return this . message ; }", "nl": "gets the value of the message property . this accessor method returns a reference to the live list , not a snapshot . therefore any modification you make to the returned list will be present inside the jaxb object . this is why there is not a set method for the message property . for example , to add a new item , do as follows : getmessage . add newitem ; objects of the following type s are allowed in the list message concode_field_sep List<LocalizedMessage> localizedMessage concode_elem_sep String name concode_elem_sep List<Message> message concode_elem_sep List<ValidationContext> child concode_field_sep void setName concode_elem_sep String getName concode_elem_sep List<LocalizedMessage> getLocalizedMessage concode_elem_sep List<ValidationContext> getChild"}
{"code": "void function ( ) { peerStatus = PeerStatus . ABSENT ; myNode . getOperationFactory ( ) . abortAllOperations ( ) ; }", "nl": "performs actions that follow a disconnect . concode_field_sep Node<T> myNode concode_elem_sep PeerStatus peerStatus concode_elem_sep Logger log concode_elem_sep ComponentsConfig config concode_elem_sep boolean lookupEnabled concode_field_sep void enablePeriodicLookup concode_elem_sep void connectivityChanged concode_elem_sep void beginPeriodicLookups concode_elem_sep void doConnect concode_elem_sep void routingTableBuilt concode_elem_sep void doSingleLookup concode_elem_sep PeerStatus getPeerStatus concode_elem_sep double getSimSec"}
{"code": "HashCodeBuilder function ( float [ ] arg0 ) { if ( arg0 == null ) { iTotal = iTotal * iConstant ; } else { for ( float loc0 : arg0 ) { append ( loc0 ) ; } } return this ; }", "nl": "append a hashcode for a float array . concode_field_sep int iConstant concode_elem_sep int iTotal concode_field_sep HashCodeBuilder appendSuper concode_elem_sep int toHashCode"}
{"code": "void function ( ) { loadPreauthPlugins ( ) ; }", "nl": "should be called only once , for global concode_field_sep List<KdcPreauth> preauths concode_field_sep boolean isToken concode_elem_sep void loadPreauthPlugins concode_elem_sep PreauthContext preparePreauthContext concode_elem_sep void providePaData concode_elem_sep boolean isPkinit concode_elem_sep void initWith concode_elem_sep void verify concode_elem_sep void destroy concode_elem_sep void provideEdata concode_elem_sep PreauthHandle findHandle"}
{"code": "Rect function ( int arg0 , int arg1 , int arg2 , int arg3 ) { return getBitmapRectCenterInsideHelper ( arg0 , arg1 , arg2 , arg3 ) ; }", "nl": "gets the rectangular position of a bitmap if it were placed inside a view with scale type set to android.widget.imageview #scaletype #center_inside . concode_field_sep PlaceHolder placeHolder concode_field_sep Rect getBitmapRectCenterInsideHelper"}
{"code": "PaletteRoot function ( ) { PaletteRoot loc0 = new PaletteRoot ( ) ; loc0 . addAll ( createCategories ( loc0 ) ) ; return loc0 ; }", "nl": "creates the paletteroot and adds all palette elements . concode_field_sep PlaceHolder placeHolder concode_field_sep PaletteContainer createControlGroup concode_elem_sep List createCategories concode_elem_sep PaletteContainer createComponentsDrawer"}
{"code": "JSBundleLoader function ( final String arg0 ) { return new JSBundleLoader ( ) { @ Override public void loadScript ( ReactBridge arg1 ) { arg1 . loadScriptFromNetworkCached ( arg0 , null ) ; } @ Override public String getSourceUrl ( ) { return arg0 ; } } ; }", "nl": "this loader is used when proxy debugging is enabled . in that case there is no point in fetching the bundle from device as remote executor will have to do it anyway . concode_field_sep PlaceHolder placeHolder concode_field_sep JSBundleLoader createAssetLoader concode_elem_sep void loadScript concode_elem_sep JSBundleLoader createCachedBundleFromNetworkLoader concode_elem_sep String getSourceUrl"}
{"code": "double function ( ) { double loc0 = ( getRed ( ) + getGreen ( ) + getBlue ( ) ) / 3.0 ; return loc0 ; }", "nl": "method to get the average of the colors of this pixel concode_field_sep int x concode_elem_sep int y concode_elem_sep DigitalPicture picture concode_field_sep int getCol concode_elem_sep int correctValue concode_elem_sep Color getColor concode_elem_sep void setAlpha concode_elem_sep int getRow concode_elem_sep int getBlue concode_elem_sep int getBlue concode_elem_sep void setRed concode_elem_sep void setGreen concode_elem_sep int getAlpha concode_elem_sep void updatePicture concode_elem_sep int getX concode_elem_sep int getY concode_elem_sep int getRed concode_elem_sep int getRed concode_elem_sep int getGreen concode_elem_sep int getGreen concode_elem_sep void setColor concode_elem_sep double colorDistance concode_elem_sep double colorDistance concode_elem_sep void setBlue concode_elem_sep String toString"}
{"code": "String function ( final String arg0 ) { switch ( arg0 ) { case \"srini_string\" : return \"srini_string\" ; case \"srini_string\" : return \"srini_string\" ; case \"srini_string\" : return \"srini_string\" ; } return arg0 ; }", "nl": "map column names to protocol field names . concode_field_sep Cursor cursor concode_elem_sep int[] columns concode_elem_sep String[] fields concode_elem_sep int MAX_SERVER_STRING_CHARS concode_field_sep void fillHoneycomb concode_elem_sep ClientReadingListRecord getNext concode_elem_sep ClientReadingListRecord fromCursorRow concode_elem_sep void putNull concode_elem_sep void put concode_elem_sep void put concode_elem_sep void fillGingerbread"}
{"code": "void function ( boolean arg0 ) { this . validateXML = arg0 ; }", "nl": "when set to true , the xml parser will attempt to validate the jelly xml before converting it into a script . concode_field_sep Log log concode_elem_sep boolean loadedProperties concode_elem_sep String defaultNamespaceURI concode_elem_sep JellyContext context concode_elem_sep boolean validateXML concode_elem_sep URL url concode_elem_sep URL rootContext concode_field_sep String getJellyVersion concode_elem_sep void setDefaultNamespaceURI concode_elem_sep void setRootContext concode_elem_sep String readBuildTimestampResource concode_elem_sep void main concode_elem_sep URL resolveURL concode_elem_sep void setUrl concode_elem_sep URL getUrl concode_elem_sep JellyContext getJellyContext concode_elem_sep Script compileScript concode_elem_sep void loadJellyProperties concode_elem_sep void loadProperties concode_elem_sep void loadProperties concode_elem_sep URL getRootContext concode_elem_sep String getJellyBuildDate concode_elem_sep void setScript"}
{"code": "boolean function ( SkyNetID arg0 , SkyNetID arg1 ) { if ( arg0 . compareTo ( arg1 ) < 0 ) { if ( this . compareTo ( arg0 ) > 0 && this . compareTo ( arg1 ) < 0 ) { return true ; } } else { if ( this . compareTo ( arg0 ) > 0 || this . compareTo ( arg1 ) < 0 ) { return true ; } } return false ; }", "nl": "this method tests , if this skynet-id ranges between the two provided bounds . concode_field_sep BigDecimal skyNetID concode_field_sep BigDecimal getUniqueValue concode_elem_sep boolean equals concode_elem_sep BigDecimal getID concode_elem_sep int compareTo concode_elem_sep byte[] getBytes concode_elem_sep String getPlainSkyNetID"}
{"code": "void function ( Difficulty arg0 ) { Preferences loc0 = Preferences . userNodeForPackage ( this . getClass ( ) ) ; loc0 . putInt ( DIFFICULTY , arg0 . toInt ( ) ) ; }", "nl": "sets the preferred difficulty for this user and overwrites any previous preference . concode_field_sep String SIZE concode_elem_sep String LIBRARY_LOCATION concode_elem_sep String DIFFICULTY concode_field_sep void setPreferredSize concode_elem_sep void clearPreferences concode_elem_sep Integer getPreferredSize concode_elem_sep String getPuzzleLibraryLocation concode_elem_sep Difficulty getPreferredDifficulty concode_elem_sep void setPuzzleLibraryLocation"}
{"code": "void function ( Resource arg0 ) { if ( PingDestination . isUrl ( arg0 ) ) { synchronized ( lock ) { PingDestination loc0 = PingDestination . from ( arg0 ) ; changes . add ( new UrlChange ( Action . deleted ( ) , loc0 ) ) ; Log . LOG . debugf ( \"srini_string\" , loc0 . getUrl ( ) ) ; } } }", "nl": "it is safe to call this method concurrently from any random thread . concode_field_sep Action1<Resource> urlDeletedAction concode_elem_sep PingDestination destination concode_elem_sep Action<?,?> action concode_elem_sep Action1<Resource> urlCreatedAction concode_elem_sep List<UrlChangesCollector.UrlChange> changes concode_elem_sep Object lock concode_field_sep void apply concode_elem_sep List<UrlChangesCollector.UrlChange> getChanges concode_elem_sep Action1<Resource> getUrlDeletedAction concode_elem_sep Action1<Resource> getUrlCreatedAction"}
{"code": "ResourceEditPropertyBuilder function ( String arg0 ) { this . typeContName = arg0 ; return this ; }", "nl": "the name of the context where the property is defined concode_field_sep boolean isTesting concode_elem_sep String typeName concode_elem_sep Clob propertyValue concode_elem_sep Clob exampleValue concode_elem_sep boolean isEncrypted concode_elem_sep String propContName concode_elem_sep Integer descriptorId concode_elem_sep String typeContName concode_elem_sep Integer typeId concode_elem_sep Clob defaultValue concode_elem_sep String resourceName concode_elem_sep String fcExternalKey concode_elem_sep String technicalKey concode_elem_sep String mik concode_elem_sep Integer propContextId concode_elem_sep String origin concode_elem_sep Integer cardinalityProperty concode_elem_sep Integer propertyValueTypeId concode_elem_sep String displayName concode_elem_sep String fcOwner concode_elem_sep Integer propertyId concode_elem_sep Integer masterTypeId concode_elem_sep boolean isNullable concode_elem_sep String fcExternalLink concode_elem_sep String validationRegex concode_elem_sep String loadedFor concode_elem_sep boolean isOptional concode_elem_sep String validationLogic concode_elem_sep String descriptorOrigin concode_elem_sep Integer typeContextId concode_elem_sep Clob propertyComment concode_field_sep ResourceEditPropertyBuilder withDisplayAndTechKeyName concode_elem_sep ResourceEditPropertyBuilder withOrigin concode_elem_sep ResourceEditPropertyBuilder withValidationRegex concode_elem_sep ResourceEditPropertyBuilder withIsEncrypted concode_elem_sep ResourceEditPropertyBuilder withDescriptorOrigin concode_elem_sep Clob convert concode_elem_sep ResourceEditPropertyBuilder withTechnicalKey concode_elem_sep ResourceEditPropertyBuilder withMasterResTypeName concode_elem_sep ResourceEditPropertyBuilder withLoadedFor concode_elem_sep ResourceEditPropertyBuilder withDisplayName concode_elem_sep ResourceEditPropertyBuilder withValue concode_elem_sep ResourceEditPropertyBuilder withFcExternalLink concode_elem_sep ResourceEditPropertyBuilder withDefaultValue concode_elem_sep ResourceEditPropertyBuilder withDescriptorId concode_elem_sep ResourceEditPropertyBuilder withTypeId concode_elem_sep ResourceEditPropertyBuilder withDescriptor concode_elem_sep ResourceEditPropertyBuilder withCardinality concode_elem_sep ResourceEditPropertyBuilder withValidationLogic concode_elem_sep ResourceEditPropertyBuilder withPropertyContextTypeId concode_elem_sep ResourceEditPropertyBuilder withPropertyId concode_elem_sep ResourceEditPropertyBuilder withPropContName concode_elem_sep ResourceEditPropertyBuilder withComment concode_elem_sep ResourceEditPropertyBuilder withFcOwner concode_elem_sep ResourceEditPropertyBuilder withMasterResTypeId concode_elem_sep ResourceEditPropertyBuilder withFcExternalKey concode_elem_sep ResourceEditProperty build concode_elem_sep ResourceEditPropertyBuilder withIsTesting concode_elem_sep ResourceEditPropertyBuilder withExampleValue concode_elem_sep ResourceEditPropertyBuilder withResourceName concode_elem_sep ResourceEditPropertyBuilder withPropContextId concode_elem_sep ResourceEditPropertyBuilder withIsNullable"}
{"code": "Sardine function ( ) { return begin ( null , null ) ; }", "nl": "default begin for when you do n't need anything but no authentication and default settings for ssl . concode_field_sep PlaceHolder placeHolder concode_field_sep placeholderType placeHolder"}
{"code": "void function ( SEQMovieTrack arg0 , boolean arg1 ) { this . track = arg0 ; readHeader ( ) ; readOffsets ( ) ; readFrames ( ) ; }", "nl": "decodes the stream and produces animation frames into the specified movie track . this method can only be called once . concode_field_sep int nFrames concode_elem_sep int nColors concode_elem_sep boolean enforce8BitColorModel concode_elem_sep ImageInputStream in concode_elem_sep long[] offsets concode_elem_sep SEQMovieTrack track concode_elem_sep int speed concode_elem_sep int resolution concode_field_sep void readFrames concode_elem_sep void setEnforce8BitColorModel concode_elem_sep void readFrame concode_elem_sep void readOffsets concode_elem_sep void readHeader"}
{"code": "byte [ ] function ( ) { ByteArrayOutputStream loc0 = new ByteArrayOutputStream ( ) ; ObjectOutputStream loc1 ; try { loc1 = new ObjectOutputStream ( loc0 ) ; loc1 . writeObject ( value ) ; loc1 . close ( ) ; } catch ( IOException loc2 ) { loc2 . printStackTrace ( ) ; } return loc0 . toByteArray ( ) ; }", "nl": "returns the value as a byte array . concode_field_sep long releaseTimestamp concode_elem_sep Object value concode_field_sep int getTransmissionSize concode_elem_sep Object getObject concode_elem_sep long getReleaseTimestamp concode_elem_sep String toString"}
{"code": "void function ( ObjectContainer arg0 ) { ObjectSet loc0 = arg0 . queryByExample ( null ) ; while ( loc0 . hasNext ( ) ) { log ( arg0 , loc0 . next ( ) ) ; } }", "nl": "logs all objects in the passed objectcontainer . concode_field_sep java.io.PrintStream out concode_elem_sep boolean silent concode_elem_sep String sp concode_elem_sep int maximumDepth concode_elem_sep Class[] IGNORE concode_elem_sep int MAXIMUM_OBJECTS concode_field_sep int normalizeNArray1 concode_elem_sep Class[] getClassHierarchy concode_elem_sep Class[] getClassHierarchy concode_elem_sep Object normalizeNArray concode_elem_sep void log concode_elem_sep void log concode_elem_sep void log concode_elem_sep void log concode_elem_sep void log concode_elem_sep void log concode_elem_sep void log concode_elem_sep void setMaximumDepth concode_elem_sep void main concode_elem_sep void msgCount concode_elem_sep int[] arrayDimensions concode_elem_sep void setOut concode_elem_sep int arrayElementCount"}
{"code": "Collection function ( ) { return tracker . getRootWindows ( ) ; }", "nl": "return all root components in the current awt hierarchy . concode_field_sep Collection EMPTY concode_elem_sep WindowTracker tracker concode_elem_sep Hierarchy defaultHierarchy concode_field_sep boolean contains concode_elem_sep Container getParent concode_elem_sep Collection getComponents concode_elem_sep Collection findInternalFramesFromIcons concode_elem_sep Hierarchy getDefault concode_elem_sep void dispose concode_elem_sep void setDefault"}
{"code": "SWTWidgetFinder function ( ISWTWidgetMatcher ... arg0 ) { Invariants . notNull ( arg0 ) ; throw new UnsupportedOperationException ( ) ; }", "nl": "setup filters for this finder . filters are checked before search criteria . typical filters are defined in the filter enum . concode_field_sep ISearchable scope concode_elem_sep ISWTWidgetMatcher matcher concode_field_sep ISWTWidgetReference<?>[] doFindAll concode_elem_sep DisplayReference display concode_elem_sep ISWTWidgetMatcher addFilters concode_elem_sep SWTWidgetFinder withScope concode_elem_sep int getFinderRetryInterval concode_elem_sep SWTWidgetFinder forActiveShell concode_elem_sep SWTWidgetFinder forDisplay concode_elem_sep int getMaxFinderRetries concode_elem_sep boolean matches concode_elem_sep ISearchable activeShell concode_elem_sep ISWTWidgetReference<?>[] findAll"}
{"code": "Cursor function ( long arg0 ) { return queryHelper . safeQuery ( \"srini_string\" , getAllColumns ( ) , dateModifiedWhere ( arg0 ) , null , null ) ; }", "nl": "fetch records modified since the provided timestamp . the caller is responsible for closing the cursor . concode_field_sep Context context concode_elem_sep String[] GUID_COLUMNS concode_elem_sep String LOG_TAG concode_elem_sep RepoUtils.QueryHelper queryHelper concode_field_sep int purgeGuid concode_elem_sep Cursor fetchAll concode_elem_sep Cursor getGUIDsSince concode_elem_sep void update concode_elem_sep Uri insert concode_elem_sep void updateByGuid concode_elem_sep void delete concode_elem_sep void wipe concode_elem_sep String[] getAllColumns concode_elem_sep String dateModifiedWhere concode_elem_sep Cursor fetch concode_elem_sep int bulkInsert concode_elem_sep ContentValues getContentValues concode_elem_sep void dumpDB concode_elem_sep void purgeDeleted concode_elem_sep Uri getUri"}
{"code": "CountProjection function ( String arg0 ) { return new CountProjection ( arg0 ) . setDistinct ( ) ; }", "nl": "a distinct property value count projection concode_field_sep PlaceHolder placeHolder concode_field_sep Projection sqlGroupProjection concode_elem_sep AggregateProjection max concode_elem_sep CountProjection count concode_elem_sep Projection distinct concode_elem_sep AggregateProjection sum concode_elem_sep ProjectionList projectionList concode_elem_sep PropertyProjection groupProperty concode_elem_sep AggregateProjection min concode_elem_sep AggregateProjection avg concode_elem_sep PropertyProjection property concode_elem_sep Projection alias concode_elem_sep Projection sqlProjection concode_elem_sep IdentifierProjection id concode_elem_sep Projection rowCount"}
{"code": "void function ( CallBack arg0 ) { this . callBack = arg0 ; }", "nl": "sets the callback object for the imageloader . once this is set , we may invoke the callback once all images that need to be loaded report in from their onload event handlers . concode_field_sep ArrayList<ImageHandle> images concode_elem_sep CallBack callBack concode_elem_sep int totalImages concode_elem_sep int loadedImages concode_elem_sep ArrayList<ImageLoader> imageLoaders concode_field_sep void addHandle concode_elem_sep void incrementLoadedImages concode_elem_sep void onImagesLoaded concode_elem_sep void loadImages concode_elem_sep void dispatchIfComplete concode_elem_sep boolean isAllLoaded concode_elem_sep ImageHandle loadImage"}
{"code": "DashArrayElem function ( ) { DashArrayElem loc0 = currentElem ; if ( dashArray . size ( ) > 0 ) { currentIndex = ( currentIndex + 1 ) % dashArray . size ( ) ; currentElem = new DashArrayElem ( dashArray . getAsNumber ( currentIndex ) . floatValue ( ) , isEven ( ++ elemOrdinalNumber ) ) ; } return loc0 ; }", "nl": "calculates and returns the next element which is either gap or dash . concode_field_sep float val concode_elem_sep boolean isGap concode_elem_sep float dashPhase concode_elem_sep int elemOrdinalNumber concode_elem_sep DashArrayElem currentElem concode_elem_sep PdfArray dashArray concode_elem_sep int currentIndex concode_field_sep boolean isSolid concode_elem_sep boolean isGap concode_elem_sep float getVal concode_elem_sep float getDashPhase concode_elem_sep boolean isEven concode_elem_sep void setGap concode_elem_sep PdfArray getDashArray concode_elem_sep void setDashArray concode_elem_sep void reset concode_elem_sep void setDashPhase concode_elem_sep void setVal concode_elem_sep void initFirst"}
{"code": "void function ( String arg0 ) { this . responsedescription = arg0 ; }", "nl": "sets the value of the responsedescription property . concode_field_sep Prop prop concode_elem_sep Error error concode_elem_sep String status concode_elem_sep String responsedescription concode_field_sep Error getError concode_elem_sep String getResponsedescription concode_elem_sep void setError concode_elem_sep void setProp concode_elem_sep String getStatus concode_elem_sep Prop getProp concode_elem_sep void setStatus"}
{"code": "boolean function ( ) { return val . equals ( ring . ring . getONE ( ) ) ; }", "nl": "is algebraicnumber one . concode_field_sep GenPolynomial<C> val concode_elem_sep AlgebraicNumberRing<C> ring concode_elem_sep int isunit concode_field_sep int signum concode_elem_sep AlgebraicNumber<C> inverse concode_elem_sep GenPolynomial<C> getVal concode_elem_sep boolean isUnit concode_elem_sep AlgebraicNumber<C> subtract concode_elem_sep AlgebraicNumber<C> gcd concode_elem_sep AlgebraicNumber<C> sum concode_elem_sep int compareTo concode_elem_sep AlgebraicNumber<C>[] egcd concode_elem_sep AlgebraicNumber<C> monic concode_elem_sep AlgebraicNumber<C> abs concode_elem_sep int hashCode concode_elem_sep AlgebraicNumber<C> negate concode_elem_sep boolean equals concode_elem_sep AlgebraicNumber<C> clone concode_elem_sep boolean isZERO concode_elem_sep String toString concode_elem_sep AlgebraicNumber<C> divide concode_elem_sep AlgebraicNumber<C> multiply concode_elem_sep AlgebraicNumber<C> remainder"}
{"code": "void function ( Object ... arg0 ) { assumeThat ( asList ( arg0 ) , everyItem ( notNullValue ( ) ) ) ; }", "nl": "if called with one or more null elements in objects , the test will halt and be ignored . concode_field_sep PlaceHolder placeHolder concode_field_sep void assumeFalse concode_elem_sep void assumeFalse concode_elem_sep void assumeTrue concode_elem_sep void assumeTrue concode_elem_sep void assumeNoException concode_elem_sep void assumeNoException concode_elem_sep void assumeThat concode_elem_sep void assumeThat"}
{"code": "Throwable function ( ) { return null ; }", "nl": "returns always null . concode_field_sep String fStatusMessage concode_elem_sep int fSeverity concode_field_sep boolean isWarning concode_elem_sep int getSeverity concode_elem_sep IStatus createError concode_elem_sep String getMessage concode_elem_sep IStatus createWarning concode_elem_sep boolean isMultiStatus concode_elem_sep boolean matches concode_elem_sep IStatus[] getChildren concode_elem_sep boolean isError concode_elem_sep void setError concode_elem_sep boolean isOK concode_elem_sep String getPlugin concode_elem_sep void setOK concode_elem_sep void setInfo concode_elem_sep boolean isInfo concode_elem_sep IStatus createInfo concode_elem_sep int getCode concode_elem_sep void setWarning"}
{"code": "void function ( IGnutellaEventListener arg0 ) { listeners . add ( arg0 ) ; }", "nl": "adds a gnutella event listener to this dispatcher concode_field_sep List<IGnutellaEventListener> listeners concode_elem_sep GnutellaEvents inst concode_field_sep void queryFailed concode_elem_sep void querySucceeded concode_elem_sep void connectionBreak concode_elem_sep void reBootstrapped concode_elem_sep void connectionSucceeded concode_elem_sep GnutellaEvents getGlobal concode_elem_sep void connectionStarted concode_elem_sep void pingTimeouted concode_elem_sep void removeListener concode_elem_sep void connectionFailed concode_elem_sep void queryMadeHop concode_elem_sep void queryStarted"}
{"code": "double function ( Class < ? extends Function > arg0 ) { return getDerivativeAt ( Simulator . getInstance ( ) . getCurrentTime ( ) , arg0 ) ; }", "nl": "this method returns the derivative for the given function at the current simulation time . concode_field_sep HashMap<Class<? extends Function>,Function> functions concode_elem_sep FunctionGenerator instance concode_elem_sep Logger log concode_field_sep double getValue concode_elem_sep Map<Class<? extends Function>,Double> getValues concode_elem_sep double getValueAt concode_elem_sep Map<Class<? extends Function>,Double> getValuesAt concode_elem_sep void setFunction concode_elem_sep FunctionGenerator getInstance concode_elem_sep Collection<Class<? extends Function>> getLoadedFunctionClasses concode_elem_sep double getDerivativeAt"}
{"code": "void function ( ) { S loc0 = this . singletonInstanceMethod . get ( ) ; S loc1 = this . singletonInstanceMethod . get ( ) ; S loc2 = this . singletonInstanceMethod . get ( ) ; assertSame ( loc0 , loc1 ) ; assertSame ( loc0 , loc2 ) ; assertSame ( loc1 , loc2 ) ; }", "nl": "test the singleton in a non-concurrent setting concode_field_sep Supplier<S> singletonInstanceMethod concode_field_sep void testMultipleCallsReturnTheSameObjectInDifferentThreads"}
{"code": "Set function ( Set arg0 , Class arg1 ) { return new PredicatedSet ( arg0 , InstanceofPredicate . getInstance ( arg1 ) ) ; }", "nl": "factory method to create a typed set . if there are any elements already in the set being decorated , they are validated . concode_field_sep PlaceHolder placeHolder concode_field_sep placeholderType placeHolder"}
{"code": "void function ( String arg0 ) { URL loc0 = findClass ( arg0 ) ; if ( loc0 == null ) { System . out . println ( \"srini_string\" + arg0 + \"srini_string\" ) ; } else { System . out . println ( \"srini_string\" + arg0 + \"srini_string\" + loc0 . getFile ( ) + \"srini_string\" ) ; } validate ( ) ; printClasspath ( ) ; }", "nl": "prints the absolute pathname of the class file containing the specified class name , as prescribed by the class path . concode_field_sep String CLASSPATH concode_field_sep String getClasspath concode_elem_sep void setClasspath concode_elem_sep void printClasspath concode_elem_sep void instanceMain concode_elem_sep void main concode_elem_sep URL findClass concode_elem_sep void printUsage concode_elem_sep String asResourceName concode_elem_sep void validate"}
{"code": "boolean function ( String arg0 ) { return arg0 . matches ( PHONE_VALIDATION_REGEX ) ; }", "nl": "checks if a given string is a valid person phone number . concode_field_sep String MESSAGE_PHONE_CONSTRAINTS concode_elem_sep String PHONE_VALIDATION_REGEX concode_elem_sep boolean isPrivate concode_elem_sep String EXAMPLE concode_elem_sep String value concode_field_sep int hashCode concode_elem_sep boolean equals concode_elem_sep String toString concode_elem_sep boolean isPrivate"}
{"code": "String function ( final String arg0 ) { return UNKNOWN_PROTOCOL_URI_PREFIX + arg0 ; }", "nl": "returns an about : neterror uri with the unknownprotocolfound text as a parameter . concode_field_sep String MARKET_INTENT_URI_PACKAGE_PREFIX concode_elem_sep String[] NATIVE_EVENTS concode_elem_sep String EXTRA_BROWSER_FALLBACK_URL concode_elem_sep IntentHelper instance concode_elem_sep FragmentActivity activity concode_elem_sep String LOGTAG concode_elem_sep String UNKNOWN_PROTOCOL_URI_PREFIX concode_elem_sep String MALFORMED_URI_PREFIX concode_elem_sep JSONObject message concode_elem_sep String[] EVENTS concode_elem_sep String GENERIC_URI_PREFIX concode_field_sep IntentHelper init concode_elem_sep void openWebActivity concode_elem_sep void getHandlers concode_elem_sep void handleMessage concode_elem_sep void handleMessage concode_elem_sep void destroy concode_elem_sep void onActivityResult concode_elem_sep void open concode_elem_sep void openNoHandler concode_elem_sep void openForResult"}
{"code": "void function ( Control arg0 ) { Object loc0 = arg0 . getLayoutData ( ) ; if ( loc0 instanceof GridData ) { ( ( GridData ) loc0 ) . horizontalIndent = LayoutUtil . getIndent ( ) ; } }", "nl": "sets the horizontal indent of a dependent control . assumes that griddata is used . concode_field_sep PlaceHolder placeHolder concode_field_sep void setHorizontalSpan concode_elem_sep void setWidthHint concode_elem_sep int getIndent concode_elem_sep void setHeightHint concode_elem_sep void setHorizontalGrabbing concode_elem_sep void modifyLabelSpans concode_elem_sep void setVerticalGrabbing concode_elem_sep int getNumberOfColumns concode_elem_sep void doDefaultLayout concode_elem_sep void doDefaultLayout"}
{"code": "XMPMeta function ( InputStream arg0 , ParseOptions arg1 ) { return XMPMetaParser . parse ( arg0 , arg1 ) ; }", "nl": "these functions support parsing serialized rdf into an xmp object , and serailizing an xmp object into rdf . the input for parsing may be any valid unicode encoding . iso latin-1 is also recognized , but its use is strongly discouraged . serialization is always as utf-8 . parsefrombuffer parses rdf from an inputstream . the encoding is recognized automatically . concode_field_sep XMPSchemaRegistry schema concode_elem_sep XMPVersionInfo versionInfo concode_field_sep XMPSchemaRegistry getSchemaRegistry concode_elem_sep void serialize concode_elem_sep void serialize concode_elem_sep String serializeToString concode_elem_sep XMPMeta parseFromString concode_elem_sep XMPMeta parseFromString concode_elem_sep XMPVersionInfo getVersionInfo concode_elem_sep byte[] serializeToBuffer concode_elem_sep XMPMeta create concode_elem_sep void reset concode_elem_sep XMPMeta parseFromBuffer concode_elem_sep XMPMeta parseFromBuffer concode_elem_sep void assertImplementation"}
{"code": "void function ( final Block arg0 , final Block arg1 ) { for ( int loc0 = 0 ; loc0 < paths . size ( ) ; loc0 ++ ) { final Block [ ] loc1 = ( Block [ ] ) paths . get ( loc0 ) ; if ( loc1 [ 0 ] == arg0 ) { loc1 [ 1 ] = arg1 ; return ; } } paths . add ( new Block [ ] { arg0 , arg1 } ) ; }", "nl": "adds a path from the block before a subroutine is called to a block after the subroutine is called . if the callerblock is already associated with a returnblock , the old returnblock is replaced . concode_field_sep Block entry concode_elem_sep Block exit concode_elem_sep ArrayList paths concode_elem_sep FlowGraph graph concode_elem_sep LocalVariable returnAddress concode_field_sep void setReturnAddress concode_elem_sep int numPaths concode_elem_sep void setExit concode_elem_sep FlowGraph graph concode_elem_sep LocalVariable returnAddress concode_elem_sep void removePathsContaining concode_elem_sep void removePath concode_elem_sep Block entry concode_elem_sep Block exit concode_elem_sep void print concode_elem_sep Block pathTarget concode_elem_sep Block pathSource concode_elem_sep Collection paths concode_elem_sep String toString concode_elem_sep void removeAllPaths concode_elem_sep void setEntry"}
{"code": "int function ( long arg0 ) { Assertions . checkState ( state == STATE_UNPREPARED ) ; state = doPrepare ( arg0 ) ? STATE_PREPARED : STATE_UNPREPARED ; return state ; }", "nl": "prepares the renderer . this method is non-blocking , and hence it may be necessary to call it more than once in order to transition the renderer into the prepared state . concode_field_sep long MATCH_LONGEST_US concode_elem_sep int STATE_UNPREPARED concode_elem_sep long UNKNOWN_TIME_US concode_elem_sep int STATE_PREPARED concode_elem_sep int STATE_ENABLED concode_elem_sep long END_OF_TRACK_US concode_elem_sep int STATE_STARTED concode_elem_sep int state concode_elem_sep int STATE_RELEASED concode_field_sep boolean doPrepare concode_elem_sep void onReleased concode_elem_sep void release concode_elem_sep boolean isReady concode_elem_sep void handleMessage concode_elem_sep void start concode_elem_sep int getTrackCount concode_elem_sep long getDurationUs concode_elem_sep void seekTo concode_elem_sep MediaClock getMediaClock concode_elem_sep int getState concode_elem_sep void onStarted concode_elem_sep void stop concode_elem_sep void enable concode_elem_sep void disable concode_elem_sep long getBufferedPositionUs concode_elem_sep void onEnabled concode_elem_sep void maybeThrowError concode_elem_sep MediaFormat getFormat concode_elem_sep void doSomeWork concode_elem_sep void onStopped concode_elem_sep void onDisabled concode_elem_sep boolean isEnded"}
{"code": "int function ( Criteria arg0 , CriteriaQuery arg1 ) { final Type [ ] loc0 = getTypes ( arg0 , arg1 ) ; int loc1 = 0 ; for ( Type loc2 : loc0 ) { loc1 += loc2 . getColumnSpan ( arg1 . getFactory ( ) ) ; } return loc1 ; }", "nl": "count the number of columns this projection uses . concode_field_sep String[] REUSABLE_ALIASES concode_elem_sep int NUM_REUSABLE_ALIASES concode_field_sep Projection as concode_elem_sep String[] getAliases concode_elem_sep String getAliasForLocation concode_elem_sep String[] initializeReusableAliases concode_elem_sep String aliasForLocation concode_elem_sep String[] getColumnAliases concode_elem_sep String[] getColumnAliases concode_elem_sep String[] getColumnAliases concode_elem_sep String[] getColumnAliases concode_elem_sep boolean isGrouped concode_elem_sep Type[] getTypes concode_elem_sep String toGroupSqlString"}
{"code": "byte [ ] function ( ) { return payload ; }", "nl": "data from this message . concode_field_sep byte[] payload concode_elem_sep boolean truncated concode_elem_sep StdStreamType type concode_field_sep boolean isTruncated concode_elem_sep StdStreamType getType"}
{"code": "void function ( QuotaAvailableBytes arg0 ) { this . quotaAvailableBytes = arg0 ; }", "nl": "sets the value of the quotaavailablebytes property . concode_field_sep Owner owner concode_elem_sep PrincipalURL principalURL concode_elem_sep Creationdate creationdate concode_elem_sep Getlastmodified getlastmodified concode_elem_sep Getcontentlanguage getcontentlanguage concode_elem_sep Getetag getetag concode_elem_sep Getcontentlength getcontentlength concode_elem_sep SupportedReportSet supportedReportSet concode_elem_sep Acl acl concode_elem_sep PrincipalCollectionSet principalCollectionSet concode_elem_sep Resourcetype resourcetype concode_elem_sep List<Element> any concode_elem_sep QuotaUsedBytes quotaUsedBytes concode_elem_sep Lockdiscovery lockdiscovery concode_elem_sep QuotaAvailableBytes quotaAvailableBytes concode_elem_sep Getcontenttype getcontenttype concode_elem_sep Displayname displayname concode_elem_sep Supportedlock supportedlock concode_elem_sep Group group concode_field_sep PrincipalCollectionSet getPrincipalCollectionSet concode_elem_sep Creationdate getCreationdate concode_elem_sep void setCreationdate concode_elem_sep Getcontentlength getGetcontentlength concode_elem_sep Displayname getDisplayname concode_elem_sep void setGetcontenttype concode_elem_sep void setAcl concode_elem_sep Owner getOwner concode_elem_sep Getlastmodified getGetlastmodified concode_elem_sep Supportedlock getSupportedlock concode_elem_sep void setLockdiscovery concode_elem_sep void setOwner concode_elem_sep SupportedReportSet getSupportedReportSet concode_elem_sep void setSupportedReportSet concode_elem_sep void setSupportedlock concode_elem_sep void setPrincipalCollectionSet concode_elem_sep QuotaUsedBytes getQuotaUsedBytes concode_elem_sep Acl getAcl concode_elem_sep void setQuotaUsedBytes concode_elem_sep void setPrincipalURL concode_elem_sep PrincipalURL getPrincipalURL concode_elem_sep void setGetetag concode_elem_sep Resourcetype getResourcetype concode_elem_sep Getcontentlanguage getGetcontentlanguage concode_elem_sep void setResourcetype concode_elem_sep Getetag getGetetag concode_elem_sep void setGroup concode_elem_sep Getcontenttype getGetcontenttype concode_elem_sep Group getGroup concode_elem_sep void setGetcontentlanguage concode_elem_sep Lockdiscovery getLockdiscovery concode_elem_sep void setGetlastmodified concode_elem_sep QuotaAvailableBytes getQuotaAvailableBytes concode_elem_sep void setDisplayname concode_elem_sep void setGetcontentlength concode_elem_sep List<Element> getAny"}
{"code": "String function ( ) { return ( this . fromKey ) ; }", "nl": "return the context attribute key for the attribute . concode_field_sep String fromKey concode_field_sep void setFromKey concode_elem_sep boolean execute"}
{"code": "void function ( FrequencyAdjuster arg0 ) { arg0 . setFunction ( this ) ; this . frequencyAdjusters . add ( arg0 ) ; arg0 . schedule ( ) ; log . debug ( \"srini_string\" + arg0 . toString ( ) ) ; }", "nl": "adds ands schedules a new frequency adjuster for this function concode_field_sep Logger log concode_elem_sep double frequency concode_elem_sep List<FrequencyAdjuster> frequencyAdjusters concode_elem_sep double maxMagnitude concode_field_sep double getMaxMagnitude concode_elem_sep double getFrequency concode_elem_sep void setFrequencyDouble concode_elem_sep String toString concode_elem_sep double execute concode_elem_sep void setFrequency concode_elem_sep void setMaxMagnitude concode_elem_sep List<FrequencyAdjuster> getFrequencyAdjusters concode_elem_sep double getDerivativeAt"}
{"code": "int function ( ) { return _list . size ( ) ; }", "nl": "returns the current depth of the stack . concode_field_sep TLongArrayList _list concode_elem_sep int DEFAULT_CAPACITY concode_field_sep long pop concode_elem_sep long[] toNativeArray concode_elem_sep void toNativeArray concode_elem_sep void clear concode_elem_sep void reset concode_elem_sep void push concode_elem_sep long peek"}
{"code": "CopyParticipant [ ] function ( RefactoringStatus arg0 , RefactoringProcessor arg1 , Object arg2 , CopyArguments arg3 , String arg4 [ ] , SharableParticipants arg5 ) { return loadCopyParticipants ( arg0 , arg1 , arg2 , arg3 , null , arg4 , arg5 ) ; }", "nl": "loads the copy participants for the given element . concode_field_sep ParticipantExtensionPoint fgMoveExtensions concode_elem_sep ParticipantExtensionPoint fgDeleteInstance concode_elem_sep String COPY_PARTICIPANT_EXT_POINT concode_elem_sep String RENAME_PARTICIPANT_EXT_POINT concode_elem_sep String DELETE_PARTICIPANT_EXT_POINT concode_elem_sep ParticipantExtensionPoint fgRenameInstance concode_elem_sep String CREATE_PARTICIPANT_EXT_POINT concode_elem_sep String MOVE_PARTICIPANT_EXT_POINT concode_elem_sep ParticipantExtensionPoint fgCreateInstance concode_elem_sep ParticipantExtensionPoint fgCopyInstance concode_field_sep MoveParticipant[] loadMoveParticipants concode_elem_sep MoveParticipant[] loadMoveParticipants concode_elem_sep DeleteParticipant[] loadDeleteParticipants concode_elem_sep DeleteParticipant[] loadDeleteParticipants concode_elem_sep RenameParticipant[] loadRenameParticipants concode_elem_sep RenameParticipant[] loadRenameParticipants concode_elem_sep CreateParticipant[] loadCreateParticipants concode_elem_sep CreateParticipant[] loadCreateParticipants"}
{"code": "Monitor function ( ) { if ( monitor == null ) monitor = new DefaultMonitor ( ) ; return monitor ; }", "nl": "returns the global monitor which can be used to delegate information/occured events to a specific analyzer/s . concode_field_sep Simulator singleton concode_elem_sep Logger log concode_elem_sep long seed concode_elem_sep Monitor monitor concode_elem_sep DefaultConfigurator defaultConfigurator concode_elem_sep long MINUTE_UNIT concode_elem_sep long SECOND_UNIT concode_elem_sep boolean running concode_elem_sep Scheduler scheduler concode_elem_sep long MICROSECOND_UNIT concode_elem_sep long MILLISECOND_UNIT concode_elem_sep boolean finishedWithoutError concode_elem_sep Scenario scenario concode_elem_sep RandomGenerator randomGen concode_elem_sep long HOUR_UNIT concode_field_sep void setRealTime concode_elem_sep void shutdownSimulation concode_elem_sep long getSeed concode_elem_sep void setFinishAt concode_elem_sep String getSimulatedRealtime concode_elem_sep void checkRunning concode_elem_sep void start concode_elem_sep void setScenario concode_elem_sep boolean isFinishedWithoutError concode_elem_sep void configure concode_elem_sep void scheduleEvent concode_elem_sep String getFormattedTime concode_elem_sep DefaultConfigurator getConfigurator concode_elem_sep void setStatusInterval concode_elem_sep long getEndTime concode_elem_sep RandomGenerator getRandom concode_elem_sep void setMonitor concode_elem_sep Scenario getScenario concode_elem_sep void reset concode_elem_sep void setTimeSkew concode_elem_sep Simulator getInstance concode_elem_sep long getCurrentTime concode_elem_sep Scheduler getScheduler concode_elem_sep void setSeed"}
{"code": "void function ( TextEvent arg0 ) { Change loc0 = computeChange ( arg0 ) ; handleChange ( loc0 ) ; }", "nl": "handles an incoming text event . concode_field_sep TextListener fTextListener concode_elem_sep ChangeType fType concode_elem_sep SelectionListener fSelectionListener concode_elem_sep Set<ITypingRunListener> fListeners concode_elem_sep int fNextOffset concode_elem_sep boolean DEBUG concode_elem_sep TypingRun fRun concode_elem_sep ITextViewer fViewer concode_elem_sep Change fLastChange concode_field_sep void disconnect concode_elem_sep void fireRunBegun concode_elem_sep void mouseDown concode_elem_sep void startOrContinue concode_elem_sep void fireRunEnded concode_elem_sep void focusLost concode_elem_sep Change computeChange concode_elem_sep void uninstall concode_elem_sep void handleChange concode_elem_sep boolean hasRun concode_elem_sep void ensureSelectionListenerAdded concode_elem_sep boolean canFollow concode_elem_sep void keyReleased concode_elem_sep void connect concode_elem_sep void addTypingRunListener concode_elem_sep void focusGained concode_elem_sep void keyPressed concode_elem_sep void endIfStarted concode_elem_sep void handleSelectionChanged concode_elem_sep void ensureSelectionListenerRemoved concode_elem_sep void mouseDoubleClick concode_elem_sep ChangeType getType concode_elem_sep void install concode_elem_sep boolean isModification concode_elem_sep void mouseUp concode_elem_sep String toString concode_elem_sep void removeTypingRunListener concode_elem_sep void textChanged"}
{"code": "Map . Entry < K , V > [ ] function ( Map < K , V > arg0 ) { return ( ( IdentityMap < K , V > ) arg0 ) . entryArray ( ) ; }", "nl": "return the map entries as instances of map.entry in a collection that is safe from concurrent modification . ie . we may safely add new instances to the underlying map during iteration of the entries . concode_field_sep boolean dirty concode_elem_sep Entry<IdentityKey<K>,V>[] entryArray concode_elem_sep Iterator<IdentityKey<K>> identityKeyIterator concode_elem_sep Map<IdentityKey<K>,V> map concode_elem_sep V value concode_elem_sep K key concode_elem_sep int hash concode_field_sep K next concode_elem_sep K getKey concode_elem_sep IdentityMap<K,V> instantiateSequenced concode_elem_sep Set<Entry<K,V>> entrySet concode_elem_sep boolean containsKey concode_elem_sep Collection<V> values concode_elem_sep boolean isEmpty concode_elem_sep void clear concode_elem_sep boolean hasNext concode_elem_sep boolean containsValue concode_elem_sep V put concode_elem_sep V remove concode_elem_sep void remove concode_elem_sep V getValue concode_elem_sep Iterator<K> keyIterator concode_elem_sep int size concode_elem_sep Map.Entry[] entryArray concode_elem_sep int hashCode concode_elem_sep V get concode_elem_sep void putAll concode_elem_sep V setValue concode_elem_sep boolean equals concode_elem_sep String toString concode_elem_sep String toString concode_elem_sep Set<K> keySet concode_elem_sep K getRealKey"}
{"code": "List < VectorXYZ > function ( List < VectorXYZ > arg0 , List < VectorXYZ > arg1 ) { assert arg0 . size ( ) == arg1 . size ( ) ; VectorXYZ [ ] loc0 = new VectorXYZ [ arg0 . size ( ) * 2 ] ; for ( int loc1 = 0 ; loc1 < arg0 . size ( ) ; loc1 ++ ) { loc0 [ loc1 * 2 ] = arg0 . get ( loc1 ) ; loc0 [ loc1 * 2 + 1 ] = arg1 . get ( loc1 ) ; } return asList ( loc0 ) ; }", "nl": "creates a triangle strip between two outlines with identical number of vectors concode_field_sep PlaceHolder placeHolder concode_field_sep List<VectorXYZ> createVerticalTriangleStrip concode_elem_sep List<List<VectorXYZ>> createShapeExtrusionAlong concode_elem_sep List<VectorXYZ> rotateShapeX concode_elem_sep List<VectorXYZ> createLineBetween concode_elem_sep List<VectorXYZ> transformShape concode_elem_sep void filterWorldObjectCollisions"}
{"code": "String function ( List < PropertyTagEntity > arg0 ) { StringBuilder loc0 = new StringBuilder ( ) ; if ( arg0 != null ) { for ( PropertyTagEntity loc1 : arg0 ) { if ( loc1 . getName ( ) != null && ! loc1 . getName ( ) . isEmpty ( ) ) { loc0 . append ( loc1 . getName ( ) ) . append ( \"srini_string\" ) ; } } } return loc0 . toString ( ) ; }", "nl": "returns the propertytagentities a comma separated string concode_field_sep PropertyTagEditingService propertyTagService concode_field_sep String getTagsAsList concode_elem_sep List<PropertyTagEntity> getAllGlobalPropertyTags concode_elem_sep void addPropertyTag concode_elem_sep boolean deletePropertyTag concode_elem_sep void addGlobalPropertyTag concode_elem_sep void addLocalPropertyTag"}
{"code": "void function ( Report arg0 ) { this . report = arg0 ; }", "nl": "sets the value of the report property . concode_field_sep Report report concode_field_sep Report getReport"}
{"code": "Node function ( Node arg0 ) { if ( arg0 == null ) { return null ; } Node loc0 = reverseListRescursive ( arg0 . next ) ; if ( loc0 == null ) { head . next = arg0 ; } else { loc0 . next = arg0 ; } return arg0 ; }", "nl": "this has time complexity of o n and space complexity of o n as well because recursion would be used n no . of times , which uses stack internally . concode_field_sep Node head concode_elem_sep Node next concode_elem_sep int data concode_field_sep Node Delete concode_elem_sep void deleteAt concode_elem_sep void setData concode_elem_sep void reverseListPrint concode_elem_sep void reverseListPrint concode_elem_sep void insertAt concode_elem_sep void deleteLast concode_elem_sep boolean isEmpty concode_elem_sep boolean isCycle concode_elem_sep void insert concode_elem_sep void reverseList concode_elem_sep int fetchLast concode_elem_sep Node getNext concode_elem_sep void delete concode_elem_sep int fetchFirst concode_elem_sep Node InsertNth concode_elem_sep Node InsertNth concode_elem_sep void ReversePrint concode_elem_sep void traverse concode_elem_sep void reverseListRecursive concode_elem_sep int fetch concode_elem_sep void deleteFirst concode_elem_sep void setNext concode_elem_sep void insertLast concode_elem_sep int getData"}
{"code": "void function ( Job arg0 , Schema arg1 ) { arg0 . getConfiguration ( ) . set ( CONF_INPUT_VALUE_SCHEMA , arg1 . toString ( ) ) ; }", "nl": "sets the job input value schema . concode_field_sep String CONF_INPUT_KEY_SCHEMA concode_elem_sep String CONF_OUTPUT_KEY_SCHEMA concode_elem_sep String CONF_INPUT_VALUE_SCHEMA concode_elem_sep String CONF_OUTPUT_VALUE_SCHEMA concode_elem_sep String CONF_OUTPUT_CODEC concode_field_sep void setMapOutputKeySchema concode_elem_sep Schema getInputKeySchema concode_elem_sep void setDataModelClass concode_elem_sep void setOutputValueSchema concode_elem_sep Schema getMapOutputKeySchema concode_elem_sep void setOutputKeySchema concode_elem_sep Schema getInputValueSchema concode_elem_sep Schema getMapOutputValueSchema concode_elem_sep void setMapOutputValueSchema concode_elem_sep Schema getOutputKeySchema concode_elem_sep void setInputKeySchema concode_elem_sep Schema getOutputValueSchema"}
{"code": "void function ( ) { createVault ( buildCommand ( \"srini_string\" , \"srini_string\" ) ) ; Assert . assertEquals ( VAULT_ATTRIBUTE , getVaultedPassword ( ) ) ; removeVault ( ) ; }", "nl": "testing ext option password as a exact command to execute . the exact command is a string delimited by ' ' . concode_field_sep String KEYSTORE_URL concode_elem_sep VaultSession nonInteractiveSession concode_elem_sep String VAULT_ALIAS concode_elem_sep ModelNode originalVault concode_elem_sep String VAULT_DAT_FILE concode_elem_sep PathAddress VAULT_PATH concode_elem_sep String ATTRIBUTE_NAME concode_elem_sep URL url concode_elem_sep String VAULT_ATTRIBUTE concode_elem_sep String RESOURCE_LOCATION concode_elem_sep String VAULTED_PROPERTY concode_elem_sep Logger LOGGER concode_elem_sep String VAULT_PASSWORD concode_elem_sep int ITER_COUNT concode_elem_sep String SALT concode_elem_sep String VAULT_BLOCK concode_elem_sep ManagementClient managementClient concode_elem_sep VaultHandler vaultHandler concode_elem_sep ExternalPasswordProvider passwordProvider concode_field_sep void testCustomModuleClassPassword concode_elem_sep String buildCommand concode_elem_sep void testCmdPassword concode_elem_sep void testPicketboxClassPassword concode_elem_sep void testWrongPassword concode_elem_sep String getVaultedPassword concode_elem_sep WebArchive appDeploymentCahce concode_elem_sep void clean concode_elem_sep void tearDown concode_elem_sep void testCustomModuleClassWithArguments concode_elem_sep void removeVault concode_elem_sep void setup concode_elem_sep void createVault"}
{"code": "String function ( ) { return name ; }", "nl": "gets the person 's name . concode_field_sep String college concode_elem_sep String gender concode_elem_sep String name concode_elem_sep ArrayList<Attribute> responses concode_field_sep ArrayList<Attribute> getResponses concode_elem_sep String getCollege concode_elem_sep boolean equals concode_elem_sep String getGender concode_elem_sep void saveResponse"}
{"code": "void function ( ) { stateHTTP = \"srini_string\" ; send ( ) ; }", "nl": "send the post request to requested url of blocking concode_field_sep String resMessage concode_elem_sep String urlstring concode_elem_sep String filename concode_elem_sep String stateHTTP concode_elem_sep String uuid concode_elem_sep Context context concode_elem_sep HttpListener httpListener concode_elem_sep String requestType concode_elem_sep Hashtable<String,String> header concode_elem_sep int resCode concode_elem_sep String requeststring concode_elem_sep int reqID concode_field_sep void addHeader concode_elem_sep String getResponse concode_elem_sep void run concode_elem_sep void setUuid concode_elem_sep void addHttpLIstener concode_elem_sep int getReqID concode_elem_sep void sendPost concode_elem_sep String getURL concode_elem_sep String getFilename concode_elem_sep int getResCode concode_elem_sep String getUuid concode_elem_sep void setContext concode_elem_sep void send"}
{"code": "long function ( Object arg0 , Chronology arg1 ) { return DateTimeUtils . currentTimeMillis ( ) ; }", "nl": "extracts the millis from an object of this converter 's type . this implementation returns the current time . concode_field_sep PlaceHolder placeHolder concode_field_sep boolean isReadableInterval concode_elem_sep PeriodType getPeriodType concode_elem_sep String toString concode_elem_sep Chronology getChronology concode_elem_sep Chronology getChronology concode_elem_sep int[] getPartialValues concode_elem_sep int[] getPartialValues"}
{"code": "int function ( ) { return memorySizeMb ; }", "nl": "the amount of memory this machine has mb concode_field_sep Map<String,JsonBall> metadata concode_elem_sep Date created concode_elem_sep Type type concode_elem_sep Set<String> ips concode_elem_sep ImmutableSet.Builder<String> ips concode_elem_sep ImmutableMap.Builder<String,JsonBall> metadata concode_elem_sep String name concode_elem_sep String id concode_elem_sep State state concode_elem_sep Function<JsonBall,String> unquoteString concode_elem_sep String dataset concode_elem_sep int memorySizeMb concode_elem_sep Date updated concode_elem_sep int diskSizeGb concode_field_sep Builder toBuilder concode_elem_sep Builder metadata concode_elem_sep String getName concode_elem_sep String getId concode_elem_sep int compareTo concode_elem_sep Builder type concode_elem_sep Date getUpdated concode_elem_sep Map<String,String> getMetadataAsJsonLiterals concode_elem_sep int hashCode concode_elem_sep Builder builder concode_elem_sep Builder id concode_elem_sep Builder state concode_elem_sep String value concode_elem_sep String value concode_elem_sep Builder memorySizeMb concode_elem_sep Type fromValue concode_elem_sep State fromValue concode_elem_sep Map<String,String> getMetadata concode_elem_sep String apply concode_elem_sep Builder created concode_elem_sep int getDiskSizeGb concode_elem_sep String getDatasetURN concode_elem_sep Date getCreated concode_elem_sep Builder addMetadata concode_elem_sep Builder ips concode_elem_sep Builder addIp concode_elem_sep State getState concode_elem_sep Builder fromMachine concode_elem_sep Machine build concode_elem_sep Type getType concode_elem_sep boolean equals concode_elem_sep Builder name concode_elem_sep String toString concode_elem_sep String toString concode_elem_sep String toString concode_elem_sep Builder dataset concode_elem_sep Builder updated concode_elem_sep Set<String> getIps concode_elem_sep Builder diskSizeGb"}
{"code": "InjectedValue < SuspendController > function ( ) { return suspendControllerInjectedValue ; }", "nl": "returns suspend controller injected value . concode_field_sep int activeInvocationCount concode_elem_sep InjectedValue<DeploymentRepository> deploymentRepositoryInjectedValue concode_elem_sep AtomicIntegerFieldUpdater<EJBSuspendHandlerService> activeTransactionCountUpdater concode_elem_sep boolean gracefulTxnShutdown concode_elem_sep ServerActivityCallback listener concode_elem_sep AtomicReferenceFieldUpdater<EJBSuspendHandlerService,ServerActivityCallback> listenerUpdater concode_elem_sep InjectedValue<SuspendController> suspendControllerInjectedValue concode_elem_sep InjectedValue<LocalTransactionContext> localTransactionContextInjectedValue concode_elem_sep int activeTransactionCount concode_elem_sep AtomicIntegerFieldUpdater<EJBSuspendHandlerService> activeInvocationCountUpdater concode_elem_sep boolean suspended concode_elem_sep ServiceName SERVICE_NAME concode_field_sep void resume concode_elem_sep void beforeCompletion concode_elem_sep void enableGracefulTxnShutdown concode_elem_sep void invocationComplete concode_elem_sep void doneSuspended concode_elem_sep boolean isSuspended concode_elem_sep void decrementTransactionCount concode_elem_sep void afterCompletion concode_elem_sep void start concode_elem_sep void suspended concode_elem_sep void transactionCreated concode_elem_sep EJBSuspendHandlerService getValue concode_elem_sep void stop concode_elem_sep InjectedValue<LocalTransactionContext> getLocalTransactionContextInjectedValue concode_elem_sep InjectedValue<DeploymentRepository> getDeploymentRepositoryInjectedValue concode_elem_sep boolean acceptInvocation concode_elem_sep void preSuspend"}
{"code": "void function ( ) { final List < Element > loc0 = d . end ( workerContextImpl , new Tag ( \"srini_string\" ) , currentContent ) ; Assert . assertEquals ( 1 , loc0 . size ( ) ) ; }", "nl": "verifies that the numbers of paragraphs returned by div #end . concode_field_sep List<Element> currentContent concode_elem_sep Div d concode_elem_sep WorkerContextImpl workerContextImpl concode_field_sep void init concode_elem_sep void verifyIfPdfDiv concode_elem_sep void verifyContent concode_elem_sep void verifyIfStackOwner"}
{"code": "void function ( Object arg0 ) { isNotNull ( arg0 , \"srini_string\" + arg0 + \"srini_string\" ) ; }", "nl": "verify that a given object is non-null . concode_field_sep PlaceHolder placeHolder concode_field_sep void equal concode_elem_sep void equal concode_elem_sep void isTrue concode_elem_sep void isTrue concode_elem_sep void fail concode_elem_sep void fail concode_elem_sep void isNull concode_elem_sep void isNull concode_elem_sep void isFalse concode_elem_sep void isFalse"}
{"code": "void function ( NamedWorkManager arg0 ) { this . workManager = arg0 ; }", "nl": "set wm concode_field_sep NamedWorkManager workManager concode_elem_sep Logger log concode_field_sep NamedWorkManager getWorkManager concode_elem_sep void endpointActivation concode_elem_sep void stop concode_elem_sep int hashCode concode_elem_sep void endpointDeactivation concode_elem_sep boolean equals concode_elem_sep void start concode_elem_sep XAResource[] getXAResources"}
{"code": "boolean function ( Object arg0 ) { if ( ! ( arg0 instanceof LocalRing ) ) { return false ; } LocalRing < C > loc0 = null ; try { loc0 = ( LocalRing < C > ) arg0 ; } catch ( ClassCastException loc1 ) { } if ( loc0 == null ) { return false ; } if ( ! ring . equals ( loc0 . ring ) ) { return false ; } return ideal . equals ( loc0 . ideal ) ; }", "nl": "comparison with any other object . concode_field_sep Logger logger concode_elem_sep Ideal<C> ideal concode_elem_sep GenPolynomialRing<C> ring concode_elem_sep int isField concode_field_sep Local<C> random concode_elem_sep Local<C> random concode_elem_sep Local<C> random concode_elem_sep int hashCode concode_elem_sep boolean isField concode_elem_sep Local<C> getONE concode_elem_sep boolean isCommutative concode_elem_sep Local<C> getZERO concode_elem_sep Local<C> fromInteger concode_elem_sep Local<C> fromInteger concode_elem_sep boolean isAssociative concode_elem_sep String toString concode_elem_sep Local<C> parse concode_elem_sep Local<C> parse concode_elem_sep Local<C> copy concode_elem_sep java.math.BigInteger characteristic"}
{"code": "GenVector < C > function ( ) { ArrayList < C > loc0 = new ArrayList < C > ( modul . cols ) ; for ( C loc1 : val ) { C loc2 = loc1 . negate ( ) ; loc0 . add ( loc2 ) ; } return new GenVector < C > ( modul , loc0 ) ; }", "nl": "negative of this vector . concode_field_sep List<C> val concode_elem_sep Logger logger concode_elem_sep GenVectorModul<C> modul concode_field_sep int signum concode_elem_sep GenVector<C> leftLinearCombination concode_elem_sep GenVector<C> rightScalarProduct concode_elem_sep GenVector<C> subtract concode_elem_sep GenVector<C> scalarMultiply concode_elem_sep GenVector<C> sum concode_elem_sep GenVector<C> linearCombination concode_elem_sep GenVector<C> linearCombination concode_elem_sep GenVector<C> linearCombination concode_elem_sep int compareTo concode_elem_sep GenVector<C> leftScalarMultiply concode_elem_sep C scalarProduct concode_elem_sep GenVector<C> scalarProduct concode_elem_sep GenVector<C> abs concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep GenVector<C> clone concode_elem_sep boolean isZERO concode_elem_sep String toString"}
{"code": "void function ( PdfDictionary arg0 ) { inspectChildDictionary ( arg0 , false ) ; }", "nl": "if the child of a structured element is a dictionary , we inspect the child ; we may also draw a tag . concode_field_sep PdfReader reader concode_elem_sep PrintWriter out concode_field_sep String xmlName concode_elem_sep void convertToXml concode_elem_sep void convertToXml concode_elem_sep String fixTagName concode_elem_sep void inspectChildArray concode_elem_sep void inspectChild concode_elem_sep void parseTag"}
{"code": "T function ( ) { return datum ; }", "nl": "return the wrapped datum . concode_field_sep T datum concode_field_sep int hashCode concode_elem_sep boolean equals concode_elem_sep String toString"}
{"code": "Matcher function ( ) { return _matcher ; }", "nl": "get the matcher identifying the target of this match . concode_field_sep Matcher _parentMatcher concode_elem_sep int _index concode_elem_sep int DEFAULT_INDEX concode_elem_sep Matcher _matcher concode_field_sep Matcher getParentMatcher concode_elem_sep String toString concode_elem_sep boolean matches"}
{"code": "AuditCriterion function ( Collection arg0 ) { return new InAuditExpression ( propertyNameGetter , arg0 . toArray ( ) ) ; }", "nl": "apply an `` in '' constraint concode_field_sep PropertyNameGetter propertyNameGetter concode_field_sep AuditCriterion hasNotChanged concode_elem_sep AuditCriterion lt concode_elem_sep AuditProjection distinct concode_elem_sep AuditCriterion leProperty concode_elem_sep AggregatedAuditExpression maximize concode_elem_sep AuditProjection min concode_elem_sep AuditCriterion hasChanged concode_elem_sep AuditCriterion gtProperty concode_elem_sep AuditProjection function concode_elem_sep AuditCriterion neProperty concode_elem_sep AuditCriterion ltProperty concode_elem_sep AuditCriterion ge concode_elem_sep AuditCriterion between concode_elem_sep Triple<String,String,Boolean> getData concode_elem_sep AuditCriterion isNotNull concode_elem_sep AggregatedAuditExpression minimize concode_elem_sep AuditCriterion like concode_elem_sep AuditCriterion like concode_elem_sep AuditProjection max concode_elem_sep AuditCriterion geProperty concode_elem_sep AuditProjection count concode_elem_sep AuditCriterion eq concode_elem_sep AuditCriterion gt concode_elem_sep AuditOrder asc concode_elem_sep AuditProjection countDistinct concode_elem_sep AuditCriterion ne concode_elem_sep AuditCriterion isNull concode_elem_sep AuditCriterion eqProperty concode_elem_sep AuditCriterion le concode_elem_sep AuditCriterion ilike concode_elem_sep AuditCriterion ilike concode_elem_sep AuditOrder desc"}
{"code": "List < ResourceGroup > function ( Integer arg0 , List < Integer > arg1 ) { return copyResource . loadResourceGroupsForType ( arg0 , resource . getResource ( ) ) ; }", "nl": "load all resources for the selected type and exclude resource from excludelist concode_field_sep MaiaAmwFederationServicePredecessorHandler maiaAmwFederationServicePredecessorHandler concode_elem_sep ForeignableBoundary foreignableBoundary concode_elem_sep EditResourceView resource concode_elem_sep Map<Integer,ResourceGroup> resourceGroupMap concode_elem_sep Permissions permissions concode_elem_sep ResourceTypeDataProvider resourceTypeDataProvider concode_elem_sep boolean loadList concode_elem_sep long serialVersionUID concode_elem_sep CopyResource copyResource concode_field_sep List<ResourceGroup> getResourcesForSelectedResourceType concode_elem_sep String copyFromResource concode_elem_sep boolean isCanCopyResource concode_elem_sep void enableLoadList concode_elem_sep void refreshResourceList concode_elem_sep boolean isCanCopyFromPredecessorResource concode_elem_sep boolean copyFromResourceAction concode_elem_sep boolean copyFromPredecessorResourceAction concode_elem_sep String copyFromPredecessorResource"}
{"code": "boolean function ( ) { return isSelfIntersecting ( vertexLoop ) ; }", "nl": "returns whether this polygon is self-intersecting concode_field_sep List<VectorXZ> vertexLoop concode_field_sep List<VectorXZ> getVertexCollection concode_elem_sep VectorXZ getCenter concode_elem_sep boolean intersects concode_elem_sep boolean intersects concode_elem_sep boolean intersects concode_elem_sep double getOutlineLength concode_elem_sep SimplePolygonXZ asSimplePolygon concode_elem_sep PolygonXZ reverse concode_elem_sep VectorXZ getVertex concode_elem_sep List<VectorXZ> intersectionPositions concode_elem_sep boolean isEquivalentTo concode_elem_sep List<VectorXZ> getVertexLoop concode_elem_sep LineSegmentXZ getClosestSegment concode_elem_sep int size concode_elem_sep Collection<LineSegmentXZ> intersectionSegments concode_elem_sep TriangleXZ asTriangleXZ concode_elem_sep PolygonXYZ xyz concode_elem_sep void assertLoopProperty concode_elem_sep List<VectorXZ> getVertices concode_elem_sep VectorXZ getVertexAfter concode_elem_sep boolean isSimple concode_elem_sep String toString concode_elem_sep VectorXZ getVertexBefore concode_elem_sep List<LineSegmentXZ> getSegments"}
{"code": "String function ( ) { return fMethodName ; }", "nl": "returns the name of this method as given by imethod #getelementname concode_field_sep String fMethodSignature concode_elem_sep IMethod fMethod concode_elem_sep char MNEMONIC_DELIMITER concode_elem_sep String fMethodName concode_elem_sep int LENGTH concode_elem_sep boolean fIsConstructor concode_field_sep String getMethodSignature concode_elem_sep IMethod findMethod concode_elem_sep int hashCode concode_elem_sep boolean isConstructor concode_elem_sep boolean equals concode_elem_sep boolean exists concode_elem_sep String getStableSignature concode_elem_sep String toString concode_elem_sep IMethod getMethod"}
{"code": "List < AmwFunctionEntity > function ( ResourceTypeEntity arg0 ) { Objects . requireNonNull ( arg0 , \"srini_string\" ) ; ResourceTypeEntity loc0 = resourceTypeRepository . loadWithFunctionsAndMiksForId ( arg0 . getId ( ) ) ; return new ArrayList < > ( loc0 . getFunctions ( ) ) ; }", "nl": "get all functions which are defined on the given resourcetype concode_field_sep Permissions permissionBoundary concode_elem_sep EntityManager entityManager concode_elem_sep ResourceTypeRepository resourceTypeRepository concode_elem_sep FreemarkerSyntaxValidator freemarkerValidator concode_elem_sep ResourceRepository resourceRepository concode_elem_sep FunctionRepository functionRepository concode_elem_sep FunctionService functionService concode_field_sep void deleteFunction concode_elem_sep AmwFunctionEntity getFunctionByIdAndRevision concode_elem_sep AmwFunctionEntity getFunctionById concode_elem_sep List<AmwFunctionEntity> getAllOverwritableSupertypeFunctions concode_elem_sep List<AmwFunctionEntity> getAllOverwritableSupertypeFunctions concode_elem_sep List<RevisionInformation> getFunctionRevisions concode_elem_sep AmwFunctionEntity overwriteResourceFunction concode_elem_sep AmwFunctionEntity overwriteResourceTypeFunction concode_elem_sep AmwFunctionEntity createNewResourceFunction concode_elem_sep void saveFunction concode_elem_sep AmwFunctionEntity createNewResourceTypeFunction"}
{"code": "void function ( ) { final NullNode loc0 = NullNode . getInstance ( ) ; assertNotNull ( loc0 ) ; assertSame ( loc0 , NullNode . getInstance ( ) ) ; }", "nl": "verify if nullnode #getinstance actually returns the same object instance concode_field_sep PlaceHolder placeHolder concode_field_sep void testFields concode_elem_sep void testWalk"}
{"code": "void function ( ) { player . stop ( ) ; }", "nl": "stop the player . concode_field_sep ArrayList<String> files concode_elem_sep MusicPlayer player concode_field_sep void listAllFilles concode_elem_sep void listFile concode_elem_sep void removeFile concode_elem_sep int getNumberOfFiles concode_elem_sep void listMatching concode_elem_sep int findFirst concode_elem_sep void startPlaying concode_elem_sep void addFile concode_elem_sep void playSampleOf"}
{"code": "Class function ( String arg0 , String arg1 ) { try { Class loc0 = ReflectHelper . classForName ( arg0 ) ; return getter ( loc0 , arg1 ) . getReturnType ( ) ; } catch ( ClassNotFoundException loc0 ) { throw new MappingException ( \"srini_string\" + arg0 + \"srini_string\" + arg1 , loc0 ) ; } }", "nl": "attempt to resolve the specified property type through reflection . concode_field_sep PropertyAccessor DIRECT_PROPERTY_ACCESSOR concode_elem_sep Method OBJECT_EQUALS concode_elem_sep Class[] SINGLE_OBJECT_PARAM_SIGNATURE concode_elem_sep Object[] NO_PARAMS concode_elem_sep Method OBJECT_HASHCODE concode_elem_sep Class[] NO_PARAM_SIGNATURE concode_elem_sep PropertyAccessor BASIC_PROPERTY_ACCESSOR concode_field_sep boolean overridesHashCode concode_elem_sep Getter getGetter concode_elem_sep Getter getter concode_elem_sep Object getConstantValue concode_elem_sep boolean isFinalClass concode_elem_sep boolean overridesEquals concode_elem_sep Method getMethod concode_elem_sep Class classForName concode_elem_sep Class classForName concode_elem_sep Constructor getConstructor concode_elem_sep boolean implementsInterface concode_elem_sep Constructor<T> getDefaultConstructor concode_elem_sep Method extractHashCodeMethod concode_elem_sep Method extractEqualsMethod concode_elem_sep boolean isPublic concode_elem_sep boolean isPublic concode_elem_sep boolean isAbstractClass"}
{"code": "List < String > function ( ) { return links ; }", "nl": "return links the sentence contains . concode_field_sep long serialVersionUID concode_elem_sep List<String> links concode_elem_sep List<TokenElement> tokens concode_elem_sep List<LineOffset> offsetMap concode_elem_sep int lineNumber concode_elem_sep String content concode_elem_sep int startPositionOffset concode_elem_sep boolean isFirstSentence concode_field_sep int getOffsetMapSize concode_elem_sep void setContent concode_elem_sep void setOffsetMap concode_elem_sep String getContent concode_elem_sep List<TokenElement> getTokens concode_elem_sep Optional<LineOffset> getOffset concode_elem_sep boolean isFirstSentence concode_elem_sep void setTokens concode_elem_sep int getLineNumber concode_elem_sep int getOffsetPosition concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep int getStartPositionOffset concode_elem_sep void setIsFirstSentence concode_elem_sep void setLineNumber concode_elem_sep String toString concode_elem_sep List<LineOffset> getOffsetMap concode_elem_sep void addLink"}
{"code": "void function ( String [ ] arg0 ) { String loc0 ; TextIO . putln ( \"srini_string\" ) ; loc0 = TextIO . getln ( ) ; TextIO . putln ( ) ; TextIO . putln ( \"srini_string\" ) ; printCapitalized ( loc0 ) ; }", "nl": "sole entry point to application , as always . concode_field_sep PlaceHolder placeHolder concode_field_sep void printCapitalized"}
{"code": "void function ( Object arg0 ) { synchronized ( queue ) { if ( ! isCoalesce || ! queue . contains ( arg0 ) ) { queue . addElement ( arg0 ) ; if ( isAlive ) startProcessor ( ) ; } } }", "nl": "collects an event and puts it into the event queue for later processing . concode_field_sep Thread eventProcessor concode_elem_sep Vector queue concode_elem_sep boolean isCoalesce concode_elem_sep boolean isAlive concode_elem_sep int priority concode_field_sep void startProcessor concode_elem_sep void stop concode_elem_sep boolean isCoalesce concode_elem_sep void processEvents concode_elem_sep void start concode_elem_sep void clear concode_elem_sep void processEvent concode_elem_sep void setCoalesce concode_elem_sep void join"}
{"code": "Iterable4 function ( final Iterable4 arg0 ) { return new Iterable4 ( ) { public Iterator4 iterator ( ) { return new EnumerateIterator ( arg0 . iterator ( ) ) ; } } ; }", "nl": "generates enumerateiterator.tuple items with indexes starting at 0 . concode_field_sep Object NO_ELEMENT concode_elem_sep Object SKIP concode_elem_sep Iterator4 EMPTY_ITERATOR concode_elem_sep Iterable4 EMPTY_ITERABLE concode_field_sep Object next concode_elem_sep Iterable4 crossProduct concode_elem_sep Iterable4 crossProduct concode_elem_sep Iterable4 crossProduct concode_elem_sep Iterable4 iterable concode_elem_sep Iterable4 iterable concode_elem_sep Iterator4<Integer> range concode_elem_sep Iterator4 flatten concode_elem_sep Object current concode_elem_sep Iterator4 iterator concode_elem_sep Iterator4 iterator concode_elem_sep Iterator4 iterator concode_elem_sep Object[] toArray concode_elem_sep Object[] toArray concode_elem_sep String join concode_elem_sep String join concode_elem_sep String join concode_elem_sep Iterator4 copy concode_elem_sep Iterator4 map concode_elem_sep Iterator4 map concode_elem_sep Iterable4 map concode_elem_sep Iterator4 iterate concode_elem_sep Iterator4 singletonIterator concode_elem_sep boolean moveNext concode_elem_sep Iterable4 singletonIterable concode_elem_sep java.util.Iterator<T> platformIterator concode_elem_sep Iterator4 concat concode_elem_sep Iterator4 concat concode_elem_sep Iterable4 concat concode_elem_sep Iterable4 concat concode_elem_sep Iterator4 concat concode_elem_sep Iterable4 concatMap concode_elem_sep boolean any concode_elem_sep Iterator4<T> filter concode_elem_sep Iterable4 filter concode_elem_sep Iterator4 filter concode_elem_sep Iterator4<T> take concode_elem_sep int size concode_elem_sep int size concode_elem_sep Iterable4<T> series concode_elem_sep void reset concode_elem_sep String toString concode_elem_sep String toString concode_elem_sep Iterable4 append"}
{"code": "void function ( double arg0 , double arg1 , int arg2 , Method arg3 ) { System . out . println ( arg3 ) ; double loc0 = ( arg1 - arg0 ) / ( arg2 - 1 ) ; for ( double loc1 = arg0 ; loc1 <= arg1 ; loc1 += loc0 ) { try { double loc2 = ( Double ) arg3 . invoke ( null , loc1 ) ; System . out . printf ( \"srini_string\" , loc1 , loc2 ) ; } catch ( Exception loc2 ) { loc2 . printStackTrace ( ) ; } } }", "nl": "prints a table with x - and y-values for a method concode_field_sep PlaceHolder placeHolder concode_field_sep double square concode_elem_sep void main"}
{"code": "ColumnFileMetaData function ( ) { return metaData ; }", "nl": "return this file 's metadata . concode_field_sep ColumnFileMetaData metaData concode_elem_sep Map<String,ColumnDescriptor> columnsByName concode_elem_sep Input file concode_elem_sep ColumnDescriptor[] columns concode_elem_sep long rowCount concode_elem_sep int columnCount concode_field_sep ColumnMetaData[] getColumnMetaData concode_elem_sep ColumnMetaData getColumnMetaData concode_elem_sep ColumnMetaData getColumnMetaData concode_elem_sep long getRowCount concode_elem_sep List<ColumnMetaData> getRoots concode_elem_sep void readColumnMetaData concode_elem_sep ColumnValues<T> getValues concode_elem_sep ColumnValues<T> getValues concode_elem_sep void readColumnStarts concode_elem_sep ColumnDescriptor<T> getColumn concode_elem_sep long getColumnCount concode_elem_sep void readHeader concode_elem_sep void readMagic concode_elem_sep void close"}
{"code": "void function ( ) { processListener . interrupt ( ) ; try { StopCluster ( true ) ; } catch ( IOException loc0 ) { System . out . println ( \"srini_string\" ) ; System . out . println ( loc0 . toString ( ) ) ; } }", "nl": "interrupts the processlistener thread and terminates the cluster . concode_field_sep ProcessListener processListener concode_elem_sep FXMLController guiController concode_elem_sep String user concode_elem_sep File fileBiBiGridJar concode_elem_sep File fileSingularityScript concode_elem_sep ProcessBuilder processBuilder concode_elem_sep File fileInput concode_elem_sep String masterIp concode_elem_sep ObservableList<String> flavorChoices concode_elem_sep PropertiesController propertiesController concode_elem_sep String clusterId concode_field_sep String getClusterId concode_elem_sep File getInputFile concode_elem_sep void setMasterIp concode_elem_sep void StopCluster concode_elem_sep PropertiesController getPropertiesController concode_elem_sep String getMasterIp concode_elem_sep void StartCluster concode_elem_sep void setClusterId concode_elem_sep void setInputFile concode_elem_sep void UnlockSettings concode_elem_sep void UnlockStopButton concode_elem_sep ObservableList<String> getFlavorChoices"}
{"code": "String function ( BigInteger arg0 , BigInteger arg1 , BigInteger arg2 , BigInteger arg3 ) { byte [ ] loc0 = loc0 ( arg0 , arg1 , arg2 , arg3 ) ; return hexColonDelimited ( Hashing . md5 ( ) . hashBytes ( loc0 ) ) ; }", "nl": "create a fingerprint per the following spec concode_field_sep PlaceHolder placeHolder concode_field_sep byte[] keyBlob concode_elem_sep DSAPublicKeySpec publicKeySpecFromOpenSSH concode_elem_sep DSAPublicKeySpec publicKeySpecFromOpenSSH concode_elem_sep String encodeAsOpenSSH concode_elem_sep String fingerprintPublicKey concode_elem_sep byte[] readLengthFirst concode_elem_sep String hexColonDelimited concode_elem_sep void writeLengthFirst"}
{"code": "String function ( Set < SubSystemType > arg0 ) { StringBuilder loc0 = new StringBuilder ( ) ; if ( arg0 . size ( ) == 0 ) { return loc0 . toString ( ) ; } for ( SubSystemType loc1 : arg0 ) { loc0 . append ( loc1 . name ( ) ) . append ( \"srini_string\" ) ; } return loc0 . toString ( ) . substring ( 0 , loc0 . length ( ) - 1 ) ; }", "nl": "get a string that is a comma delimited list of subsystems concode_field_sep String MOUNT_STATUS_FILE concode_elem_sep Logger LOG concode_elem_sep String CGROUP_STATUS_FILE concode_field_sep void writeFileByLine concode_elem_sep void writeFileByLine concode_elem_sep Set<SubSystemType> getSubSystemsFromString concode_elem_sep void deleteDir concode_elem_sep boolean enabled concode_elem_sep List<String> readFileByLine concode_elem_sep String getDir"}
{"code": "boolean function ( ) { return idler . isIdle ( ) ; }", "nl": "determine if the ui thread is idle concode_field_sep SWTIdler idler concode_field_sep String toString concode_elem_sep void waitForIdle"}
{"code": "boolean function ( ) { return annotationsAllowed ; }", "nl": "getter to find out if adding annotations is allowed after signing . concode_field_sep boolean certification concode_elem_sep boolean fillInAllowed concode_elem_sep boolean annotationsAllowed concode_elem_sep PdfName action concode_elem_sep PdfArray fields concode_elem_sep List<FieldLock> fieldLocks concode_field_sep List<FieldLock> getFieldLocks concode_elem_sep PdfArray getFields concode_elem_sep boolean isCertification concode_elem_sep boolean isFillInAllowed concode_elem_sep PdfName getAction concode_elem_sep String toString"}
{"code": "void function ( MotionEvent arg0 , boolean arg1 ) { if ( arg1 ) { if ( mGestureDetector . onTouchEvent ( arg0 ) ) { return ; } mScaleGestureDetector . onTouchEvent ( arg0 ) ; if ( mScaleGestureDetector . isInProgress ( ) ) { return ; } } mPanZoomController . handleEvent ( arg0 , ! arg1 ) ; }", "nl": "dispatch the event to the gesture detectors and the pan/zoom controller . concode_field_sep JavaPanZoomController mPanZoomController concode_elem_sep int EVENT_LISTENER_TIMEOUT concode_elem_sep GestureDetector mGestureDetector concode_elem_sep boolean mAllowDefaultAction concode_elem_sep String LOGTAG concode_elem_sep ListenerTimeoutProcessor mListenerTimeoutProcessor concode_elem_sep int mProcessingBalance concode_elem_sep View mView concode_elem_sep boolean mWaitForTouchListeners concode_elem_sep boolean mHoldInQueue concode_elem_sep SimpleScaleGestureDetector mScaleGestureDetector concode_elem_sep Queue<MotionEvent> mEventQueue concode_field_sep boolean touchFinished concode_elem_sep boolean handleEvent concode_elem_sep boolean isDownEvent concode_elem_sep void onTabChanged concode_elem_sep void setWaitForTouchListeners concode_elem_sep void processEventBlock concode_elem_sep void destroy concode_elem_sep void run concode_elem_sep void handleEventListenerAction"}
{"code": "void function ( final char arg0 ) { Event loc0 = new Event ( ) ; loc0 . type = SWT . KeyDown ; loc0 . character = arg0 ; new SWTPushEventOperation ( loc0 ) . execute ( ) ; }", "nl": "dispatch a keydown event . concode_field_sep Point pointT concode_elem_sep abbot.swt.Robot _robot concode_field_sep void robotKeyClick concode_elem_sep void doKeyDown concode_elem_sep void doKeyUp concode_elem_sep void mouseMove concode_elem_sep void mouseMove concode_elem_sep void keyUp concode_elem_sep void keyUp concode_elem_sep void mouseDown concode_elem_sep abbot.swt.Robot getAbbotRobot concode_elem_sep void mouseDoubleClick concode_elem_sep void pause concode_elem_sep boolean needsShift concode_elem_sep int[] extractKeys concode_elem_sep void mouseUp concode_elem_sep void keyClick concode_elem_sep void keyClick concode_elem_sep Event createClickEvent concode_elem_sep void enterText"}
{"code": "Block function ( ) { return exit ; }", "nl": "returns the last block in the subroutine . concode_field_sep Block entry concode_elem_sep Block exit concode_elem_sep ArrayList paths concode_elem_sep FlowGraph graph concode_elem_sep LocalVariable returnAddress concode_field_sep void setReturnAddress concode_elem_sep int numPaths concode_elem_sep void setExit concode_elem_sep FlowGraph graph concode_elem_sep void addPath concode_elem_sep LocalVariable returnAddress concode_elem_sep void removePathsContaining concode_elem_sep void removePath concode_elem_sep Block entry concode_elem_sep void print concode_elem_sep Block pathTarget concode_elem_sep Block pathSource concode_elem_sep Collection paths concode_elem_sep String toString concode_elem_sep void removeAllPaths concode_elem_sep void setEntry"}
{"code": "Result function ( Request arg0 , JUnitCore arg1 ) { arg1 . addListener ( fHistory . listener ( ) ) ; return arg1 . run ( sortRequest ( arg0 ) . getRunner ( ) ) ; }", "nl": "run all the tests contained in request . this variant should be used if core has attached listeners that thisrun should notify . concode_field_sep String MALFORMED_JUNIT_3_TEST_CLASS_PREFIX concode_elem_sep MaxHistory fHistory concode_field_sep Runner buildRunner concode_elem_sep MaxCore storedLocally concode_elem_sep List<Description> findLeaves concode_elem_sep void findLeaves concode_elem_sep MaxCore forFolder concode_elem_sep Class<?> getMalformedTestClass concode_elem_sep Request sortRequest concode_elem_sep Request constructLeafRequest concode_elem_sep List<Description> sortedLeavesForTest"}
{"code": "int function ( char arg0 ) { return arg0 - 'A' ; }", "nl": "convert character to integer concode_field_sep Cell[][] cells concode_elem_sep int width concode_elem_sep long serialVersionUID concode_elem_sep int height concode_field_sep Iterator<Cell> iterator concode_elem_sep boolean equals concode_elem_sep Cell getCellAtLocation concode_elem_sep char itoc"}
{"code": "void function ( Figure arg0 ) { setMessageFigure ( arg0 ) ; notifyObservers ( ) ; }", "nl": "notifie les observers concode_field_sep ArrayList<MyObserver> _observer concode_elem_sep Figure _message concode_field_sep void setMessageFigure concode_elem_sep void addObserver concode_elem_sep void notifyObservers"}
{"code": "void function ( ) { ul . getCSS ( ) . put ( \"srini_string\" , \"srini_string\" ) ; com . itextpdf . text . List loc0 = ( com . itextpdf . text . List ) orderedUnorderedList . end ( workerContextImpl , ul , listWithTwo ) . get ( 0 ) ; assertEquals ( 100f + 25f , ( ( ListItem ) loc0 . getItems ( ) . get ( 1 ) ) . getSpacingAfter ( ) , 0f ) ; }", "nl": "verifies if the largest of the margin-bottom 's of the ul and it 's last li is selected and added to the padding-bottom of li , because padding-bottom of ul == null . concode_field_sep Tag p concode_elem_sep ListItem single concode_elem_sep Tag last concode_elem_sep ListItem start concode_elem_sep OrderedUnorderedList orderedUnorderedList concode_elem_sep Tag root concode_elem_sep Tag ul concode_elem_sep List<Element> listWithTwo concode_elem_sep ListItem end concode_elem_sep List<Element> listWithOne concode_elem_sep Tag first concode_elem_sep WorkerContextImpl workerContextImpl concode_field_sep void listWithOneNoListPaddingTop2 concode_elem_sep void listWithTwoNoListPaddingTop2 concode_elem_sep void listWithTwoNoListPaddingTop concode_elem_sep void before concode_elem_sep void listWithOneNoListPaddingBottom2 concode_elem_sep void listWithOneWithListPaddingBottom concode_elem_sep void listWithTwoNoListMarginAndPadding concode_elem_sep void listWithTwoWithListPaddingBottom concode_elem_sep void listWithOneNoListPaddingBottom concode_elem_sep void listWithOneNoListPaddingTop concode_elem_sep void listWithTwoNoListPaddingBottom2 concode_elem_sep void listWithTwoWithListPaddingTop concode_elem_sep void listWithOneNoListMarginAndPadding concode_elem_sep void listWithOneWithListPaddingTop concode_elem_sep void verifyIfStackOwner"}
{"code": "User function ( ) { return ( this . user ) ; }", "nl": "the user owning this subscription . concode_field_sep String password concode_elem_sep String host concode_elem_sep MemoryUser user concode_elem_sep String username concode_elem_sep String type concode_elem_sep boolean autoConnect concode_field_sep void setPassword concode_elem_sep String getPassword concode_elem_sep void setUsername concode_elem_sep boolean getAutoConnect concode_elem_sep String getType concode_elem_sep String toString concode_elem_sep void setAutoConnect concode_elem_sep void setType concode_elem_sep String getHost concode_elem_sep String getUsername"}
{"code": "void function ( final long arg0 , final TimeUnit arg1 ) { executor . awaitTermination ( arg0 , arg1 ) ; }", "nl": "visible for testing . concode_field_sep ExecutorService executor concode_field_sep void schedule concode_elem_sep void close"}
{"code": "TransInfo function ( ) { return transInfo ; }", "nl": "get this nodes transinfo concode_field_sep String attributeName concode_elem_sep Comparable[] range concode_elem_sep TransInfo transInfo concode_field_sep int getTransmissionSize concode_elem_sep String getAttribute concode_elem_sep void setRange concode_elem_sep Comparable[] getRange concode_elem_sep boolean equals concode_elem_sep String toString"}
{"code": "int function ( int arg0 ) { int loc0 = ( arg0 >> 8 ) & 0xff ; return loc0 ; }", "nl": "method to get the green value from a pixel represented as an int concode_field_sep int x concode_elem_sep int y concode_elem_sep DigitalPicture picture concode_field_sep int getCol concode_elem_sep int correctValue concode_elem_sep Color getColor concode_elem_sep void setAlpha concode_elem_sep int getRow concode_elem_sep int getBlue concode_elem_sep int getBlue concode_elem_sep void setRed concode_elem_sep void setGreen concode_elem_sep double getAverage concode_elem_sep int getAlpha concode_elem_sep void updatePicture concode_elem_sep int getX concode_elem_sep int getY concode_elem_sep int getRed concode_elem_sep int getRed concode_elem_sep void setColor concode_elem_sep double colorDistance concode_elem_sep double colorDistance concode_elem_sep void setBlue concode_elem_sep String toString"}
{"code": "void function ( byte [ ] arg0 ) { this . token = arg0 ; }", "nl": "write accessor for sasl token concode_field_sep Logger LOG concode_elem_sep short IDENTIFIER concode_elem_sep byte[] token concode_field_sep SaslMessageToken read concode_elem_sep byte[] getSaslToken concode_elem_sep int encodeLength concode_elem_sep ChannelBuffer buffer"}
{"code": "char [ ] function ( ) { return invalidChars ; }", "nl": "get invalid characters . concode_field_sep boolean needAfterSpace concode_elem_sep SymbolType name concode_elem_sep long serialVersionUID concode_elem_sep char[] invalidChars concode_elem_sep boolean needBeforeSpace concode_elem_sep char value concode_field_sep char getValue concode_elem_sep boolean isNeedAfterSpace concode_elem_sep SymbolType getType concode_elem_sep int hashCode concode_elem_sep boolean isNeedBeforeSpace concode_elem_sep boolean equals concode_elem_sep String toString"}
{"code": "String function ( int arg0 ) { return getRandom ( LETTERS , arg0 ) ; }", "nl": "get a fixed-length random string , its a mixture of uppercase and lowercase letters concode_field_sep String NUMBERS_AND_LETTERS concode_elem_sep String LETTERS concode_elem_sep String CAPITAL_LETTERS concode_elem_sep String LOWER_CASE_LETTERS concode_elem_sep String NUMBERS concode_field_sep String getRandom concode_elem_sep String getRandom concode_elem_sep int getRandom concode_elem_sep int getRandom concode_elem_sep String getRandomNumbers concode_elem_sep String getRandomCapitalLetters concode_elem_sep String getRandomLowerCaseLetters concode_elem_sep boolean shuffle concode_elem_sep boolean shuffle concode_elem_sep int[] shuffle concode_elem_sep int[] shuffle concode_elem_sep String getRandomNumbersAndLetters"}
{"code": "double function ( ) { return apply ( new GeometricMean ( ) ) ; }", "nl": "returns the geometric mean of the available values concode_field_sep int INFINITE_WINDOW concode_elem_sep long serialVersionUID concode_field_sep double getKurtosis concode_elem_sep double getStandardDeviation concode_elem_sep double getSkewness concode_elem_sep int getWindowSize concode_elem_sep double[] getValues concode_elem_sep double[] getSortedValues concode_elem_sep double apply concode_elem_sep double getMax concode_elem_sep long getN concode_elem_sep void clear concode_elem_sep DescriptiveStatistics newInstance concode_elem_sep DescriptiveStatistics newInstance concode_elem_sep double getMin concode_elem_sep double getElement concode_elem_sep double getVariance concode_elem_sep double getMean concode_elem_sep double getSumsq concode_elem_sep String toString concode_elem_sep void setWindowSize concode_elem_sep double getSum concode_elem_sep double getPercentile concode_elem_sep void addValue"}
{"code": "byte [ ] function ( String arg0 ) { return header . meta . get ( arg0 ) ; }", "nl": "return the value of a metadata property . concode_field_sep Schema schema concode_elem_sep List<String> metaKeyList concode_elem_sep long blockCount concode_elem_sep boolean availableBlock concode_elem_sep byte[] data concode_elem_sep DatumReader<D> reader concode_elem_sep long blockRemaining concode_elem_sep Map<String,byte[]> meta concode_elem_sep int blockSize concode_elem_sep ByteBuffer blockBuffer concode_elem_sep byte[] syncBuffer concode_elem_sep byte[] sync concode_elem_sep Codec codec concode_elem_sep boolean flushOnWrite concode_elem_sep BinaryDecoder datumIn concode_elem_sep int offset concode_elem_sep Header header concode_elem_sep BinaryDecoder vin concode_elem_sep DataBlock block concode_elem_sep long numEntries concode_field_sep D next concode_elem_sep D next concode_elem_sep boolean isFlushOnWrite concode_elem_sep void remove concode_elem_sep Header getHeader concode_elem_sep Codec resolveCodec concode_elem_sep Iterator<D> iterator concode_elem_sep void compressUsing concode_elem_sep boolean hasNextBlock concode_elem_sep ByteBuffer getAsByteBuffer concode_elem_sep long getBlockSize concode_elem_sep int getBlockSize concode_elem_sep void setFlushOnWrite concode_elem_sep DataBlock nextRawBlock concode_elem_sep long getBlockCount concode_elem_sep void writeBlockTo concode_elem_sep void close concode_elem_sep byte[] getData concode_elem_sep void decompressUsing concode_elem_sep void blockFinished concode_elem_sep String getMetaString concode_elem_sep long getMetaLong concode_elem_sep boolean hasNext concode_elem_sep ByteBuffer nextBlock concode_elem_sep Schema getSchema concode_elem_sep long getNumEntries concode_elem_sep List<String> getMetaKeys concode_elem_sep void initialize concode_elem_sep void initialize"}
{"code": "ListIterator function ( CharListIterator arg0 ) { return null == arg0 ? null : new CharListIteratorListIterator ( arg0 ) ; }", "nl": "create a listiterator listiterator wrappingthe specified charlistiterator charlistiterator . when the given iterator is null , returns null . concode_field_sep CharListIterator _iterator concode_field_sep Object next concode_elem_sep void add concode_elem_sep void set concode_elem_sep Object previous concode_elem_sep boolean hasPrevious concode_elem_sep boolean hasNext concode_elem_sep int nextIndex concode_elem_sep int previousIndex concode_elem_sep void remove"}
{"code": "void function ( int arg0 ) { resetGrid ( arg0 ) ; resetMoved ( arg0 ) ; generateNextCell ( ) ; generateNextCell ( ) ; }", "nl": "initialize game . place 2 instances of 2 anywhere on the board . concode_field_sep boolean[][] newCell concode_elem_sep int[][] grid concode_elem_sep boolean[][] hasCombined concode_field_sep boolean canMoveLeft concode_elem_sep int getCell concode_elem_sep boolean canMoveDown concode_elem_sep void generateNextCell concode_elem_sep void moveDown concode_elem_sep void resetGrid concode_elem_sep void resetMoved concode_elem_sep int getSize concode_elem_sep boolean canMoveUp concode_elem_sep boolean canMoveRight concode_elem_sep void moveRight concode_elem_sep boolean isGridFull concode_elem_sep void moveLeft concode_elem_sep boolean IsCellNew concode_elem_sep void moveUp"}
{"code": "byte [ ] function ( EncryptedData arg0 , EncryptionKey arg1 , KeyUsage arg2 ) { EncTypeHandler loc0 = getEncHandler ( arg1 . getKeyType ( ) ) ; byte [ ] loc1 = loc0 . decrypt ( arg0 . getCipher ( ) , arg1 . getKeyData ( ) , arg2 . getValue ( ) ) ; return loc1 ; }", "nl": "decrypt with the encryption key and key usage . concode_field_sep PlaceHolder placeHolder concode_field_sep EncryptionKey string2Key concode_elem_sep EncryptionKey string2Key concode_elem_sep EncryptionKey random2Key concode_elem_sep EncryptionKey random2Key concode_elem_sep EncryptedData encrypt concode_elem_sep boolean isImplemented concode_elem_sep EncryptionKey makeSubkey concode_elem_sep EncTypeHandler getEncHandler concode_elem_sep EncTypeHandler getEncHandler concode_elem_sep EncTypeHandler getEncHandler concode_elem_sep EncTypeHandler getEncHandler concode_elem_sep EncryptionType getEncryptionType"}
{"code": "int function ( ) { int loc0 = this . getMarcador ( ) ; if ( loc0 < this . getNumeroPaginas ( ) ) { loc0 ++ ; this . setMarcador ( loc0 ) ; } return loc0 ; }", "nl": "leer una pagina del libro , se actualiza marcador , no se pueeder leer mas del numero de paginas del libro concode_field_sep String dimensiones concode_elem_sep int numeroPaginas concode_elem_sep String titulo concode_elem_sep String colorPortada concode_elem_sep String autor concode_elem_sep int marcador concode_field_sep void setColorPortada concode_elem_sep void setDimensiones concode_elem_sep String getColorPortada concode_elem_sep String getAutor concode_elem_sep void setTitulo concode_elem_sep int cerrar concode_elem_sep String getTitulo concode_elem_sep void setNumeroPaginas concode_elem_sep int getNumeroPaginas concode_elem_sep String getDimensiones concode_elem_sep void setMarcador concode_elem_sep int escribir concode_elem_sep void setAutor concode_elem_sep Libro clone concode_elem_sep String toString concode_elem_sep int getMarcador concode_elem_sep int abrir"}
{"code": "int function ( ) { return sectionLevel ; }", "nl": "if the line is a section header , return the section level , or zero if the line is not a section header concode_field_sep String inlineMarkupDelimiters concode_elem_sep int sectionLevel concode_elem_sep boolean erased concode_elem_sep boolean inBlock concode_elem_sep boolean listStart concode_elem_sep List<Boolean> valid concode_elem_sep char ESCAPED_CHARACTER_VALUE concode_elem_sep List<Integer> offsets concode_elem_sep List<Character> characters concode_elem_sep String text concode_elem_sep List<Boolean> escaped concode_elem_sep int listLevel concode_elem_sep int lineNo concode_elem_sep boolean allSameCharacter concode_field_sep void setListStart concode_elem_sep void erase concode_elem_sep void erase concode_elem_sep void erase concode_elem_sep boolean isListStart concode_elem_sep String getText concode_elem_sep boolean isValid concode_elem_sep int getOffset concode_elem_sep int length concode_elem_sep boolean isEmpty concode_elem_sep void eraseWithStyle concode_elem_sep boolean isAllSameCharacter concode_elem_sep void setSectionLevel concode_elem_sep void setInBlock concode_elem_sep boolean isErased concode_elem_sep int eraseEnclosure concode_elem_sep int getListLevel concode_elem_sep int getLineNo concode_elem_sep boolean isInBlock concode_elem_sep String toString concode_elem_sep char rawCharAt concode_elem_sep void setListLevel concode_elem_sep char charAt concode_elem_sep char charAt concode_elem_sep boolean startsWith"}
{"code": "boolean function ( ) { return aliasSpecificLockModes != null && ! aliasSpecificLockModes . isEmpty ( ) ; }", "nl": "does this lockoptions object define alias-specific lock modes ? concode_field_sep Map<String,LockMode> aliasSpecificLockModes concode_elem_sep int NO_WAIT concode_elem_sep LockOptions NONE concode_elem_sep boolean scope concode_elem_sep int SKIP_LOCKED concode_elem_sep LockOptions READ concode_elem_sep LockOptions UPGRADE concode_elem_sep LockMode lockMode concode_elem_sep int timeout concode_elem_sep int WAIT_FOREVER concode_field_sep LockMode getLockMode concode_elem_sep LockOptions makeCopy concode_elem_sep LockMode getEffectiveLockMode concode_elem_sep int getAliasLockCount concode_elem_sep LockOptions setLockMode concode_elem_sep Iterator getAliasLockIterator concode_elem_sep LockOptions setAliasSpecificLockMode concode_elem_sep LockMode getAliasSpecificLockMode concode_elem_sep LockOptions setTimeOut concode_elem_sep LockMode findGreatestLockMode concode_elem_sep int getTimeOut concode_elem_sep LockOptions copy concode_elem_sep LockOptions setScope concode_elem_sep boolean getScope"}
{"code": "GnutellaEvents function ( ) { if ( inst == null ) inst = new GnutellaEvents ( ) ; return inst ; }", "nl": "there is a global event dispatcher . this method returns it . concode_field_sep List<IGnutellaEventListener> listeners concode_elem_sep GnutellaEvents inst concode_field_sep void queryFailed concode_elem_sep void querySucceeded concode_elem_sep void connectionBreak concode_elem_sep void reBootstrapped concode_elem_sep void connectionSucceeded concode_elem_sep void connectionStarted concode_elem_sep void pingTimeouted concode_elem_sep void removeListener concode_elem_sep void connectionFailed concode_elem_sep void queryMadeHop concode_elem_sep void queryStarted concode_elem_sep void addListener"}
{"code": "int function ( Context arg0 ) { WindowManager loc0 = ( WindowManager ) arg0 . getSystemService ( Context . WINDOW_SERVICE ) ; DisplayMetrics loc1 = new DisplayMetrics ( ) ; loc0 . getDefaultDisplay ( ) . getMetrics ( loc1 ) ; return loc1 . widthPixels ; }", "nl": "get screen width concode_field_sep PlaceHolder placeHolder concode_field_sep float dip2Dimension concode_elem_sep Bitmap snapShotWithoutStatusBar concode_elem_sep int getStatusHeight concode_elem_sep Bitmap snapShotWithStatusBar concode_elem_sep float toDimension concode_elem_sep int getScreenHeight"}
{"code": "double function ( ) { if ( operands . size ( ) == 1 && operators . isEmpty ( ) ) return operands . pop ( ) ; if ( operators . size ( ) == 1 ) { if ( operands . size ( ) == 2 ) { return ( ( Operator ) operators . pop ( ) ) . compute ( operands . pop ( ) , operands . pop ( ) ) ; } } throw new ExpressionException ( \"srini_string\" ) ; }", "nl": "gettotal : updated from project 1 @ 5 dec 2010 returns total on top of operands stack . throws exception that indicates that the input formula was not correct . concode_field_sep Stack<Double> operands concode_elem_sep Stack<OperationsInterface> operators concode_field_sep void addOperator concode_elem_sep int size concode_elem_sep void debugPrintStacks concode_elem_sep void clear concode_elem_sep void addGrouping concode_elem_sep void calculate concode_elem_sep void addOperand"}
{"code": "void function ( ) { }", "nl": "called once after the initial sorting finished . note : as of 3.8 a completion proposal computer can request that proposals are resorted . if such a computer is active , then this method will not be called . clients may override , the default implementation does nothing . concode_field_sep PlaceHolder placeHolder concode_field_sep int compare concode_elem_sep void beginSorting"}
{"code": "Location function ( String arg0 ) { return mockLocation ; }", "nl": "gets the container location concode_field_sep Location mockLocation concode_elem_sep JdbcContainerNameValidator jdbcContainerNameValidator concode_elem_sep JdbcBlobKeyValidator jdbcBlobKeyValidator concode_elem_sep Provider<BlobBuilder> blobBuilders concode_elem_sep JdbcService jdbcService concode_elem_sep BlobEntityToBlob blobEntityToBlob concode_field_sep void setContainerAccess concode_elem_sep ContainerAccess getContainerAccess concode_elem_sep void clearContainer concode_elem_sep void clearContainer concode_elem_sep Collection<String> getAllContainerNames concode_elem_sep boolean directoryExists concode_elem_sep String putDirectoryBlob concode_elem_sep Blob getBlob concode_elem_sep Iterable<String> getBlobKeysInsideContainer concode_elem_sep String putBlob concode_elem_sep void setBlobAccess concode_elem_sep boolean createContainerInLocation concode_elem_sep void removeBlob concode_elem_sep boolean blobExists concode_elem_sep void deleteContainer concode_elem_sep StorageMetadata getContainerMetadata concode_elem_sep long countBlobs concode_elem_sep BlobAccess getBlobAccess concode_elem_sep String getSeparator concode_elem_sep boolean containerExists concode_elem_sep void createDirectory concode_elem_sep void deleteDirectory"}
{"code": "DateTimeFieldType function ( ) { return iUpperLimit ; }", "nl": "gets the field type that represents the upper limit of comparison . concode_field_sep DateTimeFieldType iUpperLimit concode_elem_sep DateTimeFieldType iLowerLimit concode_elem_sep DateTimeComparator ALL_INSTANCE concode_elem_sep long serialVersionUID concode_elem_sep DateTimeComparator TIME_INSTANCE concode_elem_sep DateTimeComparator DATE_INSTANCE concode_field_sep DateTimeFieldType getLowerLimit concode_elem_sep int compare concode_elem_sep Object readResolve concode_elem_sep DateTimeComparator getDateOnlyInstance concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep String toString concode_elem_sep DateTimeComparator getInstance concode_elem_sep DateTimeComparator getInstance concode_elem_sep DateTimeComparator getInstance concode_elem_sep DateTimeComparator getTimeOnlyInstance"}
{"code": "boolean function ( List < GenPolynomial < C >> arg0 ) { return isGB ( 0 , arg0 ) ; }", "nl": "groebner base test . concode_field_sep Reduction<C> red concode_elem_sep boolean debug concode_elem_sep Logger logger concode_field_sep List<GenPolynomial<C>> minimalGB concode_elem_sep List<GenPolynomial<C>> GB concode_elem_sep ExtendedGB<C> extGB concode_elem_sep ExtendedGB<C> extGB concode_elem_sep boolean isReductionMatrix concode_elem_sep boolean isReductionMatrix"}
{"code": "void function ( InputStream arg0 , OutputStream arg1 ) { int loc0 = 0 ; while ( loc0 != - 1 ) { loc0 = arg0 . read ( fgBuffer , 0 , fgBuffer . length ) ; if ( loc0 != - 1 ) { arg1 . write ( fgBuffer , 0 , loc0 ) ; } } }", "nl": "copies all bytes in the given source stream to the given destination stream . neither streams are closed . concode_field_sep byte[] fgBuffer concode_field_sep String changeSeparator concode_elem_sep StringBuffer read concode_elem_sep StringBuffer read concode_elem_sep File getFileInPlugin concode_elem_sep void copy concode_elem_sep void unzip concode_elem_sep void write"}
{"code": "SearchResultGroup [ ] function ( SearchPattern arg0 , IJavaSearchScope arg1 , IProgressMonitor arg2 , RefactoringStatus arg3 ) { return internalSearch ( new SearchEngine ( ) , arg0 , arg1 , new CollectingSearchRequestor ( ) , arg2 , arg3 ) ; }", "nl": "performs a search and groups the resulting searchmatch es by searchresultgroup #getcompilationunit . concode_field_sep PlaceHolder placeHolder concode_field_sep ICompilationUnit[] findAffectedCompilationUnits concode_elem_sep ICompilationUnit[] findAffectedCompilationUnits concode_elem_sep boolean containsStatusEntry concode_elem_sep SearchResultGroup[] internalSearch concode_elem_sep void addStatusErrors concode_elem_sep SearchResultGroup[] groupByCu concode_elem_sep SearchResultGroup[] groupByCu concode_elem_sep SearchPattern createOrPattern"}
{"code": "int function ( String arg0 ) { int loc0 = getPosition ( ) ; try { this . write ( arg0 . getBytes ( \"srini_string\" ) ) ; } catch ( UnsupportedEncodingException loc1 ) { throw new BSONException ( \"srini_string\" , loc1 ) ; } this . write ( ( byte ) 0x00 ) ; return getPosition ( ) - loc0 ; }", "nl": "writes string to buffer as c-style string null-terminated concode_field_sep int BUFFER_DEFAULT_LENGTH concode_elem_sep int actualSize concode_elem_sep byte[] buffer concode_elem_sep int position concode_field_sep void writeInt concode_elem_sep void writeLong concode_elem_sep int getPosition concode_elem_sep byte[] getResult concode_elem_sep int getActualSize concode_elem_sep void ensureLength concode_elem_sep void write concode_elem_sep void write concode_elem_sep void write concode_elem_sep void setPosition concode_elem_sep void writeIntAt concode_elem_sep void writeDouble"}
{"code": "String function ( ) { return caller ; }", "nl": "gets the value of the caller property . concode_field_sep String caller concode_elem_sep String user concode_elem_sep String uuid concode_field_sep String getUser concode_elem_sep String getUuid concode_elem_sep void setCaller concode_elem_sep void setUser concode_elem_sep void setUuid"}
{"code": "Transceiver function ( URI arg0 ) { if ( \"srini_string\" . equals ( arg0 . getScheme ( ) ) ) return new HttpTransceiver ( arg0 . toURL ( ) ) ; else if ( \"srini_string\" . equals ( arg0 . getScheme ( ) ) ) return new SaslSocketTransceiver ( new InetSocketAddress ( arg0 . getHost ( ) , arg0 . getPort ( ) ) ) ; else throw new IOException ( \"srini_string\" + arg0 ) ; }", "nl": "create a client transceiver connecting to the provided uri . concode_field_sep PlaceHolder placeHolder concode_field_sep Server createServer"}
{"code": "ByteBuffer function ( Object arg0 ) { output . clear ( ) ; kryo . writeClassAndObject ( output , arg0 ) ; return ByteBuffer . wrap ( output . getBuffer ( ) , 0 , output . position ( ) ) ; }", "nl": "serializes the given object into a bytebuffer backed by the byte array returned by kryo serialization . concode_field_sep Output output concode_elem_sep Input input concode_elem_sep Kryo kryo concode_field_sep byte[] serialize concode_elem_sep Object deserialize concode_elem_sep Object deserialize"}
{"code": "LCM function ( ) { if ( singleton == null ) { try { singleton = new LCM ( ) ; } catch ( Exception loc0 ) { System . err . println ( \"srini_string\" + loc0 ) ; System . exit ( - 1 ) ; return null ; } } return singleton ; }", "nl": "retrieve a default instance of lcm using either the environment variable lcm_default_url or the default . if an exception occurs , system.exit -1 is called . concode_field_sep LCM singleton concode_elem_sep String regex concode_elem_sep Pattern pat concode_elem_sep LCMDataOutputStream encodeBuffer concode_elem_sep ArrayList<SubscriptionRecord> subscriptions concode_elem_sep LCMSubscriber lcsub concode_elem_sep HashMap<String,ArrayList<SubscriptionRecord>> subscriptionsMap concode_elem_sep boolean closed concode_elem_sep ArrayList<Provider> providers concode_field_sep void receiveMessage concode_elem_sep void subscribe concode_elem_sep void unsubscribe concode_elem_sep int getNumSubscriptions concode_elem_sep void publish concode_elem_sep void publish concode_elem_sep void publish concode_elem_sep void messageReceived concode_elem_sep void main concode_elem_sep void close concode_elem_sep void subscribeAll"}
{"code": "String function ( String arg0 ) { if ( fgMaxMessageLength != - 1 && arg0 . length ( ) > fgMaxMessageLength ) { arg0 = arg0 . substring ( 0 , fgMaxMessageLength ) + \"srini_string\" ; } return arg0 ; }", "nl": "truncates a string to the maximum length . concode_field_sep boolean fgFilterStack concode_elem_sep String SUITE_METHODNAME concode_elem_sep int fgMaxMessageLength concode_elem_sep boolean fLoading concode_elem_sep Properties fPreferences concode_field_sep void addError concode_elem_sep boolean showStackRaw concode_elem_sep void startTest concode_elem_sep String extractClassName concode_elem_sep void readPreferences concode_elem_sep void testStarted concode_elem_sep Test getTest concode_elem_sep String elapsedTimeAsString concode_elem_sep void addFailure concode_elem_sep boolean useReloadingTestSuiteLoader concode_elem_sep void testFailed concode_elem_sep void setPreferences concode_elem_sep Class<?> loadSuiteClass concode_elem_sep void savePreferences concode_elem_sep void runFailed concode_elem_sep boolean filterLine concode_elem_sep void clearStatus concode_elem_sep String processArguments concode_elem_sep String getPreference concode_elem_sep int getPreference concode_elem_sep String getFilteredTrace concode_elem_sep String getFilteredTrace concode_elem_sep Properties getPreferences concode_elem_sep void setLoading concode_elem_sep File getPreferencesFile concode_elem_sep void setPreference concode_elem_sep void endTest concode_elem_sep void testEnded"}
{"code": "void function ( InputStream arg0 ) { if ( arg0 == null ) { return ; } try { arg0 . close ( ) ; } catch ( IOException loc0 ) { throw new RuntimeException ( \"srini_string\" , loc0 ) ; } }", "nl": "close inputstream concode_field_sep PlaceHolder placeHolder concode_field_sep Drawable bitmapToDrawable concode_elem_sep Bitmap drawableToBitmap concode_elem_sep Bitmap byteToBitmap concode_elem_sep Bitmap getBitmapFromUrl concode_elem_sep Bitmap getBitmapFromUrl concode_elem_sep byte[] drawableToByte concode_elem_sep Bitmap scaleImage concode_elem_sep byte[] bitmapToByte concode_elem_sep Bitmap scaleImageTo concode_elem_sep Drawable byteToDrawable concode_elem_sep Drawable getDrawableFromUrl concode_elem_sep Drawable getDrawableFromUrl concode_elem_sep InputStream getInputStreamFromUrl concode_elem_sep InputStream getInputStreamFromUrl"}
{"code": "PrintWriter function ( ) { throw new SQLException ( Resources . getMessage ( \"srini_string\" ) ) ; }", "nl": "always throws a sqlexception . not supported . concode_field_sep String password concode_elem_sep Log log concode_elem_sep String driverClassName concode_elem_sep String jdbcURL concode_elem_sep String userName concode_field_sep void setPassword concode_elem_sep Connection getConnection concode_elem_sep Connection getConnection concode_elem_sep void setDriverClassName concode_elem_sep void setLoginTimeout concode_elem_sep void setLogWriter concode_elem_sep void setUserName concode_elem_sep void setJdbcURL concode_elem_sep int getLoginTimeout"}
{"code": "Criteria function ( String arg0 ) { checkComplete ( ) ; return new Criteria ( this . criteriaChain , ValueNode . toValueNode ( prefixPath ( arg0 ) ) ) ; }", "nl": "static factory method to create a criteria using the provided key concode_field_sep List<Criteria> criteriaChain concode_elem_sep ValueNode left concode_elem_sep ValueNode right concode_elem_sep RelationalOperator criteriaType concode_field_sep Criteria lt concode_elem_sep Criteria type concode_elem_sep String prefixPath concode_elem_sep Criteria empty concode_elem_sep void checkComplete concode_elem_sep Criteria nin concode_elem_sep Criteria nin concode_elem_sep Criteria gte concode_elem_sep Criteria create concode_elem_sep Criteria where concode_elem_sep Criteria where concode_elem_sep Criteria lte concode_elem_sep Criteria all concode_elem_sep Criteria all concode_elem_sep boolean apply concode_elem_sep Criteria in concode_elem_sep Criteria in concode_elem_sep Criteria is concode_elem_sep Criteria parse concode_elem_sep Criteria eq concode_elem_sep Criteria gt concode_elem_sep Criteria matches concode_elem_sep Criteria regex concode_elem_sep Criteria contains concode_elem_sep Criteria size concode_elem_sep Criteria ne concode_elem_sep Criteria exists concode_elem_sep String toString concode_elem_sep Collection<RelationalExpressionNode> toRelationalExpressionNodes concode_elem_sep Criteria notEmpty"}
{"code": "Reader function ( IMember arg0 , boolean arg1 ) { Reader loc0 = internalGetContentReader ( arg0 ) ; if ( loc0 != null || ! ( arg1 && ( arg0 . getElementType ( ) == IJavaElement . METHOD ) ) ) return loc0 ; return findDocInHierarchy ( ( IMethod ) arg0 , false , false ) ; }", "nl": "gets a reader for an imember 's javadoc comment content from the source attachment . the content does contain only the text from the comment without the javadoc leading star characters . returns null if the member does not contain a javadoc comment or if no source is available . concode_field_sep PlaceHolder placeHolder concode_field_sep Reader findDocInHierarchy concode_elem_sep boolean containsOnlyInheritDoc concode_elem_sep Reader getHTMLContentReader concode_elem_sep Reader getHTMLContentReader concode_elem_sep Reader internalGetContentReader"}
{"code": "Tag function ( Tag arg0 , Class arg1 ) { while ( arg0 != null ) { if ( arg1 . isInstance ( arg0 ) ) { return arg0 ; } arg0 = arg0 . getParent ( ) ; } return null ; }", "nl": "searches up the parent hierarchy from the given tag for a tag of the given type concode_field_sep Tag parent concode_elem_sep JellyContext context concode_elem_sep boolean hasTrimmed concode_elem_sep Script body concode_elem_sep boolean escapeText concode_elem_sep Boolean shouldTrim concode_field_sep Tag getParent concode_elem_sep boolean isTrim concode_elem_sep Script getBody concode_elem_sep void setBody concode_elem_sep void invokeBody concode_elem_sep boolean isEscapeText concode_elem_sep String getBodyText concode_elem_sep String getBodyText concode_elem_sep void setEscapeText concode_elem_sep void setTrim concode_elem_sep void setContext concode_elem_sep void setParent concode_elem_sep JellyContext getContext concode_elem_sep void trimBody"}
{"code": "int function ( ) { return numberOfReplicationTries ; }", "nl": "replication will be tried numberofreplicationtimes before target contact is given up . concode_field_sep int numberOfReplicates concode_elem_sep long timeToLiveForContacts concode_elem_sep int numberOfPingTries concode_elem_sep long timeBetweenRootPings concode_elem_sep long timeBetweenReplicationChecks concode_elem_sep int numberOfReplicationTries concode_elem_sep int minimumNumberOfReplicates concode_field_sep int getNumberOfPingTries concode_elem_sep void setNumberOfPingTries concode_elem_sep int getNumberOfReplicates concode_elem_sep long getTimeBetweenReplicationChecks concode_elem_sep void setTimeBetweenRootPings concode_elem_sep void setMinimumNumberOfReplicates concode_elem_sep long getTimeToLiveForContacts concode_elem_sep void setNumberOfReplicates concode_elem_sep int getMinimumNumberOfReplicates concode_elem_sep void setTimeToLiveForContacts concode_elem_sep void setTimeBetweenReplicationChecks concode_elem_sep long getTimeBetweenRootPings concode_elem_sep void setNumberOfReplicationTries"}
{"code": "String function ( String arg0 ) { return String . valueOf ( getLowerBound ( arg0 . toCharArray ( ) ) ) ; }", "nl": "returns the lower bound of a type signature . returns the null type signature if signature is a wildcard or upper bound ? extends t ; returns the signature of the type t of a lower bound ? super t or signature itself if it is not a bound signature . concode_field_sep String NULL_TYPE_SIGNATURE concode_elem_sep String OBJECT_SIGNATURE concode_elem_sep char[] NULL_TYPE_SIGNATURE_ARRAY concode_elem_sep char[] OBJECT_SIGNATURE_ARRAY concode_field_sep String qualifySignature concode_elem_sep int typeEnd concode_elem_sep char[] unboundedSignature concode_elem_sep String stripSignatureToFQN concode_elem_sep String getUpperBound concode_elem_sep char[] getUpperBound concode_elem_sep boolean isJavaLangObject concode_elem_sep int indexOf concode_elem_sep char[] fix83600"}
{"code": "boolean function ( Object arg0 ) { return ( iPredicate1 . evaluate ( arg0 ) || iPredicate2 . evaluate ( arg0 ) ) ; }", "nl": "evaluates the predicate returning true if either predicate returns true . concode_field_sep Predicate iPredicate2 concode_elem_sep long serialVersionUID concode_elem_sep Predicate iPredicate1 concode_field_sep Predicate getInstance concode_elem_sep Predicate[] getPredicates"}
{"code": "GenMatrix < C > function ( BigInteger arg0 ) { C loc0 = coFac . fromInteger ( arg0 ) ; return ONE . scalarMultiply ( loc0 ) ; }", "nl": "get the matrix for a. concode_field_sep int blocksize concode_elem_sep GenMatrix<C> ZERO concode_elem_sep int DEFAULT_BSIZE concode_elem_sep GenMatrix<C> ONE concode_elem_sep Logger logger concode_elem_sep RingFactory<C> coFac concode_elem_sep float density concode_elem_sep int rows concode_elem_sep int cols concode_elem_sep Random random concode_elem_sep float DEFAULT_DENSITY concode_field_sep GenMatrix<C> randomUpper concode_elem_sep GenMatrix<C> randomUpper concode_elem_sep GenMatrix<C> randomLower concode_elem_sep GenMatrix<C> randomLower concode_elem_sep GenMatrixRing<C> product concode_elem_sep GenMatrix<C> fromList concode_elem_sep boolean isField concode_elem_sep boolean isCommutative concode_elem_sep GenMatrix<C> parse concode_elem_sep GenMatrix<C> parse concode_elem_sep java.math.BigInteger characteristic concode_elem_sep GenMatrix<C> random concode_elem_sep GenMatrix<C> random concode_elem_sep GenMatrix<C> random concode_elem_sep GenMatrix<C> random concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep GenMatrix<C> getONE concode_elem_sep GenMatrix<C> getZERO concode_elem_sep String toString concode_elem_sep boolean isAssociative concode_elem_sep GenMatrixRing<C> transpose concode_elem_sep GenMatrix<C> copy"}
{"code": "void function ( final IExecutionDataVisitor arg0 ) { this . executionDataVisitor = arg0 ; }", "nl": "sets an listener for execution data . concode_field_sep boolean firstBlock concode_elem_sep CompactDataInput in concode_elem_sep ISessionInfoVisitor sessionInfoVisitor concode_elem_sep IExecutionDataVisitor executionDataVisitor concode_field_sep boolean readBlock concode_elem_sep boolean read concode_elem_sep void readSessionInfo concode_elem_sep void readExecutionData concode_elem_sep void setSessionInfoVisitor concode_elem_sep void readHeader"}
{"code": "void function ( RichMediaActivation arg0 ) { richMediaSettings . put ( PdfName . ACTIVATION , arg0 ) ; }", "nl": "sets the richmediaactivation dictionary specifying the style of presentation , default script behavior , default view information , and animation style when the annotation is activated . part of the richmediasettings . concode_field_sep PdfDictionary richMediaSettings concode_elem_sep PdfArray configurations concode_elem_sep PdfArray views concode_elem_sep HashMap<String,PdfIndirectReference> assetsmap concode_elem_sep PdfDictionary richMediaContent concode_elem_sep PdfIndirectReference richMediaContentReference concode_elem_sep PdfWriter writer concode_elem_sep PdfAnnotation annot concode_field_sep PdfIndirectReference addAsset concode_elem_sep PdfIndirectReference addAsset concode_elem_sep PdfIndirectReference getRichMediaContentReference concode_elem_sep PdfAnnotation createAnnotation concode_elem_sep PdfIndirectReference addConfiguration concode_elem_sep PdfIndirectReference addConfiguration concode_elem_sep PdfIndirectReference addView concode_elem_sep PdfIndirectReference addView concode_elem_sep void setDeactivation"}
{"code": "Local < C > function ( long arg0 ) { return new Local < C > ( this , ring . fromInteger ( arg0 ) ) ; }", "nl": "get a local element from a long value . concode_field_sep Logger logger concode_elem_sep Ideal<C> ideal concode_elem_sep GenPolynomialRing<C> ring concode_elem_sep int isField concode_field_sep Local<C> random concode_elem_sep Local<C> random concode_elem_sep Local<C> random concode_elem_sep int hashCode concode_elem_sep boolean isField concode_elem_sep boolean equals concode_elem_sep Local<C> getONE concode_elem_sep boolean isCommutative concode_elem_sep Local<C> getZERO concode_elem_sep boolean isAssociative concode_elem_sep String toString concode_elem_sep Local<C> parse concode_elem_sep Local<C> parse concode_elem_sep Local<C> copy concode_elem_sep java.math.BigInteger characteristic"}
{"code": "byte [ ] function ( InputStream arg0 , String arg1 , String arg2 ) { MessageDigest loc0 = getMessageDigest ( arg1 , arg2 ) ; return digest ( arg0 , loc0 ) ; }", "nl": "creates a hash using a specific digest algorithm and a provider . concode_field_sep String SHA1 concode_elem_sep HashMap<String,String> digestNames concode_elem_sep HashMap<String,String> allowedDigests concode_elem_sep String SHA384 concode_elem_sep HashMap<String,String> fixNames concode_elem_sep String SHA256 concode_elem_sep String RIPEMD160 concode_elem_sep String SHA512 concode_field_sep MessageDigest getMessageDigestFromOid concode_elem_sep MessageDigest getMessageDigest concode_elem_sep String getAllowedDigests concode_elem_sep String getDigest concode_elem_sep String normalizeDigestName"}
{"code": "void function ( ) { getIterator ( ) . remove ( ) ; }", "nl": "removes the last returned element from the collection that spawned the underlying iterator . concode_field_sep Iterator iterator concode_field_sep Object next concode_elem_sep Iterator getIterator concode_elem_sep boolean hasNext concode_elem_sep void setIterator"}
{"code": "void function ( ) { innerClient = new DefaultInternalKrbClient ( krbSetting ) ; innerClient . init ( ) ; }", "nl": "init the client . concode_field_sep Logger LOG concode_elem_sep KrbSetting krbSetting concode_elem_sep KOptions commonOptions concode_elem_sep InternalKrbClient innerClient concode_elem_sep KrbConfig krbConfig concode_field_sep void setTimeout concode_elem_sep void setKdcHost concode_elem_sep KrbConfig getKrbConfig concode_elem_sep TgtTicket requestTgt concode_elem_sep void setKdcRealm concode_elem_sep void storeTicket concode_elem_sep KrbSetting getSetting concode_elem_sep SgtTicket requestSgt concode_elem_sep SgtTicket requestSgt concode_elem_sep void setKdcUdpPort concode_elem_sep void setKdcTcpPort concode_elem_sep void setAllowUdp concode_elem_sep void setAllowTcp"}
{"code": "Rectangle function ( Object arg0 ) { Rectangle loc0 = new Rectangle ( 0 , 0 , 0 , 0 ) ; try { Method loc1 = arg0 . getClass ( ) . getDeclaredMethod ( \"srini_string\" , null ) ; loc1 . setAccessible ( true ) ; loc0 = ( Rectangle ) loc1 . invoke ( arg0 , null ) ; } catch ( Throwable loc1 ) { } return loc0 ; }", "nl": "common concode_field_sep MacExtensions MacExt concode_field_sep Rectangle win32_getBounds concode_elem_sep Rectangle win32_getBounds concode_elem_sep Rectangle carbon_getBounds concode_elem_sep Rectangle carbon_getBounds concode_elem_sep MenuItem[] getItems concode_elem_sep Menu[] getMenus concode_elem_sep Menu[] getMenus concode_elem_sep boolean isMacAccessibilityDisabled concode_elem_sep boolean parentIsControl concode_elem_sep void gtk_getBounds concode_elem_sep Rectangle gtk_getBounds concode_elem_sep Rectangle gtk_getBounds concode_elem_sep boolean isSubMenu concode_elem_sep Rectangle motif_getBounds concode_elem_sep Rectangle motif_getBounds concode_elem_sep int SendMessage concode_elem_sep int SendMessage"}
{"code": "void function ( ) { final String loc0 = \"srini_string\" ; createDocument ( loc0 , 2 , 10 , \"srini_string\" , true , true ) ; }", "nl": "creates two tables . the second table has 1 header row and it should skip the first header . 1 line of table 2 should be on page 1 , the rest on page 2 . concode_field_sep String outFolder concode_elem_sep String cmpFolder concode_field_sep void testKeepRowsTogetherInCombinationWithHeaders concode_elem_sep PdfPTable createTable concode_elem_sep void setUp concode_elem_sep void createDocument concode_elem_sep void testKeepRowsTogetherWithoutHeader concode_elem_sep void compareDocuments"}
{"code": "IWidgetState function ( Widget arg0 ) { return put ( arg0 , WidgetState . create ( arg0 ) ) ; }", "nl": "put this widget and its current state into the map concode_field_sep Map _map concode_field_sep IWidgetState get concode_elem_sep WidgetStateMap create"}
{"code": "String function ( ) { return fValue ; }", "nl": "returns the actual string value . concode_field_sep Region fTagPosition concode_elem_sep String TAG_POSTFIX concode_elem_sep AccessorClassReference fAccessorClassReference concode_elem_sep boolean fIsEclipseNLS concode_elem_sep int TAG_PREFIX_LENGTH concode_elem_sep String TAG_PREFIX concode_elem_sep int fIndex concode_elem_sep int TAG_POSTFIX_LENGTH concode_elem_sep String fValue concode_elem_sep Region fPosition concode_field_sep Region getPosition concode_elem_sep boolean isEclipseNLS concode_elem_sep boolean hasTag concode_elem_sep void setAccessorClassReference concode_elem_sep AccessorClassReference getAccessorClassReference concode_elem_sep void setValue concode_elem_sep void setTagPosition concode_elem_sep String createTagText concode_elem_sep String getTagText concode_elem_sep String toString concode_elem_sep Region getTagPosition"}
{"code": "void function ( ) { if ( ! isActive ( ) ) return ; progressIntervals ( Simulator . getCurrentTime ( ) ) ; }", "nl": "has to be called before any event is being processed to check if the next interval has begun . concode_field_sep long end concode_elem_sep String outputFile concode_elem_sep FileAction fileAction concode_elem_sep List<Metric> metrics concode_elem_sep long intervalCounter concode_elem_sep ResultsWriter writer concode_elem_sep Metric time concode_elem_sep long interval concode_elem_sep Logger logger concode_elem_sep long start concode_field_sep void declareMetrics concode_elem_sep List<String> getMeasurementsFor concode_elem_sep void setAction concode_elem_sep void start concode_elem_sep void addMetric concode_elem_sep boolean isActive concode_elem_sep void setOutputFile concode_elem_sep List<String> getAllMetricsNames concode_elem_sep long timeFromIntervalCount concode_elem_sep void stop concode_elem_sep void setInterval concode_elem_sep void setStart concode_elem_sep void setEnd concode_elem_sep void progressIntervals"}
{"code": "Residue < C > function ( java . math . BigInteger arg0 ) { return new Residue < C > ( this , ring . fromInteger ( arg0 ) ) ; }", "nl": "get a residue element from a biginteger value . concode_field_sep Ideal<C> ideal concode_elem_sep Logger logger concode_elem_sep GreatestCommonDivisor<C> engine concode_elem_sep GenPolynomialRing<C> ring concode_elem_sep int isField concode_field_sep Residue<C> random concode_elem_sep Residue<C> random concode_elem_sep Residue<C> random concode_elem_sep int hashCode concode_elem_sep boolean isField concode_elem_sep boolean equals concode_elem_sep Residue<C> getONE concode_elem_sep boolean isCommutative concode_elem_sep Residue<C> getZERO concode_elem_sep boolean isAssociative concode_elem_sep String toString concode_elem_sep Residue<C> parse concode_elem_sep Residue<C> parse concode_elem_sep Residue<C> copy concode_elem_sep java.math.BigInteger characteristic"}
{"code": "void function ( final String arg0 ) { synchronized ( resourceAdapterRepositoryIdentifiers ) { resourceAdapterRepositoryIdentifiers . remove ( arg0 ) ; } }", "nl": "clears the mapping between the raname and the resource adapter identifier , with which the resource adapter is registered with the org.jboss.jca.core.spi.rar.resourceadapterrepository subsequent calls to #getregisteredresourceadapteridentifier string with the passed raname returnnull concode_field_sep ServiceName RESOURCE_ADAPTER_SERVICE_PREFIX concode_elem_sep ServiceName BOOTSTRAP_CONTEXT_SERVICE concode_elem_sep ServiceName RESOURCE_ADAPTER_DEPLOYER_SERVICE_PREFIX concode_elem_sep ServiceName CONNECTION_VALIDATOR_SERVICE concode_elem_sep ServiceName TRANSACTION_INTEGRATION_SERVICE concode_elem_sep ServiceName ARCHIVE_VALIDATION_CONFIG_SERVICE concode_elem_sep ServiceName RESOURCEADAPTERS_SERVICE concode_elem_sep ServiceName DATASOURCES_SERVICE concode_elem_sep ServiceName TRACER_CONFIG_SERVICE concode_elem_sep ServiceName CCM_SERVICE concode_elem_sep String STATISTICS_SUFFIX concode_elem_sep ServiceName NON_JTA_DS_RA_REPOSITORY_SERVICE concode_elem_sep ServiceName DISTRIBUTED_WORKMANAGER_STATS_SERVICE concode_elem_sep ServiceName IRONJACAMAR_RESOURCE concode_elem_sep ServiceName BEAN_VALIDATION_CONFIG_SERVICE concode_elem_sep ServiceName NON_TX_CCM_SERVICE concode_elem_sep ServiceName IDLE_REMOVER_SERVICE concode_elem_sep ServiceName RESOURCE_ADAPTER_REGISTRY_SERVICE concode_elem_sep Map<String,String> resourceAdapterRepositoryIdentifiers concode_elem_sep ServiceName RA_REPOSITORY_SERVICE concode_elem_sep ServiceName JDBC_DRIVER_REGISTRY_SERVICE concode_elem_sep ServiceName RESOURCE_ADAPTER_ACTIVATOR_SERVICE concode_elem_sep ServiceName RA_SERVICE concode_elem_sep ServiceName INACTIVE_RESOURCE_ADAPTER_SERVICE concode_elem_sep ServiceName WORKMANAGER_STATS_SERVICE concode_elem_sep ServiceName RESOURCE_ADAPTER_DEPLOYMENT_SERVICE_PREFIX concode_elem_sep ServiceName RESOURCEADAPTERS_SUBSYSTEM_SERVICE concode_elem_sep ServiceName CONNECTOR_CONFIG_SERVICE concode_elem_sep ServiceName WORKMANAGER_SERVICE concode_elem_sep ServiceName IRONJACAMAR_MDR concode_elem_sep ServiceName MANAGEMENT_REPOSITORY_SERVICE concode_field_sep void registerResourceAdapterIdentifier concode_elem_sep T notNull concode_elem_sep ServiceName getDeploymentServiceName concode_elem_sep ServiceName getDeploymentServiceName concode_elem_sep ServiceName getDeploymentServiceName concode_elem_sep String getRegisteredResourceAdapterIdentifier concode_elem_sep ServiceName getResourceAdapterServiceName concode_elem_sep String stripDotRarSuffix"}
{"code": "void function ( double arg0 , double arg1 ) { x1 += arg0 ; y1 += arg1 ; x2 += arg0 ; y2 += arg1 ; Canvas . getInstance ( ) . repaint ( ) ; }", "nl": "moves this line by a given amount . concode_field_sep double y1 concode_elem_sep double x1 concode_elem_sep double y2 concode_elem_sep double x2 concode_elem_sep Color color concode_field_sep int getX concode_elem_sep int getHeight concode_elem_sep int getY concode_elem_sep void grow concode_elem_sep void setColor concode_elem_sep String toString concode_elem_sep int getWidth concode_elem_sep void draw concode_elem_sep void paintShape"}
{"code": "void function ( double arg0 ) { VectorXYZ loc0 = getViewDirection ( ) ; up = up . rotateVec ( arg0 , loc0 ) ; }", "nl": "rolls the camera concode_field_sep VectorXYZ pos concode_elem_sep VectorXYZ lookAt concode_elem_sep VectorXYZ up concode_field_sep void moveMapRight concode_elem_sep void setCamera concode_elem_sep void setCamera concode_elem_sep void moveForward concode_elem_sep void move concode_elem_sep void move concode_elem_sep VectorXYZ getUp concode_elem_sep void yaw concode_elem_sep void moveMapUp concode_elem_sep void setPos concode_elem_sep void setPos concode_elem_sep void mapPitch concode_elem_sep VectorXYZ getRight concode_elem_sep void setLookAt concode_elem_sep void setLookAt concode_elem_sep VectorXYZ getViewDirection concode_elem_sep VectorXYZ getPos concode_elem_sep void moveRight concode_elem_sep VectorXYZ getLookAt concode_elem_sep void moveMapForward concode_elem_sep String toString concode_elem_sep void pitch concode_elem_sep void rotateY concode_elem_sep void moveUp"}
{"code": "void function ( TreeNode arg0 , TreeNode arg1 ) { left = arg0 ; right = arg1 ; }", "nl": "set the children of the tree concode_field_sep TreeNode right concode_elem_sep int value concode_elem_sep TreeNode left concode_field_sep int addTree concode_elem_sep TreeNode createTree"}
{"code": "DoubleListIterator function ( DoubleListIterator arg0 ) { if ( null == arg0 ) { throw new NullPointerException ( ) ; } return UnmodifiableDoubleListIterator . wrap ( arg0 ) ; }", "nl": "returns an unmodifiable version of the given non-null doublelistiterator . concode_field_sep DoubleListIterator EMPTY_DOUBLE_LIST_ITERATOR concode_elem_sep DoubleIterator EMPTY_DOUBLE_ITERATOR concode_elem_sep DoubleList EMPTY_DOUBLE_LIST concode_field_sep DoubleList unmodifiableDoubleList concode_elem_sep DoubleList getEmptyDoubleList concode_elem_sep DoubleIterator singletonDoubleIterator concode_elem_sep DoubleList singletonDoubleList concode_elem_sep DoubleIterator unmodifiableDoubleIterator concode_elem_sep DoubleIterator getEmptyDoubleIterator concode_elem_sep DoubleListIterator singletonDoubleListIterator concode_elem_sep DoubleListIterator getEmptyDoubleListIterator"}
{"code": "int function ( ) { return go ( false ) ; }", "nl": "outputs the lines to the document . it is equivalent to go false . concode_field_sep Float curCharSpace concode_elem_sep float leading concode_elem_sep int NO_MORE_COLUMN concode_elem_sep int alignment concode_elem_sep String splittedChunkText concode_elem_sep int NO_MORE_TEXT concode_elem_sep PdfChunk currentStandbyChunk concode_elem_sep ArrayList<PdfChunk> chunks concode_elem_sep int maxLines concode_elem_sep float startY concode_elem_sep PdfContentByte text concode_elem_sep int currentChunkMarker concode_elem_sep float startX concode_elem_sep float height concode_field_sep int getAlignment concode_elem_sep void setAlignment concode_elem_sep void setVerticalLayout concode_elem_sep void setOrigin concode_elem_sep void addText concode_elem_sep void addText concode_elem_sep PdfLine createLine concode_elem_sep void setMaxLines concode_elem_sep int getMaxLines concode_elem_sep void setHeight concode_elem_sep float getHeight concode_elem_sep void setLeading concode_elem_sep void writeLine concode_elem_sep float getOriginY concode_elem_sep float getLeading concode_elem_sep float getOriginX concode_elem_sep void shortenChunkArray"}
{"code": "void function ( ) { fileSpec = \"srini_string\" ; }", "nl": "called when the document starts to be parsed . concode_field_sep Stack<String> fieldNames concode_elem_sep HashMap<String,List<String>> listFields concode_elem_sep boolean foundRoot concode_elem_sep HashMap<String,String> fields concode_elem_sep Stack<String> fieldValues concode_elem_sep String fileSpec concode_field_sep HashMap<String,String> getFields concode_elem_sep void endElement concode_elem_sep List<String> getListValues concode_elem_sep void startElement concode_elem_sep String getFieldValue concode_elem_sep String getField concode_elem_sep void text concode_elem_sep void endDocument concode_elem_sep String getFileSpec"}
{"code": "void function ( double [ ] arg0 ) { _list . toNativeArray ( arg0 , 0 , size ( ) ) ; }", "nl": "copies a slice of the list into a native array . note that this will not pop them out of the stack . concode_field_sep TDoubleArrayList _list concode_elem_sep int DEFAULT_CAPACITY concode_field_sep double pop concode_elem_sep int size concode_elem_sep void clear concode_elem_sep void reset concode_elem_sep void push concode_elem_sep double peek"}
{"code": "boolean function ( String arg0 , boolean arg1 ) { return updateClientMembership ( PREF_HIDDEN_CLIENT_GUIDS , hiddenClients , arg0 , arg1 ) ; }", "nl": "mark a client as hidden . concode_field_sep String selectedClient concode_elem_sep String PREF_COLLAPSED_CLIENT_GUIDS concode_elem_sep SharedPreferences sharedPrefs concode_elem_sep String PREF_HIDDEN_CLIENT_GUIDS concode_elem_sep Set<String> collapsedClients concode_elem_sep Set<String> hiddenClients concode_elem_sep String PREF_SELECTED_CLIENT_GUID concode_field_sep boolean updateClientMembership concode_elem_sep boolean isClientCollapsed concode_elem_sep void setClientAsSelected concode_elem_sep boolean isClientHidden concode_elem_sep boolean setClientCollapsed concode_elem_sep Set<String> getStringSet"}
{"code": "boolean function ( CanVID arg0 ) { if ( VID . size ( ) != arg0 . getVIDList ( ) . size ( ) ) return false ; for ( int loc0 = 0 ; loc0 < VID . size ( ) - 1 ; loc0 ++ ) { if ( ! VID . get ( loc0 ) . toString ( ) . equals ( arg0 . getVIDList ( ) . get ( loc0 ) . toString ( ) ) ) return false ; } return true ; }", "nl": "compares two canvid and if all value until the n-1 number are common the return value is true . so it is true , if all parents are common concode_field_sep List<String> VID concode_field_sep boolean inBetween concode_elem_sep List<String> listCommon concode_elem_sep boolean lower concode_elem_sep int numberCommon concode_elem_sep void addToVID concode_elem_sep boolean allZero concode_elem_sep void removeFromList concode_elem_sep String einzelnToString concode_elem_sep boolean allOne concode_elem_sep List<String> getVIDList concode_elem_sep String toString concode_elem_sep void setVIDList concode_elem_sep boolean higher"}
{"code": "void function ( TestResult arg0 ) { for ( Enumeration loc0 = tests ( ) ; loc0 . hasMoreElements ( ) ; ) { if ( arg0 . shouldStop ( ) ) break ; Test loc1 = ( Test ) loc0 . nextElement ( ) ; runTest ( loc1 , arg0 ) ; } }", "nl": "runs the tests and collects their result in a testresult . concode_field_sep String fName concode_elem_sep Vector fTests concode_field_sep void setName concode_elem_sep int testCount concode_elem_sep void addTestSuite concode_elem_sep String getName concode_elem_sep void addTestMethod concode_elem_sep boolean isTestMethod concode_elem_sep Test createTest concode_elem_sep Test testAt concode_elem_sep Enumeration tests concode_elem_sep String exceptionToString concode_elem_sep Constructor getTestConstructor concode_elem_sep Test warning concode_elem_sep void addTest concode_elem_sep String toString concode_elem_sep int countTestCases concode_elem_sep boolean isPublicTestMethod concode_elem_sep void runTest"}
{"code": "boolean function ( ) { return pnpEnabled ; }", "nl": "retrieves the pnpenabled value . concode_field_sep long signature1 concode_elem_sep int productID concode_elem_sep String manufacturer concode_elem_sep int vendorID concode_elem_sep long version concode_elem_sep long signature2 concode_elem_sep String productDescription concode_elem_sep String serialNumber concode_elem_sep int MAX_HEADER_LENGTH concode_elem_sep String manufacturerID concode_elem_sep boolean remoteWakeupCapable concode_elem_sep boolean pnpEnabled concode_elem_sep int maxPower concode_elem_sep boolean selfPowered concode_field_sep long getSignature2 concode_elem_sep void setProductID concode_elem_sep void setPnpEnabled concode_elem_sep void setManufacturer concode_elem_sep void setMaxPower concode_elem_sep void setProductDescription concode_elem_sep String getManufacturer concode_elem_sep void setSelfPowered concode_elem_sep long getSignature1 concode_elem_sep void setManufacturerID concode_elem_sep boolean isRemoteWakeupCapable concode_elem_sep String getManufacturerID concode_elem_sep void validate concode_elem_sep int getMaxPower concode_elem_sep long getVersion concode_elem_sep void setSignature1 concode_elem_sep String getSerialNumber concode_elem_sep void setSerialNumber concode_elem_sep void setVersion concode_elem_sep void setSignature2 concode_elem_sep String getProductDescription concode_elem_sep int getProductID concode_elem_sep boolean isSelfPowered concode_elem_sep void setRemoteWakeupCapable concode_elem_sep void setVendorID concode_elem_sep int getVendorID"}
{"code": "GenVector < C > function ( C arg0 ) { ArrayList < C > loc0 = new ArrayList < C > ( modul . cols ) ; for ( C loc1 : val ) { C loc2 = loc1 . multiply ( arg0 ) ; loc0 . add ( loc2 ) ; } return new GenVector < C > ( modul , loc0 ) ; }", "nl": "product of this vector with scalar . concode_field_sep List<C> val concode_elem_sep Logger logger concode_elem_sep GenVectorModul<C> modul concode_field_sep int signum concode_elem_sep GenVector<C> leftLinearCombination concode_elem_sep GenVector<C> rightScalarProduct concode_elem_sep GenVector<C> subtract concode_elem_sep GenVector<C> sum concode_elem_sep GenVector<C> linearCombination concode_elem_sep GenVector<C> linearCombination concode_elem_sep GenVector<C> linearCombination concode_elem_sep int compareTo concode_elem_sep GenVector<C> leftScalarMultiply concode_elem_sep C scalarProduct concode_elem_sep GenVector<C> scalarProduct concode_elem_sep GenVector<C> abs concode_elem_sep int hashCode concode_elem_sep GenVector<C> negate concode_elem_sep boolean equals concode_elem_sep GenVector<C> clone concode_elem_sep boolean isZERO concode_elem_sep String toString"}
{"code": "void function ( final Collection < ? extends K > arg0 , final Predicate < ? super K > arg1 ) { for ( final K loc0 : arg0 ) { put ( loc0 , null , arg1 , null ) ; } }", "nl": "puts the given collection of keys into this map according to the contract of #put object , object , predicate . the values will be set to null . the keys are added in the order of the collection 's iterator . each key of keys is tested individually with keypredicate and can be added only if the predicate holds . concode_field_sep SortedMap<K,V> kSmallest concode_elem_sep int k concode_field_sep boolean containsKey concode_elem_sep Collection<V> values concode_elem_sep void clear concode_elem_sep boolean isInRange concode_elem_sep boolean put concode_elem_sep boolean put concode_elem_sep boolean put concode_elem_sep V remove concode_elem_sep boolean containsValue concode_elem_sep K getMinKey concode_elem_sep K getMaxKey concode_elem_sep int size concode_elem_sep K firstKey concode_elem_sep V get concode_elem_sep void setAllValues concode_elem_sep K lastKey concode_elem_sep String toString concode_elem_sep Set<K> keySet"}
{"code": "Coords function ( ) { return this . position . getTopoCoords ( ) ; }", "nl": "topologische position concode_field_sep long serialVersionUID concode_elem_sep PositionInfo position concode_elem_sep HashSet<Edge<TNode,TEdge>> edges concode_elem_sep VisualGraph<TNode,TEdge> graph concode_field_sep void setGraph concode_elem_sep void setPos concode_elem_sep void unsetGraph concode_elem_sep VisualGraph<TNode,TEdge> getGraph concode_elem_sep PositionInfo getPositionInfo concode_elem_sep Color getColor concode_elem_sep Coords getSchematicPosition concode_elem_sep void iterate"}
{"code": "int function ( String arg0 ) { Integer loc0 = ( Integer ) _seen . get ( arg0 ) ; if ( loc0 == null ) { loc0 = new Integer ( 0 ) ; } else { loc0 = new Integer ( loc0 . intValue ( ) + 1 ) ; } _seen . put ( arg0 , loc0 ) ; return loc0 . intValue ( ) ; }", "nl": "get the index that numbers this base string . concode_field_sep Map _seen concode_field_sep StringBuffer getBase concode_elem_sep String generate"}
{"code": "void function ( ImageRenderInfo arg0 ) { }", "nl": "no-op method - this renderer is n't interested in image events concode_field_sep Vector lastEnd concode_elem_sep StringBuffer result concode_elem_sep Vector lastStart concode_field_sep void appendTextChunk concode_elem_sep void beginTextBlock concode_elem_sep void endTextBlock concode_elem_sep String getResultantText concode_elem_sep void renderText"}
{"code": "Class function ( ) { return clz ; }", "nl": "gets the exception class . concode_field_sep Class clz concode_elem_sep String reposId concode_elem_sep CDRStreamReader[] paramReaders concode_elem_sep java.lang.reflect.Method writeMethod concode_elem_sep CDRStreamWriter retvalWriter concode_elem_sep Method m concode_elem_sep ExceptionWriter[] excepWriters concode_field_sep boolean isNonVoid concode_elem_sep void arraysort concode_elem_sep Object[] readParams concode_elem_sep void writeRetval concode_elem_sep Method getMethod concode_elem_sep void writeException concode_elem_sep void write"}
{"code": "NameAlreadyBoundException function ( final Name arg0 ) { return new NameAlreadyBoundException ( arg0 . toString ( ) ) ; }", "nl": "create a name-already-bound exception . concode_field_sep PlaceHolder placeHolder concode_field_sep Context createSubcontext concode_elem_sep void rebind concode_elem_sep void rebind concode_elem_sep void unbind concode_elem_sep void unbind concode_elem_sep boolean isEmpty concode_elem_sep NameNotFoundException nameNotFoundException concode_elem_sep String getLastComponent concode_elem_sep NotContextException notAContextException concode_elem_sep boolean isLastComponentEmpty concode_elem_sep NamingException namingException concode_elem_sep NamingException namingException concode_elem_sep CannotProceedException cannotProceedException concode_elem_sep InvalidNameException emptyNameException concode_elem_sep NamingEnumeration<T> namingEnumeration"}
{"code": "CodingErrorAction function ( final HttpParams arg0 ) { Args . notNull ( arg0 , \"srini_string\" ) ; final Object loc0 = arg0 . getParameter ( CoreProtocolPNames . HTTP_MALFORMED_INPUT_ACTION ) ; if ( loc0 == null ) { return CodingErrorAction . REPORT ; } return ( CodingErrorAction ) loc0 ; }", "nl": "obtains value of the coreprotocolpnames #http_malformed_input_action parameter . concode_field_sep PlaceHolder placeHolder concode_field_sep ProtocolVersion getVersion concode_elem_sep CodingErrorAction getUnmappableInputAction concode_elem_sep void setUnmappableInputAction concode_elem_sep void setVersion concode_elem_sep void setUserAgent concode_elem_sep String getHttpElementCharset concode_elem_sep boolean useExpectContinue concode_elem_sep void setHttpElementCharset concode_elem_sep void setMalformedInputAction concode_elem_sep String getUserAgent concode_elem_sep String getContentCharset concode_elem_sep void setUseExpectContinue concode_elem_sep void setContentCharset"}
{"code": "String function ( String arg0 ) { return rb . getString ( arg0 ) ; }", "nl": "retrieves a message with no arguments . concode_field_sep String RESOURCE_LOCATION concode_elem_sep ResourceBundle rb concode_field_sep placeholderType placeHolder"}
{"code": "int function ( ) { return fSourceIndex ; }", "nl": "returns the source index of this type variable maplet . concode_field_sep String fSourceName concode_elem_sep int fTargetIndex concode_elem_sep int fSourceIndex concode_elem_sep String fTargetName concode_field_sep String getSourceName concode_elem_sep int getTargetIndex concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep String getTargetName"}
{"code": "int function ( ) { return vertexLoop . size ( ) - 1 ; }", "nl": "returns the number of vertices in this polygon . the duplicated first/last vertex is not counted twice , so the result is equivalent to #getvertices . size . concode_field_sep List<VectorXYZ> vertexLoop concode_field_sep PolygonXZ getXZPolygon concode_elem_sep List<VectorXYZ> getVertexLoop concode_elem_sep SimplePolygonXZ getSimpleXZPolygon concode_elem_sep TriangleXYZ asTriangleXYZ concode_elem_sep List<VectorXYZ> getVertices concode_elem_sep PolygonXYZ reverse concode_elem_sep List<LineSegmentXYZ> getSegments"}
{"code": "void function ( String arg0 ) { this . syncLevel = arg0 ; }", "nl": "sets the value of the synclevel property . concode_field_sep String syncToken concode_elem_sep Prop prop concode_elem_sep Limit limit concode_elem_sep String syncLevel concode_field_sep String getSyncToken concode_elem_sep void setSyncToken concode_elem_sep Limit getLimit concode_elem_sep String getSyncLevel concode_elem_sep void setLimit concode_elem_sep void setProp concode_elem_sep Prop getProp"}
{"code": "TriangleXZ function ( ) { return makeRotationSense ( false ) ; }", "nl": "returns this triangle if it is clockwise , or the reversed triangle if it is counterclockwise . concode_field_sep VectorXZ v1 concode_elem_sep VectorXZ v2 concode_elem_sep VectorXZ v3 concode_field_sep VectorXZ getCenter concode_elem_sep boolean contains concode_elem_sep TriangleXZ makeClockwise concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep TriangleXYZ xyz concode_elem_sep List<VectorXZ> getVertices concode_elem_sep boolean isClockwise concode_elem_sep String toString concode_elem_sep TriangleXZ makeRotationSense concode_elem_sep TriangleXZ reverse concode_elem_sep double getArea"}
{"code": "void function ( int arg0 , int arg1 ) { addPageLabel ( arg0 , arg1 , null , 1 ) ; }", "nl": "adds or replaces a page label . there is no text prefix and the first logical page has the default of 1 . concode_field_sep int DECIMAL_ARABIC_NUMERALS concode_elem_sep int UPPERCASE_ROMAN_NUMERALS concode_elem_sep int physicalPage concode_elem_sep int LOWERCASE_LETTERS concode_elem_sep int EMPTY concode_elem_sep int LOWERCASE_ROMAN_NUMERALS concode_elem_sep PdfName numberingStyle[] concode_elem_sep String prefix concode_elem_sep int logicalPage concode_elem_sep int numberStyle concode_elem_sep int UPPERCASE_LETTERS concode_elem_sep HashMap<Integer,PdfDictionary> map concode_field_sep void removePageLabel concode_elem_sep String[] getPageLabels concode_elem_sep PdfDictionary getDictionary concode_elem_sep String toString concode_elem_sep PdfPageLabelFormat[] getPageLabelFormats"}
{"code": "boolean function ( Integer arg0 ) { ResourceTypeEntity loc0 = entityManager . find ( ResourceTypeEntity . class , arg0 ) ; return permissionService . hasPermissionToEditPropertiesOfResource ( loc0 ) ; }", "nl": "check that the user is app_developer or config_admin : app_developer : can edit properties of instances of application config_admin : can edit all properties . concode_field_sep EntityManager entityManager concode_elem_sep PermissionService permissionService concode_elem_sep ResourceTypeProvider resourceTypeProvider concode_field_sep boolean canCreateAppAndAddToAppServer concode_elem_sep boolean hasPermissionToAddRelation concode_elem_sep boolean hasPermissionToDeploy concode_elem_sep boolean canCopyFromResource concode_elem_sep void checkPermissionAndFireCheckedException concode_elem_sep boolean hasPermissionToDeleteRelation concode_elem_sep boolean hasPermissionToDeleteRelationType concode_elem_sep void checkPermissionAndFireException concode_elem_sep boolean hasPermissionToRenameResource concode_elem_sep boolean hasPermissionToRemoveDefaultInstanceOfResType concode_elem_sep boolean hasPermission concode_elem_sep boolean hasPermission concode_elem_sep boolean hasPermissionToTemplateModify concode_elem_sep boolean hasPermissionToEditPropertiesByResource concode_elem_sep boolean canCreateResourceInstance concode_elem_sep boolean canCreateResourceInstance concode_elem_sep boolean hasPermissionToRenameResourceType"}
{"code": "double [ ] function ( LinkedHashMap < CanOverlayID , CanNode > arg0 ) { double loc0 = receivedMsg * Simulator . MINUTE_UNIT / CanConfig . intervallBetweenStatistics ; double loc1 = loc0 / arg0 . size ( ) ; receivedMsg = 0 ; double [ ] loc2 = { loc0 , loc1 } ; return loc2 ; }", "nl": "gives the number of all received messages concode_field_sep long receivedBytes concode_elem_sep int sentMsg concode_elem_sep int receivedMsg concode_elem_sep StatisticGenerationEvent event concode_elem_sep long sentBytes concode_elem_sep Logger log concode_field_sep double[] getSentBytes concode_elem_sep void netMsgReceive concode_elem_sep void addReceivedMsg concode_elem_sep void stop concode_elem_sep double[] getSentMsg concode_elem_sep void start concode_elem_sep void netMsgSend concode_elem_sep void netMsgDrop concode_elem_sep double[] getReceivedBytes concode_elem_sep void addSentMsg"}
{"code": "void function ( String arg0 ) { this . fromKey = arg0 ; }", "nl": "set the context attribute key for the attribute . concode_field_sep String fromKey concode_field_sep boolean execute concode_elem_sep String getFromKey"}
{"code": "ListElement function ( int arg0 ) { return listElements . get ( arg0 ) ; }", "nl": "get iterator of list elements . concode_field_sep List<ListElement> listElements concode_field_sep List<ListElement> getListElements concode_elem_sep void appendElement concode_elem_sep int getNumberOfListElements"}
{"code": "String function ( ) { return fName ; }", "nl": "returns the name of the described extension . concode_field_sep String fId concode_elem_sep boolean fIsEnabled concode_elem_sep IConfigurationElement fElement concode_elem_sep boolean fNeedsSortingAfterFiltering concode_elem_sep boolean fIsIncluded concode_elem_sep String ICON concode_elem_sep Expression fEnablementExpression concode_elem_sep int fSortOrder concode_elem_sep String fName concode_elem_sep ImageDescriptor fImage concode_elem_sep String fLastError concode_elem_sep CompletionProposalComputerRegistry fRegistry concode_elem_sep boolean fIsSeparateCommand concode_field_sep boolean isSeparateCommand concode_elem_sep void sessionEnded concode_elem_sep void setSortOrder concode_elem_sep void sessionStarted concode_elem_sep Expression getEnablementExpression concode_elem_sep void setSeparateCommand concode_elem_sep String getId concode_elem_sep ImageDescriptor getImageDescriptor concode_elem_sep void setIncluded concode_elem_sep boolean matches concode_elem_sep Bundle getBundle concode_elem_sep int getSortOrder concode_elem_sep void setEnabled concode_elem_sep void checkNotNull concode_elem_sep String getDisplayName concode_elem_sep boolean isEnabled concode_elem_sep boolean hasComputers concode_elem_sep boolean hasComputers concode_elem_sep boolean isSortingAfterFilteringNeeded concode_elem_sep boolean isIncluded concode_elem_sep List<ICompletionProposal> computeCompletionProposals concode_elem_sep List<IContextInformation> computeContextInformation concode_elem_sep String getErrorMessage"}
{"code": "Local < C > function ( Local < C > arg0 ) { if ( arg0 == null || arg0 . isZERO ( ) ) { return arg0 ; } if ( num . isZERO ( ) ) { return this ; } if ( arg0 . isONE ( ) ) { return this ; } if ( this . isONE ( ) ) { return arg0 ; } C loc0 = num . multiply ( arg0 . num ) ; C loc1 = den . multiply ( arg0 . den ) ; return new Local < C > ( ring , loc0 , loc1 , false ) ; }", "nl": "local multiplication . concode_field_sep Logger logger concode_elem_sep LocalRing<C> ring concode_elem_sep boolean debug concode_elem_sep C num concode_elem_sep int isunit concode_elem_sep C den concode_field_sep int signum concode_elem_sep boolean isONE concode_elem_sep Local<C> inverse concode_elem_sep boolean isUnit concode_elem_sep Local<C> subtract concode_elem_sep Local<C> gcd concode_elem_sep Local<C> sum concode_elem_sep int compareTo concode_elem_sep Local<C>[] egcd concode_elem_sep Local<C> abs concode_elem_sep int hashCode concode_elem_sep Local<C> negate concode_elem_sep boolean equals concode_elem_sep Local<C> clone concode_elem_sep boolean isZERO concode_elem_sep String toString concode_elem_sep Local<C> divide concode_elem_sep Local<C> remainder"}
{"code": "SortedMap [ ] function ( ) { if ( rowMap == null ) { return null ; } return ( SortedMap [ ] ) rowMap . toArray ( new SortedMap [ 0 ] ) ; }", "nl": "returns an array of sortedmap objects . the sortedmap object key is the columnname and the value is the columnvalue . sortedmap was created using the case_insensitive_order comparator so the key is the case insensitive representation of the columnname . concode_field_sep boolean isLimited concode_elem_sep String[] columnNames concode_elem_sep List rowMap concode_elem_sep List rowByIndex concode_field_sep String[] getColumnNames concode_elem_sep int getRowCount concode_elem_sep Object[][] getRowsByIndex concode_elem_sep boolean isLimitedByMaxRows"}
{"code": "void function ( final float arg0 , final float arg1 , final float arg2 , final float arg3 ) { moveTo ( arg0 , arg1 ) ; lineTo ( arg0 + arg2 , arg1 ) ; lineTo ( arg0 + arg2 , arg1 + arg3 ) ; lineTo ( arg0 , arg1 + arg3 ) ; closeSubpath ( ) ; }", "nl": "appends a rectangle to the current path as a complete subpath . concode_field_sep List<Subpath> subpaths concode_elem_sep String START_PATH_ERR_MSG concode_elem_sep Point2D currentPoint concode_field_sep Point2D getCurrentPoint concode_elem_sep void curveTo concode_elem_sep void curveTo concode_elem_sep boolean isEmpty concode_elem_sep Subpath getLastSubpath concode_elem_sep List<Subpath> getSubpaths concode_elem_sep void lineTo concode_elem_sep void closeSubpath concode_elem_sep void addSubpath concode_elem_sep void addSubpaths concode_elem_sep List<Integer> replaceCloseWithLine concode_elem_sep void closeAllSubpaths concode_elem_sep void curveFromTo concode_elem_sep void moveTo"}
{"code": "int function ( ) { return this . getNumeroPaginas ( ) - this . getMarcador ( ) ; }", "nl": "cierra el libro y retorna numero paginas para finalizar concode_field_sep String dimensiones concode_elem_sep int numeroPaginas concode_elem_sep String titulo concode_elem_sep String colorPortada concode_elem_sep String autor concode_elem_sep int marcador concode_field_sep void setColorPortada concode_elem_sep void setDimensiones concode_elem_sep String getColorPortada concode_elem_sep String getAutor concode_elem_sep void setTitulo concode_elem_sep String getTitulo concode_elem_sep void setNumeroPaginas concode_elem_sep int getNumeroPaginas concode_elem_sep int leer concode_elem_sep String getDimensiones concode_elem_sep void setMarcador concode_elem_sep int escribir concode_elem_sep void setAutor concode_elem_sep Libro clone concode_elem_sep String toString concode_elem_sep int getMarcador concode_elem_sep int abrir"}
{"code": "int function ( BigInteger arg0 ) { return val . compareTo ( arg0 . val ) ; }", "nl": "compare to biginteger b. concode_field_sep java.math.BigInteger val concode_elem_sep BigInteger ONE concode_elem_sep BigInteger ZERO concode_elem_sep Random random concode_field_sep BigInteger IRAND concode_elem_sep boolean isField concode_elem_sep boolean isCommutative concode_elem_sep BigInteger gcd concode_elem_sep BigInteger IPROD concode_elem_sep BigInteger sum concode_elem_sep BigInteger IABS concode_elem_sep java.math.BigInteger characteristic concode_elem_sep BigInteger random concode_elem_sep BigInteger random concode_elem_sep int hashCode concode_elem_sep BigInteger IDIF concode_elem_sep BigInteger divide concode_elem_sep BigInteger copy concode_elem_sep BigInteger multiply concode_elem_sep BigInteger IGCD concode_elem_sep int signum concode_elem_sep BigInteger ISUM concode_elem_sep boolean isONE concode_elem_sep BigInteger inverse concode_elem_sep java.math.BigInteger getVal concode_elem_sep BigInteger INEG concode_elem_sep BigInteger valueOf concode_elem_sep BigInteger valueOf concode_elem_sep boolean isUnit concode_elem_sep BigInteger subtract concode_elem_sep BigInteger IQ concode_elem_sep BigInteger[] IQR concode_elem_sep BigInteger parse concode_elem_sep BigInteger parse concode_elem_sep BigInteger[] egcd concode_elem_sep int ISIGN concode_elem_sep BigInteger abs concode_elem_sep BigInteger IREM concode_elem_sep BigInteger[] divideAndRemainder concode_elem_sep BigInteger negate concode_elem_sep boolean equals concode_elem_sep BigInteger clone concode_elem_sep BigInteger getONE concode_elem_sep BigInteger getZERO concode_elem_sep BigInteger fromInteger concode_elem_sep BigInteger fromInteger concode_elem_sep boolean isZERO concode_elem_sep boolean isAssociative concode_elem_sep String toString concode_elem_sep int ICOMP concode_elem_sep BigInteger remainder"}
{"code": "int function ( int arg0 ) { arg0 &= BUTTON_MASK ; if ( ( arg0 & SWT . BUTTON1 ) == SWT . BUTTON1 ) return MouseConfig . PRIMARY_BUTTON ; if ( ( arg0 & SWT . BUTTON2 ) == SWT . BUTTON2 ) return 2 ; if ( ( arg0 & SWT . BUTTON3 ) == SWT . BUTTON3 ) return MouseConfig . SECONDARY_BUTTON ; return 0 ; }", "nl": "given a mouse accelerator , extract the button value . for use in synthesizing raw events . concode_field_sep boolean BUTTONS_REMAPPED concode_elem_sep int SECONDARY_BUTTON concode_elem_sep int BUTTON_MASK concode_elem_sep int PRIMARY_BUTTON concode_field_sep PlaybackSettings getPlaybackSettings"}
{"code": "void function ( String arg0 , String arg1 ) { boundary ( ) ; writeName ( arg0 ) ; newline ( ) ; newline ( ) ; writeln ( arg1 ) ; }", "nl": "adds a string parameter to the request concode_field_sep Map<String,Object> mParameters concode_elem_sep String boundary concode_elem_sep OutputStream mOutput concode_elem_sep URLConnection mConnection concode_elem_sep Map<String,String> mCookies concode_elem_sep Random random concode_field_sep void boundary concode_elem_sep void writeName concode_elem_sep void setParameters concode_elem_sep void newline concode_elem_sep HttpURLConnection post concode_elem_sep String randomString concode_elem_sep void setParameter concode_elem_sep void postCookies concode_elem_sep void writeln concode_elem_sep void pipe concode_elem_sep void write concode_elem_sep void write"}
{"code": "BooleanComparator function ( ) { return FALSE_FIRST ; }", "nl": "returns a booleancomparator instance that sorts false values before true values . clients are encouraged to use the value returned from this method instead of constructing a new instance to reduce allocation and garbage collection overhead when multiple booleancomparators may be used in the same virtual machine . concode_field_sep BooleanComparator TRUE_FIRST concode_elem_sep long serialVersionUID concode_elem_sep BooleanComparator FALSE_FIRST concode_elem_sep boolean trueFirst concode_field_sep BooleanComparator getTrueFirstComparator concode_elem_sep int compare concode_elem_sep int compare concode_elem_sep BooleanComparator getBooleanComparator concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep boolean sortsTrueFirst"}
{"code": "void function ( ) { for ( VarInfo loc0 : var_infos ) { loc0 . trimToSize ( ) ; } }", "nl": "trim the collections used in this ppt . concode_field_sep VarInfo[] var_infos concode_elem_sep List<Invariant> emptyInvList concode_elem_sep long serialVersionUID concode_field_sep VarInfo find_var_by_name concode_elem_sep int compare concode_elem_sep String swap concode_elem_sep String name concode_elem_sep String varNames concode_elem_sep String varNames concode_elem_sep int indexOf concode_elem_sep boolean containsVar"}
{"code": "void function ( XMPMeta arg0 , String arg1 ) { arg0 . setProperty ( XMPConst . NS_PDFA_ID , PdfAProperties . PART , arg1 ) ; }", "nl": "adds part . concode_field_sep String CONFORMANCE concode_elem_sep String PART concode_field_sep void setConformance"}
{"code": "NameNotFoundException function ( final String arg0 , final Name arg1 ) { return NamingLogger . ROOT_LOGGER . nameNotFoundInContext ( arg0 , arg1 ) ; }", "nl": "create a name-not-found exception . concode_field_sep PlaceHolder placeHolder concode_field_sep Context createSubcontext concode_elem_sep void rebind concode_elem_sep void rebind concode_elem_sep void unbind concode_elem_sep void unbind concode_elem_sep boolean isEmpty concode_elem_sep String getLastComponent concode_elem_sep NameAlreadyBoundException nameAlreadyBoundException concode_elem_sep NotContextException notAContextException concode_elem_sep boolean isLastComponentEmpty concode_elem_sep NamingException namingException concode_elem_sep NamingException namingException concode_elem_sep CannotProceedException cannotProceedException concode_elem_sep InvalidNameException emptyNameException concode_elem_sep NamingEnumeration<T> namingEnumeration"}
{"code": "void function ( int arg0 , Color arg1 ) { if ( arg0 == 1 ) { playerOne . setColor ( arg1 ) ; } else { playerTwo . setColor ( arg1 ) ; } }", "nl": "set player color . concode_field_sep Player playerTwo concode_elem_sep int gameType concode_elem_sep Facade theFacade concode_elem_sep Rules theRules concode_elem_sep Player passivePlayer concode_elem_sep boolean isTimerRunning concode_elem_sep Player activePlayer concode_elem_sep IMediator mediator concode_elem_sep Timer theTimer concode_elem_sep Player playerOne concode_field_sep void endGame concode_elem_sep void setPlayerName concode_elem_sep IMediator getMediator concode_elem_sep void selectColors concode_elem_sep int getGameMode concode_elem_sep void ReceiveMessage concode_elem_sep void endTurn concode_elem_sep void setGameMode concode_elem_sep void RecievePassivePlayer concode_elem_sep void createPlayer concode_elem_sep void RecieveActivePlayer concode_elem_sep Notifier getTimerNotifier concode_elem_sep void requestActive concode_elem_sep void setMediator concode_elem_sep void requestPlayerName concode_elem_sep Player getOppositePlayer concode_elem_sep Facade getFacade concode_elem_sep void startGame concode_elem_sep void setTimer concode_elem_sep void SendMessage concode_elem_sep void requestPassive"}
{"code": "SettableFuture < T > function ( final Statement arg0 , final T arg1 ) { return execAsync ( arg0 , arg1 , handler ) ; }", "nl": "asynchronously executes the specified batch statement . inputs will be passed to the #handler once query succeed or failed . concode_field_sep AsyncResultHandler<T> handler concode_elem_sep AtomicInteger pending concode_elem_sep ExecutorService executorService concode_elem_sep Session session concode_elem_sep Logger LOG concode_field_sep int getPendingTasksSize concode_elem_sep ExecutorService newSingleThreadExecutor concode_elem_sep void shutdown"}
{"code": "void function ( Object arg0 ) { }", "nl": "debug-ausgabe concode_field_sep Simple2DVisualization vis concode_elem_sep int SHIFT_AMOUNT concode_field_sep void keyPressed concode_elem_sep void keyReleased concode_elem_sep void keyTyped"}
{"code": "String function ( ) { return suit ; }", "nl": "accesses this card 's suit . concode_field_sep int pointValue concode_elem_sep String rank concode_elem_sep String suit concode_field_sep int pointValue concode_elem_sep String rank concode_elem_sep String toString concode_elem_sep boolean matches"}
{"code": "Box function ( int arg0 , int arg1 , TeXEnvironment arg2 ) { int loc0 = ( arg0 > TeXConstants . TYPE_INNER ? TeXConstants . TYPE_ORDINARY : arg0 ) ; int loc1 = ( arg1 > TeXConstants . TYPE_INNER ? TeXConstants . TYPE_ORDINARY : arg1 ) ; int loc2 = glueTable [ loc0 ] [ loc1 ] [ arg2 . getStyle ( ) / 2 ] ; return glueTypes [ loc2 ] . createBox ( arg2 ) ; }", "nl": "creates a box representing the glue type according to the `` glue rules '' based on the atom types between which the glue must be inserted . concode_field_sep float stretch concode_elem_sep float shrink concode_elem_sep Glue[] glueTypes concode_elem_sep String name concode_elem_sep float space concode_elem_sep int[][][] glueTable concode_field_sep String getName concode_elem_sep Box createBox"}
{"code": "int function ( String arg0 , String arg1 , Object ... arg2 ) { if ( isLoggable ( arg0 , VERBOSE ) ) { return Log . v ( arg0 , String . arg1 ( arg1 , arg2 ) ) ; } return 0 ; }", "nl": "send a #verbose log message . concode_field_sep int WARN concode_elem_sep Boolean sDebugLoggingEnabledForTests concode_elem_sep Pattern DATE_CLEANUP_PATTERN_WRONG_TIMEZONE concode_elem_sep int VERBOSE concode_elem_sep int MAX_ENABLED_LOG_LEVEL concode_elem_sep int ERROR concode_elem_sep int DEBUG concode_elem_sep int INFO concode_elem_sep String TAG concode_field_sep boolean isLoggable concode_elem_sep int d concode_elem_sep int d concode_elem_sep int e concode_elem_sep int e concode_elem_sep int w concode_elem_sep int w concode_elem_sep int wtf concode_elem_sep int wtf concode_elem_sep String byteToHex concode_elem_sep StringBuilder byteToHex concode_elem_sep int i concode_elem_sep int i concode_elem_sep String cleanUpMimeDate concode_elem_sep boolean buildPreventsDebugLogging concode_elem_sep boolean isDebugLoggingEnabled concode_elem_sep void setDebugLoggingEnabledForTests"}
{"code": "FloatListIterator function ( ListIterator arg0 ) { return null == arg0 ? null : new ListIteratorFloatListIterator ( arg0 ) ; }", "nl": "create an floatlistiterator floatlistiterator wrappingthe specified listiterator listiterator . when the given iterator is null , returns null . concode_field_sep ListIterator _iterator concode_field_sep float next concode_elem_sep void add concode_elem_sep void set concode_elem_sep float previous concode_elem_sep boolean hasPrevious concode_elem_sep boolean hasNext concode_elem_sep int nextIndex concode_elem_sep int previousIndex concode_elem_sep void remove"}
{"code": "List < ApplicationReleaseBinding > function ( ) { if ( structure == null ) { structure = new ArrayList < ApplicationReleaseBinding > ( ) ; } return this . structure ; }", "nl": "gets the value of the structure property . this accessor method returns a reference to the live list , not a snapshot . therefore any modification you make to the returned list will be present inside the jaxb object . this is why there is not a set method for the structure property . for example , to add a new item , do as follows : getstructure . add newitem ; objects of the following type s are allowed in the list applicationreleasebinding concode_field_sep String fcLink concode_elem_sep String techStack concode_elem_sep String fcKey concode_elem_sep String outOfServiceByRelease concode_elem_sep ApplicationID id concode_elem_sep List<ApplicationReleaseBinding> structure concode_field_sep String getFcLink concode_elem_sep void setTechStack concode_elem_sep String getTechStack concode_elem_sep String getFcKey concode_elem_sep void setOutOfServiceByRelease concode_elem_sep void setFcKey concode_elem_sep void setFcLink concode_elem_sep void setId concode_elem_sep ApplicationID getId concode_elem_sep String getOutOfServiceByRelease"}
{"code": "void function ( ) { map . put ( \"srini_string\" , 11 ) ; assertThat ( map . size ( ) , is ( 4 ) ) ; assertThat ( map . get ( \"srini_string\" ) , is ( 11 ) ) ; map . put ( \"srini_string\" , 5 ) ; assertThat ( map . size ( ) , is ( 5 ) ) ; assertThat ( map . get ( \"srini_string\" ) , is ( 5 ) ) ; }", "nl": "test method for com.flatironschool.javacs.mylinearmap #put java.lang.object , java.lang.object . concode_field_sep Map<String,Integer> map concode_field_sep void testContainsValue concode_elem_sep void testClear concode_elem_sep void testKeySet concode_elem_sep void testGet concode_elem_sep void testIsEmpty concode_elem_sep void testRemove concode_elem_sep void testSize concode_elem_sep void setUp concode_elem_sep void testContainsKey concode_elem_sep void testPutAll concode_elem_sep void testValues"}
{"code": "boolean function ( ) { if ( is12 ) { return getLogger ( ) . isEnabledFor ( ( Priority ) Level . ERROR ) ; } else { return getLogger ( ) . isEnabledFor ( Level . ERROR ) ; } }", "nl": "check whether the log4j logger used is enabled for error priority . concode_field_sep String name concode_elem_sep boolean is12 concode_elem_sep Logger logger concode_elem_sep String FQCN concode_field_sep void warn concode_elem_sep void warn concode_elem_sep void trace concode_elem_sep void trace concode_elem_sep void debug concode_elem_sep void debug concode_elem_sep boolean isInfoEnabled concode_elem_sep Logger getLogger concode_elem_sep boolean isTraceEnabled concode_elem_sep boolean isWarnEnabled concode_elem_sep boolean isDebugEnabled concode_elem_sep void error concode_elem_sep void error concode_elem_sep boolean isFatalEnabled concode_elem_sep void fatal concode_elem_sep void fatal concode_elem_sep void info concode_elem_sep void info"}
{"code": "long function ( @ NonNull Class < T > arg0 , @ NonNull T arg1 ) { AbstractModel < T > loc0 = getModelInstanceOrThrow ( arg0 ) ; return loc0 . insert ( arg1 ) ; }", "nl": "insert entity without transaction . concode_field_sep Object LOCK concode_elem_sep OpenHelper helper concode_elem_sep Map<Class<?>,AbstractModel<?>> modelMap concode_elem_sep Orm orm concode_field_sep T loadById concode_elem_sep int updateInTx concode_elem_sep int updateInTx concode_elem_sep boolean updateInTx concode_elem_sep AbstractModel<T> getRepository concode_elem_sep boolean update concode_elem_sep boolean delete concode_elem_sep long[] insertInTx concode_elem_sep long[] insertInTx concode_elem_sep long insertInTx concode_elem_sep T rawQuerySingle concode_elem_sep T rawQuerySingle concode_elem_sep int deleteById concode_elem_sep AbstractModel<T> getModelInstanceOrThrow concode_elem_sep Orm getInstance concode_elem_sep int deleteByIdInTx concode_elem_sep int deleteInTx concode_elem_sep int deleteInTx concode_elem_sep boolean deleteInTx concode_elem_sep List<T> rawQuery concode_elem_sep List<T> rawQuery"}
{"code": "PdfIndirectReference function ( String arg0 , PdfIndirectReference arg1 ) { if ( views == null ) throw new IllegalPdfSyntaxException ( \"srini_string\" ) ; assetsmap . put ( arg0 , arg1 ) ; return arg1 ; }", "nl": "adds a reference to an embedded file . part of the richmediacontent . concode_field_sep PdfDictionary richMediaSettings concode_elem_sep PdfArray configurations concode_elem_sep PdfArray views concode_elem_sep HashMap<String,PdfIndirectReference> assetsmap concode_elem_sep PdfDictionary richMediaContent concode_elem_sep PdfIndirectReference richMediaContentReference concode_elem_sep PdfWriter writer concode_elem_sep PdfAnnotation annot concode_field_sep PdfIndirectReference getRichMediaContentReference concode_elem_sep PdfAnnotation createAnnotation concode_elem_sep void setActivation concode_elem_sep PdfIndirectReference addConfiguration concode_elem_sep PdfIndirectReference addConfiguration concode_elem_sep PdfIndirectReference addView concode_elem_sep PdfIndirectReference addView concode_elem_sep void setDeactivation"}
{"code": "int function ( ) { return position ; }", "nl": "returns current position in output concode_field_sep int BUFFER_DEFAULT_LENGTH concode_elem_sep int actualSize concode_elem_sep byte[] buffer concode_elem_sep int position concode_field_sep void writeInt concode_elem_sep void writeLong concode_elem_sep byte[] getResult concode_elem_sep int getActualSize concode_elem_sep void ensureLength concode_elem_sep void write concode_elem_sep void write concode_elem_sep void write concode_elem_sep int writeString concode_elem_sep void setPosition concode_elem_sep void writeIntAt concode_elem_sep void writeDouble"}
{"code": "Object function ( String arg0 , Class [ ] arg1 , Object arg2 , Object [ ] arg3 ) { return this . invoke ( this . getIndex ( arg0 , arg1 ) , arg2 , arg3 ) ; }", "nl": "access to invoke a method on the class that this fast class handles concode_field_sep Class type concode_elem_sep Class[] EMPTY_CLASS_ARRAY concode_field_sep String getName concode_elem_sep int getIndex concode_elem_sep int getIndex concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep FastClass create concode_elem_sep Object newInstance concode_elem_sep Object newInstance concode_elem_sep Object newInstance concode_elem_sep String toString concode_elem_sep Class getJavaClass"}
{"code": "boolean function ( ) { return fFilesSaved ; }", "nl": "returns whether this save helper did actually save any files . concode_field_sep boolean fFilesSaved concode_elem_sep int SAVE_ALL concode_elem_sep int SAVE_REFACTORING concode_elem_sep int fSaveMode concode_elem_sep int SAVE_NOTHING concode_elem_sep int SAVE_ALL_ALWAYS_ASK concode_field_sep void triggerIncrementalBuild concode_elem_sep ILabelProvider createDialogLabelProvider concode_elem_sep boolean saveEditors concode_elem_sep boolean askSaveAllDirtyEditors"}
{"code": "BootstrapServiceRegistryBuilder function ( Integrator arg0 ) { providedIntegrators . add ( arg0 ) ; return this ; }", "nl": "add an integrator to be applied to the bootstrap registry . concode_field_sep LinkedHashSet<Integrator> providedIntegrators concode_elem_sep List<ClassLoader> providedClassLoaders concode_elem_sep boolean autoCloseRegistry concode_elem_sep ClassLoaderService providedClassLoaderService concode_elem_sep StrategySelectorBuilder strategySelectorBuilder concode_field_sep BootstrapServiceRegistryBuilder withStrategySelector concode_elem_sep BootstrapServiceRegistryBuilder with concode_elem_sep BootstrapServiceRegistryBuilder with concode_elem_sep BootstrapServiceRegistryBuilder with concode_elem_sep BootstrapServiceRegistryBuilder applyClassLoader concode_elem_sep BootstrapServiceRegistryBuilder disableAutoClose concode_elem_sep BootstrapServiceRegistryBuilder applyStrategySelector concode_elem_sep BootstrapServiceRegistryBuilder applyClassLoaderService concode_elem_sep BootstrapServiceRegistryBuilder enableAutoClose concode_elem_sep BootstrapServiceRegistry build concode_elem_sep BootstrapServiceRegistryBuilder withStrategySelectors concode_elem_sep BootstrapServiceRegistryBuilder applyStrategySelectors"}
{"code": "void function ( Context arg0 , String arg1 ) { arg0 . startService ( new Intent ( arg0 , WsService . class ) . putExtra ( Consts . WsConstant . WS_SUBSCRIBE , arg1 ) ) ; }", "nl": "send ws_subscribe command to wsservice to subscribe to topic in websocket . concode_field_sep BroadcastReceiver mBroadcastReceiver concode_elem_sep WsManager sInstance concode_elem_sep long mHeartBeatPeriodInMillis concode_elem_sep String mPort concode_elem_sep boolean mIsLogOn concode_elem_sep WsCallbackListeners mWsCallbackListeners concode_field_sep WsManager setLog concode_elem_sep void unregisterCallback concode_elem_sep void disconnect concode_elem_sep void onWsCloseCallbackListener concode_elem_sep void onWsOpenCallbackListener concode_elem_sep void onReceive concode_elem_sep WsManager setPort concode_elem_sep void call concode_elem_sep WsManager setHeartBeat concode_elem_sep void publish concode_elem_sep void onWsSubscribeCallbackListener concode_elem_sep void onWsCallCallbackListener concode_elem_sep WsManager getWsManager concode_elem_sep void connect concode_elem_sep void registerCallback"}
{"code": "Criteria function ( Object ... arg0 ) { return nin ( Arrays . asList ( arg0 ) ) ; }", "nl": "the nin operator is similar to $ in except that it selects objects for which the specified field does not have any value in the specified array . concode_field_sep List<Criteria> criteriaChain concode_elem_sep ValueNode left concode_elem_sep ValueNode right concode_elem_sep RelationalOperator criteriaType concode_field_sep Criteria lt concode_elem_sep Criteria type concode_elem_sep String prefixPath concode_elem_sep Criteria empty concode_elem_sep void checkComplete concode_elem_sep Criteria and concode_elem_sep Criteria gte concode_elem_sep Criteria create concode_elem_sep Criteria where concode_elem_sep Criteria where concode_elem_sep Criteria lte concode_elem_sep Criteria all concode_elem_sep Criteria all concode_elem_sep boolean apply concode_elem_sep Criteria in concode_elem_sep Criteria in concode_elem_sep Criteria is concode_elem_sep Criteria parse concode_elem_sep Criteria eq concode_elem_sep Criteria gt concode_elem_sep Criteria matches concode_elem_sep Criteria regex concode_elem_sep Criteria contains concode_elem_sep Criteria size concode_elem_sep Criteria ne concode_elem_sep Criteria exists concode_elem_sep String toString concode_elem_sep Collection<RelationalExpressionNode> toRelationalExpressionNodes concode_elem_sep Criteria notEmpty"}
{"code": "String function ( final Object arg0 ) { String loc0 = StringUtil . arrayToString ( arg0 , \"srini_string\" ) ; return loc0 ; }", "nl": "if the given object is no array , it 's tostring - method is invoked . primitive type - arrays and object - arrays are introspected using java.lang.reflect.array . convention for creation fo string - representation : concode_field_sep StringUtil instance concode_field_sep void listOfArraysToString concode_elem_sep StringUtil instance concode_elem_sep String setSize concode_elem_sep int longestStringRepresentation concode_elem_sep boolean isEmpty concode_elem_sep void toLongestString concode_elem_sep String getNewLine concode_elem_sep String appendSpaces"}
{"code": "Change function ( ) { return fChange ; }", "nl": "returns the change used by this operation . this is either the change passed to the constructor or the one create by the createchangeoperation . method returns null if the create operation did not create a corresponding change or has n't been executed yet . concode_field_sep Change fChange concode_elem_sep Change fUndoChange concode_elem_sep boolean fChangeExecutionFailed concode_elem_sep IUndoManager fUndoManager concode_elem_sep boolean fChangeExecuted concode_elem_sep CreateChangeOperation fCreateChangeOperation concode_elem_sep ISchedulingRule fSchedulingRule concode_elem_sep RefactoringStatus fValidationStatus concode_elem_sep String fUndoName concode_field_sep RefactoringStatus getConditionCheckingStatus concode_elem_sep boolean changeExecutionFailed concode_elem_sep Change getUndoChange concode_elem_sep boolean createChange concode_elem_sep void setUndoManager concode_elem_sep void run concode_elem_sep void executeChange concode_elem_sep void setSchedulingRule concode_elem_sep boolean changeExecuted concode_elem_sep RefactoringStatus getValidationStatus"}
{"code": "String function ( List < Object > arg0 ) { if ( arg0 . size ( ) != 1 ) throw new RuntimeException ( \"srini_string\" ) ; return ( String ) arg0 . get ( 0 ) ; }", "nl": "currently defaultkeyfactory returns just first element of list . concode_field_sep PlaceHolder placeHolder concode_field_sep placeholderType placeHolder"}
{"code": "byte [ ] function ( String arg0 ) { String loc0 = ( String ) this . object . get ( arg0 ) ; if ( loc0 == null ) { return null ; } return Base64 . decodeBase64 ( loc0 ) ; }", "nl": "return a base64-encoded string value as a byte array . concode_field_sep JSONObject object concode_field_sep JSONArray parseJSONArray concode_elem_sep JSONArray parseJSONArray concode_elem_sep org.json.simple.JSONArray getArray concode_elem_sep void put concode_elem_sep boolean remove concode_elem_sep void throwIfFieldsMissingOrMisTyped concode_elem_sep Long getTimestamp concode_elem_sep int hashCode concode_elem_sep Object get concode_elem_sep void putAll concode_elem_sep Integer getIntegerSafely concode_elem_sep Boolean getBoolean concode_elem_sep Set<String> keySet concode_elem_sep ExtendedJSONObject parseJSONObject concode_elem_sep ExtendedJSONObject parseJSONObject concode_elem_sep ExtendedJSONObject getObject concode_elem_sep String toJSONString concode_elem_sep Set<Entry<String,Object>> entrySet concode_elem_sep boolean containsKey concode_elem_sep String getString concode_elem_sep ExtendedJSONObject parseUTF8AsJSONObject concode_elem_sep ExtendedJSONObject deepCopy concode_elem_sep long getLong concode_elem_sep Long getLong concode_elem_sep JSONParser getJSONParser concode_elem_sep int size concode_elem_sep boolean equals concode_elem_sep ExtendedJSONObject clone concode_elem_sep Object parseRaw concode_elem_sep Object parseRaw concode_elem_sep String toString concode_elem_sep byte[] getByteArrayHex"}
{"code": "String function ( ) { return translation ; }", "nl": "gets the value of the translation property . concode_field_sep String translation concode_elem_sep Language language concode_field_sep Language getLanguage concode_elem_sep void setTranslation concode_elem_sep void setLanguage"}
{"code": "String function ( ) { return \"srini_string\" + this . requestDate + \"srini_string\" + this . responseDate + \"srini_string\" + this . statusLine + \"srini_string\" ; }", "nl": "provides a string representation of this instance suitable for human consumption . concode_field_sep Date date concode_elem_sep Map<String,String> variantMap concode_elem_sep StatusLine statusLine concode_elem_sep HeaderGroup responseHeaders concode_elem_sep Resource resource concode_elem_sep Date requestDate concode_elem_sep long serialVersionUID concode_elem_sep Date responseDate concode_field_sep Resource getResource concode_elem_sep Header[] getHeaders concode_elem_sep Header getFirstHeader concode_elem_sep Header[] getAllHeaders concode_elem_sep Map<String,String> getVariantMap concode_elem_sep String getReasonPhrase concode_elem_sep ProtocolVersion getProtocolVersion concode_elem_sep Date getResponseDate concode_elem_sep boolean hasVariants concode_elem_sep Date parseDate concode_elem_sep int getStatusCode concode_elem_sep StatusLine getStatusLine concode_elem_sep Date getDate concode_elem_sep Date getRequestDate"}
{"code": "double function ( ) { return percentDone ; }", "nl": "returns how close randoop is to being done , as a percentage between 0 and 100 . concode_field_sep int sequencesGenerated concode_elem_sep double percentDone concode_elem_sep int errorsRevealed concode_elem_sep long serialVersionUID concode_field_sep int getSequencesGenerated concode_elem_sep int getNumErrors"}
{"code": "void function ( double arg0 ) { VectorXYZ loc0 = getViewDirection ( ) ; VectorXZ loc1 = new VectorXZ ( loc0 . x , loc0 . z ) . normalize ( ) ; move ( loc1 . x * arg0 , 0 , loc1 . z * arg0 ) ; }", "nl": "moves pos and lookat forward in the map plane concode_field_sep VectorXYZ pos concode_elem_sep VectorXYZ lookAt concode_elem_sep VectorXYZ up concode_field_sep void moveMapRight concode_elem_sep void setCamera concode_elem_sep void setCamera concode_elem_sep void moveForward concode_elem_sep void move concode_elem_sep void move concode_elem_sep void roll concode_elem_sep VectorXYZ getUp concode_elem_sep void yaw concode_elem_sep void moveMapUp concode_elem_sep void setPos concode_elem_sep void setPos concode_elem_sep void mapPitch concode_elem_sep VectorXYZ getRight concode_elem_sep void setLookAt concode_elem_sep void setLookAt concode_elem_sep VectorXYZ getViewDirection concode_elem_sep VectorXYZ getPos concode_elem_sep void moveRight concode_elem_sep VectorXYZ getLookAt concode_elem_sep String toString concode_elem_sep void pitch concode_elem_sep void rotateY concode_elem_sep void moveUp"}
{"code": "void function ( int arg0 ) { nodes = new Vertex [ arg0 ] ; Vertex loc0 = null ; for ( int loc1 = arg0 - 1 ; loc1 >= 0 ; loc1 -- ) { Vertex loc2 = nodes [ loc1 ] = new Vertex ( loc0 , arg0 ) ; loc0 = loc2 ; } addEdges ( arg0 ) ; }", "nl": "create a graph . this is just another method for creating the graph data structure . concode_field_sep Vertex[] nodes concode_elem_sep int CONST_m1 concode_elem_sep int CONST_b concode_elem_sep int RANGE concode_field_sep int random concode_elem_sep int mult concode_elem_sep void addEdges concode_elem_sep int computeDist concode_elem_sep Vertex firstNode"}
{"code": "Rectangle function ( Component arg0 ) { if ( where == null ) return new Rectangle ( 0 , 0 , arg0 . getWidth ( ) , arg0 . getHeight ( ) ) ; return new Rectangle ( where . x , where . y , 1 , 1 ) ; }", "nl": "convert the abstract location into a concrete area , relative to the given component . if a point has been specified , returns a 1x1 rectangle , otherwise returns the a rectangle at 0 , 0 of the component 's size . concode_field_sep Point where concode_elem_sep String CENTER concode_field_sep Point getPoint concode_elem_sep boolean isValue concode_elem_sep String badFormat concode_elem_sep boolean equals concode_elem_sep String toString concode_elem_sep boolean isIndex concode_elem_sep String parseValue concode_elem_sep ComponentLocation parse concode_elem_sep int parseIndex concode_elem_sep String encodeIndex concode_elem_sep String encodeValue"}
{"code": "boolean function ( ProjCoordinate arg0 , double arg1 ) { double loc0 = arg0 . x - this . x ; if ( loc0 > arg1 ) { return false ; } else { return true ; } }", "nl": "returns a boolean indicating if the x ordinate value of the projcoordinate provided as an ordinate is equal to the x ordinate value of this projcoordinate . because we are working with floating point numbers the ordinates are considered equal if the difference between them is less than the specified tolerance . concode_field_sep DecimalFormat DECIMAL_FORMAT concode_elem_sep double x concode_elem_sep String DECIMAL_FORMAT_PATTERN concode_elem_sep double y concode_elem_sep double z concode_field_sep String toShortString concode_elem_sep boolean areZOrdinatesEqual concode_elem_sep boolean hasValidZOrdinate concode_elem_sep int hashCode concode_elem_sep int hashCode concode_elem_sep void setValue concode_elem_sep void setValue concode_elem_sep void setValue concode_elem_sep boolean areYOrdinatesEqual concode_elem_sep boolean equals concode_elem_sep String toString concode_elem_sep boolean hasValidXandYOrdinates concode_elem_sep void clearZ"}
{"code": "boolean function ( ReflectClass arg0 ) { Iterator4 loc0 = _collectionPredicates . iterator ( ) ; while ( loc0 . moveNext ( ) ) { if ( ( ( ReflectClassPredicate ) loc0 . current ( ) ) . match ( arg0 ) ) { return true ; } } return _delegate . isCollection ( arg0 . getDelegate ( ) ) ; }", "nl": "determines if a candidate reflectclass is a collection concode_field_sep GenericArrayReflector _array concode_elem_sep Collection4 _collectionPredicates concode_elem_sep Hashtable4 _classByClass concode_elem_sep ObjectContainerBase _stream concode_elem_sep KnownClassesRepository _repository concode_elem_sep Transaction _trans concode_elem_sep Reflector _delegate concode_field_sep void setTransaction concode_elem_sep void registerCollection concode_elem_sep void registerCollection concode_elem_sep ReflectClass forName concode_elem_sep ReflectClass[] knownClasses concode_elem_sep void configuration concode_elem_sep GenericClass ensureDelegate concode_elem_sep GenericClass genericClass concode_elem_sep Reflector getDelegate concode_elem_sep ReflectClassPredicate classPredicate concode_elem_sep void registerPrimitiveClass concode_elem_sep boolean hasTransaction concode_elem_sep ReflectArray array concode_elem_sep Object deepClone concode_elem_sep ReflectClass forClass concode_elem_sep ReflectClass forGenericObject concode_elem_sep ObjectContainerBase getStream concode_elem_sep ReflectClass forObject concode_elem_sep void setParent concode_elem_sep T withLock concode_elem_sep void register"}
{"code": "void function ( EncryptedJWT arg0 ) { try { JWEDecrypter loc0 = getDecrypter ( ) ; arg0 . decrypt ( loc0 ) ; } catch ( JOSEException | KrbException loc0 ) { throw new IOException ( \"srini_string\" , loc0 ) ; } }", "nl": "decrypt the encrypted jwt concode_field_sep List<String> audiences concode_elem_sep Object decryptionKey concode_elem_sep boolean signed concode_elem_sep Object verifyKey concode_field_sep boolean verifyAudiences concode_elem_sep AuthToken decodeFromBytes concode_elem_sep boolean verifyToken concode_elem_sep boolean isSigned concode_elem_sep JWSVerifier getVerifier concode_elem_sep AuthToken decodeFromString concode_elem_sep void setDecryptionKey concode_elem_sep void setDecryptionKey concode_elem_sep JWEDecrypter getDecrypter concode_elem_sep void setAudiences concode_elem_sep boolean verifySignedJWT concode_elem_sep boolean verifyExpiration concode_elem_sep void setVerifyKey concode_elem_sep void setVerifyKey"}
{"code": "boolean function ( long arg0 ) { return ( getMillis ( ) > arg0 ) ; }", "nl": "is this instant after the millisecond instant passed in comparing solely by millisecond . concode_field_sep PlaceHolder placeHolder concode_field_sep MutableDateTime toMutableDateTime concode_elem_sep MutableDateTime toMutableDateTime concode_elem_sep MutableDateTime toMutableDateTime concode_elem_sep Date toDate concode_elem_sep boolean isEqual concode_elem_sep boolean isEqual concode_elem_sep DateTimeZone getZone concode_elem_sep boolean isSupported concode_elem_sep int compareTo concode_elem_sep boolean isBeforeNow concode_elem_sep Instant toInstant concode_elem_sep boolean isBefore concode_elem_sep boolean isBefore concode_elem_sep boolean isEqualNow concode_elem_sep MutableDateTime toMutableDateTimeISO concode_elem_sep DateTime toDateTimeISO concode_elem_sep int hashCode concode_elem_sep int get concode_elem_sep int get concode_elem_sep boolean equals concode_elem_sep String toString concode_elem_sep String toString concode_elem_sep DateTime toDateTime concode_elem_sep DateTime toDateTime concode_elem_sep DateTime toDateTime concode_elem_sep boolean isAfterNow"}
{"code": "void function ( boolean arg0 ) { startupOptions . add ( KdcServerOption . ALLOW_TCP , arg0 ) ; }", "nl": "set to allow tcp or not . concode_field_sep KdcConfig kdcConfig concode_elem_sep BackendConfig backendConfig concode_elem_sep InternalKdcServer innerKdc concode_elem_sep KOptions startupOptions concode_elem_sep KdcSetting kdcSetting concode_field_sep void init concode_elem_sep void enableDebug concode_elem_sep void setKdcHost concode_elem_sep void setKdcRealm concode_elem_sep KdcSetting getKdcSetting concode_elem_sep void setKdcTcpPort concode_elem_sep void start concode_elem_sep void setInnerKdcImpl concode_elem_sep BackendConfig getBackendConfig concode_elem_sep void stop concode_elem_sep IdentityBackend getIdentityService concode_elem_sep void setKdcUdpPort concode_elem_sep void setWorkDir concode_elem_sep KdcConfig getKdcConfig concode_elem_sep void setKdcPort concode_elem_sep void setAllowUdp"}
{"code": "boolean function ( ) { if ( y > ground - 5 ) { y = ground + 5 ; return true ; } else { return false ; } }", "nl": "checking if the value of y is larger than variable ground . concode_field_sep int HEIGHT concode_elem_sep int JUMP concode_elem_sep int x concode_elem_sep int y concode_elem_sep int ground concode_elem_sep int WIDTH concode_elem_sep int moveY concode_elem_sep int DOWN concode_field_sep boolean isPassed concode_elem_sep void draw concode_elem_sep void down concode_elem_sep void jump"}
{"code": "void function ( ) { resources = GWT . create ( Resources . class ) ; StyleInjector . inject ( resources . dashboardCss ( ) . getText ( ) + resources . latencyDashboardChartCss ( ) . getText ( ) + resources . rightPieChartCss ( ) . getText ( ) + resources . warningPaneCss ( ) . getText ( ) ) ; }", "nl": "initializes resources . this must be called before dashboardresources #getresources . this allows us to avoid an evil static initializer that would pollute all the getresources call sites . concode_field_sep Resources resources concode_field_sep String graphOuterDiv concode_elem_sep Resources getResources concode_elem_sep Css dashboardCss"}
{"code": "ScheduledExecutorService function ( final ScheduledExecutorService arg0 ) { return new ContextScheduledExecutorService ( arg0 ) ; }", "nl": "returns a scheduledexecutorservice that wraps ables before submission to the passed in scheduledexecutorservice . concode_field_sep Field causeField concode_field_sep void handleException concode_elem_sep StackTraceElement[] getStackContext concode_elem_sep Throwable findRootCause concode_elem_sep Callable<T> makeContextCallable concode_elem_sep Runnable makeContextRunnable concode_elem_sep List<Callable<T>> makeContextWrappedCollection"}
{"code": "double function ( Object arg0 ) { double loc0 = Double . NaN ; if ( arg0 instanceof Number || arg0 instanceof String ) { loc0 = defaultTransformer . transform ( arg0 ) ; } else { NumberTransformer loc1 = getTransformer ( arg0 . getClass ( ) ) ; if ( loc1 != null ) { loc0 = loc1 . transform ( arg0 ) ; } } return loc0 ; }", "nl": "attempts to transform the object against the map of numbertransformers . otherwise it returns double.nan . concode_field_sep NumberTransformer defaultTransformer concode_elem_sep Map map concode_elem_sep long serialVersionUID concode_field_sep boolean containsTransformer concode_elem_sep Collection transformers concode_elem_sep NumberTransformer getTransformer concode_elem_sep Set classes concode_elem_sep void clear concode_elem_sep Object removeTransformer concode_elem_sep boolean containsClass concode_elem_sep Object putTransformer"}
{"code": "Xid function ( int arg0 ) { int loc0 = 0 ; int loc1 = arg0 ; int loc2 = 42 ; return getXid ( loc0 , loc1 , loc2 ) ; }", "nl": "returns a transaction id which is based on tid calculated the same all the time . variables which are part of the calculation are inet local host address . xid format is static value 4660 . concode_field_sep byte[] gtrid concode_elem_sep int formatId concode_elem_sep byte[] localIP concode_elem_sep byte[] bqual concode_elem_sep int txnUniqueID concode_field_sep byte[] getGlobalTransactionId concode_elem_sep int getFormatId concode_elem_sep Xid getXid concode_elem_sep int hashCode concode_elem_sep byte[] getBranchQualifier concode_elem_sep boolean equals concode_elem_sep String toString concode_elem_sep Xid getUniqueXid"}
{"code": "void function ( ) { if ( isLocked == false ) { isLocked = true ; } }", "nl": "lock the chain so no more iterators can be added . this must be called from all iterator interface methods . concode_field_sep Iterator lastUsedIterator concode_elem_sep boolean isLocked concode_elem_sep Iterator currentIterator concode_elem_sep List iteratorChain concode_elem_sep int currentIteratorIndex concode_field_sep Object next concode_elem_sep void checkLocked concode_elem_sep int size concode_elem_sep void addIterator concode_elem_sep boolean isLocked concode_elem_sep boolean hasNext concode_elem_sep List getIterators concode_elem_sep void setIterator concode_elem_sep void updateCurrentIterator concode_elem_sep void remove"}
{"code": "void function ( NativeSQLQueryReturn arg0 ) { queryReturns . add ( arg0 ) ; }", "nl": "adds a return . concode_field_sep List<NativeSQLQueryReturn> queryReturns concode_elem_sep String name concode_field_sep String getName concode_elem_sep NativeSQLQueryReturn[] getQueryReturns concode_elem_sep String traceLoggableFormat"}
