function [opttheta,cost,freq] = train(ODIR, ...
    hparams, ...
    We, ...
    corpus, ...
    labels, ...
    func, ...
    func_prime, ...
    theta, ...
    options)
t1 = clock;

global logger
logger.trace('train','training model');

%freq = histc(cell2mat(corpus)',1:hparams.vocabulary_size); % XXX </s>
freq = histc(cell2mat(corpus'),1:hparams.vocabulary_size); % XXX </s>
freq = freq / sum(freq);

[opttheta,cost] = minFunc(@(p)costfunc(p, ...
    ODIR, ...
    hparams, ...
    We, ...
    corpus, ...
    labels, ...
    freq, ...
    func, ...
    func_prime), ...
    theta,options);

logger.info('train','saving clone detector');
save([strcat(ODIR,'/detector.mat')],'opttheta','hparams','options');

t2 = clock;
logger.info('train',sprintf('train.m took %.0f seconds',etime(t2,t1)));
